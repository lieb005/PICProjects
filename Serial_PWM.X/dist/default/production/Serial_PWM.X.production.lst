

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Tue Oct 15 03:30:00 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x5E,2
    14  0000                     	;# 
    15  0001                     	;# 
    16  0002                     	;# 
    17  0003                     	;# 
    18  0004                     	;# 
    19  0005                     	;# 
    20  000A                     	;# 
    21  000B                     	;# 
    22  000C                     	;# 
    23  000E                     	;# 
    24  000E                     	;# 
    25  000F                     	;# 
    26  0010                     	;# 
    27  0019                     	;# 
    28  001E                     	;# 
    29  001F                     	;# 
    30  0081                     	;# 
    31  0085                     	;# 
    32  008C                     	;# 
    33  008E                     	;# 
    34  0090                     	;# 
    35  0095                     	;# 
    36  0096                     	;# 
    37  0096                     	;# 
    38  0099                     	;# 
    39  009A                     	;# 
    40  009A                     	;# 
    41  009B                     	;# 
    42  009C                     	;# 
    43  009D                     	;# 
    44  009E                     	;# 
    45  009F                     	;# 
    46  0001                     _TMR0	set	1
    47  005F                     _GIE	set	95
    48  0058                     _GPIF	set	88
    49  0028                     _GPIO0	set	40
    50  0029                     _GPIO1	set	41
    51  002A                     _GPIO2	set	42
    52  002B                     _GPIO3	set	43
    53  002C                     _GPIO4	set	44
    54  002D                     _GPIO5	set	45
    55  005D                     _T0IE	set	93
    56  005A                     _T0IF	set	90
    57  009F                     _ANSEL	set	159
    58  04B3                     _IOC3	set	1203
    59  040B                     _PSA	set	1035
    60  040D                     _T0CS	set	1037
    61  0428                     _TRISIO0	set	1064
    62  0429                     _TRISIO1	set	1065
    63  042A                     _TRISIO2	set	1066
    64  042B                     _TRISIO3	set	1067
    65  042C                     _TRISIO4	set	1068
    66  042D                     _TRISIO5	set	1069
    67                           
    68                           	psect	text0
    69  0000                     __ptext0:	
    70                           
    71                           ;psect for function _readSPI
    72                           ; #config settings
    73  0000                     
    74                           	psect	cinit
    75  00AB                     start_initialization:	
    76  00AB                     __initialization:	
    77                           
    78                           ; Clear objects allocated to BANK0
    79  00AB  01B0               	clrf	__pbssBANK0& (0+127)
    80  00AC  01B1               	clrf	(__pbssBANK0+1)& (0+127)
    81  00AD  01B2               	clrf	(__pbssBANK0+2)& (0+127)
    82  00AE                     end_of_initialization:	
    83                           ;End of C runtime variable initialization code
    84                           
    85  00AE                     __end_of__initialization:	
    86  00AE  0183               	clrf	3
    87  00AF  288A               	ljmp	_main	;jump to C main() function
    88                           
    89                           	psect	bssBANK0
    90  0030                     __pbssBANK0:	
    91  0030                     _b:	
    92  0030                     	ds	1
    93  0031                     _g:	
    94  0031                     	ds	1
    95  0032                     _r:	
    96  0032                     	ds	1
    97                           
    98                           	psect	cstackCOMMON
    99  0000                     __pcstackCOMMON:	
   100  0000                     ??_main:	
   101                           
   102                           	psect	cstackBANK0
   103  0020                     __pcstackBANK0:	
   104                           ; 0 bytes @ 0x0
   105                           
   106  0020                     ?_readSPI:	
   107  0020                     ??_readSPI:	
   108                           ; 0 bytes @ 0x0
   109                           
   110  0020                     ?_ISA:	
   111                           ; 0 bytes @ 0x0
   112                           
   113                           
   114                           ; 0 bytes @ 0x0
   115  0020                     	ds	6
   116  0026                     readSPI@tmp:	
   117                           
   118                           ; 2 bytes @ 0x6
   119  0026                     	ds	2
   120  0028                     ??_ISA:	
   121                           
   122                           ; 0 bytes @ 0x8
   123  0028                     	ds	4
   124  002C                     ?_main:	
   125  002C                     main@argc:	
   126                           ; 2 bytes @ 0xC
   127                           
   128                           
   129                           ; 2 bytes @ 0xC
   130  002C                     	ds	2
   131  002E                     main@argv:	
   132                           
   133                           ; 2 bytes @ 0xE
   134  002E                     	ds	2
   135                           
   136                           	psect	maintext
   137  008A                     __pmaintext:	
   138 ;;
   139 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   140 ;;
   141 ;; *************** function _main *****************
   142 ;; Defined at:
   143 ;;		line 48 in file "spipwm.c"
   144 ;; Parameters:    Size  Location     Type
   145 ;;  argc            2   12[BANK0 ] int 
   146 ;;  argv            2   14[BANK0 ] PTR PTR unsigned char 
   147 ;; Auto vars:     Size  Location     Type
   148 ;;		None
   149 ;; Return value:  Size  Location     Type
   150 ;;                  2   12[BANK0 ] int 
   151 ;; Registers used:
   152 ;;		wreg, status,2
   153 ;; Tracked objects:
   154 ;;		On entry : 17F/0
   155 ;;		On exit  : 0/0
   156 ;;		Unchanged: 0/0
   157 ;; Data sizes:     COMMON   BANK0
   158 ;;      Params:         0       4
   159 ;;      Locals:         0       0
   160 ;;      Temps:          0       0
   161 ;;      Totals:         0       4
   162 ;;Total ram usage:        4 bytes
   163 ;; Hardware stack levels required when called:    2
   164 ;; This function calls:
   165 ;;		Nothing
   166 ;; This function is called by:
   167 ;;		Startup code after reset
   168 ;; This function uses a non-reentrant model
   169 ;;
   170                           
   171                           
   172                           ;psect for function _main
   173  008A                     _main:	
   174                           
   175                           ;spipwm.c: 49: ANSEL = 0;
   176                           
   177                           ;incstack = 0
   178                           ; Regs used in _main: [wreg+status,2]
   179  008A  1683               	bsf	3,5	;RP0=1, select bank1
   180  008B  019F               	clrf	31	;volatile
   181                           
   182                           ;spipwm.c: 50: TRISIO0 = 0;
   183  008C  1005               	bcf	5,0	;volatile
   184                           
   185                           ;spipwm.c: 51: TRISIO1 = 0;
   186  008D  1085               	bcf	5,1	;volatile
   187                           
   188                           ;spipwm.c: 52: TRISIO2 = 0;
   189  008E  1105               	bcf	5,2	;volatile
   190                           
   191                           ;spipwm.c: 53: TRISIO3 = 1;
   192  008F  1585               	bsf	5,3	;volatile
   193                           
   194                           ;spipwm.c: 54: TRISIO4 = 1;
   195  0090  1605               	bsf	5,4	;volatile
   196                           
   197                           ;spipwm.c: 55: TRISIO5 = 1;
   198  0091  1685               	bsf	5,5	;volatile
   199                           
   200                           ;spipwm.c: 57: T0CS = 0;
   201  0092  1281               	bcf	1,5	;volatile
   202                           
   203                           ;spipwm.c: 58: T0IE = 1;
   204  0093  168B               	bsf	11,5	;volatile
   205                           
   206                           ;spipwm.c: 59: T0IF = 0;
   207  0094  110B               	bcf	11,2	;volatile
   208                           
   209                           ;spipwm.c: 60: TMR0 = 0;
   210  0095  1283               	bcf	3,5	;RP0=0, select bank0
   211  0096  0181               	clrf	1	;volatile
   212                           
   213                           ;spipwm.c: 62: GIE = 1;
   214  0097  178B               	bsf	11,7	;volatile
   215                           
   216                           ;spipwm.c: 63: IOC3 = 1;
   217  0098  1683               	bsf	3,5	;RP0=1, select bank1
   218  0099  1596               	bsf	22,3	;volatile
   219                           
   220                           ;spipwm.c: 64: GPIF = 0;
   221  009A  100B               	bcf	11,0	;volatile
   222                           
   223                           ;spipwm.c: 66: PSA = 1;
   224  009B  1581               	bsf	1,3	;volatile
   225  009C                     l636:	
   226                           ;spipwm.c: 68: while (1)
   227                           
   228                           
   229                           ;spipwm.c: 69: {
   230                           ;spipwm.c: 70: if (TMR0 >= r)
   231  009C  1283               	bcf	3,5	;RP0=0, select bank0
   232  009D  0832               	movf	_r,w
   233  009E  0201               	subwf	1,w	;volatile
   234  009F  1803               	btfsc	3,0
   235                           
   236                           ;spipwm.c: 71: {
   237                           ;spipwm.c: 72: GPIO0 = 0;
   238  00A0  1005               	bcf	5,0	;volatile
   239                           
   240                           ;spipwm.c: 73: }
   241                           ;spipwm.c: 74: if (TMR0 >= g)
   242  00A1  0831               	movf	_g,w
   243  00A2  0201               	subwf	1,w	;volatile
   244  00A3  1803               	btfsc	3,0
   245                           
   246                           ;spipwm.c: 75: {
   247                           ;spipwm.c: 76: GPIO1 = 0;
   248  00A4  1085               	bcf	5,1	;volatile
   249                           
   250                           ;spipwm.c: 77: }
   251                           ;spipwm.c: 78: if (TMR0 >= b)
   252  00A5  0830               	movf	_b,w
   253  00A6  0201               	subwf	1,w	;volatile
   254  00A7  1C03               	skipc
   255  00A8  289C               	goto	l636
   256                           
   257                           ;spipwm.c: 79: {
   258                           ;spipwm.c: 80: GPIO2 = 0;
   259  00A9  1105               	bcf	5,2	;volatile
   260  00AA  289C               	goto	l636
   261  00AB                     __end_of_main:	
   262                           ;spipwm.c: 81: }
   263                           ;spipwm.c: 82: }
   264                           ;spipwm.c: 83: return (0);
   265                           ;	Return value of _main is never used
   266                           
   267                           
   268                           	psect	text1
   269  0057                     __ptext1:	
   270 ;; *************** function _ISA *****************
   271 ;; Defined at:
   272 ;;		line 88 in file "spipwm.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;		None               void
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0
   286 ;;      Params:         0       0
   287 ;;      Locals:         0       0
   288 ;;      Temps:          0       4
   289 ;;      Totals:         0       4
   290 ;;Total ram usage:        4 bytes
   291 ;; Hardware stack levels used:    1
   292 ;; Hardware stack levels required when called:    1
   293 ;; This function calls:
   294 ;;		_readSPI
   295 ;; This function is called by:
   296 ;;		Interrupt level 1
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           
   301                           ;psect for function _ISA
   302  0057                     _ISA:	
   303                           
   304                           ;spipwm.c: 89: if (IOC3 && GPIF)
   305  0057  1683               	bsf	3,5	;RP0=1, select bank1
   306  0058  1996               	btfsc	22,3	;volatile
   307  0059  1C0B               	btfss	11,0	;volatile
   308  005A  2860               	goto	i1l656
   309                           
   310                           ;spipwm.c: 90: {
   311                           ;spipwm.c: 91: GPIF = 0;
   312  005B  100B               	bcf	11,0	;volatile
   313                           
   314                           ;spipwm.c: 92: if (!GPIO3)
   315  005C  1283               	bcf	3,5	;RP0=0, select bank0
   316  005D  1985               	btfsc	5,3	;volatile
   317  005E  2860               	goto	i1l656
   318                           
   319                           ;spipwm.c: 93: {
   320                           ;spipwm.c: 94: readSPI();
   321  005F  2014               	fcall	_readSPI
   322  0060                     i1l656:	
   323                           
   324                           ;spipwm.c: 95: }
   325                           ;spipwm.c: 96: }
   326                           ;spipwm.c: 97: if (T0IE && T0IF)
   327  0060  1A8B               	btfsc	11,5	;volatile
   328  0061  1D0B               	btfss	11,2	;volatile
   329  0062  287E               	goto	i1l73
   330                           
   331                           ;spipwm.c: 98: {
   332                           ;spipwm.c: 99: T0IF = 0;
   333  0063  110B               	bcf	11,2	;volatile
   334                           
   335                           ;spipwm.c: 100: GPIO0 = (r > 0);
   336  0064  1283               	bcf	3,5	;RP0=0, select bank0
   337  0065  08B2               	movf	_r,f
   338  0066  1903               	btfsc	3,2
   339  0067  286B               	goto	u31_20
   340  0068  1283               	bcf	3,5	;RP0=0, select bank0
   341  0069  1405               	bsf	5,0	;volatile
   342  006A  286D               	goto	u32_24
   343  006B                     u31_20:	
   344  006B  1283               	bcf	3,5	;RP0=0, select bank0
   345  006C  1005               	bcf	5,0	;volatile
   346  006D                     u32_24:	
   347                           
   348                           ;spipwm.c: 101: GPIO1 = (g > 0);
   349  006D  08B1               	movf	_g,f
   350  006E  1903               	btfsc	3,2
   351  006F  2873               	goto	u33_20
   352  0070  1283               	bcf	3,5	;RP0=0, select bank0
   353  0071  1485               	bsf	5,1	;volatile
   354  0072  2875               	goto	u34_24
   355  0073                     u33_20:	
   356  0073  1283               	bcf	3,5	;RP0=0, select bank0
   357  0074  1085               	bcf	5,1	;volatile
   358  0075                     u34_24:	
   359                           
   360                           ;spipwm.c: 102: GPIO2 = (b > 0);
   361  0075  08B0               	movf	_b,f
   362  0076  1903               	btfsc	3,2
   363  0077  287B               	goto	u35_20
   364  0078  1283               	bcf	3,5	;RP0=0, select bank0
   365  0079  1505               	bsf	5,2	;volatile
   366  007A  287D               	goto	i1l664
   367  007B                     u35_20:	
   368  007B  1283               	bcf	3,5	;RP0=0, select bank0
   369  007C  1105               	bcf	5,2	;volatile
   370  007D                     i1l664:	
   371                           
   372                           ;spipwm.c: 103: TMR0 = 0;
   373  007D  0181               	clrf	1	;volatile
   374  007E                     i1l73:	
   375  007E  1283               	bcf	3,5	;RP0=0, select bank0
   376  007F  082B               	movf	??_ISA+3,w
   377  0080  00DF               	movwf	95
   378  0081  082A               	movf	??_ISA+2,w
   379  0082  008A               	movwf	10
   380  0083  0829               	movf	??_ISA+1,w
   381  0084  0084               	movwf	4
   382  0085  0E28               	swapf	??_ISA^0,w
   383  0086  0083               	movwf	3
   384  0087  0EDE               	swapf	94,f
   385  0088  0E5E               	swapf	94,w
   386  0089  0009               	retfie
   387  008A                     __end_of_ISA:	
   388                           
   389                           	psect	intentry
   390  0004                     __pintentry:	
   391                           ;incstack = 0
   392                           ; Regs used in _ISA: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   393                           
   394  0004                     interrupt_function:	
   395  005E                     saved_w	set	btemp
   396  0004  00DE               	movwf	btemp
   397  0005  0E03               	swapf	3,w
   398  0006  1283               	bcf	3,5	;RP0=0, select bank0
   399  0007  00A8               	movwf	??_ISA
   400  0008  0804               	movf	4,w
   401  0009  00A9               	movwf	??_ISA+1
   402  000A  080A               	movf	10,w
   403  000B  00AA               	movwf	??_ISA+2
   404  000C  085F               	movf	btemp+1,w
   405  000D  00AB               	movwf	??_ISA+3
   406  000E  2857               	ljmp	_ISA
   407                           
   408                           	psect	text2
   409  0014                     __ptext2:	
   410 ;; *************** function _readSPI *****************
   411 ;; Defined at:
   412 ;;		line 28 in file "spipwm.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  tmp             2    6[BANK0 ] int 
   417 ;; Return value:  Size  Location     Type
   418 ;;		None               void
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, btemp+1
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0
   426 ;;      Params:         0       0
   427 ;;      Locals:         0       2
   428 ;;      Temps:          0       6
   429 ;;      Totals:         0       8
   430 ;;Total ram usage:        8 bytes
   431 ;; Hardware stack levels used:    1
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		_ISA
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           
   440                           ;psect for function _readSPI
   441  0014                     _readSPI:	
   442  0014                     i1l51:	
   443                           ;spipwm.c: 29: int tmp;
   444                           ;spipwm.c: 30: while (!GPIO3)
   445                           
   446                           ;incstack = 0
   447                           ; Regs used in _readSPI: [wreg+status,2+status,0+btemp+1]
   448                           
   449  0014  1283               	bcf	3,5	;RP0=0, select bank0
   450  0015  1985               	btfsc	5,3	;volatile
   451  0016  2835               	goto	i1l602
   452                           
   453                           ;spipwm.c: 31: {
   454                           ;spipwm.c: 32: if (GPIO4)
   455  0017  1E05               	btfss	5,4	;volatile
   456  0018  2814               	goto	i1l51
   457                           
   458                           ;spipwm.c: 33: {
   459                           ;spipwm.c: 34: tmp = (tmp << 1) | GPIO5;
   460  0019  1003               	clrc
   461  001A  1A85               	btfsc	5,5	;volatile
   462  001B  1403               	setc
   463  001C  3000               	movlw	0
   464  001D  1803               	skipnc
   465  001E  3001               	movlw	1
   466  001F  00A0               	movwf	??_readSPI
   467  0020  01A1               	clrf	??_readSPI+1
   468  0021  0827               	movf	readSPI@tmp+1,w
   469  0022  00A3               	movwf	??_readSPI+3
   470  0023  0826               	movf	readSPI@tmp,w
   471  0024  00A2               	movwf	??_readSPI+2
   472  0025  1003               	clrc
   473  0026  0DA2               	rlf	??_readSPI+2,f
   474  0027  0DA3               	rlf	??_readSPI+3,f
   475  0028  0820               	movf	??_readSPI,w
   476  0029  0422               	iorwf	??_readSPI+2,w
   477  002A  00A4               	movwf	??_readSPI+4
   478  002B  0821               	movf	??_readSPI+1,w
   479  002C  0423               	iorwf	??_readSPI+3,w
   480  002D  00A5               	movwf	??_readSPI+5
   481  002E  0824               	movf	??_readSPI+4,w
   482  002F  00A6               	movwf	readSPI@tmp
   483  0030  0825               	movf	??_readSPI+5,w
   484  0031  00A7               	movwf	readSPI@tmp+1
   485  0032                     i1l54:	
   486                           ;spipwm.c: 35: while (GPIO4);
   487                           
   488  0032  1E05               	btfss	5,4	;volatile
   489  0033  2814               	goto	i1l51
   490  0034  2832               	goto	i1l54
   491  0035                     i1l602:	
   492                           
   493                           ;spipwm.c: 36: }
   494                           ;spipwm.c: 37: }
   495                           ;spipwm.c: 38: r = (tmp >> 4) & 0xFF;
   496  0035  0827               	movf	readSPI@tmp+1,w
   497  0036  00A1               	movwf	??_readSPI+1
   498  0037  0826               	movf	readSPI@tmp,w
   499  0038  00A0               	movwf	??_readSPI
   500  0039  3004               	movlw	4
   501  003A  00DF               	movwf	95
   502  003B                     u22_25:	
   503  003B  0D21               	rlf	??_readSPI+1,w
   504  003C  0CA1               	rrf	??_readSPI+1,f
   505  003D  0CA0               	rrf	??_readSPI,f
   506  003E  0BDF               	decfsz	95,f
   507  003F  283B               	goto	u22_25
   508  0040  0820               	movf	??_readSPI,w
   509  0041  00A2               	movwf	??_readSPI+2
   510  0042  0822               	movf	??_readSPI+2,w
   511  0043  00B2               	movwf	_r
   512                           
   513                           ;spipwm.c: 39: g = (tmp >> 2) & 0xFF;
   514  0044  0827               	movf	readSPI@tmp+1,w
   515  0045  00A1               	movwf	??_readSPI+1
   516  0046  0826               	movf	readSPI@tmp,w
   517  0047  00A0               	movwf	??_readSPI
   518  0048  0D21               	rlf	??_readSPI+1,w
   519  0049  0CA1               	rrf	??_readSPI+1,f
   520  004A  0CA0               	rrf	??_readSPI,f
   521  004B  0D21               	rlf	??_readSPI+1,w
   522  004C  0CA1               	rrf	??_readSPI+1,f
   523  004D  0CA0               	rrf	??_readSPI,f
   524  004E  0820               	movf	??_readSPI,w
   525  004F  00A2               	movwf	??_readSPI+2
   526  0050  0822               	movf	??_readSPI+2,w
   527  0051  00B1               	movwf	_g
   528                           
   529                           ;spipwm.c: 40: b = (tmp >> 0) & 0xFF;
   530  0052  0826               	movf	readSPI@tmp,w
   531  0053  00A0               	movwf	??_readSPI
   532  0054  0820               	movf	??_readSPI,w
   533  0055  00B0               	movwf	_b
   534  0056  0008               	return
   535  0057                     __end_of_readSPI:	
   536  005E                     btemp	set	94	;btemp
   537  005E                     wtemp0	set	94


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     16      19

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISA in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISA in BANK0

    _ISA->_readSPI

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4       0
                                             12 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISA                                                  4     4      0      89
                                              8 BANK0      4     4      0
                            _readSPI
 ---------------------------------------------------------------------------------
 (2) _readSPI                                              8     8      0      89
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISA (ROOT)
   _readSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       4       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E     10      13       4       30.6%
ABS                  0      0      13       5        0.0%
DATA                 0      0      17       6        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Tue Oct 15 03:30:00 2013

                      _b 0030                        _g 0031                        _r 0032  
                    l636 009C                      _GIE 005F                      _ISA 0057  
                    _PSA 040B                      fsr0 0004                     ?_ISA 0020  
                   _T0IE 005D                     _T0IF 005A                     _T0CS 040D  
                   _IOC3 04B3                     _GPIF 0058                     i1l51 0014  
                   i1l54 0032                     i1l73 007E                     _TMR0 0001  
                   _main 008A                     btemp 005E                     start 000F  
                  ??_ISA 0028                    ?_main 002C                    _ANSEL 009F  
                  _GPIO0 0028                    _GPIO1 0029                    _GPIO2 002A  
                  _GPIO3 002B                    _GPIO4 002C                    _GPIO5 002D  
                  i1l602 0035                    i1l664 007D                    i1l656 0060  
                  u22_25 003B                    u31_20 006B                    u32_24 006D  
                  u33_20 0073                    u34_24 0075                    u35_20 007B  
        __end_of_readSPI 0057                    pclath 000A                    status 0003  
                  wtemp0 005E           __CFG_MCLRE$OFF 0000          __initialization 00AB  
           __end_of_main 00AB                   ??_main 0000                ??_readSPI 0020  
                 saved_w 005E  __end_of__initialization 00AE           __pcstackCOMMON 0000  
             __pbssBANK0 0030               __pmaintext 008A               __pintentry 0004  
                _TRISIO0 0428                  _TRISIO1 0429                  _TRISIO2 042A  
                _TRISIO3 042B                  _TRISIO4 042C                  _TRISIO5 042D  
                __ptext0 0000                  __ptext1 0057                  __ptext2 0014  
           __size_of_ISA 0033                  _readSPI 0014     end_of_initialization 00AE  
    start_initialization 00AB              __end_of_ISA 008A               readSPI@tmp 0026  
          __pcstackBANK0 0020                 ?_readSPI 0020        interrupt_function 0004  
       __size_of_readSPI 0043            __size_of_main 0021                 main@argc 002C  
               main@argv 002E                 intlevel1 0000        __CFG_FOSC$INTRCIO 0000  
