

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Tue Dec 17 03:26:57 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F2550
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	param0,global,class=BANK0,space=1,delta=1
    88  0000                     
    89                           	psect	idataBANK1
    90  006FBE                     __pidataBANK1:
    91                           	opt stack 0
    92                           
    93                           ;initializer for writeLong@F5021
    94  006FBE  30                 	db	48
    95  006FBF  30                 	db	48
    96  006FC0  30                 	db	48
    97  006FC1  30                 	db	48
    98  006FC2  30                 	db	48
    99  006FC3  30                 	db	48
   100  006FC4  30                 	db	48
   101  006FC5  30                 	db	48
   102  006FC6  00                 	db	0
   103                           
   104                           	psect	mediumconst
   105  007EAE                     __pmediumconst:
   106                           	opt stack 0
   107  007EAE                     _lcd_font:
   108                           	opt stack 0
   109  007EAE  3F                 	db	63
   110  007EAF  06                 	db	6
   111  007EB0  5B                 	db	91
   112  007EB1  4F                 	db	79
   113  007EB2  66                 	db	102
   114  007EB3  6D                 	db	109
   115  007EB4  7C                 	db	124
   116  007EB5  07                 	db	7
   117  007EB6  7F                 	db	127
   118  007EB7  67                 	db	103
   119  007EB8  00                 	db	0
   120  007EB9  00                 	db	0
   121  007EBA  61                 	db	97
   122  007EBB  48                 	db	72
   123  007EBC  00                 	db	0
   124  007EBD  53                 	db	83
   125  007EBE  00                 	db	0
   126  007EBF  77                 	db	119
   127  007EC0  7C                 	db	124
   128  007EC1  58                 	db	88
   129  007EC2  5E                 	db	94
   130  007EC3  79                 	db	121
   131  007EC4  71                 	db	113
   132  007EC5  6F                 	db	111
   133  007EC6  74                 	db	116
   134  007EC7  10                 	db	16
   135  007EC8  0F                 	db	15
   136  007EC9  68                 	db	104
   137  007ECA  38                 	db	56
   138  007ECB  37                 	db	55
   139  007ECC  54                 	db	84
   140  007ECD  5C                 	db	92
   141  007ECE  73                 	db	115
   142  007ECF  67                 	db	103
   143  007ED0  50                 	db	80
   144  007ED1  6D                 	db	109
   145  007ED2  78                 	db	120
   146  007ED3  1C                 	db	28
   147  007ED4  1C                 	db	28
   148  007ED5  7E                 	db	126
   149  007ED6  76                 	db	118
   150  007ED7  6E                 	db	110
   151  007ED8  5B                 	db	91
   152  007ED9                     __end_of_lcd_font:
   153                           	opt stack 0
   154  007ED9                     _dpowers:
   155                           	opt stack 0
   156  007ED9  0001               	dw	1
   157  007EDB  0000               	dw	0
   158  007EDD  000A               	dw	10
   159  007EDF  0000               	dw	0
   160  007EE1  0064               	dw	100
   161  007EE3  0000               	dw	0
   162  007EE5  03E8               	dw	1000
   163  007EE7  0000               	dw	0
   164  007EE9  2710               	dw	10000
   165  007EEB  0000               	dw	0
   166  007EED  86A0               	dw	34464
   167  007EEF  0001               	dw	1
   168  007EF1  4240               	dw	16960
   169  007EF3  000F               	dw	15
   170  007EF5  9680               	dw	38528
   171  007EF7  0098               	dw	152
   172  007EF9  E100               	dw	57600
   173  007EFB  05F5               	dw	1525
   174  007EFD  CA00               	dw	51712
   175  007EFF  3B9A               	dw	15258
   176  007F01                     __end_of_dpowers:
   177                           	opt stack 0
   178  007F01                     _pow10:
   179                           	opt stack 0
   180  007F01  0001               	dw	1
   181  007F03  0000               	dw	0
   182  007F05  000A               	dw	10
   183  007F07  0000               	dw	0
   184  007F09  0064               	dw	100
   185  007F0B  0000               	dw	0
   186  007F0D  03E8               	dw	1000
   187  007F0F  0000               	dw	0
   188  007F11  2710               	dw	10000
   189  007F13  0000               	dw	0
   190  007F15  86A0               	dw	34464
   191  007F17  0001               	dw	1
   192  007F19  4240               	dw	16960
   193  007F1B  000F               	dw	15
   194  007F1D  9680               	dw	38528
   195  007F1F  0098               	dw	152
   196  007F21  E100               	dw	57600
   197  007F23  05F5               	dw	1525
   198  007F25  CA00               	dw	51712
   199  007F27  3B9A               	dw	15258
   200  007F29                     __end_of_pow10:
   201                           	opt stack 0
   202  007F29                     __npowers_:
   203                           	opt stack 0
   204  007F29  00                 	db	0
   205  007F2A  80                 	db	128
   206  007F2B  3F                 	db	63
   207  007F2C  CD                 	db	205
   208  007F2D  CC                 	db	204
   209  007F2E  3D                 	db	61
   210  007F2F  D7                 	db	215
   211  007F30  23                 	db	35
   212  007F31  3C                 	db	60
   213  007F32  12                 	db	18
   214  007F33  83                 	db	131
   215  007F34  3A                 	db	58
   216  007F35  B7                 	db	183
   217  007F36  D1                 	db	209
   218  007F37  38                 	db	56
   219  007F38  C6                 	db	198
   220  007F39  27                 	db	39
   221  007F3A  37                 	db	55
   222  007F3B  38                 	db	56
   223  007F3C  86                 	db	134
   224  007F3D  35                 	db	53
   225  007F3E  C0                 	db	192
   226  007F3F  D6                 	db	214
   227  007F40  33                 	db	51
   228  007F41  CC                 	db	204
   229  007F42  2B                 	db	43
   230  007F43  32                 	db	50
   231  007F44  70                 	db	112
   232  007F45  89                 	db	137
   233  007F46  30                 	db	48
   234  007F47  E7                 	db	231
   235  007F48  DB                 	db	219
   236  007F49  2E                 	db	46
   237  007F4A  E5                 	db	229
   238  007F4B  3C                 	db	60
   239  007F4C  1E                 	db	30
   240  007F4D  42                 	db	66
   241  007F4E  A2                 	db	162
   242  007F4F  0D                 	db	13
   243  007F50                     __end_of__npowers_:
   244                           	opt stack 0
   245  007F50                     __powers_:
   246                           	opt stack 0
   247  007F50  00                 	db	0
   248  007F51  80                 	db	128
   249  007F52  3F                 	db	63
   250  007F53  00                 	db	0
   251  007F54  20                 	db	32
   252  007F55  41                 	db	65
   253  007F56  00                 	db	0
   254  007F57  C8                 	db	200
   255  007F58  42                 	db	66
   256  007F59  00                 	db	0
   257  007F5A  7A                 	db	122
   258  007F5B  44                 	db	68
   259  007F5C  40                 	db	64
   260  007F5D  1C                 	db	28
   261  007F5E  46                 	db	70
   262  007F5F  50                 	db	80
   263  007F60  C3                 	db	195
   264  007F61  47                 	db	71
   265  007F62  24                 	db	36
   266  007F63  74                 	db	116
   267  007F64  49                 	db	73
   268  007F65  97                 	db	151
   269  007F66  18                 	db	24
   270  007F67  4B                 	db	75
   271  007F68  BC                 	db	188
   272  007F69  BE                 	db	190
   273  007F6A  4C                 	db	76
   274  007F6B  6B                 	db	107
   275  007F6C  6E                 	db	110
   276  007F6D  4E                 	db	78
   277  007F6E  03                 	db	3
   278  007F6F  15                 	db	21
   279  007F70  50                 	db	80
   280  007F71  79                 	db	121
   281  007F72  AD                 	db	173
   282  007F73  60                 	db	96
   283  007F74  F3                 	db	243
   284  007F75  49                 	db	73
   285  007F76  71                 	db	113
   286  007F77                     __end_of__powers_:
   287                           	opt stack 0
   288  007F77                     _dow:
   289                           	opt stack 0
   290  007F77  53                 	db	83
   291  007F78  6F                 	db	111
   292  007F79  6E                 	db	110
   293  007F7A  00                 	db	0
   294  007F7B  4D                 	db	77
   295  007F7C  6F                 	db	111
   296  007F7D  6E                 	db	110
   297  007F7E  00                 	db	0
   298  007F7F  44                 	db	68
   299  007F80  65                 	db	101
   300  007F81  69                 	db	105
   301  007F82  00                 	db	0
   302  007F83  4D                 	db	77
   303  007F84  69                 	db	105
   304  007F85  74                 	db	116
   305  007F86  00                 	db	0
   306  007F87  44                 	db	68
   307  007F88  6F                 	db	111
   308  007F89  6E                 	db	110
   309  007F8A  00                 	db	0
   310  007F8B  46                 	db	70
   311  007F8C  72                 	db	114
   312  007F8D  69                 	db	105
   313  007F8E  00                 	db	0
   314  007F8F  53                 	db	83
   315  007F90  61                 	db	97
   316  007F91  6D                 	db	109
   317  007F92  00                 	db	0
   318  007F93                     __end_of_dow:
   319                           	opt stack 0
   320  0000                     _TMR0	set	4054
   321  0000                     _TMR1	set	4046
   322  0000                     _ADCON0	set	4034
   323  0000                     _ADCON1	set	4033
   324  0000                     _ADCON2	set	4032
   325  0000                     _EEADR	set	4009
   326  0000                     _EECON1	set	4006
   327  0000                     _EECON2	set	4007
   328  0000                     _EEDATA	set	4008
   329  0000                     _LATA	set	3977
   330  0000                     _LATB	set	3978
   331  0000                     _LATC	set	3979
   332  0000                     _PORTB	set	3969
   333  0000                     _RCON	set	4048
   334  0000                     _T0CON	set	4053
   335  0000                     _T1CON	set	4045
   336  0000                     _TRISA	set	3986
   337  0000                     _TRISB	set	3987
   338  0000                     _TRISC	set	3988
   339  0000                     _GIEH	set	32663
   340  0000                     _GIEL	set	32662
   341  0000                     _GO	set	32273
   342  0000                     _IPEN	set	32391
   343  0000                     _LATA1	set	31817
   344  0000                     _LATA3	set	31819
   345  0000                     _LATA4	set	31820
   346  0000                     _LATA5	set	31821
   347  0000                     _LATC0	set	31832
   348  0000                     _LATC1	set	31833
   349  0000                     _LATC2	set	31834
   350  0000                     _RD	set	32048
   351  0000                     _TMR0IE	set	32661
   352  0000                     _TMR0IF	set	32658
   353  0000                     _TMR0ON	set	32431
   354  0000                     _TMR1IE	set	31976
   355  0000                     _TMR1IF	set	31984
   356  0000                     _TMR1IP	set	31992
   357  0000                     _TMR1ON	set	32360
   358  0000                     _TRISA1	set	31889
   359  0000                     _TRISA2	set	31890
   360  0000                     _TRISA3	set	31891
   361  0000                     _TRISA4	set	31892
   362  0000                     _WR	set	32049
   363  0000                     _WREN	set	32050
   364  0000                     _nRBPU	set	32655
   365  0000                     _ADRES	set	4035
   366  007F93                     __stringdata:
   367                           	opt stack 0
   368  007F93                     STR_5:
   369                           
   370                           ; BSR set to: 1
   371  007F93  20                 	db	32
   372  007F94  20                 	db	32
   373  007F95  25                 	db	37
   374  007F96  30                 	db	48	;'0'
   375  007F97  32                 	db	50	;'2'
   376  007F98  64                 	db	100	;'d'
   377  007F99  2E                 	db	46
   378  007F9A  25                 	db	37
   379  007F9B  30                 	db	48	;'0'
   380  007F9C  32                 	db	50	;'2'
   381  007F9D  64                 	db	100	;'d'
   382  007F9E  2E                 	db	46
   383  007F9F  25                 	db	37
   384  007FA0  30                 	db	48	;'0'
   385  007FA1  32                 	db	50	;'2'
   386  007FA2  64                 	db	100	;'d'
   387  007FA3  00                 	db	0
   388  007FA4                     STR_6:
   389                           
   390                           ; BSR set to: 1
   391  007FA4  20                 	db	32
   392  007FA5  25                 	db	37
   393  007FA6  63                 	db	99	;'c'
   394  007FA7  25                 	db	37
   395  007FA8  63                 	db	99	;'c'
   396  007FA9  20                 	db	32
   397  007FAA  25                 	db	37
   398  007FAB  30                 	db	48	;'0'
   399  007FAC  32                 	db	50	;'2'
   400  007FAD  64                 	db	100	;'d'
   401  007FAE  2E                 	db	46
   402  007FAF  25                 	db	37
   403  007FB0  30                 	db	48	;'0'
   404  007FB1  32                 	db	50	;'2'
   405  007FB2  64                 	db	100	;'d'
   406  007FB3  00                 	db	0
   407  007FB4                     STR_4:
   408                           
   409                           ; BSR set to: 1
   410  007FB4  25                 	db	37
   411  007FB5  30                 	db	48	;'0'
   412  007FB6  32                 	db	50	;'2'
   413  007FB7  64                 	db	100	;'d'
   414  007FB8  20                 	db	32
   415  007FB9  25                 	db	37
   416  007FBA  30                 	db	48	;'0'
   417  007FBB  32                 	db	50	;'2'
   418  007FBC  64                 	db	100	;'d'
   419  007FBD  20                 	db	32
   420  007FBE  25                 	db	37
   421  007FBF  30                 	db	48	;'0'
   422  007FC0  32                 	db	50	;'2'
   423  007FC1  64                 	db	100	;'d'
   424  007FC2  00                 	db	0
   425  007FC3                     STR_8:
   426                           
   427                           ; BSR set to: 1
   428  007FC3  20                 	db	32
   429  007FC4  20                 	db	32
   430  007FC5  20                 	db	32
   431  007FC6  20                 	db	32
   432  007FC7  25                 	db	37
   433  007FC8  30                 	db	48	;'0'
   434  007FC9  32                 	db	50	;'2'
   435  007FCA  64                 	db	100	;'d'
   436  007FCB  2E                 	db	46
   437  007FCC  25                 	db	37
   438  007FCD  30                 	db	48	;'0'
   439  007FCE  32                 	db	50	;'2'
   440  007FCF  64                 	db	100	;'d'
   441  007FD0  00                 	db	0
   442  007FD1                     STR_3:
   443                           
   444                           ; BSR set to: 1
   445  007FD1  25                 	db	37
   446  007FD2  73                 	db	115	;'s'
   447  007FD3  20                 	db	32
   448  007FD4  25                 	db	37
   449  007FD5  30                 	db	48	;'0'
   450  007FD6  32                 	db	50	;'2'
   451  007FD7  64                 	db	100	;'d'
   452  007FD8  2E                 	db	46
   453  007FD9  25                 	db	37
   454  007FDA  30                 	db	48	;'0'
   455  007FDB  32                 	db	50	;'2'
   456  007FDC  64                 	db	100	;'d'
   457  007FDD  00                 	db	0
   458  007FDE                     STR_22:
   459                           
   460                           ; BSR set to: 1
   461  007FDE  28                 	db	40
   462  007FDF  6E                 	db	110	;'n'
   463  007FE0  75                 	db	117	;'u'
   464  007FE1  6C                 	db	108	;'l'
   465  007FE2  6C                 	db	108	;'l'
   466  007FE3  29                 	db	41
   467  007FE4  00                 	db	0
   468  007FE5                     STR_17:
   469                           
   470                           ; BSR set to: 1
   471  007FE5  20                 	db	32
   472  007FE6  20                 	db	32
   473  007FE7  20                 	db	32
   474  007FE8  20                 	db	32
   475  007FE9  00                 	db	0
   476  007FEA                     
   477                           ; BSR set to: 1
   478  007FEA  25                 	db	37
   479  007FEB  2E                 	db	46
   480  007FEC  2A                 	db	42
   481  007FED  66                 	db	102	;'f'
   482  007FEE  00                 	db	0
   483  007FEF                     
   484                           ; BSR set to: 1
   485  007FEF  25                 	db	37
   486  007FF0  2A                 	db	42
   487  007FF1  6C                 	db	108	;'l'
   488  007FF2  69                 	db	105	;'i'
   489  007FF3  00                 	db	0
   490  007FF4                     STR_21:
   491                           
   492                           ; BSR set to: 1
   493  007FF4  25                 	db	37
   494  007FF5  2A                 	db	42
   495  007FF6  67                 	db	103	;'g'
   496  007FF7  00                 	db	0
   497  007FF8                     STR_18:
   498                           
   499                           ; BSR set to: 1
   500  007FF8  2A                 	db	42
   501  007FF9  43                 	db	67	;'C'
   502  007FFA  00                 	db	0
   503  007FFB                     STR_19:
   504                           
   505                           ; BSR set to: 1
   506  007FFB  2A                 	db	42
   507  007FFC  46                 	db	70	;'F'
   508  007FFD  00                 	db	0
   509  007FFE                     __end_of__stringdata:
   510                           	opt stack 0
   511                           
   512                           ; #config settings
   513  007FFE  00                 	db	0	; dummy byte at the end
   514  0000                     
   515                           	psect	nvBANK1
   516  000185                     __pnvBANK1:
   517                           	opt stack 0
   518  000185                     _rtcMenu:
   519                           	opt stack 0
   520  000185                     	ds	5
   521                           
   522                           	psect	cinit
   523  006B78                     __pcinit:
   524                           	opt stack 0
   525  006B78                     start_initialization:
   526                           	opt stack 0
   527  006B78                     __initialization:
   528                           	opt stack 0
   529                           
   530                           ; Clear objects allocated to BANK1 (59 bytes)
   531  006B78  EE01  F041         	lfsr	0,__pbssBANK1
   532  006B7C  0E3B               	movlw	59
   533  006B7E                     clear_0:
   534  006B7E  6AEE               	clrf	postinc0,c
   535  006B80  06E8               	decf	wreg,f,c
   536  006B82  E1FD               	bnz	clear_0
   537                           
   538                           ; Clear objects allocated to BANK0 (7 bytes)
   539  006B84  EE00  F0F9         	lfsr	0,__pbssBANK0
   540  006B88  0E07               	movlw	7
   541  006B8A                     clear_1:
   542  006B8A  6AEE               	clrf	postinc0,c
   543  006B8C  06E8               	decf	wreg,f,c
   544  006B8E  E1FD               	bnz	clear_1
   545                           
   546                           ; Clear objects allocated to COMRAM (44 bytes)
   547  006B90  EE00  F033         	lfsr	0,__pbssCOMRAM
   548  006B94  0E2C               	movlw	44
   549  006B96                     clear_2:
   550  006B96  6AEE               	clrf	postinc0,c
   551  006B98  06E8               	decf	wreg,f,c
   552  006B9A  E1FD               	bnz	clear_2
   553                           
   554                           ; Initialize objects allocated to BANK1 (9 bytes)
   555                           ; load TBLPTR registers with __pidataBANK1
   556  006B9C  0EBE               	movlw	low __pidataBANK1
   557  006B9E  6EF6               	movwf	tblptrl,c
   558  006BA0  0E6F               	movlw	high __pidataBANK1
   559  006BA2  6EF7               	movwf	tblptrh,c
   560  006BA4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   561  006BA6  6EF8               	movwf	tblptru,c
   562  006BA8  EE01  F07C         	lfsr	0,__pdataBANK1
   563  006BAC  EE10 F009          	lfsr	1,9
   564  006BB0                     copy_data0:
   565  006BB0  0009               	tblrd		*+
   566  006BB2  CFF5 FFEE          	movff	tablat,postinc0
   567  006BB6  50E5               	movf	postdec1,w,c
   568  006BB8  50E1               	movf	fsr1l,w,c
   569  006BBA  E1FA               	bnz	copy_data0
   570  006BBC                     end_of_initialization:
   571                           	opt stack 0
   572  006BBC                     __end_of__initialization:
   573                           	opt stack 0
   574  006BBC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   575  006BBE  6EF8               	movwf	tblptru,c
   576  006BC0  0100               	movlb	0
   577  006BC2  EFE6  F033         	goto	_main	;jump to C main() function
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           postinc0	equ	0xFEE
   583                           wreg	equ	0xFE8
   584                           postdec1	equ	0xFE5
   585                           fsr1l	equ	0xFE1
   586                           
   587                           	psect	bssCOMRAM
   588  000033                     __pbssCOMRAM:
   589                           	opt stack 0
   590  000033                     _waitCnt:
   591                           	opt stack 0
   592  000033                     	ds	32
   593  000053                     _waitcnt:
   594                           	opt stack 0
   595  000053                     	ds	4
   596  000057                     _temp:
   597                           	opt stack 0
   598  000057                     	ds	3
   599  00005A                     _menu:
   600                           	opt stack 0
   601  00005A                     	ds	2
   602  00005C                     _rtc_small_ticks:
   603                           	opt stack 0
   604  00005C                     	ds	2
   605  00005E                     _oldLATB:
   606                           	opt stack 0
   607  00005E                     	ds	1
   608                           tblptru	equ	0xFF8
   609                           tblptrh	equ	0xFF7
   610                           tblptrl	equ	0xFF6
   611                           tablat	equ	0xFF5
   612                           postinc0	equ	0xFEE
   613                           wreg	equ	0xFE8
   614                           postdec1	equ	0xFE5
   615                           fsr1l	equ	0xFE1
   616                           
   617                           	psect	bssBANK0
   618  0000F9                     __pbssBANK0:
   619                           	opt stack 0
   620  0000F9                     _rtc_big_ticks:
   621                           	opt stack 0
   622  0000F9                     	ds	2
   623  0000FB                     _tempMenu:
   624                           	opt stack 0
   625  0000FB                     	ds	5
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postdec1	equ	0xFE5
   633                           fsr1l	equ	0xFE1
   634                           
   635                           	psect	bssBANK1
   636  000141                     __pbssBANK1:
   637                           	opt stack 0
   638  000141                     _oldTemps:
   639                           	opt stack 0
   640  000141                     	ds	12
   641  00014D                     printRTC@F5073:
   642                           	opt stack 0
   643  00014D                     	ds	12
   644  000159                     _date:
   645                           	opt stack 0
   646  000159                     	ds	9
   647  000162                     writeFloat@F5025:
   648                           	opt stack 0
   649  000162                     	ds	9
   650  00016B                     _tmr0BigCounts:
   651                           	opt stack 0
   652  00016B                     	ds	4
   653  00016F                     _screen:
   654                           	opt stack 0
   655  00016F                     	ds	13
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           postdec1	equ	0xFE5
   663                           fsr1l	equ	0xFE1
   664                           
   665                           	psect	dataBANK1
   666  00017C                     __pdataBANK1:
   667                           	opt stack 0
   668  00017C                     writeLong@F5021:
   669                           	opt stack 0
   670  00017C                     	ds	9
   671                           tblptru	equ	0xFF8
   672                           tblptrh	equ	0xFF7
   673                           tblptrl	equ	0xFF6
   674                           tablat	equ	0xFF5
   675                           postinc0	equ	0xFEE
   676                           wreg	equ	0xFE8
   677                           postdec1	equ	0xFE5
   678                           fsr1l	equ	0xFE1
   679                           
   680                           	psect	cstackBANK1
   681  000100                     __pcstackBANK1:
   682                           	opt stack 0
   683  000100                     printRTC@first:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x0
   687  000100                     	ds	1
   688  000101                     printRTC@str:
   689                           	opt stack 0
   690                           
   691                           ; 12 bytes @ 0x1
   692  000101                     	ds	12
   693  00010D                     _printRTC$1430:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0xD
   697  00010D                     	ds	2
   698  00010F                     printRTC@cnt:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0xF
   702  00010F                     	ds	1
   703  000110                     ??_high_isr:
   704                           
   705                           ; 0 bytes @ 0x10
   706  000110                     	ds	15
   707  00011F                     ?_wait:
   708                           	opt stack 0
   709  00011F                     ??_loadTime:
   710  00011F                     ?_setBrightness:
   711                           	opt stack 0
   712  00011F                     ?_setTest:
   713                           	opt stack 0
   714  00011F                     ??_initTemp:
   715  00011F                     ?_rotate:
   716                           	opt stack 0
   717  00011F                     ?_log2:
   718                           	opt stack 0
   719  00011F                     setBrightness@bright:
   720                           	opt stack 0
   721  00011F                     setTest@state:
   722                           	opt stack 0
   723  00011F                     rotate@seg:
   724                           	opt stack 0
   725  00011F                     wait@count:
   726                           	opt stack 0
   727  00011F                     log2@num:
   728                           	opt stack 0
   729                           
   730                           ; 4 bytes @ 0x1F
   731  00011F                     	ds	1
   732  000120                     ??_rotate:
   733  000120                     ??_startDisp:
   734                           
   735                           ; 0 bytes @ 0x20
   736  000120                     	ds	1
   737  000121                     loadTime@cnt:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x21
   741  000121                     	ds	1
   742  000122                     loadTime@newDate:
   743                           	opt stack 0
   744                           
   745                           ; 9 bytes @ 0x22
   746  000122                     	ds	1
   747  000123                     rotate@ret:
   748                           	opt stack 0
   749  000123                     log2@log2Val:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0x23
   753  000123                     	ds	1
   754  000124                     rotate@cnt:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x24
   758  000124                     	ds	1
   759  000125                     ?_spi:
   760                           	opt stack 0
   761  000125                     spi@addr:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x25
   765  000125                     	ds	1
   766  000126                     spi@data:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x26
   770  000126                     	ds	1
   771  000127                     ??_spi:
   772                           
   773                           ; 0 bytes @ 0x27
   774  000127                     	ds	3
   775  00012A                     spi@send:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x2A
   779  00012A                     	ds	1
   780  00012B                     ??_initRTC:
   781                           
   782                           ; 0 bytes @ 0x2B
   783  00012B                     	ds	1
   784  00012C                     ??_setup:
   785  00012C                     spi@cnt:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x2C
   789  00012C                     	ds	1
   790  00012D                     ?_writeDigit:
   791                           	opt stack 0
   792  00012D                     writeDigit@digit:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x2D
   796  00012D                     	ds	1
   797  00012E                     writeDigit@segs:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x2E
   801  00012E                     	ds	1
   802  00012F                     ??_writeDigit:
   803                           
   804                           ; 0 bytes @ 0x2F
   805  00012F                     	ds	1
   806  000130                     writeDigit@dig:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x30
   810  000130                     	ds	1
   811  000131                     writeDigit@cnt:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x31
   815  000131                     	ds	1
   816  000132                     ??_update:
   817                           
   818                           ; 0 bytes @ 0x32
   819  000132                     	ds	5
   820  000137                     update@cnt:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x37
   824  000137                     	ds	1
   825  000138                     
   826                           ; 2 bytes @ 0x38
   827  000138                     	ds	2
   828  00013A                     
   829                           ; 3 bytes @ 0x3A
   830  00013A                     	ds	3
   831  00013D                     main@cnt:
   832                           	opt stack 0
   833                           
   834                           ; 4 bytes @ 0x3D
   835  00013D                     	ds	4
   836                           tblptru	equ	0xFF8
   837                           tblptrh	equ	0xFF7
   838                           tblptrl	equ	0xFF6
   839                           tablat	equ	0xFF5
   840                           postinc0	equ	0xFEE
   841                           wreg	equ	0xFE8
   842                           postdec1	equ	0xFE5
   843                           fsr1l	equ	0xFE1
   844                           
   845                           	psect	cstackBANK0
   846  000060                     __pcstackBANK0:
   847                           	opt stack 0
   848  000060                     ?_isdigit:
   849                           	opt stack 0
   850  000060                     ?_saveTime:
   851                           	opt stack 0
   852  000060                     ?_countBits:
   853                           	opt stack 0
   854  000060                     ?___lwmod:
   855                           	opt stack 0
   856  000060                     ?i2___awmod:
   857                           	opt stack 0
   858  000060                     ?___ftpack:
   859                           	opt stack 0
   860  000060                     ?_hibit:
   861                           	opt stack 0
   862  000060                     ?_lowbit:
   863                           	opt stack 0
   864  000060                     ?__tdiv_to_l_:
   865                           	opt stack 0
   866  000060                     ?__div_to_l_:
   867                           	opt stack 0
   868  000060                     ?___lldiv:
   869                           	opt stack 0
   870  000060                     isdigit@c:
   871                           	opt stack 0
   872  000060                     ___lwmod@dividend:
   873                           	opt stack 0
   874  000060                     i2___awmod@dividend:
   875                           	opt stack 0
   876  000060                     __div_to_l_@f1:
   877                           	opt stack 0
   878  000060                     ___ftpack@arg:
   879                           	opt stack 0
   880  000060                     __tdiv_to_l_@f1:
   881                           	opt stack 0
   882  000060                     countBits@num:
   883                           	opt stack 0
   884  000060                     hibit@x:
   885                           	opt stack 0
   886  000060                     lowbit@x:
   887                           	opt stack 0
   888  000060                     ___lldiv@dividend:
   889                           	opt stack 0
   890  000060                     saveTime@date:
   891                           	opt stack 0
   892                           
   893                           ; 9 bytes @ 0x0
   894  000060                     	ds	1
   895  000061                     ??_isdigit:
   896                           
   897                           ; 0 bytes @ 0x1
   898  000061                     	ds	1
   899  000062                     _isdigit$1016:
   900                           	opt stack 0
   901  000062                     ___lwmod@divisor:
   902                           	opt stack 0
   903  000062                     i2___awmod@divisor:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x2
   907  000062                     	ds	1
   908  000063                     ___ftpack@exp:
   909                           	opt stack 0
   910  000063                     __div_to_l_@f2:
   911                           	opt stack 0
   912  000063                     __tdiv_to_l_@f2:
   913                           	opt stack 0
   914                           
   915                           ; 3 bytes @ 0x3
   916  000063                     	ds	1
   917  000064                     ??_hibit:
   918  000064                     ??_lowbit:
   919  000064                     ??___lwmod:
   920  000064                     ??i2___awmod:
   921  000064                     countBits@ret:
   922                           	opt stack 0
   923  000064                     ___ftpack@sign:
   924                           	opt stack 0
   925  000064                     ___lldiv@divisor:
   926                           	opt stack 0
   927                           
   928                           ; 4 bytes @ 0x4
   929  000064                     	ds	1
   930  000065                     ??___ftpack:
   931                           
   932                           ; 0 bytes @ 0x5
   933  000065                     	ds	1
   934  000066                     ??__tdiv_to_l_:
   935  000066                     ??__div_to_l_:
   936  000066                     ___lwmod@counter:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x6
   940  000066                     	ds	1
   941  000067                     ?_daysOfMonth:
   942                           	opt stack 0
   943  000067                     daysOfMonth@month:
   944                           	opt stack 0
   945  000067                     i2___awmod@counter:
   946                           	opt stack 0
   947  000067                     hibit@log2Val:
   948                           	opt stack 0
   949  000067                     lowbit@log2Val:
   950                           	opt stack 0
   951  000067                     __div_to_l_@quot:
   952                           	opt stack 0
   953                           
   954                           ; 4 bytes @ 0x7
   955  000067                     	ds	1
   956  000068                     ??___lldiv:
   957  000068                     ?___ftdiv:
   958                           	opt stack 0
   959  000068                     ?___lwtoft:
   960                           	opt stack 0
   961  000068                     i2___awmod@sign:
   962                           	opt stack 0
   963  000068                     daysOfMonth@year:
   964                           	opt stack 0
   965  000068                     ___lwtoft@c:
   966                           	opt stack 0
   967  000068                     ___ftdiv@f1:
   968                           	opt stack 0
   969                           
   970                           ; 3 bytes @ 0x8
   971  000068                     	ds	1
   972  000069                     ??_saveTime:
   973  000069                     ?___awdiv:
   974                           	opt stack 0
   975  000069                     ___awdiv@dividend:
   976                           	opt stack 0
   977                           
   978                           ; 2 bytes @ 0x9
   979  000069                     	ds	1
   980  00006A                     ??_daysOfMonth:
   981                           
   982                           ; 0 bytes @ 0xA
   983  00006A                     	ds	1
   984  00006B                     ??___lwtoft:
   985  00006B                     ?i2_log2:
   986                           	opt stack 0
   987  00006B                     saveTime@cnt:
   988                           	opt stack 0
   989  00006B                     __div_to_l_@cntr:
   990                           	opt stack 0
   991  00006B                     ___awdiv@divisor:
   992                           	opt stack 0
   993  00006B                     ___ftdiv@f2:
   994                           	opt stack 0
   995  00006B                     __tdiv_to_l_@quot:
   996                           	opt stack 0
   997  00006B                     i2log2@num:
   998                           	opt stack 0
   999                           
  1000                           ; 4 bytes @ 0xB
  1001  00006B                     	ds	1
  1002  00006C                     __div_to_l_@exp1:
  1003                           	opt stack 0
  1004                           
  1005                           ; 1 bytes @ 0xC
  1006  00006C                     	ds	1
  1007  00006D                     ??___awdiv:
  1008                           
  1009                           ; 0 bytes @ 0xD
  1010  00006D                     	ds	1
  1011  00006E                     ??___ftdiv:
  1012  00006E                     ___lldiv@quotient:
  1013                           	opt stack 0
  1014                           
  1015                           ; 4 bytes @ 0xE
  1016  00006E                     	ds	1
  1017  00006F                     __tdiv_to_l_@cntr:
  1018                           	opt stack 0
  1019  00006F                     i2log2@log2Val:
  1020                           	opt stack 0
  1021                           
  1022                           ; 4 bytes @ 0xF
  1023  00006F                     	ds	1
  1024  000070                     __tdiv_to_l_@exp1:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x10
  1028  000070                     	ds	2
  1029  000072                     ___awdiv@counter:
  1030                           	opt stack 0
  1031  000072                     ___lldiv@counter:
  1032                           	opt stack 0
  1033                           
  1034                           ; 1 bytes @ 0x12
  1035  000072                     	ds	1
  1036  000073                     ?___llmod:
  1037                           	opt stack 0
  1038  000073                     ___awdiv@sign:
  1039                           	opt stack 0
  1040  000073                     ___ftdiv@cntr:
  1041                           	opt stack 0
  1042  000073                     ___llmod@dividend:
  1043                           	opt stack 0
  1044                           
  1045                           ; 4 bytes @ 0x13
  1046  000073                     	ds	1
  1047  000074                     ___awdiv@quotient:
  1048                           	opt stack 0
  1049  000074                     ___ftdiv@f3:
  1050                           	opt stack 0
  1051                           
  1052                           ; 3 bytes @ 0x14
  1053  000074                     	ds	2
  1054  000076                     ?___wmul:
  1055                           	opt stack 0
  1056  000076                     ___wmul@multiplier:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x16
  1060  000076                     	ds	1
  1061  000077                     ___ftdiv@exp:
  1062                           	opt stack 0
  1063  000077                     ___llmod@divisor:
  1064                           	opt stack 0
  1065                           
  1066                           ; 4 bytes @ 0x17
  1067  000077                     	ds	1
  1068  000078                     ___ftdiv@sign:
  1069                           	opt stack 0
  1070  000078                     ___wmul@multiplicand:
  1071                           	opt stack 0
  1072                           
  1073                           ; 2 bytes @ 0x18
  1074  000078                     	ds	2
  1075  00007A                     
  1076                           ; 0 bytes @ 0x1A
  1077  00007A                     	ds	1
  1078  00007B                     ??___llmod:
  1079                           
  1080                           ; 0 bytes @ 0x1B
  1081  00007B                     	ds	1
  1082  00007C                     ___wmul@product:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x1C
  1086  00007C                     	ds	1
  1087  00007D                     ___llmod@counter:
  1088                           	opt stack 0
  1089                           
  1090                           ; 1 bytes @ 0x1D
  1091  00007D                     	ds	1
  1092  00007E                     ?_dayOfWeek:
  1093                           	opt stack 0
  1094  00007E                     ?_getFontChar:
  1095                           	opt stack 0
  1096  00007E                     ?___fttol:
  1097                           	opt stack 0
  1098  00007E                     getFontChar@ch:
  1099                           	opt stack 0
  1100  00007E                     dayOfWeek@year:
  1101                           	opt stack 0
  1102  00007E                     ___fttol@f1:
  1103                           	opt stack 0
  1104                           
  1105                           ; 3 bytes @ 0x1E
  1106  00007E                     	ds	1
  1107  00007F                     ??_getFontChar:
  1108  00007F                     dayOfWeek@month:
  1109                           	opt stack 0
  1110                           
  1111                           ; 1 bytes @ 0x1F
  1112  00007F                     	ds	1
  1113  000080                     dayOfWeek@day:
  1114                           	opt stack 0
  1115                           
  1116                           ; 1 bytes @ 0x20
  1117  000080                     	ds	1
  1118  000081                     ??_dayOfWeek:
  1119  000081                     ?_writeChar:
  1120                           	opt stack 0
  1121  000081                     writeChar@digit:
  1122                           	opt stack 0
  1123                           
  1124                           ; 1 bytes @ 0x21
  1125  000081                     	ds	1
  1126  000082                     ??___fttol:
  1127  000082                     writeChar@ch:
  1128                           	opt stack 0
  1129                           
  1130                           ; 1 bytes @ 0x22
  1131  000082                     	ds	1
  1132  000083                     writeChar@dig:
  1133                           	opt stack 0
  1134                           
  1135                           ; 1 bytes @ 0x23
  1136  000083                     	ds	1
  1137  000084                     ?_writeString:
  1138                           	opt stack 0
  1139  000084                     writeString@digits:
  1140                           	opt stack 0
  1141                           
  1142                           ; 1 bytes @ 0x24
  1143  000084                     	ds	1
  1144  000085                     writeString@string:
  1145                           	opt stack 0
  1146                           
  1147                           ; 2 bytes @ 0x25
  1148  000085                     	ds	2
  1149  000087                     ??_writeString:
  1150  000087                     ___fttol@sign1:
  1151                           	opt stack 0
  1152                           
  1153                           ; 1 bytes @ 0x27
  1154  000087                     	ds	1
  1155  000088                     ___fttol@lval:
  1156                           	opt stack 0
  1157                           
  1158                           ; 4 bytes @ 0x28
  1159  000088                     	ds	1
  1160  000089                     dayOfWeek@tmp:
  1161                           	opt stack 0
  1162                           
  1163                           ; 4 bytes @ 0x29
  1164  000089                     	ds	2
  1165  00008B                     writeString@bits:
  1166                           	opt stack 0
  1167                           
  1168                           ; 1 bytes @ 0x2B
  1169  00008B                     	ds	1
  1170  00008C                     writeString@cnt:
  1171                           	opt stack 0
  1172  00008C                     ___fttol@exp1:
  1173                           	opt stack 0
  1174                           
  1175                           ; 1 bytes @ 0x2C
  1176  00008C                     	ds	1
  1177  00008D                     ??_checkDST:
  1178  00008D                     ?___ftmul:
  1179                           	opt stack 0
  1180  00008D                     ?___ftneg:
  1181                           	opt stack 0
  1182  00008D                     writeString@i:
  1183                           	opt stack 0
  1184  00008D                     ___ftmul@f1:
  1185                           	opt stack 0
  1186  00008D                     ___ftneg@f1:
  1187                           	opt stack 0
  1188                           
  1189                           ; 3 bytes @ 0x2D
  1190  00008D                     	ds	3
  1191  000090                     ?___ftge:
  1192                           	opt stack 0
  1193  000090                     ___ftge@ff1:
  1194                           	opt stack 0
  1195  000090                     ___ftmul@f2:
  1196                           	opt stack 0
  1197                           
  1198                           ; 3 bytes @ 0x30
  1199  000090                     	ds	3
  1200  000093                     ??___ftmul:
  1201  000093                     ___ftge@ff2:
  1202                           	opt stack 0
  1203                           
  1204                           ; 3 bytes @ 0x33
  1205  000093                     	ds	2
  1206  000095                     _checkDST$308:
  1207                           	opt stack 0
  1208                           
  1209                           ; 1 bytes @ 0x35
  1210  000095                     	ds	1
  1211  000096                     ??___ftge:
  1212  000096                     ?_tick:
  1213                           	opt stack 0
  1214  000096                     tick@val:
  1215                           	opt stack 0
  1216                           
  1217                           ; 1 bytes @ 0x36
  1218  000096                     	ds	1
  1219  000097                     ??_tick:
  1220                           
  1221                           ; 0 bytes @ 0x37
  1222  000097                     	ds	1
  1223  000098                     ___ftmul@exp:
  1224                           	opt stack 0
  1225                           
  1226                           ; 1 bytes @ 0x38
  1227  000098                     	ds	1
  1228  000099                     ?___lltoft:
  1229                           	opt stack 0
  1230  000099                     ___ftmul@f3_as_product:
  1231                           	opt stack 0
  1232  000099                     ___lltoft@c:
  1233                           	opt stack 0
  1234                           
  1235                           ; 4 bytes @ 0x39
  1236  000099                     	ds	3
  1237  00009C                     ___ftmul@cntr:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x3C
  1241  00009C                     	ds	1
  1242  00009D                     ??___lltoft:
  1243  00009D                     ___ftmul@sign:
  1244                           	opt stack 0
  1245                           
  1246                           ; 1 bytes @ 0x3D
  1247  00009D                     	ds	1
  1248  00009E                     ?_fround:
  1249                           	opt stack 0
  1250  00009E                     ?_scale:
  1251                           	opt stack 0
  1252  00009E                     fround@prec:
  1253                           	opt stack 0
  1254  00009E                     scale@scl:
  1255                           	opt stack 0
  1256                           
  1257                           ; 1 bytes @ 0x3E
  1258  00009E                     	ds	3
  1259  0000A1                     ??_fround:
  1260  0000A1                     ??_scale:
  1261  0000A1                     ___lltoft@exp:
  1262                           	opt stack 0
  1263                           
  1264                           ; 1 bytes @ 0x41
  1265  0000A1                     	ds	1
  1266  0000A2                     ?___ftadd:
  1267                           	opt stack 0
  1268  0000A2                     ___ftadd@f1:
  1269                           	opt stack 0
  1270                           
  1271                           ; 3 bytes @ 0x42
  1272  0000A2                     	ds	3
  1273  0000A5                     ___ftadd@f2:
  1274                           	opt stack 0
  1275                           
  1276                           ; 3 bytes @ 0x45
  1277  0000A5                     	ds	2
  1278  0000A7                     _fround$1433:
  1279                           	opt stack 0
  1280  0000A7                     _scale$1434:
  1281                           	opt stack 0
  1282                           
  1283                           ; 3 bytes @ 0x47
  1284  0000A7                     	ds	1
  1285  0000A8                     ??___ftadd:
  1286                           
  1287                           ; 0 bytes @ 0x48
  1288  0000A8                     	ds	2
  1289  0000AA                     ?___asftdiv:
  1290                           	opt stack 0
  1291  0000AA                     ___asftdiv@f1p:
  1292                           	opt stack 0
  1293  0000AA                     _fround$1432:
  1294                           	opt stack 0
  1295                           
  1296                           ; 3 bytes @ 0x4A
  1297  0000AA                     	ds	2
  1298  0000AC                     ___asftdiv@f2:
  1299                           	opt stack 0
  1300                           
  1301                           ; 3 bytes @ 0x4C
  1302  0000AC                     	ds	1
  1303  0000AD                     ___ftadd@sign:
  1304                           	opt stack 0
  1305                           
  1306                           ; 1 bytes @ 0x4D
  1307  0000AD                     	ds	1
  1308  0000AE                     ___ftadd@exp2:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x4E
  1312  0000AE                     	ds	1
  1313  0000AF                     ___ftadd@exp1:
  1314                           	opt stack 0
  1315                           
  1316                           ; 1 bytes @ 0x4F
  1317  0000AF                     	ds	1
  1318  0000B0                     ?___ftsub:
  1319                           	opt stack 0
  1320  0000B0                     ?___asftadd:
  1321                           	opt stack 0
  1322  0000B0                     ?___asftmul:
  1323                           	opt stack 0
  1324  0000B0                     ___asftadd@f1p:
  1325                           	opt stack 0
  1326  0000B0                     ___asftmul@f1p:
  1327                           	opt stack 0
  1328  0000B0                     ___ftsub@f1:
  1329                           	opt stack 0
  1330                           
  1331                           ; 3 bytes @ 0x50
  1332  0000B0                     	ds	2
  1333  0000B2                     ___asftadd@f2:
  1334                           	opt stack 0
  1335  0000B2                     ___asftmul@f2:
  1336                           	opt stack 0
  1337                           
  1338                           ; 3 bytes @ 0x52
  1339  0000B2                     	ds	1
  1340  0000B3                     ___ftsub@f2:
  1341                           	opt stack 0
  1342                           
  1343                           ; 3 bytes @ 0x53
  1344  0000B3                     	ds	2
  1345  0000B5                     ??_getTemp:
  1346  0000B5                     
  1347                           ; 0 bytes @ 0x55
  1348  0000B5                     	ds	1
  1349  0000B6                     ?___asftsub:
  1350                           	opt stack 0
  1351  0000B6                     ___asftsub@f1p:
  1352                           	opt stack 0
  1353  0000B6                     getTemp@oldTempsTemp:
  1354                           	opt stack 0
  1355                           
  1356                           ; 9 bytes @ 0x56
  1357  0000B6                     	ds	2
  1358  0000B8                     ___asftsub@f2:
  1359                           	opt stack 0
  1360                           
  1361                           ; 3 bytes @ 0x58
  1362  0000B8                     	ds	3
  1363  0000BB                     ?_sprintf:
  1364                           	opt stack 0
  1365  0000BB                     sprintf@sp:
  1366                           	opt stack 0
  1367                           
  1368                           ; 2 bytes @ 0x5B
  1369  0000BB                     	ds	2
  1370  0000BD                     sprintf@f:
  1371                           	opt stack 0
  1372                           
  1373                           ; 2 bytes @ 0x5D
  1374  0000BD                     	ds	2
  1375  0000BF                     getTemp@temp:
  1376                           	opt stack 0
  1377                           
  1378                           ; 3 bytes @ 0x5F
  1379  0000BF                     	ds	3
  1380  0000C2                     getTemp@total:
  1381                           	opt stack 0
  1382                           
  1383                           ; 3 bytes @ 0x62
  1384  0000C2                     	ds	3
  1385  0000C5                     getTemp@cnt:
  1386                           	opt stack 0
  1387                           
  1388                           ; 1 bytes @ 0x65
  1389  0000C5                     	ds	2
  1390  0000C7                     ??_sprintf:
  1391                           
  1392                           ; 0 bytes @ 0x67
  1393  0000C7                     	ds	6
  1394  0000CD                     _sprintf$1435:
  1395                           	opt stack 0
  1396                           
  1397                           ; 3 bytes @ 0x6D
  1398  0000CD                     	ds	3
  1399  0000D0                     _sprintf$741:
  1400                           	opt stack 0
  1401                           
  1402                           ; 4 bytes @ 0x70
  1403  0000D0                     	ds	4
  1404  0000D4                     sprintf@vd:
  1405                           	opt stack 0
  1406                           
  1407                           ; 2 bytes @ 0x74
  1408  0000D4                     	ds	2
  1409  0000D6                     sprintf@vd_743:
  1410                           	opt stack 0
  1411                           
  1412                           ; 2 bytes @ 0x76
  1413  0000D6                     	ds	2
  1414  0000D8                     sprintf@temp:
  1415                           	opt stack 0
  1416                           
  1417                           ; 3 bytes @ 0x78
  1418  0000D8                     	ds	3
  1419  0000DB                     sprintf@integ:
  1420                           	opt stack 0
  1421                           
  1422                           ; 3 bytes @ 0x7B
  1423  0000DB                     	ds	3
  1424  0000DE                     sprintf@ap:
  1425                           	opt stack 0
  1426                           
  1427                           ; 2 bytes @ 0x7E
  1428  0000DE                     	ds	2
  1429  0000E0                     sprintf@width:
  1430                           	opt stack 0
  1431                           
  1432                           ; 2 bytes @ 0x80
  1433  0000E0                     	ds	2
  1434  0000E2                     sprintf@flag:
  1435                           	opt stack 0
  1436                           
  1437                           ; 2 bytes @ 0x82
  1438  0000E2                     	ds	2
  1439  0000E4                     sprintf@exp:
  1440                           	opt stack 0
  1441                           
  1442                           ; 2 bytes @ 0x84
  1443  0000E4                     	ds	2
  1444  0000E6                     sprintf@fval:
  1445                           	opt stack 0
  1446                           
  1447                           ; 3 bytes @ 0x86
  1448  0000E6                     	ds	3
  1449  0000E9                     sprintf@prec:
  1450                           	opt stack 0
  1451                           
  1452                           ; 2 bytes @ 0x89
  1453  0000E9                     	ds	2
  1454  0000EB                     sprintf@_val:
  1455                           	opt stack 0
  1456                           
  1457                           ; 4 bytes @ 0x8B
  1458  0000EB                     	ds	4
  1459  0000EF                     sprintf@c:
  1460                           	opt stack 0
  1461                           
  1462                           ; 1 bytes @ 0x8F
  1463  0000EF                     	ds	1
  1464  0000F0                     ?_printTemp:
  1465                           	opt stack 0
  1466  0000F0                     printRTC@digits:
  1467                           	opt stack 0
  1468  0000F0                     printTemp@digits:
  1469                           	opt stack 0
  1470                           
  1471                           ; 1 bytes @ 0x90
  1472  0000F0                     	ds	1
  1473  0000F1                     ??_printRTC:
  1474  0000F1                     ??_printTemp:
  1475                           
  1476                           ; 0 bytes @ 0x91
  1477  0000F1                     	ds	1
  1478  0000F2                     _printTemp$1431:
  1479                           	opt stack 0
  1480                           
  1481                           ; 4 bytes @ 0x92
  1482  0000F2                     	ds	4
  1483  0000F6                     printTemp@str:
  1484                           	opt stack 0
  1485                           
  1486                           ; 2 bytes @ 0x96
  1487  0000F6                     	ds	2
  1488  0000F8                     printTemp@units:
  1489                           	opt stack 0
  1490                           
  1491                           ; 1 bytes @ 0x98
  1492  0000F8                     	ds	1
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           postinc0	equ	0xFEE
  1498                           wreg	equ	0xFE8
  1499                           postdec1	equ	0xFE5
  1500                           fsr1l	equ	0xFE1
  1501                           
  1502                           	psect	cstackCOMRAM
  1503  000001                     __pcstackCOMRAM:
  1504                           	opt stack 0
  1505  000001                     ??_advMenu:
  1506  000001                     ?i1_wait:
  1507                           	opt stack 0
  1508  000001                     ?i1_rotate:
  1509                           	opt stack 0
  1510  000001                     ?___awmod:
  1511                           	opt stack 0
  1512  000001                     ?i1_log2:
  1513                           	opt stack 0
  1514  000001                     i1rotate@seg:
  1515                           	opt stack 0
  1516  000001                     ___awmod@dividend:
  1517                           	opt stack 0
  1518  000001                     i1wait@count:
  1519                           	opt stack 0
  1520  000001                     i1log2@num:
  1521                           	opt stack 0
  1522                           
  1523                           ; 4 bytes @ 0x0
  1524  000001                     	ds	1
  1525  000002                     ??i1_rotate:
  1526                           
  1527                           ; 0 bytes @ 0x1
  1528  000002                     	ds	1
  1529  000003                     ___awmod@divisor:
  1530                           	opt stack 0
  1531                           
  1532                           ; 2 bytes @ 0x2
  1533  000003                     	ds	2
  1534  000005                     ??___awmod:
  1535  000005                     i1rotate@ret:
  1536                           	opt stack 0
  1537  000005                     i1log2@log2Val:
  1538                           	opt stack 0
  1539                           
  1540                           ; 4 bytes @ 0x4
  1541  000005                     	ds	1
  1542  000006                     ___awmod@counter:
  1543                           	opt stack 0
  1544  000006                     i1rotate@cnt:
  1545                           	opt stack 0
  1546                           
  1547                           ; 1 bytes @ 0x5
  1548  000006                     	ds	1
  1549  000007                     ?i1_spi:
  1550                           	opt stack 0
  1551  000007                     ___awmod@sign:
  1552                           	opt stack 0
  1553  000007                     i1spi@addr:
  1554                           	opt stack 0
  1555                           
  1556                           ; 1 bytes @ 0x6
  1557  000007                     	ds	1
  1558  000008                     ??_advState:
  1559  000008                     i1spi@data:
  1560                           	opt stack 0
  1561                           
  1562                           ; 1 bytes @ 0x7
  1563  000008                     	ds	1
  1564  000009                     ??i1_spi:
  1565                           
  1566                           ; 0 bytes @ 0x8
  1567  000009                     	ds	3
  1568  00000C                     i1spi@send:
  1569                           	opt stack 0
  1570                           
  1571                           ; 2 bytes @ 0xB
  1572  00000C                     	ds	2
  1573  00000E                     i1spi@cnt:
  1574                           	opt stack 0
  1575                           
  1576                           ; 1 bytes @ 0xD
  1577  00000E                     	ds	1
  1578  00000F                     ?i1_writeDigit:
  1579                           	opt stack 0
  1580  00000F                     i1writeDigit@digit:
  1581                           	opt stack 0
  1582                           
  1583                           ; 1 bytes @ 0xE
  1584  00000F                     	ds	1
  1585  000010                     i1writeDigit@segs:
  1586                           	opt stack 0
  1587                           
  1588                           ; 1 bytes @ 0xF
  1589  000010                     	ds	1
  1590  000011                     ??i1_writeDigit:
  1591                           
  1592                           ; 0 bytes @ 0x10
  1593  000011                     	ds	1
  1594  000012                     i1writeDigit@dig:
  1595                           	opt stack 0
  1596                           
  1597                           ; 1 bytes @ 0x11
  1598  000012                     	ds	1
  1599  000013                     i1writeDigit@cnt:
  1600                           	opt stack 0
  1601                           
  1602                           ; 1 bytes @ 0x12
  1603  000013                     	ds	1
  1604  000014                     ??i1_update:
  1605                           
  1606                           ; 0 bytes @ 0x13
  1607  000014                     	ds	5
  1608  000019                     i1update@cnt:
  1609                           	opt stack 0
  1610                           
  1611                           ; 1 bytes @ 0x18
  1612  000019                     	ds	1
  1613  00001A                     ??_buttons:
  1614                           
  1615                           ; 0 bytes @ 0x19
  1616  00001A                     	ds	8
  1617  000022                     ??_low_isr:
  1618                           
  1619                           ; 0 bytes @ 0x21
  1620  000022                     	ds	17
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           postinc0	equ	0xFEE
  1626                           wreg	equ	0xFE8
  1627                           postdec1	equ	0xFE5
  1628                           fsr1l	equ	0xFE1
  1629                           
  1630 ;;
  1631 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1632 ;;
  1633 ;; *************** function _main *****************
  1634 ;; Defined at:
  1635 ;;		line 42 in file "temp-clock_main.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  argc            2   56[BANK1 ] int 
  1638 ;;  argv            3   58[BANK1 ] PTR PTR unsigned char 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  cnt             4   61[BANK1 ] unsigned long 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2   56[BANK1 ] int 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1650 ;;      Params:         0       0       5       0       0       0       0       0       0
  1651 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1653 ;;      Totals:         0       0       9       0       0       0       0       0       0
  1654 ;;Total ram usage:        9 bytes
  1655 ;; Hardware stack levels required when called:   17
  1656 ;; This function calls:
  1657 ;;		_update
  1658 ;;		_setup
  1659 ;; This function is called by:
  1660 ;;		Startup code after reset
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text0
  1665  0067CC                     __ptext0:
  1666                           	opt stack 0
  1667  0067CC                     _main:
  1668                           	opt stack 14
  1669                           
  1670                           ;temp-clock_main.c: 43: setup();
  1671                           
  1672                           ; BSR set to: 1
  1673                           ;incstack = 0
  1674                           ;incstack = 0
  1675  0067CC  EC5F  F034         	call	_setup	;wreg free
  1676                           
  1677                           ;temp-clock_main.c: 44: uint32_t cnt = 0;
  1678  0067D0  0E00               	movlw	0
  1679  0067D2  0101               	movlb	1	; () banked
  1680  0067D4  0101               	movlb	1	; () banked
  1681  0067D6  6F3D               	movwf	main@cnt& (0+255),b
  1682  0067D8  0E00               	movlw	0
  1683  0067DA  0101               	movlb	1	; () banked
  1684  0067DC  6F3E               	movwf	(main@cnt+1)& (0+255),b
  1685  0067DE  0E00               	movlw	0
  1686  0067E0  0101               	movlb	1	; () banked
  1687  0067E2  6F3F               	movwf	(main@cnt+2)& (0+255),b
  1688  0067E4  0E00               	movlw	0
  1689  0067E6  0101               	movlb	1	; () banked
  1690  0067E8  6F40               	movwf	(main@cnt+3)& (0+255),b
  1691  0067EA                     l7565:
  1692                           
  1693                           ; BSR set to: 1
  1694                           ;temp-clock_main.c: 46: {
  1695                           ;temp-clock_main.c: 47: if (cnt > 20L)
  1696  0067EA  0E15               	movlw	21
  1697  0067EC  0101               	movlb	1	; () banked
  1698  0067EE  0101               	movlb	1	; () banked
  1699  0067F0  5D3D               	subwf	main@cnt& (0+255),w,b
  1700  0067F2  0E00               	movlw	0
  1701  0067F4  0101               	movlb	1	; () banked
  1702  0067F6  593E               	subwfb	(main@cnt+1)& (0+255),w,b
  1703  0067F8  0E00               	movlw	0
  1704  0067FA  0101               	movlb	1	; () banked
  1705  0067FC  593F               	subwfb	(main@cnt+2)& (0+255),w,b
  1706  0067FE  0E00               	movlw	0
  1707  006800  0101               	movlb	1	; () banked
  1708  006802  0101               	movlb	1	; () banked
  1709  006804  5940               	subwfb	(main@cnt+3)& (0+255),w,b
  1710  006806  A0D8               	btfss	status,0,c
  1711  006808  D010               	goto	l7573
  1712                           
  1713                           ; BSR set to: 1
  1714                           ;temp-clock_main.c: 48: {
  1715                           ;temp-clock_main.c: 49: cnt = 0;
  1716  00680A  0E00               	movlw	0
  1717  00680C  0101               	movlb	1	; () banked
  1718  00680E  0101               	movlb	1	; () banked
  1719  006810  6F3D               	movwf	main@cnt& (0+255),b
  1720  006812  0E00               	movlw	0
  1721  006814  0101               	movlb	1	; () banked
  1722  006816  6F3E               	movwf	(main@cnt+1)& (0+255),b
  1723  006818  0E00               	movlw	0
  1724  00681A  0101               	movlb	1	; () banked
  1725  00681C  6F3F               	movwf	(main@cnt+2)& (0+255),b
  1726  00681E  0E00               	movlw	0
  1727  006820  0101               	movlb	1	; () banked
  1728  006822  6F40               	movwf	(main@cnt+3)& (0+255),b
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;temp-clock_main.c: 52: update();
  1732  006824  EC5E  F015         	call	_update	;wreg free
  1733                           
  1734                           ;temp-clock_main.c: 53: LATA5 = ~LATA5;
  1735  006828  7A89               	btg	3977,5,c	;volatile
  1736  00682A                     l7573:
  1737                           
  1738                           ;temp-clock_main.c: 54: }
  1739                           ;temp-clock_main.c: 55: cnt++;
  1740  00682A  0E01               	movlw	1
  1741  00682C  0101               	movlb	1	; () banked
  1742  00682E  0101               	movlb	1	; () banked
  1743  006830  273D               	addwf	main@cnt& (0+255),f,b
  1744  006832  0E00               	movlw	0
  1745  006834  0101               	movlb	1	; () banked
  1746  006836  233E               	addwfc	(main@cnt+1)& (0+255),f,b
  1747  006838  0E00               	movlw	0
  1748  00683A  0101               	movlb	1	; () banked
  1749  00683C  233F               	addwfc	(main@cnt+2)& (0+255),f,b
  1750  00683E  0E00               	movlw	0
  1751  006840  0101               	movlb	1	; () banked
  1752  006842  2340               	addwfc	(main@cnt+3)& (0+255),f,b
  1753  006844  D7D2               	goto	l7565
  1754  006846                     __end_of_main:
  1755                           	opt stack 0
  1756                           tblptru	equ	0xFF8
  1757                           tblptrh	equ	0xFF7
  1758                           tblptrl	equ	0xFF6
  1759                           tablat	equ	0xFF5
  1760                           postinc0	equ	0xFEE
  1761                           wreg	equ	0xFE8
  1762                           postdec1	equ	0xFE5
  1763                           fsr1l	equ	0xFE1
  1764                           status	equ	0xFD8
  1765                           
  1766 ;; *************** function _setup *****************
  1767 ;; Defined at:
  1768 ;;		line 62 in file "temp-clock_main.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;		None               void
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1784 ;;      Temps:          0       0       4       0       0       0       0       0       0
  1785 ;;      Totals:         0       0       4       0       0       0       0       0       0
  1786 ;;Total ram usage:        4 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:   15
  1789 ;; This function calls:
  1790 ;;		_startDisp
  1791 ;;		_initRTC
  1792 ;;		_initTemp
  1793 ;;		_setupButtons
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text1
  1800  0068BE                     __ptext1:
  1801                           	opt stack 0
  1802  0068BE                     _setup:
  1803                           	opt stack 15
  1804                           
  1805                           ;temp-clock_main.c: 64: TRISA = 0;
  1806                           
  1807                           ; BSR set to: 1
  1808                           ;incstack = 0
  1809                           ;incstack = 0
  1810  0068BE  0E00               	movlw	0
  1811  0068C0  6E92               	movwf	3986,c	;volatile
  1812                           
  1813                           ;temp-clock_main.c: 65: TRISB = 0;
  1814  0068C2  0E00               	movlw	0
  1815  0068C4  6E93               	movwf	3987,c	;volatile
  1816                           
  1817                           ;temp-clock_main.c: 66: TRISC = 0;
  1818  0068C6  0E00               	movlw	0
  1819  0068C8  6E94               	movwf	3988,c	;volatile
  1820                           
  1821                           ;temp-clock_main.c: 67: LATA = 0;
  1822  0068CA  0E00               	movlw	0
  1823  0068CC  6E89               	movwf	3977,c	;volatile
  1824                           
  1825                           ;temp-clock_main.c: 68: LATB = 0;
  1826  0068CE  0E00               	movlw	0
  1827  0068D0  6E8A               	movwf	3978,c	;volatile
  1828                           
  1829                           ;temp-clock_main.c: 70: LATC = (RCON & 0b1)>> 0 | (RCON & 0b10) >> 0 | (RCON & 0b100) >>
      +                           0 | (RCON & 0b1000) >> 2 | (RCON & 0b100000) >> 2;
  1830  0068D2  CFD0 F12C          	movff	4048,??_setup	;volatile
  1831  0068D6  0101               	movlb	1	; () banked
  1832  0068D8  90D8               	bcf	status,0,c
  1833  0068DA  332C               	rrcf	??_setup& (0+255),f,b
  1834  0068DC  0101               	movlb	1	; () banked
  1835  0068DE  90D8               	bcf	status,0,c
  1836  0068E0  332C               	rrcf	??_setup& (0+255),f,b
  1837  0068E2  0E08               	movlw	8
  1838  0068E4  0101               	movlb	1	; () banked
  1839  0068E6  172C               	andwf	??_setup& (0+255),f,b
  1840  0068E8  CFD0 F12D          	movff	4048,??_setup+1	;volatile
  1841  0068EC  0101               	movlb	1	; () banked
  1842  0068EE  90D8               	bcf	status,0,c
  1843  0068F0  332D               	rrcf	(??_setup+1)& (0+255),f,b
  1844  0068F2  0101               	movlb	1	; () banked
  1845  0068F4  90D8               	bcf	status,0,c
  1846  0068F6  332D               	rrcf	(??_setup+1)& (0+255),f,b
  1847  0068F8  0E02               	movlw	2
  1848  0068FA  0101               	movlb	1	; () banked
  1849  0068FC  172D               	andwf	(??_setup+1)& (0+255),f,b
  1850  0068FE  CFD0 F12E          	movff	4048,??_setup+2	;volatile
  1851  006902  0E04               	movlw	4
  1852  006904  0101               	movlb	1	; () banked
  1853  006906  172E               	andwf	(??_setup+2)& (0+255),f,b
  1854  006908  CFD0 F12F          	movff	4048,??_setup+3	;volatile
  1855  00690C  0E02               	movlw	2
  1856  00690E  0101               	movlb	1	; () banked
  1857  006910  172F               	andwf	(??_setup+3)& (0+255),f,b
  1858  006912  50D0               	movf	4048,w,c	;volatile
  1859  006914  0B01               	andlw	1
  1860  006916  0101               	movlb	1	; () banked
  1861  006918  112F               	iorwf	(??_setup+3)& (0+255),w,b
  1862  00691A  0101               	movlb	1	; () banked
  1863  00691C  112E               	iorwf	(??_setup+2)& (0+255),w,b
  1864  00691E  0101               	movlb	1	; () banked
  1865  006920  112D               	iorwf	(??_setup+1)& (0+255),w,b
  1866  006922  0101               	movlb	1	; () banked
  1867  006924  112C               	iorwf	??_setup& (0+255),w,b
  1868  006926  6E8B               	movwf	3979,c	;volatile
  1869                           
  1870                           ; BSR set to: 1
  1871                           ;temp-clock_main.c: 72: LATA5 = 1;
  1872  006928  8A89               	bsf	3977,5,c	;volatile
  1873  00692A                     l601:
  1874  00692A  D7FF               	goto	l601
  1875  00692C                     __end_of_setup:
  1876                           	opt stack 0
  1877                           tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           postinc0	equ	0xFEE
  1882                           wreg	equ	0xFE8
  1883                           postdec1	equ	0xFE5
  1884                           fsr1l	equ	0xFE1
  1885                           status	equ	0xFD8
  1886                           
  1887 ;; *************** function _setupButtons *****************
  1888 ;; Defined at:
  1889 ;;		line 13 in file "buttons.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;		None               void
  1896 ;; Registers used:
  1897 ;;		wreg, status,2
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:   13
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_setup
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text2
  1918  006EC2                     __ptext2:
  1919                           	opt stack 0
  1920  006EC2                     _setupButtons:
  1921                           	opt stack 16
  1922                           
  1923                           ;buttons.c: 14: LATC = 0;
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;incstack = 0
  1927                           ;incstack = 0
  1928  006EC2  0E00               	movlw	0
  1929  006EC4  6E8B               	movwf	3979,c	;volatile
  1930                           
  1931                           ;buttons.c: 15: LATB = 0;
  1932  006EC6  0E00               	movlw	0
  1933  006EC8  6E8A               	movwf	3978,c	;volatile
  1934                           
  1935                           ;buttons.c: 18: TRISB = 0b11111111;
  1936  006ECA  6893               	setf	3987,c	;volatile
  1937                           
  1938                           ;buttons.c: 20: nRBPU = !0;
  1939  006ECC  8EF1               	bsf	intcon2,7,c	;volatile
  1940                           
  1941                           ;buttons.c: 21: tmr0BigCounts = 0;
  1942  006ECE  0E00               	movlw	0
  1943  006ED0  0101               	movlb	1	; () banked
  1944  006ED2  0101               	movlb	1	; () banked
  1945  006ED4  6F6B               	movwf	_tmr0BigCounts& (0+255),b
  1946  006ED6  0E00               	movlw	0
  1947  006ED8  0101               	movlb	1	; () banked
  1948  006EDA  6F6C               	movwf	(_tmr0BigCounts+1)& (0+255),b
  1949  006EDC  0E00               	movlw	0
  1950  006EDE  0101               	movlb	1	; () banked
  1951  006EE0  6F6D               	movwf	(_tmr0BigCounts+2)& (0+255),b
  1952  006EE2  0E00               	movlw	0
  1953  006EE4  0101               	movlb	1	; () banked
  1954  006EE6  6F6E               	movwf	(_tmr0BigCounts+3)& (0+255),b
  1955                           
  1956                           ;buttons.c: 23: T0CON = (0b00001000);
  1957  006EE8  0E08               	movlw	8
  1958  006EEA  6ED5               	movwf	4053,c	;volatile
  1959                           
  1960                           ;buttons.c: 24: TMR0 = (65536-32767);
  1961  006EEC  0E80               	movlw	128
  1962  006EEE  6ED7               	movwf	4055,c	;volatile
  1963  006EF0  0E01               	movlw	1
  1964  006EF2  6ED6               	movwf	4054,c	;volatile
  1965                           
  1966                           ; BSR set to: 1
  1967                           ;buttons.c: 25: TMR0IE = 1;
  1968  006EF4  8AF2               	bsf	intcon,5,c	;volatile
  1969                           
  1970                           ; BSR set to: 1
  1971                           ;buttons.c: 26: TMR0IF = CLEAR;
  1972  006EF6  94F2               	bcf	intcon,2,c	;volatile
  1973                           
  1974                           ; BSR set to: 1
  1975                           ;buttons.c: 27: TMR1IP = 1;
  1976  006EF8  809F               	bsf	3999,0,c	;volatile
  1977                           
  1978                           ; BSR set to: 1
  1979                           ;buttons.c: 28: TMR0ON = 1;
  1980  006EFA  8ED5               	bsf	4053,7,c	;volatile
  1981                           
  1982                           ; BSR set to: 1
  1983  006EFC  0012               	return	
  1984  006EFE                     __end_of_setupButtons:
  1985                           	opt stack 0
  1986                           tblptru	equ	0xFF8
  1987                           tblptrh	equ	0xFF7
  1988                           tblptrl	equ	0xFF6
  1989                           tablat	equ	0xFF5
  1990                           intcon	equ	0xFF2
  1991                           intcon2	equ	0xFF1
  1992                           postinc0	equ	0xFEE
  1993                           wreg	equ	0xFE8
  1994                           postdec1	equ	0xFE5
  1995                           fsr1l	equ	0xFE1
  1996                           status	equ	0xFD8
  1997                           
  1998 ;; *************** function _initTemp *****************
  1999 ;; Defined at:
  2000 ;;		line 11 in file "temp.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;		None               void
  2007 ;; Registers used:
  2008 ;;		wreg, status,2
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2016 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2017 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2018 ;;Total ram usage:        1 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:   13
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_setup
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text3
  2029  006C14                     __ptext3:
  2030                           	opt stack 0
  2031  006C14                     _initTemp:
  2032                           	opt stack 16
  2033                           
  2034                           ;temp.c: 19: ADCON0 = 0b00000001;
  2035                           
  2036                           ; BSR set to: 1
  2037                           ;incstack = 0
  2038                           ;incstack = 0
  2039  006C14  0E01               	movlw	1
  2040  006C16  6EC2               	movwf	4034,c	;volatile
  2041                           
  2042                           ;temp.c: 26: ADCON1 = 0b00001110;
  2043  006C18  0E0E               	movlw	14
  2044  006C1A  6EC1               	movwf	4033,c	;volatile
  2045                           
  2046                           ;temp.c: 35: ADCON2 = 0b10001101;
  2047  006C1C  0E8D               	movlw	141
  2048  006C1E  6EC0               	movwf	4032,c	;volatile
  2049                           
  2050                           ;temp.c: 37: tempMenu.digits = 0b00011111;
  2051  006C20  0101               	movlb	1	; () banked
  2052  006C22  6F1F               	movwf	??_initTemp& (0+255),b
  2053  006C24  0E1F               	movlw	31
  2054  006C26  0100               	movlb	0	; () banked
  2055  006C28  0100               	movlb	0	; () banked
  2056  006C2A  6FFC               	movwf	(_tempMenu+1)& (0+255),b
  2057  006C2C  0101               	movlb	1	; () banked
  2058  006C2E  511F               	movf	??_initTemp& (0+255),w,b
  2059                           
  2060                           ; BSR set to: 1
  2061                           ;temp.c: 38: tempMenu.state = 0;
  2062  006C30  0101               	movlb	1	; () banked
  2063  006C32  6F1F               	movwf	??_initTemp& (0+255),b
  2064  006C34  0E00               	movlw	0
  2065  006C36  0100               	movlb	0	; () banked
  2066  006C38  0100               	movlb	0	; () banked
  2067  006C3A  6FFB               	movwf	_tempMenu& (0+255),b
  2068  006C3C  0101               	movlb	1	; () banked
  2069  006C3E  511F               	movf	??_initTemp& (0+255),w,b
  2070                           
  2071                           ; BSR set to: 1
  2072                           ;temp.c: 39: tempMenu.num_states = 2;
  2073  006C40  0101               	movlb	1	; () banked
  2074  006C42  6F1F               	movwf	??_initTemp& (0+255),b
  2075  006C44  0E02               	movlw	2
  2076  006C46  0100               	movlb	0	; () banked
  2077  006C48  0100               	movlb	0	; () banked
  2078  006C4A  6FFD               	movwf	(_tempMenu+2)& (0+255),b
  2079  006C4C  0101               	movlb	1	; () banked
  2080  006C4E  511F               	movf	??_initTemp& (0+255),w,b
  2081                           
  2082                           ; BSR set to: 1
  2083                           ;temp.c: 40: tempMenu.printFn = &printTemp;
  2084  006C50  0E56               	movlw	high _printTemp
  2085  006C52  0100               	movlb	0	; () banked
  2086  006C54  0100               	movlb	0	; () banked
  2087  006C56  6FFF               	movwf	(_tempMenu+4)& (0+255),b
  2088  006C58  0EE4               	movlw	low _printTemp
  2089  006C5A  0100               	movlb	0	; () banked
  2090  006C5C  6FFE               	movwf	(_tempMenu+3)& (0+255),b
  2091                           
  2092                           ; BSR set to: 0
  2093  006C5E  0012               	return	
  2094  006C60                     __end_of_initTemp:
  2095                           	opt stack 0
  2096                           tblptru	equ	0xFF8
  2097                           tblptrh	equ	0xFF7
  2098                           tblptrl	equ	0xFF6
  2099                           tablat	equ	0xFF5
  2100                           intcon	equ	0xFF2
  2101                           intcon2	equ	0xFF1
  2102                           postinc0	equ	0xFEE
  2103                           wreg	equ	0xFE8
  2104                           postdec1	equ	0xFE5
  2105                           fsr1l	equ	0xFE1
  2106                           status	equ	0xFD8
  2107                           
  2108 ;; *************** function _initRTC *****************
  2109 ;; Defined at:
  2110 ;;		line 9 in file "RTC.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;		None               void
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2126 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2127 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2128 ;;Total ram usage:        1 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:   14
  2131 ;; This function calls:
  2132 ;;		_loadTime
  2133 ;; This function is called by:
  2134 ;;		_setup
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text4
  2139  00652A                     __ptext4:
  2140                           	opt stack 0
  2141  00652A                     _initRTC:
  2142                           	opt stack 15
  2143                           
  2144                           ;RTC.c: 10: rtcMenu.state = hhmmss;
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;incstack = 0
  2148                           ;incstack = 0
  2149  00652A  0101               	movlb	1	; () banked
  2150  00652C  6F2B               	movwf	??_initRTC& (0+255),b
  2151  00652E  0E01               	movlw	1
  2152  006530  0101               	movlb	1	; () banked
  2153  006532  0101               	movlb	1	; () banked
  2154  006534  6F85               	movwf	_rtcMenu& (0+255),b
  2155  006536  0101               	movlb	1	; () banked
  2156  006538  512B               	movf	??_initRTC& (0+255),w,b
  2157                           
  2158                           ;RTC.c: 11: rtcMenu.digits = 0b01111111;
  2159  00653A  0101               	movlb	1	; () banked
  2160  00653C  6F2B               	movwf	??_initRTC& (0+255),b
  2161  00653E  0E7F               	movlw	127
  2162  006540  0101               	movlb	1	; () banked
  2163  006542  0101               	movlb	1	; () banked
  2164  006544  6F86               	movwf	(_rtcMenu+1)& (0+255),b
  2165  006546  0101               	movlb	1	; () banked
  2166  006548  512B               	movf	??_initRTC& (0+255),w,b
  2167                           
  2168                           ;RTC.c: 12: rtcMenu.num_states = 10;
  2169  00654A  0101               	movlb	1	; () banked
  2170  00654C  6F2B               	movwf	??_initRTC& (0+255),b
  2171  00654E  0E0A               	movlw	10
  2172  006550  0101               	movlb	1	; () banked
  2173  006552  0101               	movlb	1	; () banked
  2174  006554  6F87               	movwf	(_rtcMenu+2)& (0+255),b
  2175  006556  0101               	movlb	1	; () banked
  2176  006558  512B               	movf	??_initRTC& (0+255),w,b
  2177                           
  2178                           ; BSR set to: 1
  2179                           ;RTC.c: 13: rtcMenu.printFn = &printRTC;
  2180  00655A  0E1E               	movlw	high _printRTC
  2181  00655C  0101               	movlb	1	; () banked
  2182  00655E  0101               	movlb	1	; () banked
  2183  006560  6F89               	movwf	(_rtcMenu+4)& (0+255),b
  2184  006562  0E40               	movlw	low _printRTC
  2185  006564  0101               	movlb	1	; () banked
  2186  006566  6F88               	movwf	(_rtcMenu+3)& (0+255),b
  2187                           
  2188                           ; BSR set to: 1
  2189                           ;RTC.c: 15: date.month = 1;
  2190  006568  0101               	movlb	1	; () banked
  2191  00656A  6F2B               	movwf	??_initRTC& (0+255),b
  2192  00656C  0E01               	movlw	1
  2193  00656E  0101               	movlb	1	; () banked
  2194  006570  0101               	movlb	1	; () banked
  2195  006572  6F5E               	movwf	(_date+5)& (0+255),b
  2196  006574  0101               	movlb	1	; () banked
  2197  006576  512B               	movf	??_initRTC& (0+255),w,b
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;RTC.c: 16: date.day = 1;
  2201  006578  0101               	movlb	1	; () banked
  2202  00657A  6F2B               	movwf	??_initRTC& (0+255),b
  2203  00657C  0E01               	movlw	1
  2204  00657E  0101               	movlb	1	; () banked
  2205  006580  0101               	movlb	1	; () banked
  2206  006582  6F5C               	movwf	(_date+3)& (0+255),b
  2207  006584  0101               	movlb	1	; () banked
  2208  006586  512B               	movf	??_initRTC& (0+255),w,b
  2209                           
  2210                           ; BSR set to: 1
  2211                           ;RTC.c: 17: date.year = 2013;
  2212  006588  0E07               	movlw	7
  2213  00658A  0101               	movlb	1	; () banked
  2214  00658C  0101               	movlb	1	; () banked
  2215  00658E  6F60               	movwf	(_date+7)& (0+255),b
  2216  006590  0EDD               	movlw	221
  2217  006592  0101               	movlb	1	; () banked
  2218  006594  6F5F               	movwf	(_date+6)& (0+255),b
  2219                           
  2220                           ; BSR set to: 1
  2221                           ;RTC.c: 19: EECON1 = 0b0000000;
  2222  006596  0E00               	movlw	0
  2223  006598  6EA6               	movwf	4006,c	;volatile
  2224                           
  2225                           ; BSR set to: 1
  2226                           ;RTC.c: 20: LATC1 = 1;
  2227  00659A  828B               	bsf	3979,1,c	;volatile
  2228                           
  2229                           ; BSR set to: 1
  2230                           ;RTC.c: 21: loadTime();
  2231  00659C  ECB3  F031         	call	_loadTime	;wreg free
  2232                           
  2233                           ;RTC.c: 22: LATC1 = 0;
  2234  0065A0  928B               	bcf	3979,1,c	;volatile
  2235                           
  2236                           ;RTC.c: 25: T1CON = 0b10110000;
  2237  0065A2  0EB0               	movlw	176
  2238  0065A4  6ECD               	movwf	4045,c	;volatile
  2239                           
  2240                           ;RTC.c: 26: TMR1 = (65536-63765);
  2241  0065A6  0E06               	movlw	6
  2242  0065A8  6ECF               	movwf	4047,c	;volatile
  2243  0065AA  0EEB               	movlw	235
  2244  0065AC  6ECE               	movwf	4046,c	;volatile
  2245                           
  2246                           ;RTC.c: 27: TMR1IE = 1;
  2247  0065AE  809D               	bsf	3997,0,c	;volatile
  2248                           
  2249                           ;RTC.c: 28: TMR1IF = CLEAR;
  2250  0065B0  909E               	bcf	3998,0,c	;volatile
  2251                           
  2252                           ;RTC.c: 29: TMR1IP = 1;
  2253  0065B2  809F               	bsf	3999,0,c	;volatile
  2254                           
  2255                           ;RTC.c: 30: TMR1ON = 1;
  2256  0065B4  80CD               	bsf	4045,0,c	;volatile
  2257  0065B6  0012               	return	
  2258  0065B8                     __end_of_initRTC:
  2259                           	opt stack 0
  2260                           tblptru	equ	0xFF8
  2261                           tblptrh	equ	0xFF7
  2262                           tblptrl	equ	0xFF6
  2263                           tablat	equ	0xFF5
  2264                           intcon	equ	0xFF2
  2265                           intcon2	equ	0xFF1
  2266                           postinc0	equ	0xFEE
  2267                           wreg	equ	0xFE8
  2268                           postdec1	equ	0xFE5
  2269                           fsr1l	equ	0xFE1
  2270                           status	equ	0xFD8
  2271                           
  2272 ;; *************** function _loadTime *****************
  2273 ;; Defined at:
  2274 ;;		line 35 in file "RTC.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  newDate         9   34[BANK1 ] struct sDate
  2279 ;;  cnt             1   33[BANK1 ] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  9  126[COMRAM] struct sDate
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2289 ;;      Params:         0       0       0       0       0       0       0       0       0
  2290 ;;      Locals:         0       0      10       0       0       0       0       0       0
  2291 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2292 ;;      Totals:         0       0      12       0       0       0       0       0       0
  2293 ;;Total ram usage:       12 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:   13
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_initRTC
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text5
  2304  006366                     __ptext5:
  2305                           	opt stack 0
  2306  006366                     _loadTime:
  2307                           	opt stack 15
  2308                           
  2309                           ;RTC.c: 36: struct sDate newDate;
  2310                           ;RTC.c: 37: uint8_t cnt;
  2311                           ;RTC.c: 39: for (cnt = 1; cnt < 7; cnt++)
  2312                           
  2313                           ;incstack = 0
  2314                           ;incstack = 0
  2315  006366  0101               	movlb	1	; () banked
  2316  006368  6F1F               	movwf	??_loadTime& (0+255),b
  2317  00636A  0E01               	movlw	1
  2318  00636C  0101               	movlb	1	; () banked
  2319  00636E  0101               	movlb	1	; () banked
  2320  006370  6F21               	movwf	loadTime@cnt& (0+255),b
  2321  006372  0101               	movlb	1	; () banked
  2322  006374  511F               	movf	??_loadTime& (0+255),w,b
  2323  006376  D03E               	goto	L1
  2324  006378                     l184:
  2325                           
  2326                           ; BSR set to: 1
  2327                           ;RTC.c: 40: {
  2328                           ;RTC.c: 41: EEADR = 0 + cnt;
  2329  006378  C121  FFA9         	movff	loadTime@cnt,4009	;volatile
  2330                           
  2331                           ;RTC.c: 42: RD = 1;
  2332  00637C  80A6               	bsf	4006,0,c	;volatile
  2333                           
  2334                           ;RTC.c: 43: switch (cnt)
  2335  00637E  D022               	goto	l7233
  2336  006380                     l187:
  2337                           
  2338                           ; BSR set to: 1
  2339                           ;RTC.c: 46: newDate.minute = EEDATA;
  2340  006380  CFA8 F123          	movff	4008,loadTime@newDate+1	;volatile
  2341                           
  2342                           ;RTC.c: 47: break;
  2343  006384  D034               	goto	l7235
  2344  006386                     l189:
  2345                           
  2346                           ; BSR set to: 1
  2347                           ;RTC.c: 49: newDate.hour = EEDATA;
  2348  006386  CFA8 F124          	movff	4008,loadTime@newDate+2	;volatile
  2349                           
  2350                           ;RTC.c: 50: break;
  2351  00638A  D031               	goto	l7235
  2352  00638C                     l190:
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;RTC.c: 52: newDate.day = EEDATA;
  2356  00638C  CFA8 F125          	movff	4008,loadTime@newDate+3	;volatile
  2357                           
  2358                           ;RTC.c: 53: break;
  2359  006390  D02E               	goto	l7235
  2360  006392                     l191:
  2361                           
  2362                           ; BSR set to: 1
  2363                           ;RTC.c: 55: newDate.month = EEDATA;
  2364  006392  CFA8 F127          	movff	4008,loadTime@newDate+5	;volatile
  2365                           
  2366                           ;RTC.c: 56: break;
  2367  006396  D02B               	goto	l7235
  2368  006398                     l192:
  2369                           
  2370                           ; BSR set to: 1
  2371                           ;RTC.c: 58: newDate.year = EEDATA;
  2372  006398  0101               	movlb	1	; () banked
  2373  00639A  CFA8 F128          	movff	4008,loadTime@newDate+6	;volatile
  2374  00639E  0101               	movlb	1	; () banked
  2375  0063A0  0101               	movlb	1	; () banked
  2376  0063A2  6B29               	clrf	(loadTime@newDate+7)& (0+255),b
  2377                           
  2378                           ;RTC.c: 59: break;
  2379  0063A4  D024               	goto	l7235
  2380  0063A6                     l7229:
  2381                           
  2382                           ; BSR set to: 1
  2383                           ;RTC.c: 61: newDate.year |= EEDATA << 8;
  2384  0063A6  50A8               	movf	4008,w,c	;volatile
  2385  0063A8  0101               	movlb	1	; () banked
  2386  0063AA  6F20               	movwf	(??_loadTime+1)& (0+255),b
  2387  0063AC  6B1F               	clrf	??_loadTime& (0+255),b
  2388  0063AE  0101               	movlb	1	; () banked
  2389  0063B0  511F               	movf	??_loadTime& (0+255),w,b
  2390  0063B2  0101               	movlb	1	; () banked
  2391  0063B4  0101               	movlb	1	; () banked
  2392  0063B6  1328               	iorwf	(loadTime@newDate+6)& (0+255),f,b
  2393  0063B8  0101               	movlb	1	; () banked
  2394  0063BA  5120               	movf	(??_loadTime+1)& (0+255),w,b
  2395  0063BC  0101               	movlb	1	; () banked
  2396  0063BE  0101               	movlb	1	; () banked
  2397  0063C0  1329               	iorwf	(loadTime@newDate+7)& (0+255),f,b
  2398                           
  2399                           ;RTC.c: 62: break;
  2400  0063C2  D015               	goto	l7235
  2401  0063C4                     l7233:
  2402                           
  2403                           ; BSR set to: 1
  2404  0063C4  0101               	movlb	1	; () banked
  2405  0063C6  0101               	movlb	1	; () banked
  2406  0063C8  5121               	movf	loadTime@cnt& (0+255),w,b
  2407                           
  2408                           ; Switch size 1, requested type "space"
  2409                           ; Number of cases is 6, Range of values is 1 to 6
  2410                           ; switch strategies available:
  2411                           ; Name         Instructions Cycles
  2412                           ; simple_byte           19    10 (average)
  2413                           ;	Chosen strategy is simple_byte
  2414  0063CA  0A01               	xorlw	1	; case 1
  2415  0063CC  B4D8               	btfsc	status,2,c
  2416  0063CE  D7D8               	goto	l187
  2417  0063D0  0A03               	xorlw	3	; case 2
  2418  0063D2  B4D8               	btfsc	status,2,c
  2419  0063D4  D7D8               	goto	l189
  2420  0063D6  0A01               	xorlw	1	; case 3
  2421  0063D8  B4D8               	btfsc	status,2,c
  2422  0063DA  D7D8               	goto	l190
  2423  0063DC  0A07               	xorlw	7	; case 4
  2424  0063DE  B4D8               	btfsc	status,2,c
  2425  0063E0  D7D8               	goto	l191
  2426  0063E2  0A01               	xorlw	1	; case 5
  2427  0063E4  B4D8               	btfsc	status,2,c
  2428  0063E6  D7D8               	goto	l192
  2429  0063E8  0A03               	xorlw	3	; case 6
  2430  0063EA  B4D8               	btfsc	status,2,c
  2431  0063EC  D7DC               	goto	l7229
  2432  0063EE                     l7235:
  2433                           
  2434                           ; BSR set to: 1
  2435  0063EE  0101               	movlb	1	; () banked
  2436  0063F0  0101               	movlb	1	; () banked
  2437  0063F2  2B21               	incf	loadTime@cnt& (0+255),f,b
  2438  0063F4                     L1:
  2439                           
  2440                           ; BSR set to: 1
  2441  0063F4  0E06               	movlw	6
  2442  0063F6  0101               	movlb	1	; () banked
  2443  0063F8  0101               	movlb	1	; () banked
  2444  0063FA  6521               	cpfsgt	loadTime@cnt& (0+255),b
  2445  0063FC  D7BD               	goto	l184
  2446                           
  2447                           ; BSR set to: 1
  2448                           
  2449                           ; BSR set to: 1
  2450                           ;RTC.c: 64: }
  2451                           ;RTC.c: 65: return newDate;
  2452                           ;	Return value of _loadTime is never used
  2453  0063FE  0012               	return	
  2454  006400                     __end_of_loadTime:
  2455                           	opt stack 0
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           intcon	equ	0xFF2
  2461                           intcon2	equ	0xFF1
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           postdec1	equ	0xFE5
  2465                           fsr1l	equ	0xFE1
  2466                           status	equ	0xFD8
  2467                           
  2468 ;; *************** function _startDisp *****************
  2469 ;; Defined at:
  2470 ;;		line 62 in file "disp.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;		None               void
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2484 ;;      Params:         0       0       0       0       0       0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2486 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2487 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2488 ;;Total ram usage:        1 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:   14
  2491 ;; This function calls:
  2492 ;;		_setBrightness
  2493 ;;		_setTest
  2494 ;; This function is called by:
  2495 ;;		_setup
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text6
  2500  00618A                     __ptext6:
  2501                           	opt stack 0
  2502  00618A                     _startDisp:
  2503                           	opt stack 15
  2504                           
  2505                           ;disp.c: 64: TRISA1 = 0;
  2506                           
  2507                           ; BSR set to: 1
  2508                           ;incstack = 0
  2509                           ;incstack = 0
  2510  00618A  9292               	bcf	3986,1,c	;volatile
  2511                           
  2512                           ;disp.c: 65: TRISA3 = 0;
  2513  00618C  9692               	bcf	3986,3,c	;volatile
  2514                           
  2515                           ;disp.c: 66: TRISA4 = 0;
  2516  00618E  9892               	bcf	3986,4,c	;volatile
  2517                           
  2518                           ;disp.c: 67: TRISA2 = 1;
  2519  006190  8492               	bsf	3986,2,c	;volatile
  2520                           
  2521                           ;disp.c: 70: screen.digits.bits[0] = 0;
  2522  006192  0E00               	movlw	0
  2523  006194  0101               	movlb	1	; () banked
  2524  006196  0101               	movlb	1	; () banked
  2525  006198  6F6F               	movwf	_screen& (0+255),b
  2526  00619A  0E00               	movlw	0
  2527  00619C  0101               	movlb	1	; () banked
  2528  00619E  6F70               	movwf	(_screen+1)& (0+255),b
  2529  0061A0  0E00               	movlw	0
  2530  0061A2  0101               	movlb	1	; () banked
  2531  0061A4  6F71               	movwf	(_screen+2)& (0+255),b
  2532  0061A6  0E00               	movlw	0
  2533  0061A8  0101               	movlb	1	; () banked
  2534  0061AA  6F72               	movwf	(_screen+3)& (0+255),b
  2535                           
  2536                           ;disp.c: 71: screen.digits.bits[1] = 0;
  2537  0061AC  0E00               	movlw	0
  2538  0061AE  0101               	movlb	1	; () banked
  2539  0061B0  0101               	movlb	1	; () banked
  2540  0061B2  6F73               	movwf	(_screen+4)& (0+255),b
  2541  0061B4  0E00               	movlw	0
  2542  0061B6  0101               	movlb	1	; () banked
  2543  0061B8  6F74               	movwf	(_screen+5)& (0+255),b
  2544  0061BA  0E00               	movlw	0
  2545  0061BC  0101               	movlb	1	; () banked
  2546  0061BE  6F75               	movwf	(_screen+6)& (0+255),b
  2547  0061C0  0E00               	movlw	0
  2548  0061C2  0101               	movlb	1	; () banked
  2549  0061C4  6F76               	movwf	(_screen+7)& (0+255),b
  2550                           
  2551                           ; BSR set to: 1
  2552                           ;disp.c: 73: setBrightness(0b1111);
  2553  0061C6  0101               	movlb	1	; () banked
  2554  0061C8  6F20               	movwf	??_startDisp& (0+255),b
  2555  0061CA  0E0F               	movlw	15
  2556  0061CC  0101               	movlb	1	; () banked
  2557  0061CE  0101               	movlb	1	; () banked
  2558  0061D0  6F1F               	movwf	?_setBrightness& (0+255),b
  2559  0061D2  0101               	movlb	1	; () banked
  2560  0061D4  5120               	movf	??_startDisp& (0+255),w,b
  2561  0061D6  ECB1  F037         	call	_setBrightness	;wreg free
  2562                           
  2563                           ;disp.c: 75: screen.decode = 0;
  2564  0061DA  0101               	movlb	1	; () banked
  2565  0061DC  9177               	bcf	(_screen+8)& (0+255),0,b
  2566  0061DE  0101               	movlb	1	; () banked
  2567  0061E0  9377               	bcf	(_screen+8)& (0+255),1,b
  2568  0061E2  0101               	movlb	1	; () banked
  2569  0061E4  9577               	bcf	(_screen+8)& (0+255),2,b
  2570  0061E6  0101               	movlb	1	; () banked
  2571  0061E8  9777               	bcf	(_screen+8)& (0+255),3,b
  2572  0061EA  0101               	movlb	1	; () banked
  2573  0061EC  9977               	bcf	(_screen+8)& (0+255),4,b
  2574  0061EE  0101               	movlb	1	; () banked
  2575  0061F0  9B77               	bcf	(_screen+8)& (0+255),5,b
  2576  0061F2  0101               	movlb	1	; () banked
  2577  0061F4  9D77               	bcf	(_screen+8)& (0+255),6,b
  2578  0061F6  0101               	movlb	1	; () banked
  2579  0061F8  9F77               	bcf	(_screen+8)& (0+255),7,b
  2580                           
  2581                           ; BSR set to: 1
  2582                           ;disp.c: 77: screen.scan = 0b111;
  2583  0061FA  0101               	movlb	1	; () banked
  2584  0061FC  8978               	bsf	(_screen+9)& (0+255),4,b
  2585  0061FE  0101               	movlb	1	; () banked
  2586  006200  8B78               	bsf	(_screen+9)& (0+255),5,b
  2587  006202  0101               	movlb	1	; () banked
  2588  006204  8D78               	bsf	(_screen+9)& (0+255),6,b
  2589                           
  2590                           ; BSR set to: 1
  2591                           ;disp.c: 79: setTest(0);
  2592  006206  0101               	movlb	1	; () banked
  2593  006208  6F20               	movwf	??_startDisp& (0+255),b
  2594  00620A  0E00               	movlw	0
  2595  00620C  0101               	movlb	1	; () banked
  2596  00620E  0101               	movlb	1	; () banked
  2597  006210  6F1F               	movwf	?_setTest& (0+255),b
  2598  006212  0101               	movlb	1	; () banked
  2599  006214  5120               	movf	??_startDisp& (0+255),w,b
  2600  006216  ECC1  F037         	call	_setTest	;wreg free
  2601                           
  2602                           ;disp.c: 81: screen.shutdown = 0;
  2603  00621A  0101               	movlb	1	; () banked
  2604  00621C  0101               	movlb	1	; () banked
  2605  00621E  9179               	bcf	(_screen+10)& (0+255),0,b
  2606                           
  2607                           ; BSR set to: 1
  2608                           ;disp.c: 83: screen.changed = 0xFFFF;
  2609  006220  0101               	movlb	1	; () banked
  2610  006222  0101               	movlb	1	; () banked
  2611  006224  697A               	setf	(_screen+11)& (0+255),b
  2612  006226  0101               	movlb	1	; () banked
  2613  006228  697B               	setf	(_screen+12)& (0+255),b
  2614                           
  2615                           ; BSR set to: 1
  2616  00622A  0012               	return	
  2617  00622C                     __end_of_startDisp:
  2618                           	opt stack 0
  2619                           tblptru	equ	0xFF8
  2620                           tblptrh	equ	0xFF7
  2621                           tblptrl	equ	0xFF6
  2622                           tablat	equ	0xFF5
  2623                           intcon	equ	0xFF2
  2624                           intcon2	equ	0xFF1
  2625                           postinc0	equ	0xFEE
  2626                           wreg	equ	0xFE8
  2627                           postdec1	equ	0xFE5
  2628                           fsr1l	equ	0xFE1
  2629                           status	equ	0xFD8
  2630                           
  2631 ;; *************** function _setTest *****************
  2632 ;; Defined at:
  2633 ;;		line 56 in file "disp.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  state           1   31[BANK1 ] unsigned char 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;		None               void
  2640 ;; Registers used:
  2641 ;;		status,2, status,0
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2647 ;;      Params:         0       0       1       0       0       0       0       0       0
  2648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2650 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2651 ;;Total ram usage:        1 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:   13
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_startDisp
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text7
  2662  006F82                     __ptext7:
  2663                           	opt stack 0
  2664  006F82                     _setTest:
  2665                           	opt stack 15
  2666                           
  2667                           ;disp.c: 57: screen.test = state;
  2668                           
  2669                           ; BSR set to: 1
  2670                           ;incstack = 0
  2671                           ;incstack = 0
  2672  006F82  0101               	movlb	1	; () banked
  2673  006F84  0101               	movlb	1	; () banked
  2674  006F86  B11F               	btfsc	setTest@state& (0+255),0,b
  2675  006F88  D004               	bra	u3985
  2676  006F8A  0101               	movlb	1	; () banked
  2677  006F8C  0101               	movlb	1	; () banked
  2678  006F8E  9F78               	bcf	(_screen+9)& (0+255),7,b
  2679  006F90  D003               	bra	u3986
  2680  006F92                     u3985:
  2681  006F92  0101               	movlb	1	; () banked
  2682  006F94  0101               	movlb	1	; () banked
  2683  006F96  8F78               	bsf	(_screen+9)& (0+255),7,b
  2684  006F98                     u3986:
  2685                           
  2686                           ; BSR set to: 1
  2687                           ;disp.c: 58: screen.changed |= (1 << 12);
  2688  006F98  0101               	movlb	1	; () banked
  2689  006F9A  0101               	movlb	1	; () banked
  2690  006F9C  897B               	bsf	(_screen+12)& (0+255),4,b
  2691                           
  2692                           ; BSR set to: 1
  2693  006F9E  0012               	return	
  2694  006FA0                     __end_of_setTest:
  2695                           	opt stack 0
  2696                           tblptru	equ	0xFF8
  2697                           tblptrh	equ	0xFF7
  2698                           tblptrl	equ	0xFF6
  2699                           tablat	equ	0xFF5
  2700                           intcon	equ	0xFF2
  2701                           intcon2	equ	0xFF1
  2702                           postinc0	equ	0xFEE
  2703                           wreg	equ	0xFE8
  2704                           postdec1	equ	0xFE5
  2705                           fsr1l	equ	0xFE1
  2706                           status	equ	0xFD8
  2707                           
  2708 ;; *************** function _setBrightness *****************
  2709 ;; Defined at:
  2710 ;;		line 49 in file "disp.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  bright          1   31[BANK1 ] unsigned char 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;		None               void
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2724 ;;      Params:         0       0       1       0       0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2727 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2728 ;;Total ram usage:        1 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:   13
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_startDisp
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text8
  2739  006F62                     __ptext8:
  2740                           	opt stack 0
  2741  006F62                     _setBrightness:
  2742                           	opt stack 15
  2743                           
  2744                           ;disp.c: 50: screen.brightness = bright;
  2745                           
  2746                           ; BSR set to: 1
  2747                           ;incstack = 0
  2748                           ;incstack = 0
  2749  006F62  0101               	movlb	1	; () banked
  2750  006F64  0101               	movlb	1	; () banked
  2751  006F66  5178               	movf	(_screen+9)& (0+255),w,b
  2752  006F68  0101               	movlb	1	; () banked
  2753  006F6A  0101               	movlb	1	; () banked
  2754  006F6C  191F               	xorwf	setBrightness@bright& (0+255),w,b
  2755  006F6E  0BF0               	andlw	-16
  2756  006F70  0101               	movlb	1	; () banked
  2757  006F72  191F               	xorwf	setBrightness@bright& (0+255),w,b
  2758  006F74  0101               	movlb	1	; () banked
  2759  006F76  0101               	movlb	1	; () banked
  2760  006F78  6F78               	movwf	(_screen+9)& (0+255),b
  2761                           
  2762                           ; BSR set to: 1
  2763                           ;disp.c: 51: screen.changed |= (1 << 10);
  2764  006F7A  0101               	movlb	1	; () banked
  2765  006F7C  0101               	movlb	1	; () banked
  2766  006F7E  857B               	bsf	(_screen+12)& (0+255),2,b
  2767                           
  2768                           ; BSR set to: 1
  2769  006F80  0012               	return	
  2770  006F82                     __end_of_setBrightness:
  2771                           	opt stack 0
  2772                           tblptru	equ	0xFF8
  2773                           tblptrh	equ	0xFF7
  2774                           tblptrl	equ	0xFF6
  2775                           tablat	equ	0xFF5
  2776                           intcon	equ	0xFF2
  2777                           intcon2	equ	0xFF1
  2778                           postinc0	equ	0xFEE
  2779                           wreg	equ	0xFE8
  2780                           postdec1	equ	0xFE5
  2781                           fsr1l	equ	0xFE1
  2782                           status	equ	0xFD8
  2783                           
  2784 ;; *************** function _update *****************
  2785 ;; Defined at:
  2786 ;;		line 13 in file "disp.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  cnt             1   55[BANK1 ] char 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;		None               void
  2793 ;; Registers used:
  2794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2800 ;;      Params:         0       0       0       0       0       0       0       0       0
  2801 ;;      Locals:         0       0       1       0       0       0       0       0       0
  2802 ;;      Temps:          0       0       5       0       0       0       0       0       0
  2803 ;;      Totals:         0       0       6       0       0       0       0       0       0
  2804 ;;Total ram usage:        6 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:   16
  2807 ;; This function calls:
  2808 ;;		_writeDigit
  2809 ;;		_spi
  2810 ;; This function is called by:
  2811 ;;		_main
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text9
  2816  002ABC                     __ptext9:
  2817                           	opt stack 0
  2818  002ABC                     _update:
  2819                           	opt stack 14
  2820                           
  2821                           ;disp.c: 14: if (!screen.changed)
  2822                           
  2823                           ; BSR set to: 1
  2824                           ;incstack = 0
  2825                           ;incstack = 0
  2826  002ABC  0101               	movlb	1	; () banked
  2827  002ABE  0101               	movlb	1	; () banked
  2828  002AC0  517B               	movf	(_screen+12)& (0+255),w,b
  2829  002AC2  117A               	iorwf	(_screen+11)& (0+255),w,b
  2830  002AC4  B4D8               	btfsc	status,2,c
  2831  002AC6  D285               	goto	l58
  2832                           
  2833                           ; BSR set to: 1
  2834                           ;disp.c: 17: }
  2835                           ;disp.c: 18: int8_t cnt;
  2836                           ;disp.c: 19: for (cnt = 15; cnt >= 0; cnt--)
  2837                           
  2838                           ; BSR set to: 1
  2839                           
  2840                           ; BSR set to: 1
  2841                           ;disp.c: 15: {
  2842                           ;disp.c: 16: return;
  2843  002AC8  0101               	movlb	1	; () banked
  2844  002ACA  6F32               	movwf	??_update& (0+255),b
  2845  002ACC  0E0F               	movlw	15
  2846  002ACE  0101               	movlb	1	; () banked
  2847  002AD0  0101               	movlb	1	; () banked
  2848  002AD2  6F37               	movwf	update@cnt& (0+255),b
  2849  002AD4  0101               	movlb	1	; () banked
  2850  002AD6  5132               	movf	??_update& (0+255),w,b
  2851  002AD8                     
  2852                           ; BSR set to: 1
  2853  002AD8  0101               	movlb	1	; () banked
  2854  002ADA  0101               	movlb	1	; () banked
  2855  002ADC  BF37               	btfsc	update@cnt& (0+255),7,b
  2856  002ADE  D279               	goto	l58
  2857  002AE0  D083               	goto	l6427
  2858  002AE2                     l6413:
  2859                           
  2860                           ; BSR set to: 1
  2861                           ;disp.c: 24: writeDigit(1 << cnt, screen.digits.screen[cnt].bits);
  2862  002AE2  C137  F132         	movff	update@cnt,??_update
  2863  002AE6  0E01               	movlw	1
  2864  002AE8  0101               	movlb	1	; () banked
  2865  002AEA  6F33               	movwf	(??_update+1)& (0+255),b
  2866  002AEC  0101               	movlb	1	; () banked
  2867  002AEE  2B32               	incf	??_update& (0+255),f,b
  2868  002AF0  D003               	goto	u3874
  2869  002AF2                     u3875:
  2870  002AF2  0101               	movlb	1	; () banked
  2871  002AF4  90D8               	bcf	status,0,c
  2872  002AF6  3733               	rlcf	(??_update+1)& (0+255),f,b
  2873  002AF8                     u3874:
  2874  002AF8  0101               	movlb	1	; () banked
  2875  002AFA  2F32               	decfsz	??_update& (0+255),f,b
  2876  002AFC  D7FA               	goto	u3875
  2877  002AFE  0101               	movlb	1	; () banked
  2878  002B00  5133               	movf	(??_update+1)& (0+255),w,b
  2879  002B02  0101               	movlb	1	; () banked
  2880  002B04  0101               	movlb	1	; () banked
  2881  002B06  6F2D               	movwf	?_writeDigit& (0+255),b
  2882  002B08  0101               	movlb	1	; () banked
  2883  002B0A  0101               	movlb	1	; () banked
  2884  002B0C  5137               	movf	update@cnt& (0+255),w,b
  2885  002B0E  0D01               	mullw	1
  2886  002B10  0101               	movlb	1	; () banked
  2887  002B12  0E6F               	movlw	low _screen
  2888  002B14  24F3               	addwf	prodl,w,c
  2889  002B16  6ED9               	movwf	fsr2l,c
  2890  002B18  0101               	movlb	1	; () banked
  2891  002B1A  0E01               	movlw	high _screen
  2892  002B1C  20F4               	addwfc	prodh,w,c
  2893  002B1E  6EDA               	movwf	fsr2h,c
  2894  002B20  50DF               	movf	indf2,w,c
  2895  002B22  0101               	movlb	1	; () banked
  2896  002B24  0101               	movlb	1	; () banked
  2897  002B26  6F2E               	movwf	(?_writeDigit+1)& (0+255),b
  2898  002B28  EC65  F033         	call	_writeDigit	;wreg free
  2899                           
  2900                           ;disp.c: 25: break;
  2901  002B2C  D22C               	goto	l6429
  2902  002B2E                     l6415:
  2903                           
  2904                           ;disp.c: 27: spi(0b1001, screen.decode);
  2905  002B2E  0101               	movlb	1	; () banked
  2906  002B30  6F32               	movwf	??_update& (0+255),b
  2907  002B32  0E09               	movlw	9
  2908  002B34  0101               	movlb	1	; () banked
  2909  002B36  0101               	movlb	1	; () banked
  2910  002B38  6F25               	movwf	?_spi& (0+255),b
  2911  002B3A  0101               	movlb	1	; () banked
  2912  002B3C  5132               	movf	??_update& (0+255),w,b
  2913  002B3E  0101               	movlb	1	; () banked
  2914  002B40  0101               	movlb	1	; () banked
  2915  002B42  5177               	movf	(_screen+8)& (0+255),w,b
  2916  002B44  0BFF               	andlw	255
  2917  002B46  0101               	movlb	1	; () banked
  2918  002B48  0101               	movlb	1	; () banked
  2919  002B4A  6F26               	movwf	(?_spi+1)& (0+255),b
  2920  002B4C  ECA9  F02E         	call	_spi	;wreg free
  2921                           
  2922                           ;disp.c: 28: break;
  2923  002B50  D21A               	goto	l6429
  2924  002B52                     l6417:
  2925                           
  2926                           ;disp.c: 30: spi(0b1010, screen.brightness);
  2927  002B52  0101               	movlb	1	; () banked
  2928  002B54  6F32               	movwf	??_update& (0+255),b
  2929  002B56  0E0A               	movlw	10
  2930  002B58  0101               	movlb	1	; () banked
  2931  002B5A  0101               	movlb	1	; () banked
  2932  002B5C  6F25               	movwf	?_spi& (0+255),b
  2933  002B5E  0101               	movlb	1	; () banked
  2934  002B60  5132               	movf	??_update& (0+255),w,b
  2935  002B62  0101               	movlb	1	; () banked
  2936  002B64  0101               	movlb	1	; () banked
  2937  002B66  5178               	movf	(_screen+9)& (0+255),w,b
  2938  002B68  0B0F               	andlw	15
  2939  002B6A  0101               	movlb	1	; () banked
  2940  002B6C  0101               	movlb	1	; () banked
  2941  002B6E  6F26               	movwf	(?_spi+1)& (0+255),b
  2942  002B70  ECA9  F02E         	call	_spi	;wreg free
  2943                           
  2944                           ;disp.c: 31: break;
  2945  002B74  D208               	goto	l6429
  2946  002B76                     l6419:
  2947                           
  2948                           ;disp.c: 33: spi(0b1011, screen.scan);
  2949  002B76  0101               	movlb	1	; () banked
  2950  002B78  6F32               	movwf	??_update& (0+255),b
  2951  002B7A  0E0B               	movlw	11
  2952  002B7C  0101               	movlb	1	; () banked
  2953  002B7E  0101               	movlb	1	; () banked
  2954  002B80  6F25               	movwf	?_spi& (0+255),b
  2955  002B82  0101               	movlb	1	; () banked
  2956  002B84  5132               	movf	??_update& (0+255),w,b
  2957  002B86  0101               	movlb	1	; () banked
  2958  002B88  0101               	movlb	1	; () banked
  2959  002B8A  3978               	swapf	(_screen+9)& (0+255),w,b
  2960  002B8C  0B07               	andlw	7
  2961  002B8E  0101               	movlb	1	; () banked
  2962  002B90  0101               	movlb	1	; () banked
  2963  002B92  6F26               	movwf	(?_spi+1)& (0+255),b
  2964  002B94  ECA9  F02E         	call	_spi	;wreg free
  2965                           
  2966                           ;disp.c: 34: break;
  2967  002B98  D1F6               	goto	l6429
  2968  002B9A                     l6421:
  2969                           
  2970                           ;disp.c: 36: spi(0b1111, screen.test);
  2971  002B9A  0101               	movlb	1	; () banked
  2972  002B9C  6F32               	movwf	??_update& (0+255),b
  2973  002B9E  0E0F               	movlw	15
  2974  002BA0  0101               	movlb	1	; () banked
  2975  002BA2  0101               	movlb	1	; () banked
  2976  002BA4  6F25               	movwf	?_spi& (0+255),b
  2977  002BA6  0101               	movlb	1	; () banked
  2978  002BA8  5132               	movf	??_update& (0+255),w,b
  2979  002BAA  0E00               	movlw	0
  2980  002BAC  0101               	movlb	1	; () banked
  2981  002BAE  BF78               	btfsc	(_screen+9)& (0+255),7,b
  2982  002BB0  0E01               	movlw	1
  2983  002BB2  0101               	movlb	1	; () banked
  2984  002BB4  0101               	movlb	1	; () banked
  2985  002BB6  6F26               	movwf	(?_spi+1)& (0+255),b
  2986  002BB8  ECA9  F02E         	call	_spi	;wreg free
  2987                           
  2988                           ;disp.c: 37: break;
  2989  002BBC  D1E4               	goto	l6429
  2990  002BBE                     l6423:
  2991                           
  2992                           ;disp.c: 39: spi(0b1100, !screen.shutdown);
  2993  002BBE  0101               	movlb	1	; () banked
  2994  002BC0  6F32               	movwf	??_update& (0+255),b
  2995  002BC2  0E0C               	movlw	12
  2996  002BC4  0101               	movlb	1	; () banked
  2997  002BC6  0101               	movlb	1	; () banked
  2998  002BC8  6F25               	movwf	?_spi& (0+255),b
  2999  002BCA  0101               	movlb	1	; () banked
  3000  002BCC  5132               	movf	??_update& (0+255),w,b
  3001  002BCE  0101               	movlb	1	; () banked
  3002  002BD0  0101               	movlb	1	; () banked
  3003  002BD2  B179               	btfsc	(_screen+10)& (0+255),0,b
  3004  002BD4  D002               	goto	u3880
  3005  002BD6  0E01               	movlw	1
  3006  002BD8  D001               	goto	u3886
  3007  002BDA                     u3880:
  3008  002BDA  0E00               	movlw	0
  3009  002BDC                     u3886:
  3010  002BDC  0101               	movlb	1	; () banked
  3011  002BDE  0101               	movlb	1	; () banked
  3012  002BE0  6F26               	movwf	(?_spi+1)& (0+255),b
  3013  002BE2  ECA9  F02E         	call	_spi	;wreg free
  3014                           
  3015                           ;disp.c: 40: break;
  3016  002BE6  D1CF               	goto	l6429
  3017  002BE8                     l6427:
  3018  002BE8  C137  F132         	movff	update@cnt,??_update
  3019  002BEC  0E01               	movlw	1
  3020  002BEE  0101               	movlb	1	; () banked
  3021  002BF0  6F33               	movwf	(??_update+1)& (0+255),b
  3022  002BF2  6B34               	clrf	(??_update+2)& (0+255),b
  3023  002BF4  0101               	movlb	1	; () banked
  3024  002BF6  2B32               	incf	??_update& (0+255),f,b
  3025  002BF8  D004               	goto	u3894
  3026  002BFA                     u3895:
  3027  002BFA  90D8               	bcf	status,0,c
  3028  002BFC  0101               	movlb	1	; () banked
  3029  002BFE  3733               	rlcf	(??_update+1)& (0+255),f,b
  3030  002C00  3734               	rlcf	(??_update+2)& (0+255),f,b
  3031  002C02                     u3894:
  3032  002C02  0101               	movlb	1	; () banked
  3033  002C04  2F32               	decfsz	??_update& (0+255),f,b
  3034  002C06  D7F9               	goto	u3895
  3035  002C08  0101               	movlb	1	; () banked
  3036  002C0A  0101               	movlb	1	; () banked
  3037  002C0C  517A               	movf	(_screen+11)& (0+255),w,b
  3038  002C0E  0101               	movlb	1	; () banked
  3039  002C10  1733               	andwf	(??_update+1)& (0+255),f,b
  3040  002C12  0101               	movlb	1	; () banked
  3041  002C14  0101               	movlb	1	; () banked
  3042  002C16  517B               	movf	(_screen+12)& (0+255),w,b
  3043  002C18  0101               	movlb	1	; () banked
  3044  002C1A  1734               	andwf	(??_update+2)& (0+255),f,b
  3045                           
  3046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  3047                           ; Switch size 1, requested type "space"
  3048                           ; Number of cases is 6, Range of values is 0 to 32
  3049                           ; switch strategies available:
  3050                           ; Name         Instructions Cycles
  3051                           ; simple_byte           19    10 (average)
  3052                           ;	Chosen strategy is simple_byte
  3053  002C1C  0101               	movlb	1	; () banked
  3054  002C1E  5134               	movf	(??_update+2)& (0+255),w,b
  3055  002C20  0A00               	xorlw	0	; case 0
  3056  002C22  B4D8               	btfsc	status,2,c
  3057  002C24  D010               	goto	l8749
  3058  002C26  0A02               	xorlw	2	; case 2
  3059  002C28  B4D8               	btfsc	status,2,c
  3060  002C2A  D190               	goto	l8751
  3061  002C2C  0A06               	xorlw	6	; case 4
  3062  002C2E  B4D8               	btfsc	status,2,c
  3063  002C30  D193               	goto	l8753
  3064  002C32  0A0C               	xorlw	12	; case 8
  3065  002C34  B4D8               	btfsc	status,2,c
  3066  002C36  D196               	goto	l8755
  3067  002C38  0A18               	xorlw	24	; case 16
  3068  002C3A  B4D8               	btfsc	status,2,c
  3069  002C3C  D199               	goto	l8757
  3070  002C3E  0A30               	xorlw	48	; case 32
  3071  002C40  B4D8               	btfsc	status,2,c
  3072  002C42  D19C               	goto	l8759
  3073  002C44  D1A0               	goto	l6429
  3074  002C46                     l8749:
  3075                           
  3076                           ; BSR set to: 1
  3077                           ; Switch size 1, requested type "space"
  3078                           ; Number of cases is 128, Range of values is 1 to 128
  3079                           ; switch strategies available:
  3080                           ; Name         Instructions Cycles
  3081                           ; simple_byte          385   193 (average)
  3082                           ;	Chosen strategy is simple_byte
  3083  002C46  0101               	movlb	1	; () banked
  3084  002C48  5133               	movf	(??_update+1)& (0+255),w,b
  3085  002C4A  0A01               	xorlw	1	; case 1
  3086  002C4C  B4D8               	btfsc	status,2,c
  3087  002C4E  D749               	goto	l6413
  3088  002C50  0A03               	xorlw	3	; case 2
  3089  002C52  B4D8               	btfsc	status,2,c
  3090  002C54  D746               	goto	l6413
  3091  002C56  0A01               	xorlw	1	; case 3
  3092  002C58  B4D8               	btfsc	status,2,c
  3093  002C5A  D743               	goto	l6413
  3094  002C5C  0A07               	xorlw	7	; case 4
  3095  002C5E  B4D8               	btfsc	status,2,c
  3096  002C60  D740               	goto	l6413
  3097  002C62  0A01               	xorlw	1	; case 5
  3098  002C64  B4D8               	btfsc	status,2,c
  3099  002C66  D73D               	goto	l6413
  3100  002C68  0A03               	xorlw	3	; case 6
  3101  002C6A  B4D8               	btfsc	status,2,c
  3102  002C6C  D73A               	goto	l6413
  3103  002C6E  0A01               	xorlw	1	; case 7
  3104  002C70  B4D8               	btfsc	status,2,c
  3105  002C72  D737               	goto	l6413
  3106  002C74  0A0F               	xorlw	15	; case 8
  3107  002C76  B4D8               	btfsc	status,2,c
  3108  002C78  D734               	goto	l6413
  3109  002C7A  0A01               	xorlw	1	; case 9
  3110  002C7C  B4D8               	btfsc	status,2,c
  3111  002C7E  D731               	goto	l6413
  3112  002C80  0A03               	xorlw	3	; case 10
  3113  002C82  B4D8               	btfsc	status,2,c
  3114  002C84  D72E               	goto	l6413
  3115  002C86  0A01               	xorlw	1	; case 11
  3116  002C88  B4D8               	btfsc	status,2,c
  3117  002C8A  D72B               	goto	l6413
  3118  002C8C  0A07               	xorlw	7	; case 12
  3119  002C8E  B4D8               	btfsc	status,2,c
  3120  002C90  D728               	goto	l6413
  3121  002C92  0A01               	xorlw	1	; case 13
  3122  002C94  B4D8               	btfsc	status,2,c
  3123  002C96  D725               	goto	l6413
  3124  002C98  0A03               	xorlw	3	; case 14
  3125  002C9A  B4D8               	btfsc	status,2,c
  3126  002C9C  D722               	goto	l6413
  3127  002C9E  0A01               	xorlw	1	; case 15
  3128  002CA0  B4D8               	btfsc	status,2,c
  3129  002CA2  D71F               	goto	l6413
  3130  002CA4  0A1F               	xorlw	31	; case 16
  3131  002CA6  B4D8               	btfsc	status,2,c
  3132  002CA8  D71C               	goto	l6413
  3133  002CAA  0A01               	xorlw	1	; case 17
  3134  002CAC  B4D8               	btfsc	status,2,c
  3135  002CAE  D719               	goto	l6413
  3136  002CB0  0A03               	xorlw	3	; case 18
  3137  002CB2  B4D8               	btfsc	status,2,c
  3138  002CB4  D716               	goto	l6413
  3139  002CB6  0A01               	xorlw	1	; case 19
  3140  002CB8  B4D8               	btfsc	status,2,c
  3141  002CBA  D713               	goto	l6413
  3142  002CBC  0A07               	xorlw	7	; case 20
  3143  002CBE  B4D8               	btfsc	status,2,c
  3144  002CC0  D710               	goto	l6413
  3145  002CC2  0A01               	xorlw	1	; case 21
  3146  002CC4  B4D8               	btfsc	status,2,c
  3147  002CC6  D70D               	goto	l6413
  3148  002CC8  0A03               	xorlw	3	; case 22
  3149  002CCA  B4D8               	btfsc	status,2,c
  3150  002CCC  D70A               	goto	l6413
  3151  002CCE  0A01               	xorlw	1	; case 23
  3152  002CD0  B4D8               	btfsc	status,2,c
  3153  002CD2  D707               	goto	l6413
  3154  002CD4  0A0F               	xorlw	15	; case 24
  3155  002CD6  B4D8               	btfsc	status,2,c
  3156  002CD8  D704               	goto	l6413
  3157  002CDA  0A01               	xorlw	1	; case 25
  3158  002CDC  B4D8               	btfsc	status,2,c
  3159  002CDE  D701               	goto	l6413
  3160  002CE0  0A03               	xorlw	3	; case 26
  3161  002CE2  B4D8               	btfsc	status,2,c
  3162  002CE4  D6FE               	goto	l6413
  3163  002CE6  0A01               	xorlw	1	; case 27
  3164  002CE8  B4D8               	btfsc	status,2,c
  3165  002CEA  D6FB               	goto	l6413
  3166  002CEC  0A07               	xorlw	7	; case 28
  3167  002CEE  B4D8               	btfsc	status,2,c
  3168  002CF0  D6F8               	goto	l6413
  3169  002CF2  0A01               	xorlw	1	; case 29
  3170  002CF4  B4D8               	btfsc	status,2,c
  3171  002CF6  D6F5               	goto	l6413
  3172  002CF8  0A03               	xorlw	3	; case 30
  3173  002CFA  B4D8               	btfsc	status,2,c
  3174  002CFC  D6F2               	goto	l6413
  3175  002CFE  0A01               	xorlw	1	; case 31
  3176  002D00  B4D8               	btfsc	status,2,c
  3177  002D02  D6EF               	goto	l6413
  3178  002D04  0A3F               	xorlw	63	; case 32
  3179  002D06  B4D8               	btfsc	status,2,c
  3180  002D08  D6EC               	goto	l6413
  3181  002D0A  0A01               	xorlw	1	; case 33
  3182  002D0C  B4D8               	btfsc	status,2,c
  3183  002D0E  D6E9               	goto	l6413
  3184  002D10  0A03               	xorlw	3	; case 34
  3185  002D12  B4D8               	btfsc	status,2,c
  3186  002D14  D6E6               	goto	l6413
  3187  002D16  0A01               	xorlw	1	; case 35
  3188  002D18  B4D8               	btfsc	status,2,c
  3189  002D1A  D6E3               	goto	l6413
  3190  002D1C  0A07               	xorlw	7	; case 36
  3191  002D1E  B4D8               	btfsc	status,2,c
  3192  002D20  D6E0               	goto	l6413
  3193  002D22  0A01               	xorlw	1	; case 37
  3194  002D24  B4D8               	btfsc	status,2,c
  3195  002D26  D6DD               	goto	l6413
  3196  002D28  0A03               	xorlw	3	; case 38
  3197  002D2A  B4D8               	btfsc	status,2,c
  3198  002D2C  D6DA               	goto	l6413
  3199  002D2E  0A01               	xorlw	1	; case 39
  3200  002D30  B4D8               	btfsc	status,2,c
  3201  002D32  D6D7               	goto	l6413
  3202  002D34  0A0F               	xorlw	15	; case 40
  3203  002D36  B4D8               	btfsc	status,2,c
  3204  002D38  D6D4               	goto	l6413
  3205  002D3A  0A01               	xorlw	1	; case 41
  3206  002D3C  B4D8               	btfsc	status,2,c
  3207  002D3E  D6D1               	goto	l6413
  3208  002D40  0A03               	xorlw	3	; case 42
  3209  002D42  B4D8               	btfsc	status,2,c
  3210  002D44  D6CE               	goto	l6413
  3211  002D46  0A01               	xorlw	1	; case 43
  3212  002D48  B4D8               	btfsc	status,2,c
  3213  002D4A  D6CB               	goto	l6413
  3214  002D4C  0A07               	xorlw	7	; case 44
  3215  002D4E  B4D8               	btfsc	status,2,c
  3216  002D50  D6C8               	goto	l6413
  3217  002D52  0A01               	xorlw	1	; case 45
  3218  002D54  B4D8               	btfsc	status,2,c
  3219  002D56  D6C5               	goto	l6413
  3220  002D58  0A03               	xorlw	3	; case 46
  3221  002D5A  B4D8               	btfsc	status,2,c
  3222  002D5C  D6C2               	goto	l6413
  3223  002D5E  0A01               	xorlw	1	; case 47
  3224  002D60  B4D8               	btfsc	status,2,c
  3225  002D62  D6BF               	goto	l6413
  3226  002D64  0A1F               	xorlw	31	; case 48
  3227  002D66  B4D8               	btfsc	status,2,c
  3228  002D68  D6BC               	goto	l6413
  3229  002D6A  0A01               	xorlw	1	; case 49
  3230  002D6C  B4D8               	btfsc	status,2,c
  3231  002D6E  D6B9               	goto	l6413
  3232  002D70  0A03               	xorlw	3	; case 50
  3233  002D72  B4D8               	btfsc	status,2,c
  3234  002D74  D6B6               	goto	l6413
  3235  002D76  0A01               	xorlw	1	; case 51
  3236  002D78  B4D8               	btfsc	status,2,c
  3237  002D7A  D6B3               	goto	l6413
  3238  002D7C  0A07               	xorlw	7	; case 52
  3239  002D7E  B4D8               	btfsc	status,2,c
  3240  002D80  D6B0               	goto	l6413
  3241  002D82  0A01               	xorlw	1	; case 53
  3242  002D84  B4D8               	btfsc	status,2,c
  3243  002D86  D6AD               	goto	l6413
  3244  002D88  0A03               	xorlw	3	; case 54
  3245  002D8A  B4D8               	btfsc	status,2,c
  3246  002D8C  D6AA               	goto	l6413
  3247  002D8E  0A01               	xorlw	1	; case 55
  3248  002D90  B4D8               	btfsc	status,2,c
  3249  002D92  D6A7               	goto	l6413
  3250  002D94  0A0F               	xorlw	15	; case 56
  3251  002D96  B4D8               	btfsc	status,2,c
  3252  002D98  D6A4               	goto	l6413
  3253  002D9A  0A01               	xorlw	1	; case 57
  3254  002D9C  B4D8               	btfsc	status,2,c
  3255  002D9E  D6A1               	goto	l6413
  3256  002DA0  0A03               	xorlw	3	; case 58
  3257  002DA2  B4D8               	btfsc	status,2,c
  3258  002DA4  D69E               	goto	l6413
  3259  002DA6  0A01               	xorlw	1	; case 59
  3260  002DA8  B4D8               	btfsc	status,2,c
  3261  002DAA  D69B               	goto	l6413
  3262  002DAC  0A07               	xorlw	7	; case 60
  3263  002DAE  B4D8               	btfsc	status,2,c
  3264  002DB0  D698               	goto	l6413
  3265  002DB2  0A01               	xorlw	1	; case 61
  3266  002DB4  B4D8               	btfsc	status,2,c
  3267  002DB6  D695               	goto	l6413
  3268  002DB8  0A03               	xorlw	3	; case 62
  3269  002DBA  B4D8               	btfsc	status,2,c
  3270  002DBC  D692               	goto	l6413
  3271  002DBE  0A01               	xorlw	1	; case 63
  3272  002DC0  B4D8               	btfsc	status,2,c
  3273  002DC2  D68F               	goto	l6413
  3274  002DC4  0A7F               	xorlw	127	; case 64
  3275  002DC6  B4D8               	btfsc	status,2,c
  3276  002DC8  D68C               	goto	l6413
  3277  002DCA  0A01               	xorlw	1	; case 65
  3278  002DCC  B4D8               	btfsc	status,2,c
  3279  002DCE  D689               	goto	l6413
  3280  002DD0  0A03               	xorlw	3	; case 66
  3281  002DD2  B4D8               	btfsc	status,2,c
  3282  002DD4  D686               	goto	l6413
  3283  002DD6  0A01               	xorlw	1	; case 67
  3284  002DD8  B4D8               	btfsc	status,2,c
  3285  002DDA  D683               	goto	l6413
  3286  002DDC  0A07               	xorlw	7	; case 68
  3287  002DDE  B4D8               	btfsc	status,2,c
  3288  002DE0  D680               	goto	l6413
  3289  002DE2  0A01               	xorlw	1	; case 69
  3290  002DE4  B4D8               	btfsc	status,2,c
  3291  002DE6  D67D               	goto	l6413
  3292  002DE8  0A03               	xorlw	3	; case 70
  3293  002DEA  B4D8               	btfsc	status,2,c
  3294  002DEC  D67A               	goto	l6413
  3295  002DEE  0A01               	xorlw	1	; case 71
  3296  002DF0  B4D8               	btfsc	status,2,c
  3297  002DF2  D677               	goto	l6413
  3298  002DF4  0A0F               	xorlw	15	; case 72
  3299  002DF6  B4D8               	btfsc	status,2,c
  3300  002DF8  D674               	goto	l6413
  3301  002DFA  0A01               	xorlw	1	; case 73
  3302  002DFC  B4D8               	btfsc	status,2,c
  3303  002DFE  D671               	goto	l6413
  3304  002E00  0A03               	xorlw	3	; case 74
  3305  002E02  B4D8               	btfsc	status,2,c
  3306  002E04  D66E               	goto	l6413
  3307  002E06  0A01               	xorlw	1	; case 75
  3308  002E08  B4D8               	btfsc	status,2,c
  3309  002E0A  D66B               	goto	l6413
  3310  002E0C  0A07               	xorlw	7	; case 76
  3311  002E0E  B4D8               	btfsc	status,2,c
  3312  002E10  D668               	goto	l6413
  3313  002E12  0A01               	xorlw	1	; case 77
  3314  002E14  B4D8               	btfsc	status,2,c
  3315  002E16  D665               	goto	l6413
  3316  002E18  0A03               	xorlw	3	; case 78
  3317  002E1A  B4D8               	btfsc	status,2,c
  3318  002E1C  D662               	goto	l6413
  3319  002E1E  0A01               	xorlw	1	; case 79
  3320  002E20  B4D8               	btfsc	status,2,c
  3321  002E22  D65F               	goto	l6413
  3322  002E24  0A1F               	xorlw	31	; case 80
  3323  002E26  B4D8               	btfsc	status,2,c
  3324  002E28  D65C               	goto	l6413
  3325  002E2A  0A01               	xorlw	1	; case 81
  3326  002E2C  B4D8               	btfsc	status,2,c
  3327  002E2E  D659               	goto	l6413
  3328  002E30  0A03               	xorlw	3	; case 82
  3329  002E32  B4D8               	btfsc	status,2,c
  3330  002E34  D656               	goto	l6413
  3331  002E36  0A01               	xorlw	1	; case 83
  3332  002E38  B4D8               	btfsc	status,2,c
  3333  002E3A  D653               	goto	l6413
  3334  002E3C  0A07               	xorlw	7	; case 84
  3335  002E3E  B4D8               	btfsc	status,2,c
  3336  002E40  D650               	goto	l6413
  3337  002E42  0A01               	xorlw	1	; case 85
  3338  002E44  B4D8               	btfsc	status,2,c
  3339  002E46  D64D               	goto	l6413
  3340  002E48  0A03               	xorlw	3	; case 86
  3341  002E4A  B4D8               	btfsc	status,2,c
  3342  002E4C  D64A               	goto	l6413
  3343  002E4E  0A01               	xorlw	1	; case 87
  3344  002E50  B4D8               	btfsc	status,2,c
  3345  002E52  D647               	goto	l6413
  3346  002E54  0A0F               	xorlw	15	; case 88
  3347  002E56  B4D8               	btfsc	status,2,c
  3348  002E58  D644               	goto	l6413
  3349  002E5A  0A01               	xorlw	1	; case 89
  3350  002E5C  B4D8               	btfsc	status,2,c
  3351  002E5E  D641               	goto	l6413
  3352  002E60  0A03               	xorlw	3	; case 90
  3353  002E62  B4D8               	btfsc	status,2,c
  3354  002E64  D63E               	goto	l6413
  3355  002E66  0A01               	xorlw	1	; case 91
  3356  002E68  B4D8               	btfsc	status,2,c
  3357  002E6A  D63B               	goto	l6413
  3358  002E6C  0A07               	xorlw	7	; case 92
  3359  002E6E  B4D8               	btfsc	status,2,c
  3360  002E70  D638               	goto	l6413
  3361  002E72  0A01               	xorlw	1	; case 93
  3362  002E74  B4D8               	btfsc	status,2,c
  3363  002E76  D635               	goto	l6413
  3364  002E78  0A03               	xorlw	3	; case 94
  3365  002E7A  B4D8               	btfsc	status,2,c
  3366  002E7C  D632               	goto	l6413
  3367  002E7E  0A01               	xorlw	1	; case 95
  3368  002E80  B4D8               	btfsc	status,2,c
  3369  002E82  D62F               	goto	l6413
  3370  002E84  0A3F               	xorlw	63	; case 96
  3371  002E86  B4D8               	btfsc	status,2,c
  3372  002E88  D62C               	goto	l6413
  3373  002E8A  0A01               	xorlw	1	; case 97
  3374  002E8C  B4D8               	btfsc	status,2,c
  3375  002E8E  D629               	goto	l6413
  3376  002E90  0A03               	xorlw	3	; case 98
  3377  002E92  B4D8               	btfsc	status,2,c
  3378  002E94  D626               	goto	l6413
  3379  002E96  0A01               	xorlw	1	; case 99
  3380  002E98  B4D8               	btfsc	status,2,c
  3381  002E9A  D623               	goto	l6413
  3382  002E9C  0A07               	xorlw	7	; case 100
  3383  002E9E  B4D8               	btfsc	status,2,c
  3384  002EA0  D620               	goto	l6413
  3385  002EA2  0A01               	xorlw	1	; case 101
  3386  002EA4  B4D8               	btfsc	status,2,c
  3387  002EA6  D61D               	goto	l6413
  3388  002EA8  0A03               	xorlw	3	; case 102
  3389  002EAA  B4D8               	btfsc	status,2,c
  3390  002EAC  D61A               	goto	l6413
  3391  002EAE  0A01               	xorlw	1	; case 103
  3392  002EB0  B4D8               	btfsc	status,2,c
  3393  002EB2  D617               	goto	l6413
  3394  002EB4  0A0F               	xorlw	15	; case 104
  3395  002EB6  B4D8               	btfsc	status,2,c
  3396  002EB8  D614               	goto	l6413
  3397  002EBA  0A01               	xorlw	1	; case 105
  3398  002EBC  B4D8               	btfsc	status,2,c
  3399  002EBE  D611               	goto	l6413
  3400  002EC0  0A03               	xorlw	3	; case 106
  3401  002EC2  B4D8               	btfsc	status,2,c
  3402  002EC4  D60E               	goto	l6413
  3403  002EC6  0A01               	xorlw	1	; case 107
  3404  002EC8  B4D8               	btfsc	status,2,c
  3405  002ECA  D60B               	goto	l6413
  3406  002ECC  0A07               	xorlw	7	; case 108
  3407  002ECE  B4D8               	btfsc	status,2,c
  3408  002ED0  D608               	goto	l6413
  3409  002ED2  0A01               	xorlw	1	; case 109
  3410  002ED4  B4D8               	btfsc	status,2,c
  3411  002ED6  D605               	goto	l6413
  3412  002ED8  0A03               	xorlw	3	; case 110
  3413  002EDA  B4D8               	btfsc	status,2,c
  3414  002EDC  D602               	goto	l6413
  3415  002EDE  0A01               	xorlw	1	; case 111
  3416  002EE0  B4D8               	btfsc	status,2,c
  3417  002EE2  D5FF               	goto	l6413
  3418  002EE4  0A1F               	xorlw	31	; case 112
  3419  002EE6  B4D8               	btfsc	status,2,c
  3420  002EE8  D5FC               	goto	l6413
  3421  002EEA  0A01               	xorlw	1	; case 113
  3422  002EEC  B4D8               	btfsc	status,2,c
  3423  002EEE  D5F9               	goto	l6413
  3424  002EF0  0A03               	xorlw	3	; case 114
  3425  002EF2  B4D8               	btfsc	status,2,c
  3426  002EF4  D5F6               	goto	l6413
  3427  002EF6  0A01               	xorlw	1	; case 115
  3428  002EF8  B4D8               	btfsc	status,2,c
  3429  002EFA  D5F3               	goto	l6413
  3430  002EFC  0A07               	xorlw	7	; case 116
  3431  002EFE  B4D8               	btfsc	status,2,c
  3432  002F00  D5F0               	goto	l6413
  3433  002F02  0A01               	xorlw	1	; case 117
  3434  002F04  B4D8               	btfsc	status,2,c
  3435  002F06  D5ED               	goto	l6413
  3436  002F08  0A03               	xorlw	3	; case 118
  3437  002F0A  B4D8               	btfsc	status,2,c
  3438  002F0C  D5EA               	goto	l6413
  3439  002F0E  0A01               	xorlw	1	; case 119
  3440  002F10  B4D8               	btfsc	status,2,c
  3441  002F12  D5E7               	goto	l6413
  3442  002F14  0A0F               	xorlw	15	; case 120
  3443  002F16  B4D8               	btfsc	status,2,c
  3444  002F18  D5E4               	goto	l6413
  3445  002F1A  0A01               	xorlw	1	; case 121
  3446  002F1C  B4D8               	btfsc	status,2,c
  3447  002F1E  D5E1               	goto	l6413
  3448  002F20  0A03               	xorlw	3	; case 122
  3449  002F22  B4D8               	btfsc	status,2,c
  3450  002F24  D5DE               	goto	l6413
  3451  002F26  0A01               	xorlw	1	; case 123
  3452  002F28  B4D8               	btfsc	status,2,c
  3453  002F2A  D5DB               	goto	l6413
  3454  002F2C  0A07               	xorlw	7	; case 124
  3455  002F2E  B4D8               	btfsc	status,2,c
  3456  002F30  D5D8               	goto	l6413
  3457  002F32  0A01               	xorlw	1	; case 125
  3458  002F34  B4D8               	btfsc	status,2,c
  3459  002F36  D5D5               	goto	l6413
  3460  002F38  0A03               	xorlw	3	; case 126
  3461  002F3A  B4D8               	btfsc	status,2,c
  3462  002F3C  D5D2               	goto	l6413
  3463  002F3E  0A01               	xorlw	1	; case 127
  3464  002F40  B4D8               	btfsc	status,2,c
  3465  002F42  D5CF               	goto	l6413
  3466  002F44  0AFF               	xorlw	255	; case 128
  3467  002F46  B4D8               	btfsc	status,2,c
  3468  002F48  D5CC               	goto	l6413
  3469  002F4A  D01D               	goto	l6429
  3470  002F4C                     l8751:
  3471                           
  3472                           ; BSR set to: 1
  3473                           ; Switch size 1, requested type "space"
  3474                           ; Number of cases is 1, Range of values is 0 to 0
  3475                           ; switch strategies available:
  3476                           ; Name         Instructions Cycles
  3477                           ; simple_byte            4     3 (average)
  3478                           ;	Chosen strategy is simple_byte
  3479  002F4C  0101               	movlb	1	; () banked
  3480  002F4E  5133               	movf	(??_update+1)& (0+255),w,b
  3481  002F50  0A00               	xorlw	0	; case 0
  3482  002F52  B4D8               	btfsc	status,2,c
  3483  002F54  D5EC               	goto	l6415
  3484  002F56  D017               	goto	l6429
  3485  002F58                     l8753:
  3486                           
  3487                           ; BSR set to: 1
  3488                           ; Switch size 1, requested type "space"
  3489                           ; Number of cases is 1, Range of values is 0 to 0
  3490                           ; switch strategies available:
  3491                           ; Name         Instructions Cycles
  3492                           ; simple_byte            4     3 (average)
  3493                           ;	Chosen strategy is simple_byte
  3494  002F58  0101               	movlb	1	; () banked
  3495  002F5A  5133               	movf	(??_update+1)& (0+255),w,b
  3496  002F5C  0A00               	xorlw	0	; case 0
  3497  002F5E  B4D8               	btfsc	status,2,c
  3498  002F60  D5F8               	goto	l6417
  3499  002F62  D011               	goto	l6429
  3500  002F64                     l8755:
  3501                           
  3502                           ; BSR set to: 1
  3503                           ; Switch size 1, requested type "space"
  3504                           ; Number of cases is 1, Range of values is 0 to 0
  3505                           ; switch strategies available:
  3506                           ; Name         Instructions Cycles
  3507                           ; simple_byte            4     3 (average)
  3508                           ;	Chosen strategy is simple_byte
  3509  002F64  0101               	movlb	1	; () banked
  3510  002F66  5133               	movf	(??_update+1)& (0+255),w,b
  3511  002F68  0A00               	xorlw	0	; case 0
  3512  002F6A  B4D8               	btfsc	status,2,c
  3513  002F6C  D604               	goto	l6419
  3514  002F6E  D00B               	goto	l6429
  3515  002F70                     l8757:
  3516                           
  3517                           ; BSR set to: 1
  3518                           ; Switch size 1, requested type "space"
  3519                           ; Number of cases is 1, Range of values is 0 to 0
  3520                           ; switch strategies available:
  3521                           ; Name         Instructions Cycles
  3522                           ; simple_byte            4     3 (average)
  3523                           ;	Chosen strategy is simple_byte
  3524  002F70  0101               	movlb	1	; () banked
  3525  002F72  5133               	movf	(??_update+1)& (0+255),w,b
  3526  002F74  0A00               	xorlw	0	; case 0
  3527  002F76  B4D8               	btfsc	status,2,c
  3528  002F78  D610               	goto	l6421
  3529  002F7A  D005               	goto	l6429
  3530  002F7C                     l8759:
  3531                           
  3532                           ; BSR set to: 1
  3533                           ; Switch size 1, requested type "space"
  3534                           ; Number of cases is 1, Range of values is 0 to 0
  3535                           ; switch strategies available:
  3536                           ; Name         Instructions Cycles
  3537                           ; simple_byte            4     3 (average)
  3538                           ;	Chosen strategy is simple_byte
  3539  002F7C  0101               	movlb	1	; () banked
  3540  002F7E  5133               	movf	(??_update+1)& (0+255),w,b
  3541  002F80  0A00               	xorlw	0	; case 0
  3542  002F82  B4D8               	btfsc	status,2,c
  3543  002F84  D61C               	goto	l6423
  3544  002F86                     l6429:
  3545                           
  3546                           ;disp.c: 44: screen.changed &= ~(1 << cnt);
  3547  002F86  C137  F132         	movff	update@cnt,??_update
  3548  002F8A  0E01               	movlw	1
  3549  002F8C  0101               	movlb	1	; () banked
  3550  002F8E  6F33               	movwf	(??_update+1)& (0+255),b
  3551  002F90  6B34               	clrf	(??_update+2)& (0+255),b
  3552  002F92  0101               	movlb	1	; () banked
  3553  002F94  2B32               	incf	??_update& (0+255),f,b
  3554  002F96  D004               	goto	u3904
  3555  002F98                     u3905:
  3556  002F98  90D8               	bcf	status,0,c
  3557  002F9A  0101               	movlb	1	; () banked
  3558  002F9C  3733               	rlcf	(??_update+1)& (0+255),f,b
  3559  002F9E  3734               	rlcf	(??_update+2)& (0+255),f,b
  3560  002FA0                     u3904:
  3561  002FA0  0101               	movlb	1	; () banked
  3562  002FA2  2F32               	decfsz	??_update& (0+255),f,b
  3563  002FA4  D7F9               	goto	u3905
  3564  002FA6  0101               	movlb	1	; () banked
  3565  002FA8  1D33               	comf	(??_update+1)& (0+255),w,b
  3566  002FAA  0101               	movlb	1	; () banked
  3567  002FAC  6F35               	movwf	(??_update+3)& (0+255),b
  3568  002FAE  0101               	movlb	1	; () banked
  3569  002FB0  0101               	movlb	1	; () banked
  3570  002FB2  1D34               	comf	(??_update+2)& (0+255),w,b
  3571  002FB4  6F36               	movwf	(??_update+4)& (0+255),b
  3572  002FB6  0101               	movlb	1	; () banked
  3573  002FB8  5135               	movf	(??_update+3)& (0+255),w,b
  3574  002FBA  0101               	movlb	1	; () banked
  3575  002FBC  0101               	movlb	1	; () banked
  3576  002FBE  177A               	andwf	(_screen+11)& (0+255),f,b
  3577  002FC0  0101               	movlb	1	; () banked
  3578  002FC2  5136               	movf	(??_update+4)& (0+255),w,b
  3579  002FC4  0101               	movlb	1	; () banked
  3580  002FC6  0101               	movlb	1	; () banked
  3581  002FC8  177B               	andwf	(_screen+12)& (0+255),f,b
  3582                           
  3583                           ; BSR set to: 1
  3584  002FCA  0101               	movlb	1	; () banked
  3585  002FCC  0101               	movlb	1	; () banked
  3586  002FCE  0737               	decf	update@cnt& (0+255),f,b
  3587  002FD0  D583               	goto	L2
  3588  002FD2                     l58:
  3589                           
  3590                           ; BSR set to: 1
  3591  002FD2  0012               	return	
  3592  002FD4                     __end_of_update:
  3593                           	opt stack 0
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           prodh	equ	0xFF4
  3599                           prodl	equ	0xFF3
  3600                           intcon	equ	0xFF2
  3601                           intcon2	equ	0xFF1
  3602                           postinc0	equ	0xFEE
  3603                           wreg	equ	0xFE8
  3604                           postdec1	equ	0xFE5
  3605                           fsr1l	equ	0xFE1
  3606                           indf2	equ	0xFDF
  3607                           fsr2h	equ	0xFDA
  3608                           fsr2l	equ	0xFD9
  3609                           status	equ	0xFD8
  3610                           
  3611 ;; *************** function _writeDigit *****************
  3612 ;; Defined at:
  3613 ;;		line 109 in file "disp.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  digit           1   45[BANK1 ] unsigned char 
  3616 ;;  segs            1   46[BANK1 ] unsigned char 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  cnt             1   49[BANK1 ] char 
  3619 ;;  dig             1   48[BANK1 ] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;		None               void
  3622 ;; Registers used:
  3623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3629 ;;      Params:         0       0       2       0       0       0       0       0       0
  3630 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3631 ;;      Temps:          0       0       1       0       0       0       0       0       0
  3632 ;;      Totals:         0       0       5       0       0       0       0       0       0
  3633 ;;Total ram usage:        5 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:   15
  3636 ;; This function calls:
  3637 ;;		_spi
  3638 ;;		_log2
  3639 ;;		_rotate
  3640 ;; This function is called by:
  3641 ;;		_update
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text10
  3646  0066CA                     __ptext10:
  3647                           	opt stack 0
  3648  0066CA                     _writeDigit:
  3649                           	opt stack 14
  3650                           
  3651                           ;disp.c: 110: uint8_t dig = (uint8_t) log2(digit);
  3652                           
  3653                           ; BSR set to: 1
  3654                           ;incstack = 0
  3655                           ;incstack = 0
  3656  0066CA  0101               	movlb	1	; () banked
  3657  0066CC  0101               	movlb	1	; () banked
  3658  0066CE  512D               	movf	writeDigit@digit& (0+255),w,b
  3659  0066D0  0101               	movlb	1	; () banked
  3660  0066D2  0101               	movlb	1	; () banked
  3661  0066D4  6F1F               	movwf	?_log2& (0+255),b
  3662  0066D6  0101               	movlb	1	; () banked
  3663  0066D8  6B20               	clrf	(?_log2+1)& (0+255),b
  3664  0066DA  0101               	movlb	1	; () banked
  3665  0066DC  6B21               	clrf	(?_log2+2)& (0+255),b
  3666  0066DE  0101               	movlb	1	; () banked
  3667  0066E0  6B22               	clrf	(?_log2+3)& (0+255),b
  3668  0066E2  EC96  F034         	call	_log2	;wreg free
  3669  0066E6  0101               	movlb	1	; () banked
  3670  0066E8  0101               	movlb	1	; () banked
  3671  0066EA  511F               	movf	?_log2& (0+255),w,b
  3672  0066EC  0101               	movlb	1	; () banked
  3673  0066EE  0101               	movlb	1	; () banked
  3674  0066F0  6F30               	movwf	writeDigit@dig& (0+255),b
  3675                           
  3676                           ; BSR set to: 1
  3677                           ;disp.c: 111: screen.digits.screen[dig].bits = segs;
  3678  0066F2  0101               	movlb	1	; () banked
  3679  0066F4  0101               	movlb	1	; () banked
  3680  0066F6  5130               	movf	writeDigit@dig& (0+255),w,b
  3681  0066F8  0D01               	mullw	1
  3682  0066FA  0101               	movlb	1	; () banked
  3683  0066FC  0E6F               	movlw	low _screen
  3684  0066FE  24F3               	addwf	prodl,w,c
  3685  006700  6ED9               	movwf	fsr2l,c
  3686  006702  0101               	movlb	1	; () banked
  3687  006704  0E01               	movlw	high _screen
  3688  006706  20F4               	addwfc	prodh,w,c
  3689  006708  6EDA               	movwf	fsr2h,c
  3690  00670A  0101               	movlb	1	; () banked
  3691  00670C  C12E  FFDF         	movff	writeDigit@segs,indf2
  3692                           
  3693                           ; BSR set to: 1
  3694                           ;disp.c: 114: int8_t cnt;
  3695                           ;disp.c: 115: for (cnt = 7; cnt >= 0; cnt--)
  3696  006710  0101               	movlb	1	; () banked
  3697  006712  6F2F               	movwf	??_writeDigit& (0+255),b
  3698  006714  0E07               	movlw	7
  3699  006716  0101               	movlb	1	; () banked
  3700  006718  0101               	movlb	1	; () banked
  3701  00671A  6F31               	movwf	writeDigit@cnt& (0+255),b
  3702  00671C  0101               	movlb	1	; () banked
  3703  00671E  512F               	movf	??_writeDigit& (0+255),w,b
  3704  006720                     
  3705                           ; BSR set to: 1
  3706  006720  0101               	movlb	1	; () banked
  3707  006722  0101               	movlb	1	; () banked
  3708  006724  BF31               	btfsc	writeDigit@cnt& (0+255),7,b
  3709  006726  D013               	goto	l88
  3710                           
  3711                           ; BSR set to: 1
  3712                           ;disp.c: 116: {
  3713                           ;disp.c: 118: spi(cnt + 1, rotate(cnt));
  3714                           
  3715                           ; BSR set to: 1
  3716                           
  3717                           ; BSR set to: 1
  3718  006728  0101               	movlb	1	; () banked
  3719  00672A  0101               	movlb	1	; () banked
  3720  00672C  2931               	incf	writeDigit@cnt& (0+255),w,b
  3721  00672E  0101               	movlb	1	; () banked
  3722  006730  0101               	movlb	1	; () banked
  3723  006732  6F25               	movwf	?_spi& (0+255),b
  3724  006734  C131  F11F         	movff	writeDigit@cnt,?_rotate
  3725  006738  EC4C  F032         	call	_rotate	;wreg free
  3726  00673C  0101               	movlb	1	; () banked
  3727  00673E  0101               	movlb	1	; () banked
  3728  006740  6F26               	movwf	(?_spi+1)& (0+255),b
  3729  006742  ECA9  F02E         	call	_spi	;wreg free
  3730  006746  0101               	movlb	1	; () banked
  3731  006748  0101               	movlb	1	; () banked
  3732  00674A  0731               	decf	writeDigit@cnt& (0+255),f,b
  3733  00674C  D7E9               	goto	L3
  3734  00674E                     l88:
  3735                           
  3736                           ; BSR set to: 1
  3737  00674E  0012               	return	
  3738  006750                     __end_of_writeDigit:
  3739                           	opt stack 0
  3740                           tblptru	equ	0xFF8
  3741                           tblptrh	equ	0xFF7
  3742                           tblptrl	equ	0xFF6
  3743                           tablat	equ	0xFF5
  3744                           prodh	equ	0xFF4
  3745                           prodl	equ	0xFF3
  3746                           intcon	equ	0xFF2
  3747                           intcon2	equ	0xFF1
  3748                           postinc0	equ	0xFEE
  3749                           wreg	equ	0xFE8
  3750                           postdec1	equ	0xFE5
  3751                           fsr1l	equ	0xFE1
  3752                           indf2	equ	0xFDF
  3753                           fsr2h	equ	0xFDA
  3754                           fsr2l	equ	0xFD9
  3755                           status	equ	0xFD8
  3756                           
  3757 ;; *************** function _rotate *****************
  3758 ;; Defined at:
  3759 ;;		line 208 in file "disp.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  seg             1   31[BANK1 ] unsigned char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  cnt             1   36[BANK1 ] char 
  3764 ;;  ret             1   35[BANK1 ] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      unsigned char 
  3767 ;; Registers used:
  3768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3774 ;;      Params:         0       0       1       0       0       0       0       0       0
  3775 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3776 ;;      Temps:          0       0       3       0       0       0       0       0       0
  3777 ;;      Totals:         0       0       6       0       0       0       0       0       0
  3778 ;;Total ram usage:        6 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:   13
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_writeDigit
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text11
  3789  006498                     __ptext11:
  3790                           	opt stack 0
  3791  006498                     _rotate:
  3792                           	opt stack 15
  3793                           
  3794                           ;disp.c: 209: uint8_t ret = 0;
  3795                           
  3796                           ; BSR set to: 1
  3797                           ;incstack = 0
  3798                           ;incstack = 0
  3799  006498  0101               	movlb	1	; () banked
  3800  00649A  6F20               	movwf	??_rotate& (0+255),b
  3801  00649C  0E00               	movlw	0
  3802  00649E  0101               	movlb	1	; () banked
  3803  0064A0  0101               	movlb	1	; () banked
  3804  0064A2  6F23               	movwf	rotate@ret& (0+255),b
  3805  0064A4  0101               	movlb	1	; () banked
  3806  0064A6  5120               	movf	??_rotate& (0+255),w,b
  3807                           
  3808                           ;disp.c: 210: int8_t cnt;
  3809                           ;disp.c: 211: for (cnt = 7; cnt >= 0; cnt--)
  3810  0064A8  0101               	movlb	1	; () banked
  3811  0064AA  6F20               	movwf	??_rotate& (0+255),b
  3812  0064AC  0E07               	movlw	7
  3813  0064AE  0101               	movlb	1	; () banked
  3814  0064B0  0101               	movlb	1	; () banked
  3815  0064B2  6F24               	movwf	rotate@cnt& (0+255),b
  3816  0064B4  0101               	movlb	1	; () banked
  3817  0064B6  5120               	movf	??_rotate& (0+255),w,b
  3818  0064B8                     
  3819                           ; BSR set to: 1
  3820  0064B8  0101               	movlb	1	; () banked
  3821  0064BA  0101               	movlb	1	; () banked
  3822  0064BC  BF24               	btfsc	rotate@cnt& (0+255),7,b
  3823  0064BE  D031               	goto	l6551
  3824                           
  3825                           ; BSR set to: 1
  3826                           ;disp.c: 212: {
  3827                           ;disp.c: 213: ret |= ((screen.digits.screen[cnt].bits >> seg) & 1) << cnt;
  3828                           
  3829                           ; BSR set to: 1
  3830                           
  3831                           ; BSR set to: 1
  3832  0064C0  C124  F120         	movff	rotate@cnt,??_rotate
  3833  0064C4  C11F  F121         	movff	rotate@seg,??_rotate+1
  3834  0064C8  0101               	movlb	1	; () banked
  3835  0064CA  0101               	movlb	1	; () banked
  3836  0064CC  5124               	movf	rotate@cnt& (0+255),w,b
  3837  0064CE  0D01               	mullw	1
  3838  0064D0  0101               	movlb	1	; () banked
  3839  0064D2  0E6F               	movlw	low _screen
  3840  0064D4  24F3               	addwf	prodl,w,c
  3841  0064D6  6ED9               	movwf	fsr2l,c
  3842  0064D8  0101               	movlb	1	; () banked
  3843  0064DA  0E01               	movlw	high _screen
  3844  0064DC  20F4               	addwfc	prodh,w,c
  3845  0064DE  6EDA               	movwf	fsr2h,c
  3846  0064E0  50DF               	movf	indf2,w,c
  3847  0064E2  0101               	movlb	1	; () banked
  3848  0064E4  6F22               	movwf	(??_rotate+2)& (0+255),b
  3849  0064E6  0101               	movlb	1	; () banked
  3850  0064E8  2B21               	incf	(??_rotate+1)& (0+255),f,b
  3851  0064EA  D003               	goto	u4024
  3852  0064EC                     u4025:
  3853  0064EC  0101               	movlb	1	; () banked
  3854  0064EE  90D8               	bcf	status,0,c
  3855  0064F0  3322               	rrcf	(??_rotate+2)& (0+255),f,b
  3856  0064F2                     u4024:
  3857  0064F2  0101               	movlb	1	; () banked
  3858  0064F4  2F21               	decfsz	(??_rotate+1)& (0+255),f,b
  3859  0064F6  D7FA               	goto	u4025
  3860  0064F8  0E01               	movlw	1
  3861  0064FA  0101               	movlb	1	; () banked
  3862  0064FC  1722               	andwf	(??_rotate+2)& (0+255),f,b
  3863  0064FE  0101               	movlb	1	; () banked
  3864  006500  2B20               	incf	??_rotate& (0+255),f,b
  3865  006502  D003               	goto	u4034
  3866  006504                     u4035:
  3867  006504  0101               	movlb	1	; () banked
  3868  006506  90D8               	bcf	status,0,c
  3869  006508  3722               	rlcf	(??_rotate+2)& (0+255),f,b
  3870  00650A                     u4034:
  3871  00650A  0101               	movlb	1	; () banked
  3872  00650C  2F20               	decfsz	??_rotate& (0+255),f,b
  3873  00650E  D7FA               	goto	u4035
  3874  006510  0101               	movlb	1	; () banked
  3875  006512  5122               	movf	(??_rotate+2)& (0+255),w,b
  3876  006514  0101               	movlb	1	; () banked
  3877  006516  0101               	movlb	1	; () banked
  3878  006518  1323               	iorwf	rotate@ret& (0+255),f,b
  3879                           
  3880                           ; BSR set to: 1
  3881  00651A  0101               	movlb	1	; () banked
  3882  00651C  0101               	movlb	1	; () banked
  3883  00651E  0724               	decf	rotate@cnt& (0+255),f,b
  3884  006520  D7CB               	goto	L4
  3885  006522                     l6551:
  3886                           
  3887                           ; BSR set to: 1
  3888                           ;disp.c: 214: }
  3889                           ;disp.c: 215: return ret;
  3890  006522  0101               	movlb	1	; () banked
  3891  006524  0101               	movlb	1	; () banked
  3892  006526  5123               	movf	rotate@ret& (0+255),w,b
  3893                           
  3894                           ; BSR set to: 1
  3895                           
  3896                           ; BSR set to: 1
  3897  006528  0012               	return	
  3898  00652A                     __end_of_rotate:
  3899                           	opt stack 0
  3900                           tblptru	equ	0xFF8
  3901                           tblptrh	equ	0xFF7
  3902                           tblptrl	equ	0xFF6
  3903                           tablat	equ	0xFF5
  3904                           prodh	equ	0xFF4
  3905                           prodl	equ	0xFF3
  3906                           intcon	equ	0xFF2
  3907                           intcon2	equ	0xFF1
  3908                           postinc0	equ	0xFEE
  3909                           wreg	equ	0xFE8
  3910                           postdec1	equ	0xFE5
  3911                           fsr1l	equ	0xFE1
  3912                           indf2	equ	0xFDF
  3913                           fsr2h	equ	0xFDA
  3914                           fsr2l	equ	0xFD9
  3915                           status	equ	0xFD8
  3916                           
  3917 ;; *************** function _log2 *****************
  3918 ;; Defined at:
  3919 ;;		line 48 in file "defs.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  num             4   31[BANK1 ] unsigned long 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  log2Val         4   35[BANK1 ] unsigned long 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  4   31[BANK1 ] unsigned long 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3933 ;;      Params:         0       0       4       0       0       0       0       0       0
  3934 ;;      Locals:         0       0       4       0       0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3936 ;;      Totals:         0       0       8       0       0       0       0       0       0
  3937 ;;Total ram usage:        8 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:   13
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_writeDigit
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text12
  3948  00692C                     __ptext12:
  3949                           	opt stack 0
  3950  00692C                     _log2:
  3951                           	opt stack 15
  3952                           
  3953                           ;defs.c: 49: uint32_t log2Val = 0;
  3954                           
  3955                           ; BSR set to: 1
  3956                           ;incstack = 0
  3957                           ;incstack = 0
  3958  00692C  0E00               	movlw	0
  3959  00692E  0101               	movlb	1	; () banked
  3960  006930  0101               	movlb	1	; () banked
  3961  006932  6F23               	movwf	log2@log2Val& (0+255),b
  3962  006934  0E00               	movlw	0
  3963  006936  0101               	movlb	1	; () banked
  3964  006938  6F24               	movwf	(log2@log2Val+1)& (0+255),b
  3965  00693A  0E00               	movlw	0
  3966  00693C  0101               	movlb	1	; () banked
  3967  00693E  6F25               	movwf	(log2@log2Val+2)& (0+255),b
  3968  006940  0E00               	movlw	0
  3969  006942  0101               	movlb	1	; () banked
  3970  006944  6F26               	movwf	(log2@log2Val+3)& (0+255),b
  3971                           
  3972                           ;defs.c: 50: while (num >>= 1) log2Val++;
  3973  006946  D00D               	goto	l508
  3974  006948                     l6537:
  3975                           
  3976                           ; BSR set to: 1
  3977  006948  0E01               	movlw	1
  3978  00694A  0101               	movlb	1	; () banked
  3979  00694C  0101               	movlb	1	; () banked
  3980  00694E  2723               	addwf	log2@log2Val& (0+255),f,b
  3981  006950  0E00               	movlw	0
  3982  006952  0101               	movlb	1	; () banked
  3983  006954  2324               	addwfc	(log2@log2Val+1)& (0+255),f,b
  3984  006956  0E00               	movlw	0
  3985  006958  0101               	movlb	1	; () banked
  3986  00695A  2325               	addwfc	(log2@log2Val+2)& (0+255),f,b
  3987  00695C  0E00               	movlw	0
  3988  00695E  0101               	movlb	1	; () banked
  3989  006960  2326               	addwfc	(log2@log2Val+3)& (0+255),f,b
  3990  006962                     l508:
  3991                           
  3992                           ; BSR set to: 1
  3993  006962  0101               	movlb	1	; () banked
  3994  006964  90D8               	bcf	status,0,c
  3995  006966  0101               	movlb	1	; () banked
  3996  006968  3322               	rrcf	(log2@num+3)& (0+255),f,b
  3997  00696A  0101               	movlb	1	; () banked
  3998  00696C  3321               	rrcf	(log2@num+2)& (0+255),f,b
  3999  00696E  0101               	movlb	1	; () banked
  4000  006970  3320               	rrcf	(log2@num+1)& (0+255),f,b
  4001  006972  0101               	movlb	1	; () banked
  4002  006974  331F               	rrcf	log2@num& (0+255),f,b
  4003  006976  0101               	movlb	1	; () banked
  4004  006978  5122               	movf	(log2@num+3)& (0+255),w,b
  4005  00697A  111F               	iorwf	log2@num& (0+255),w,b
  4006  00697C  1120               	iorwf	(log2@num+1)& (0+255),w,b
  4007  00697E  1121               	iorwf	(log2@num+2)& (0+255),w,b
  4008  006980  A4D8               	btfss	status,2,c
  4009  006982  D7E2               	goto	l6537
  4010                           
  4011                           ; BSR set to: 1
  4012                           ;defs.c: 51: return log2Val;
  4013  006984  C123  F11F         	movff	log2@log2Val,?_log2
  4014  006988  C124  F120         	movff	log2@log2Val+1,?_log2+1
  4015  00698C  C125  F121         	movff	log2@log2Val+2,?_log2+2
  4016  006990  C126  F122         	movff	log2@log2Val+3,?_log2+3
  4017                           
  4018                           ; BSR set to: 1
  4019  006994  0012               	return	
  4020  006996                     __end_of_log2:
  4021                           	opt stack 0
  4022                           tblptru	equ	0xFF8
  4023                           tblptrh	equ	0xFF7
  4024                           tblptrl	equ	0xFF6
  4025                           tablat	equ	0xFF5
  4026                           prodh	equ	0xFF4
  4027                           prodl	equ	0xFF3
  4028                           intcon	equ	0xFF2
  4029                           intcon2	equ	0xFF1
  4030                           postinc0	equ	0xFEE
  4031                           wreg	equ	0xFE8
  4032                           postdec1	equ	0xFE5
  4033                           fsr1l	equ	0xFE1
  4034                           indf2	equ	0xFDF
  4035                           fsr2h	equ	0xFDA
  4036                           fsr2l	equ	0xFD9
  4037                           status	equ	0xFD8
  4038                           
  4039 ;; *************** function _spi *****************
  4040 ;; Defined at:
  4041 ;;		line 87 in file "disp.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;  addr            1   37[BANK1 ] unsigned char 
  4044 ;;  data            1   38[BANK1 ] unsigned char 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;  send            2   42[BANK1 ] unsigned int 
  4047 ;;  cnt             1   44[BANK1 ] char 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;		None               void
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4057 ;;      Params:         0       0       2       0       0       0       0       0       0
  4058 ;;      Locals:         0       0       3       0       0       0       0       0       0
  4059 ;;      Temps:          0       0       3       0       0       0       0       0       0
  4060 ;;      Totals:         0       0       8       0       0       0       0       0       0
  4061 ;;Total ram usage:        8 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:   14
  4064 ;; This function calls:
  4065 ;;		_wait
  4066 ;; This function is called by:
  4067 ;;		_update
  4068 ;;		_writeDigit
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text13
  4073  005D52                     __ptext13:
  4074                           	opt stack 0
  4075  005D52                     _spi:
  4076                           	opt stack 15
  4077                           
  4078                           ;disp.c: 88: uint16_t send = (addr << 8) | data;
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;incstack = 0
  4082                           ;incstack = 0
  4083  005D52  0101               	movlb	1	; () banked
  4084  005D54  0101               	movlb	1	; () banked
  4085  005D56  5126               	movf	spi@data& (0+255),w,b
  4086  005D58  0101               	movlb	1	; () banked
  4087  005D5A  C125  F127         	movff	spi@addr,??_spi
  4088  005D5E  0101               	movlb	1	; () banked
  4089  005D60  6B28               	clrf	(??_spi+1)& (0+255),b
  4090  005D62  C127  F128         	movff	??_spi,??_spi+1
  4091  005D66  0101               	movlb	1	; () banked
  4092  005D68  6B27               	clrf	??_spi& (0+255),b
  4093  005D6A  0101               	movlb	1	; () banked
  4094  005D6C  1127               	iorwf	??_spi& (0+255),w,b
  4095  005D6E  0101               	movlb	1	; () banked
  4096  005D70  0101               	movlb	1	; () banked
  4097  005D72  6F2A               	movwf	spi@send& (0+255),b
  4098  005D74  0101               	movlb	1	; () banked
  4099  005D76  5128               	movf	(??_spi+1)& (0+255),w,b
  4100  005D78  0101               	movlb	1	; () banked
  4101  005D7A  6F2B               	movwf	(spi@send+1)& (0+255),b
  4102                           
  4103                           ; BSR set to: 1
  4104                           ;disp.c: 89: LATA4 = 0;
  4105  005D7C  9889               	bcf	3977,4,c	;volatile
  4106                           
  4107                           ; BSR set to: 1
  4108                           ;disp.c: 90: LATA1 = 0;
  4109  005D7E  9289               	bcf	3977,1,c	;volatile
  4110                           
  4111                           ; BSR set to: 1
  4112                           ;disp.c: 91: LATA3 = 0;
  4113  005D80  9689               	bcf	3977,3,c	;volatile
  4114                           
  4115                           ; BSR set to: 1
  4116                           ;disp.c: 92: int8_t cnt;
  4117                           ;disp.c: 93: for (cnt = 15; cnt >= 0; cnt--)
  4118  005D82  0101               	movlb	1	; () banked
  4119  005D84  6F27               	movwf	??_spi& (0+255),b
  4120  005D86  0E0F               	movlw	15
  4121  005D88  0101               	movlb	1	; () banked
  4122  005D8A  0101               	movlb	1	; () banked
  4123  005D8C  6F2C               	movwf	spi@cnt& (0+255),b
  4124  005D8E  0101               	movlb	1	; () banked
  4125  005D90  5127               	movf	??_spi& (0+255),w,b
  4126  005D92                     
  4127                           ; BSR set to: 1
  4128  005D92  0101               	movlb	1	; () banked
  4129  005D94  0101               	movlb	1	; () banked
  4130  005D96  BF2C               	btfsc	spi@cnt& (0+255),7,b
  4131  005D98  D041               	goto	l82
  4132                           
  4133                           ; BSR set to: 1
  4134                           ;disp.c: 94: {
  4135                           ;disp.c: 95: LATA1 = 0x1 & (send >> cnt);
  4136                           
  4137                           ; BSR set to: 1
  4138                           
  4139                           ; BSR set to: 1
  4140  005D9A  C12C  F127         	movff	spi@cnt,??_spi
  4141  005D9E  0101               	movlb	1	; () banked
  4142  005DA0  C12A  F128         	movff	spi@send,??_spi+1
  4143  005DA4  0101               	movlb	1	; () banked
  4144  005DA6  C12B  F129         	movff	spi@send+1,??_spi+2
  4145  005DAA  0101               	movlb	1	; () banked
  4146  005DAC  2B27               	incf	??_spi& (0+255),f,b
  4147  005DAE  D004               	goto	u3954
  4148  005DB0                     u3955:
  4149  005DB0  0101               	movlb	1	; () banked
  4150  005DB2  90D8               	bcf	status,0,c
  4151  005DB4  3329               	rrcf	(??_spi+2)& (0+255),f,b
  4152  005DB6  3328               	rrcf	(??_spi+1)& (0+255),f,b
  4153  005DB8                     u3954:
  4154  005DB8  0101               	movlb	1	; () banked
  4155  005DBA  2F27               	decfsz	??_spi& (0+255),f,b
  4156  005DBC  D7F9               	goto	u3955
  4157  005DBE  0101               	movlb	1	; () banked
  4158  005DC0  3128               	rrcf	(??_spi+1)& (0+255),w,b
  4159  005DC2  0101               	movlb	1	; () banked
  4160  005DC4  A0D8               	btfss	status,0,c
  4161  005DC6  D001               	bra	u3965
  4162  005DC8  8289               	bsf	3977,1,c	;volatile
  4163  005DCA                     u3965:
  4164  005DCA  0101               	movlb	1	; () banked
  4165  005DCC  B0D8               	btfsc	status,0,c
  4166  005DCE  D001               	bra	u3966
  4167  005DD0  9289               	bcf	3977,1,c	;volatile
  4168  005DD2                     u3966:
  4169                           
  4170                           ; BSR set to: 1
  4171                           ;disp.c: 96: wait(0);
  4172  005DD2  0E00               	movlw	0
  4173  005DD4  0101               	movlb	1	; () banked
  4174  005DD6  0101               	movlb	1	; () banked
  4175  005DD8  6F1F               	movwf	?_wait& (0+255),b
  4176  005DDA  0E00               	movlw	0
  4177  005DDC  0101               	movlb	1	; () banked
  4178  005DDE  6F20               	movwf	(?_wait+1)& (0+255),b
  4179  005DE0  0E00               	movlw	0
  4180  005DE2  0101               	movlb	1	; () banked
  4181  005DE4  6F21               	movwf	(?_wait+2)& (0+255),b
  4182  005DE6  0E00               	movlw	0
  4183  005DE8  0101               	movlb	1	; () banked
  4184  005DEA  6F22               	movwf	(?_wait+3)& (0+255),b
  4185  005DEC  EC9C  F037         	call	_wait	;wreg free
  4186                           
  4187                           ;disp.c: 97: LATA3 = 1;
  4188  005DF0  8689               	bsf	3977,3,c	;volatile
  4189                           
  4190                           ;disp.c: 98: wait(0);
  4191  005DF2  0E00               	movlw	0
  4192  005DF4  0101               	movlb	1	; () banked
  4193  005DF6  0101               	movlb	1	; () banked
  4194  005DF8  6F1F               	movwf	?_wait& (0+255),b
  4195  005DFA  0E00               	movlw	0
  4196  005DFC  0101               	movlb	1	; () banked
  4197  005DFE  6F20               	movwf	(?_wait+1)& (0+255),b
  4198  005E00  0E00               	movlw	0
  4199  005E02  0101               	movlb	1	; () banked
  4200  005E04  6F21               	movwf	(?_wait+2)& (0+255),b
  4201  005E06  0E00               	movlw	0
  4202  005E08  0101               	movlb	1	; () banked
  4203  005E0A  6F22               	movwf	(?_wait+3)& (0+255),b
  4204  005E0C  EC9C  F037         	call	_wait	;wreg free
  4205                           
  4206                           ;disp.c: 99: LATA3 = 0;
  4207  005E10  9689               	bcf	3977,3,c	;volatile
  4208                           
  4209                           ;disp.c: 100: LATA1 = 0;
  4210  005E12  9289               	bcf	3977,1,c	;volatile
  4211  005E14  0101               	movlb	1	; () banked
  4212  005E16  0101               	movlb	1	; () banked
  4213  005E18  072C               	decf	spi@cnt& (0+255),f,b
  4214  005E1A  D7BB               	goto	L5
  4215  005E1C                     l82:
  4216                           
  4217                           ; BSR set to: 1
  4218                           ;disp.c: 101: }
  4219                           ;disp.c: 102: LATA4 = 1;
  4220  005E1C  8889               	bsf	3977,4,c	;volatile
  4221                           
  4222                           ;disp.c: 103: LATA3 = 0;
  4223  005E1E  9689               	bcf	3977,3,c	;volatile
  4224                           
  4225                           ;disp.c: 104: LATA1 = 0;
  4226  005E20  9289               	bcf	3977,1,c	;volatile
  4227                           
  4228                           ; BSR set to: 1
  4229                           ;disp.c: 105: wait(0);
  4230  005E22  0E00               	movlw	0
  4231  005E24  0101               	movlb	1	; () banked
  4232  005E26  0101               	movlb	1	; () banked
  4233  005E28  6F1F               	movwf	?_wait& (0+255),b
  4234  005E2A  0E00               	movlw	0
  4235  005E2C  0101               	movlb	1	; () banked
  4236  005E2E  6F20               	movwf	(?_wait+1)& (0+255),b
  4237  005E30  0E00               	movlw	0
  4238  005E32  0101               	movlb	1	; () banked
  4239  005E34  6F21               	movwf	(?_wait+2)& (0+255),b
  4240  005E36  0E00               	movlw	0
  4241  005E38  0101               	movlb	1	; () banked
  4242  005E3A  6F22               	movwf	(?_wait+3)& (0+255),b
  4243  005E3C  EC9C  F037         	call	_wait	;wreg free
  4244  005E40  0012               	return	
  4245  005E42                     __end_of_spi:
  4246                           	opt stack 0
  4247                           tblptru	equ	0xFF8
  4248                           tblptrh	equ	0xFF7
  4249                           tblptrl	equ	0xFF6
  4250                           tablat	equ	0xFF5
  4251                           prodh	equ	0xFF4
  4252                           prodl	equ	0xFF3
  4253                           intcon	equ	0xFF2
  4254                           intcon2	equ	0xFF1
  4255                           postinc0	equ	0xFEE
  4256                           wreg	equ	0xFE8
  4257                           postdec1	equ	0xFE5
  4258                           fsr1l	equ	0xFE1
  4259                           indf2	equ	0xFDF
  4260                           fsr2h	equ	0xFDA
  4261                           fsr2l	equ	0xFD9
  4262                           status	equ	0xFD8
  4263                           
  4264 ;; *************** function _wait *****************
  4265 ;; Defined at:
  4266 ;;		line 4 in file "defs.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  count           4   31[BANK1 ] unsigned long 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;		None               void
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4280 ;;      Params:         0       0       4       0       0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4283 ;;      Totals:         0       0       4       0       0       0       0       0       0
  4284 ;;Total ram usage:        4 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:   13
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_spi
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text14
  4295  006F38                     __ptext14:
  4296                           	opt stack 0
  4297  006F38                     _wait:
  4298                           	opt stack 15
  4299  006F38                     l6533:
  4300  006F38  0101               	movlb	1	; () banked
  4301  006F3A  0101               	movlb	1	; () banked
  4302  006F3C  071F               	decf	wait@count& (0+255),f,b
  4303  006F3E  0E00               	movlw	0
  4304  006F40  0101               	movlb	1	; () banked
  4305  006F42  5B20               	subwfb	(wait@count+1)& (0+255),f,b
  4306  006F44  0101               	movlb	1	; () banked
  4307  006F46  5B21               	subwfb	(wait@count+2)& (0+255),f,b
  4308  006F48  0101               	movlb	1	; () banked
  4309  006F4A  5B22               	subwfb	(wait@count+3)& (0+255),f,b
  4310  006F4C  0101               	movlb	1	; () banked
  4311  006F4E  291F               	incf	wait@count& (0+255),w,b
  4312  006F50  B4D8               	btfsc	status,2,c
  4313  006F52  2920               	incf	(wait@count+1)& (0+255),w,b
  4314  006F54  B4D8               	btfsc	status,2,c
  4315  006F56  2921               	incf	(wait@count+2)& (0+255),w,b
  4316  006F58  B4D8               	btfsc	status,2,c
  4317  006F5A  2922               	incf	(wait@count+3)& (0+255),w,b
  4318  006F5C  B4D8               	btfsc	status,2,c
  4319                           
  4320                           ; BSR set to: 1
  4321                           
  4322                           ; BSR set to: 1
  4323  006F5E  0012               	return	
  4324  006F60  D7EB               	goto	l6533
  4325  006F62                     __end_of_wait:
  4326                           	opt stack 0
  4327                           tblptru	equ	0xFF8
  4328                           tblptrh	equ	0xFF7
  4329                           tblptrl	equ	0xFF6
  4330                           tablat	equ	0xFF5
  4331                           prodh	equ	0xFF4
  4332                           prodl	equ	0xFF3
  4333                           intcon	equ	0xFF2
  4334                           intcon2	equ	0xFF1
  4335                           postinc0	equ	0xFEE
  4336                           wreg	equ	0xFE8
  4337                           postdec1	equ	0xFE5
  4338                           fsr1l	equ	0xFE1
  4339                           indf2	equ	0xFDF
  4340                           fsr2h	equ	0xFDA
  4341                           fsr2l	equ	0xFD9
  4342                           status	equ	0xFD8
  4343                           
  4344 ;; *************** function _low_isr *****************
  4345 ;; Defined at:
  4346 ;;		line 125 in file "temp-clock_main.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;		None
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;		None               void
  4353 ;; Registers used:
  4354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4360 ;;      Params:         0       0       0       0       0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4362 ;;      Temps:         17       0       0       0       0       0       0       0       0
  4363 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4364 ;;Total ram usage:       17 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; Hardware stack levels required when called:   12
  4367 ;; This function calls:
  4368 ;;		_buttons
  4369 ;; This function is called by:
  4370 ;;		Interrupt level 1
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	intcodelo
  4375  000018                     __pintcodelo:
  4376                           	opt stack 0
  4377  000018                     _low_isr:
  4378                           	opt stack 14
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;incstack = 0
  4382  000018  CFD8 F022          	movff	status,??_low_isr
  4383  00001C  CFE8 F023          	movff	wreg,??_low_isr+1
  4384  000020  CFE0 F024          	movff	bsr,??_low_isr+2
  4385  000024  CFFA F025          	movff	pclath,??_low_isr+3
  4386  000028  CFFB F026          	movff	pclatu,??_low_isr+4
  4387  00002C  CFE9 F027          	movff	fsr0l,??_low_isr+5
  4388  000030  CFEA F028          	movff	fsr0h,??_low_isr+6
  4389  000034  CFE1 F029          	movff	fsr1l,??_low_isr+7
  4390  000038  CFE2 F02A          	movff	fsr1h,??_low_isr+8
  4391  00003C  CFD9 F02B          	movff	fsr2l,??_low_isr+9
  4392  000040  CFDA F02C          	movff	fsr2h,??_low_isr+10
  4393  000044  CFF3 F02D          	movff	prodl,??_low_isr+11
  4394  000048  CFF4 F02E          	movff	prodh,??_low_isr+12
  4395  00004C  CFF6 F02F          	movff	tblptrl,??_low_isr+13
  4396  000050  CFF7 F030          	movff	tblptrh,??_low_isr+14
  4397  000054  CFF8 F031          	movff	tblptru,??_low_isr+15
  4398  000058  CFF5 F032          	movff	tablat,??_low_isr+16
  4399  00005C                     
  4400                           ;temp-clock_main.c: 126: if (TMR0IE && TMR0IF)
  4401  00005C  AAF2               	btfss	intcon,5,c	;volatile
  4402  00005E  D001               	goto	i1u740_21
  4403  000060  D001               	goto	i1u740_20
  4404  000062                     i1u740_21:
  4405  000062  D036               	goto	i1l8507
  4406  000064                     i1u740_20:
  4407  000064  A4F2               	btfss	intcon,2,c	;volatile
  4408  000066  D001               	goto	i1u741_21
  4409  000068  D001               	goto	i1u741_20
  4410  00006A                     i1u741_21:
  4411  00006A  D032               	goto	i1l8507
  4412  00006C                     i1u741_20:
  4413  00006C                     
  4414                           ;temp-clock_main.c: 127: {
  4415                           ;temp-clock_main.c: 128: TMR0IF = CLEAR;
  4416  00006C  94F2               	bcf	intcon,2,c	;volatile
  4417                           
  4418                           ;temp-clock_main.c: 129: TMR0ON = 0;
  4419  00006E  9ED5               	bcf	4053,7,c	;volatile
  4420  000070                     
  4421                           ;temp-clock_main.c: 130: TMR0 = 0;
  4422  000070  0E00               	movlw	0
  4423  000072  6ED7               	movwf	4055,c	;volatile
  4424  000074  0E00               	movlw	0
  4425  000076  6ED6               	movwf	4054,c	;volatile
  4426  000078                     
  4427                           ;temp-clock_main.c: 131: if (++tmr0BigCounts > (0))
  4428  000078  0E01               	movlw	1
  4429  00007A  0101               	movlb	1	; () banked
  4430  00007C  0101               	movlb	1	; () banked
  4431  00007E  276B               	addwf	_tmr0BigCounts& (0+255),f,b
  4432  000080  0E00               	movlw	0
  4433  000082  0101               	movlb	1	; () banked
  4434  000084  236C               	addwfc	(_tmr0BigCounts+1)& (0+255),f,b
  4435  000086  0E00               	movlw	0
  4436  000088  0101               	movlb	1	; () banked
  4437  00008A  236D               	addwfc	(_tmr0BigCounts+2)& (0+255),f,b
  4438  00008C  0E00               	movlw	0
  4439  00008E  0101               	movlb	1	; () banked
  4440  000090  236E               	addwfc	(_tmr0BigCounts+3)& (0+255),f,b
  4441  000092  0101               	movlb	1	; () banked
  4442  000094  516E               	movf	(_tmr0BigCounts+3)& (0+255),w,b
  4443  000096  116B               	iorwf	_tmr0BigCounts& (0+255),w,b
  4444  000098  116C               	iorwf	(_tmr0BigCounts+1)& (0+255),w,b
  4445  00009A  116D               	iorwf	(_tmr0BigCounts+2)& (0+255),w,b
  4446  00009C  B4D8               	btfsc	status,2,c
  4447  00009E  D001               	goto	i1u742_21
  4448  0000A0  D001               	goto	i1u742_20
  4449  0000A2                     i1u742_21:
  4450  0000A2  D016               	goto	i1l8507
  4451  0000A4                     i1u742_20:
  4452  0000A4                     
  4453                           ; BSR set to: 1
  4454                           ;temp-clock_main.c: 132: {
  4455                           ;temp-clock_main.c: 133: tmr0BigCounts = 0;
  4456  0000A4  0E00               	movlw	0
  4457  0000A6  0101               	movlb	1	; () banked
  4458  0000A8  0101               	movlb	1	; () banked
  4459  0000AA  6F6B               	movwf	_tmr0BigCounts& (0+255),b
  4460  0000AC  0E00               	movlw	0
  4461  0000AE  0101               	movlb	1	; () banked
  4462  0000B0  6F6C               	movwf	(_tmr0BigCounts+1)& (0+255),b
  4463  0000B2  0E00               	movlw	0
  4464  0000B4  0101               	movlb	1	; () banked
  4465  0000B6  6F6D               	movwf	(_tmr0BigCounts+2)& (0+255),b
  4466  0000B8  0E00               	movlw	0
  4467  0000BA  0101               	movlb	1	; () banked
  4468  0000BC  6F6E               	movwf	(_tmr0BigCounts+3)& (0+255),b
  4469                           
  4470                           ;temp-clock_main.c: 134: TMR0 = (65536-32767);
  4471  0000BE  0E80               	movlw	128
  4472  0000C0  6ED7               	movwf	4055,c	;volatile
  4473  0000C2  0E01               	movlw	1
  4474  0000C4  6ED6               	movwf	4054,c	;volatile
  4475  0000C6                     
  4476                           ; BSR set to: 1
  4477                           ;temp-clock_main.c: 135: TMR0ON = 1;
  4478  0000C6  8ED5               	bsf	4053,7,c	;volatile
  4479  0000C8                     
  4480                           ; BSR set to: 1
  4481                           ;temp-clock_main.c: 137: buttons();
  4482  0000C8  ECEA  F017         	call	_buttons	;wreg free
  4483  0000CC  D001               	goto	i1l8507
  4484  0000CE  D000               	goto	i1l8507
  4485  0000D0                     i1l8507:
  4486                           
  4487                           ;temp-clock_main.c: 138: }
  4488                           ;temp-clock_main.c: 139: }
  4489                           ;temp-clock_main.c: 140: GIEL = 1;
  4490  0000D0  8CF2               	bsf	intcon,6,c	;volatile
  4491  0000D2  C032  FFF5         	movff	??_low_isr+16,tablat
  4492  0000D6  C031  FFF8         	movff	??_low_isr+15,tblptru
  4493  0000DA  C030  FFF7         	movff	??_low_isr+14,tblptrh
  4494  0000DE  C02F  FFF6         	movff	??_low_isr+13,tblptrl
  4495  0000E2  C02E  FFF4         	movff	??_low_isr+12,prodh
  4496  0000E6  C02D  FFF3         	movff	??_low_isr+11,prodl
  4497  0000EA  C02C  FFDA         	movff	??_low_isr+10,fsr2h
  4498  0000EE  C02B  FFD9         	movff	??_low_isr+9,fsr2l
  4499  0000F2  C02A  FFE2         	movff	??_low_isr+8,fsr1h
  4500  0000F6  C029  FFE1         	movff	??_low_isr+7,fsr1l
  4501  0000FA  C028  FFEA         	movff	??_low_isr+6,fsr0h
  4502  0000FE  C027  FFE9         	movff	??_low_isr+5,fsr0l
  4503  000102  C026  FFFB         	movff	??_low_isr+4,pclatu
  4504  000106  C025  FFFA         	movff	??_low_isr+3,pclath
  4505  00010A  C024  FFE0         	movff	??_low_isr+2,bsr
  4506  00010E  C023  FFE8         	movff	??_low_isr+1,wreg
  4507  000112  C022  FFD8         	movff	??_low_isr,status
  4508  000116  0010               	retfie	
  4509  000118                     __end_of_low_isr:
  4510                           	opt stack 0
  4511                           pclatu	equ	0xFFB
  4512                           pclath	equ	0xFFA
  4513                           tblptru	equ	0xFF8
  4514                           tblptrh	equ	0xFF7
  4515                           tblptrl	equ	0xFF6
  4516                           tablat	equ	0xFF5
  4517                           prodh	equ	0xFF4
  4518                           prodl	equ	0xFF3
  4519                           intcon	equ	0xFF2
  4520                           intcon2	equ	0xFF1
  4521                           postinc0	equ	0xFEE
  4522                           fsr0h	equ	0xFEA
  4523                           fsr0l	equ	0xFE9
  4524                           wreg	equ	0xFE8
  4525                           postdec1	equ	0xFE5
  4526                           fsr1h	equ	0xFE2
  4527                           fsr1l	equ	0xFE1
  4528                           bsr	equ	0xFE0
  4529                           indf2	equ	0xFDF
  4530                           fsr2h	equ	0xFDA
  4531                           fsr2l	equ	0xFD9
  4532                           status	equ	0xFD8
  4533                           
  4534 ;; *************** function _buttons *****************
  4535 ;; Defined at:
  4536 ;;		line 32 in file "buttons.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;		None               void
  4543 ;; Registers used:
  4544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4550 ;;      Params:         0       0       0       0       0       0       0       0       0
  4551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4552 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4553 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4554 ;;Total ram usage:        8 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:   11
  4557 ;; This function calls:
  4558 ;;		_advState
  4559 ;;		_advMenu
  4560 ;;		i1_update
  4561 ;; This function is called by:
  4562 ;;		_low_isr
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           	psect	text16
  4567  002FD4                     __ptext16:
  4568                           	opt stack 0
  4569  002FD4                     _buttons:
  4570                           	opt stack 14
  4571                           
  4572                           ;buttons.c: 33: waitcnt++;
  4573                           
  4574                           ;incstack = 0
  4575                           ;incstack = 0
  4576  002FD4  0E01               	movlw	1
  4577  002FD6  2653               	addwf	_waitcnt,f,c
  4578  002FD8  0E00               	movlw	0
  4579  002FDA  2254               	addwfc	_waitcnt+1,f,c
  4580  002FDC  0E00               	movlw	0
  4581  002FDE  2255               	addwfc	_waitcnt+2,f,c
  4582  002FE0  0E00               	movlw	0
  4583  002FE2  2256               	addwfc	_waitcnt+3,f,c
  4584                           
  4585                           ;buttons.c: 35: LATC2 = 0;
  4586  002FE4  948B               	bcf	3979,2,c	;volatile
  4587                           
  4588                           ;buttons.c: 36: if ((( PORTB) & 0b1) && ((int32_t) (waitCnt[0] - waitcnt) <= 0))
  4589  002FE6  A081               	btfss	3969,0,c	;volatile
  4590  002FE8  D041               	goto	i1l8429
  4591  002FEA  C053  F01A         	movff	_waitcnt,??_buttons
  4592  002FEE  C054  F01B         	movff	_waitcnt+1,??_buttons+1
  4593  002FF2  C055  F01C         	movff	_waitcnt+2,??_buttons+2
  4594  002FF6  C056  F01D         	movff	_waitcnt+3,??_buttons+3
  4595  002FFA  1E1A               	comf	??_buttons,f,c
  4596  002FFC  1E1B               	comf	??_buttons+1,f,c
  4597  002FFE  1E1C               	comf	??_buttons+2,f,c
  4598  003000  1E1D               	comf	??_buttons+3,f,c
  4599  003002  2A1A               	incf	??_buttons,f,c
  4600  003004  0E00               	movlw	0
  4601  003006  221B               	addwfc	??_buttons+1,f,c
  4602  003008  221C               	addwfc	??_buttons+2,f,c
  4603  00300A  221D               	addwfc	??_buttons+3,f,c
  4604  00300C  5033               	movf	_waitCnt,w,c
  4605  00300E  241A               	addwf	??_buttons,w,c
  4606  003010  6E1E               	movwf	(??_buttons+4)& (0+255),c
  4607  003012  5034               	movf	_waitCnt+1,w,c
  4608  003014  201B               	addwfc	??_buttons+1,w,c
  4609  003016  6E1F               	movwf	(??_buttons+5)& (0+255),c
  4610  003018  5035               	movf	_waitCnt+2,w,c
  4611  00301A  201C               	addwfc	??_buttons+2,w,c
  4612  00301C  6E20               	movwf	(??_buttons+6)& (0+255),c
  4613  00301E  5036               	movf	_waitCnt+3,w,c
  4614  003020  201D               	addwfc	??_buttons+3,w,c
  4615  003022  6E21               	movwf	(??_buttons+7)& (0+255),c
  4616  003024  5021               	movf	??_buttons+7,w,c
  4617  003026  0A80               	xorlw	128
  4618  003028  0F80               	addlw	128
  4619  00302A  E108               	bnz	i1u722_25
  4620  00302C  0E00               	movlw	0
  4621  00302E  5C20               	subwf	??_buttons+6,w,c
  4622  003030  E105               	bnz	i1u722_25
  4623  003032  0E00               	movlw	0
  4624  003034  5C1F               	subwf	??_buttons+5,w,c
  4625  003036  E102               	bnz	i1u722_25
  4626  003038  0E01               	movlw	1
  4627  00303A  5C1E               	subwf	??_buttons+4,w,c
  4628  00303C                     i1u722_25:
  4629  00303C  B0D8               	btfsc	status,0,c
  4630  00303E  D016               	goto	i1l8429
  4631                           
  4632                           ;buttons.c: 37: {
  4633                           ;buttons.c: 38: waitCnt[0] = waitcnt + 15;
  4634  003040  0E0F               	movlw	15
  4635  003042  2453               	addwf	_waitcnt,w,c
  4636  003044  6E33               	movwf	_waitCnt,c
  4637  003046  0E00               	movlw	0
  4638  003048  2054               	addwfc	_waitcnt+1,w,c
  4639  00304A  6E34               	movwf	_waitCnt+1,c
  4640  00304C  0E00               	movlw	0
  4641  00304E  2055               	addwfc	_waitcnt+2,w,c
  4642  003050  6E35               	movwf	_waitCnt+2,c
  4643  003052  0E00               	movlw	0
  4644  003054  2056               	addwfc	_waitcnt+3,w,c
  4645  003056  6E36               	movwf	_waitCnt+3,c
  4646                           
  4647                           ;buttons.c: 39: LATC2 = advState();
  4648  003058  EC00  F035         	call	_advState	;wreg free
  4649  00305C  6E1A               	movwf	??_buttons& (0+255),c
  4650  00305E  301A               	rrcf	??_buttons,w,c
  4651  003060  A0D8               	btfss	status,0,c
  4652  003062  D001               	bra	i1u723_25
  4653  003064  848B               	bsf	3979,2,c	;volatile
  4654  003066                     i1u723_25:
  4655  003066  B0D8               	btfsc	status,0,c
  4656  003068  D001               	bra	i1u723_26
  4657  00306A  948B               	bcf	3979,2,c	;volatile
  4658  00306C                     i1u723_26:
  4659  00306C                     i1l8429:
  4660                           
  4661                           ;buttons.c: 40: }
  4662                           ;buttons.c: 41: if ((( PORTB) & 0b10) && ((int32_t) (waitCnt[1] - waitcnt) <= 0))
  4663  00306C  A281               	btfss	3969,1,c	;volatile
  4664  00306E  D04C               	goto	i1l8437
  4665  003070  C053  F01A         	movff	_waitcnt,??_buttons
  4666  003074  C054  F01B         	movff	_waitcnt+1,??_buttons+1
  4667  003078  C055  F01C         	movff	_waitcnt+2,??_buttons+2
  4668  00307C  C056  F01D         	movff	_waitcnt+3,??_buttons+3
  4669  003080  1E1A               	comf	??_buttons,f,c
  4670  003082  1E1B               	comf	??_buttons+1,f,c
  4671  003084  1E1C               	comf	??_buttons+2,f,c
  4672  003086  1E1D               	comf	??_buttons+3,f,c
  4673  003088  2A1A               	incf	??_buttons,f,c
  4674  00308A  0E00               	movlw	0
  4675  00308C  221B               	addwfc	??_buttons+1,f,c
  4676  00308E  221C               	addwfc	??_buttons+2,f,c
  4677  003090  221D               	addwfc	??_buttons+3,f,c
  4678  003092  5037               	movf	_waitCnt+4,w,c
  4679  003094  241A               	addwf	??_buttons,w,c
  4680  003096  6E1E               	movwf	(??_buttons+4)& (0+255),c
  4681  003098  5038               	movf	_waitCnt+5,w,c
  4682  00309A  201B               	addwfc	??_buttons+1,w,c
  4683  00309C  6E1F               	movwf	(??_buttons+5)& (0+255),c
  4684  00309E  5039               	movf	_waitCnt+6,w,c
  4685  0030A0  201C               	addwfc	??_buttons+2,w,c
  4686  0030A2  6E20               	movwf	(??_buttons+6)& (0+255),c
  4687  0030A4  503A               	movf	_waitCnt+7,w,c
  4688  0030A6  201D               	addwfc	??_buttons+3,w,c
  4689  0030A8  6E21               	movwf	(??_buttons+7)& (0+255),c
  4690  0030AA  5021               	movf	??_buttons+7,w,c
  4691  0030AC  0A80               	xorlw	128
  4692  0030AE  0F80               	addlw	128
  4693  0030B0  E108               	bnz	i1u725_25
  4694  0030B2  0E00               	movlw	0
  4695  0030B4  5C20               	subwf	??_buttons+6,w,c
  4696  0030B6  E105               	bnz	i1u725_25
  4697  0030B8  0E00               	movlw	0
  4698  0030BA  5C1F               	subwf	??_buttons+5,w,c
  4699  0030BC  E102               	bnz	i1u725_25
  4700  0030BE  0E01               	movlw	1
  4701  0030C0  5C1E               	subwf	??_buttons+4,w,c
  4702  0030C2                     i1u725_25:
  4703  0030C2  B0D8               	btfsc	status,0,c
  4704  0030C4  D021               	goto	i1l8437
  4705                           
  4706                           ;buttons.c: 42: {
  4707                           ;buttons.c: 43: waitCnt[1] = waitcnt + 15;
  4708  0030C6  0E0F               	movlw	15
  4709  0030C8  2453               	addwf	_waitcnt,w,c
  4710  0030CA  6E37               	movwf	_waitCnt+4,c
  4711  0030CC  0E00               	movlw	0
  4712  0030CE  2054               	addwfc	_waitcnt+1,w,c
  4713  0030D0  6E38               	movwf	_waitCnt+5,c
  4714  0030D2  0E00               	movlw	0
  4715  0030D4  2055               	addwfc	_waitcnt+2,w,c
  4716  0030D6  6E39               	movwf	_waitCnt+6,c
  4717  0030D8  0E00               	movlw	0
  4718  0030DA  2056               	addwfc	_waitcnt+3,w,c
  4719  0030DC  6E3A               	movwf	_waitCnt+7,c
  4720                           
  4721                           ;buttons.c: 44: screen.brightness++;
  4722  0030DE  0E01               	movlw	1
  4723  0030E0  6E1A               	movwf	??_buttons& (0+255),c
  4724  0030E2  0101               	movlb	1	; () banked
  4725  0030E4  0101               	movlb	1	; () banked
  4726  0030E6  5178               	movf	(_screen+9)& (0+255),w,b
  4727  0030E8  0B0F               	andlw	15
  4728  0030EA  6E1B               	movwf	(??_buttons+1)& (0+255),c
  4729  0030EC  501A               	movf	??_buttons,w,c
  4730  0030EE  261B               	addwf	??_buttons+1,f,c
  4731  0030F0  0101               	movlb	1	; () banked
  4732  0030F2  0101               	movlb	1	; () banked
  4733  0030F4  5178               	movf	(_screen+9)& (0+255),w,b
  4734  0030F6  181B               	xorwf	(??_buttons+1)& (0+255),w,c
  4735  0030F8  0BF0               	andlw	-16
  4736  0030FA  181B               	xorwf	(??_buttons+1)& (0+255),w,c
  4737  0030FC  0101               	movlb	1	; () banked
  4738  0030FE  0101               	movlb	1	; () banked
  4739  003100  6F78               	movwf	(_screen+9)& (0+255),b
  4740                           
  4741                           ; BSR set to: 1
  4742                           ;buttons.c: 45: screen.changed |= (1 << 10);
  4743  003102  0101               	movlb	1	; () banked
  4744  003104  0101               	movlb	1	; () banked
  4745  003106  857B               	bsf	(_screen+12)& (0+255),2,b
  4746  003108                     i1l8437:
  4747                           
  4748                           ;buttons.c: 46: }
  4749                           ;buttons.c: 47: if ((( PORTB) & 0b100) && ((int32_t) (waitCnt[2] - waitcnt) <= 0))
  4750  003108  A481               	btfss	3969,2,c	;volatile
  4751  00310A  D039               	goto	i1l8445
  4752  00310C  C053  F01A         	movff	_waitcnt,??_buttons
  4753  003110  C054  F01B         	movff	_waitcnt+1,??_buttons+1
  4754  003114  C055  F01C         	movff	_waitcnt+2,??_buttons+2
  4755  003118  C056  F01D         	movff	_waitcnt+3,??_buttons+3
  4756  00311C  1E1A               	comf	??_buttons,f,c
  4757  00311E  1E1B               	comf	??_buttons+1,f,c
  4758  003120  1E1C               	comf	??_buttons+2,f,c
  4759  003122  1E1D               	comf	??_buttons+3,f,c
  4760  003124  2A1A               	incf	??_buttons,f,c
  4761  003126  0E00               	movlw	0
  4762  003128  221B               	addwfc	??_buttons+1,f,c
  4763  00312A  221C               	addwfc	??_buttons+2,f,c
  4764  00312C  221D               	addwfc	??_buttons+3,f,c
  4765  00312E  503B               	movf	_waitCnt+8,w,c
  4766  003130  241A               	addwf	??_buttons,w,c
  4767  003132  6E1E               	movwf	(??_buttons+4)& (0+255),c
  4768  003134  503C               	movf	_waitCnt+9,w,c
  4769  003136  201B               	addwfc	??_buttons+1,w,c
  4770  003138  6E1F               	movwf	(??_buttons+5)& (0+255),c
  4771  00313A  503D               	movf	_waitCnt+10,w,c
  4772  00313C  201C               	addwfc	??_buttons+2,w,c
  4773  00313E  6E20               	movwf	(??_buttons+6)& (0+255),c
  4774  003140  503E               	movf	_waitCnt+11,w,c
  4775  003142  201D               	addwfc	??_buttons+3,w,c
  4776  003144  6E21               	movwf	(??_buttons+7)& (0+255),c
  4777  003146  5021               	movf	??_buttons+7,w,c
  4778  003148  0A80               	xorlw	128
  4779  00314A  0F80               	addlw	128
  4780  00314C  E108               	bnz	i1u727_25
  4781  00314E  0E00               	movlw	0
  4782  003150  5C20               	subwf	??_buttons+6,w,c
  4783  003152  E105               	bnz	i1u727_25
  4784  003154  0E00               	movlw	0
  4785  003156  5C1F               	subwf	??_buttons+5,w,c
  4786  003158  E102               	bnz	i1u727_25
  4787  00315A  0E01               	movlw	1
  4788  00315C  5C1E               	subwf	??_buttons+4,w,c
  4789  00315E                     i1u727_25:
  4790  00315E  B0D8               	btfsc	status,0,c
  4791  003160  D00E               	goto	i1l8445
  4792                           
  4793                           ;buttons.c: 48: {
  4794                           ;buttons.c: 49: waitCnt[2] = waitcnt + 15;
  4795  003162  0E0F               	movlw	15
  4796  003164  2453               	addwf	_waitcnt,w,c
  4797  003166  6E3B               	movwf	_waitCnt+8,c
  4798  003168  0E00               	movlw	0
  4799  00316A  2054               	addwfc	_waitcnt+1,w,c
  4800  00316C  6E3C               	movwf	_waitCnt+9,c
  4801  00316E  0E00               	movlw	0
  4802  003170  2055               	addwfc	_waitcnt+2,w,c
  4803  003172  6E3D               	movwf	_waitCnt+10,c
  4804  003174  0E00               	movlw	0
  4805  003176  2056               	addwfc	_waitcnt+3,w,c
  4806  003178  6E3E               	movwf	_waitCnt+11,c
  4807                           
  4808                           ;buttons.c: 50: advMenu();
  4809  00317A  EC23  F034         	call	_advMenu	;wreg free
  4810  00317E                     i1l8445:
  4811                           
  4812                           ;buttons.c: 51: }
  4813                           ;buttons.c: 52: if ((( PORTB) & 0b1000) && ((int32_t) (waitCnt[3] - waitcnt) <= 0))
  4814  00317E  A681               	btfss	3969,3,c	;volatile
  4815  003180  D04C               	goto	i1l8453
  4816  003182  C053  F01A         	movff	_waitcnt,??_buttons
  4817  003186  C054  F01B         	movff	_waitcnt+1,??_buttons+1
  4818  00318A  C055  F01C         	movff	_waitcnt+2,??_buttons+2
  4819  00318E  C056  F01D         	movff	_waitcnt+3,??_buttons+3
  4820  003192  1E1A               	comf	??_buttons,f,c
  4821  003194  1E1B               	comf	??_buttons+1,f,c
  4822  003196  1E1C               	comf	??_buttons+2,f,c
  4823  003198  1E1D               	comf	??_buttons+3,f,c
  4824  00319A  2A1A               	incf	??_buttons,f,c
  4825  00319C  0E00               	movlw	0
  4826  00319E  221B               	addwfc	??_buttons+1,f,c
  4827  0031A0  221C               	addwfc	??_buttons+2,f,c
  4828  0031A2  221D               	addwfc	??_buttons+3,f,c
  4829  0031A4  503F               	movf	_waitCnt+12,w,c
  4830  0031A6  241A               	addwf	??_buttons,w,c
  4831  0031A8  6E1E               	movwf	(??_buttons+4)& (0+255),c
  4832  0031AA  5040               	movf	_waitCnt+13,w,c
  4833  0031AC  201B               	addwfc	??_buttons+1,w,c
  4834  0031AE  6E1F               	movwf	(??_buttons+5)& (0+255),c
  4835  0031B0  5041               	movf	_waitCnt+14,w,c
  4836  0031B2  201C               	addwfc	??_buttons+2,w,c
  4837  0031B4  6E20               	movwf	(??_buttons+6)& (0+255),c
  4838  0031B6  5042               	movf	_waitCnt+15,w,c
  4839  0031B8  201D               	addwfc	??_buttons+3,w,c
  4840  0031BA  6E21               	movwf	(??_buttons+7)& (0+255),c
  4841  0031BC  5021               	movf	??_buttons+7,w,c
  4842  0031BE  0A80               	xorlw	128
  4843  0031C0  0F80               	addlw	128
  4844  0031C2  E108               	bnz	i1u729_25
  4845  0031C4  0E00               	movlw	0
  4846  0031C6  5C20               	subwf	??_buttons+6,w,c
  4847  0031C8  E105               	bnz	i1u729_25
  4848  0031CA  0E00               	movlw	0
  4849  0031CC  5C1F               	subwf	??_buttons+5,w,c
  4850  0031CE  E102               	bnz	i1u729_25
  4851  0031D0  0E01               	movlw	1
  4852  0031D2  5C1E               	subwf	??_buttons+4,w,c
  4853  0031D4                     i1u729_25:
  4854  0031D4  B0D8               	btfsc	status,0,c
  4855  0031D6  D021               	goto	i1l8453
  4856                           
  4857                           ;buttons.c: 53: {
  4858                           ;buttons.c: 54: waitCnt[3] = waitcnt + 15;
  4859  0031D8  0E0F               	movlw	15
  4860  0031DA  2453               	addwf	_waitcnt,w,c
  4861  0031DC  6E3F               	movwf	_waitCnt+12,c
  4862  0031DE  0E00               	movlw	0
  4863  0031E0  2054               	addwfc	_waitcnt+1,w,c
  4864  0031E2  6E40               	movwf	_waitCnt+13,c
  4865  0031E4  0E00               	movlw	0
  4866  0031E6  2055               	addwfc	_waitcnt+2,w,c
  4867  0031E8  6E41               	movwf	_waitCnt+14,c
  4868  0031EA  0E00               	movlw	0
  4869  0031EC  2056               	addwfc	_waitcnt+3,w,c
  4870  0031EE  6E42               	movwf	_waitCnt+15,c
  4871                           
  4872                           ;buttons.c: 55: screen.brightness--;
  4873  0031F0  0E01               	movlw	1
  4874  0031F2  6E1A               	movwf	??_buttons& (0+255),c
  4875  0031F4  0101               	movlb	1	; () banked
  4876  0031F6  0101               	movlb	1	; () banked
  4877  0031F8  5178               	movf	(_screen+9)& (0+255),w,b
  4878  0031FA  0B0F               	andlw	15
  4879  0031FC  6E1B               	movwf	(??_buttons+1)& (0+255),c
  4880  0031FE  501A               	movf	??_buttons,w,c
  4881  003200  5E1B               	subwf	??_buttons+1,f,c
  4882  003202  0101               	movlb	1	; () banked
  4883  003204  0101               	movlb	1	; () banked
  4884  003206  5178               	movf	(_screen+9)& (0+255),w,b
  4885  003208  181B               	xorwf	(??_buttons+1)& (0+255),w,c
  4886  00320A  0BF0               	andlw	-16
  4887  00320C  181B               	xorwf	(??_buttons+1)& (0+255),w,c
  4888  00320E  0101               	movlb	1	; () banked
  4889  003210  0101               	movlb	1	; () banked
  4890  003212  6F78               	movwf	(_screen+9)& (0+255),b
  4891                           
  4892                           ; BSR set to: 1
  4893                           ;buttons.c: 56: screen.changed |= (1 << 10);
  4894  003214  0101               	movlb	1	; () banked
  4895  003216  0101               	movlb	1	; () banked
  4896  003218  857B               	bsf	(_screen+12)& (0+255),2,b
  4897  00321A                     i1l8453:
  4898                           
  4899                           ;buttons.c: 57: }
  4900                           ;buttons.c: 58: LATC0 = 0;
  4901  00321A  908B               	bcf	3979,0,c	;volatile
  4902                           
  4903                           ;buttons.c: 59: if ((( PORTB) & 0b10000) && ((int32_t) (waitCnt[4] - waitcnt) <= 0))
  4904  00321C  A881               	btfss	3969,4,c	;volatile
  4905  00321E  D038               	goto	i1l8463
  4906  003220  C053  F01A         	movff	_waitcnt,??_buttons
  4907  003224  C054  F01B         	movff	_waitcnt+1,??_buttons+1
  4908  003228  C055  F01C         	movff	_waitcnt+2,??_buttons+2
  4909  00322C  C056  F01D         	movff	_waitcnt+3,??_buttons+3
  4910  003230  1E1A               	comf	??_buttons,f,c
  4911  003232  1E1B               	comf	??_buttons+1,f,c
  4912  003234  1E1C               	comf	??_buttons+2,f,c
  4913  003236  1E1D               	comf	??_buttons+3,f,c
  4914  003238  2A1A               	incf	??_buttons,f,c
  4915  00323A  0E00               	movlw	0
  4916  00323C  221B               	addwfc	??_buttons+1,f,c
  4917  00323E  221C               	addwfc	??_buttons+2,f,c
  4918  003240  221D               	addwfc	??_buttons+3,f,c
  4919  003242  5043               	movf	_waitCnt+16,w,c
  4920  003244  241A               	addwf	??_buttons,w,c
  4921  003246  6E1E               	movwf	(??_buttons+4)& (0+255),c
  4922  003248  5044               	movf	_waitCnt+17,w,c
  4923  00324A  201B               	addwfc	??_buttons+1,w,c
  4924  00324C  6E1F               	movwf	(??_buttons+5)& (0+255),c
  4925  00324E  5045               	movf	_waitCnt+18,w,c
  4926  003250  201C               	addwfc	??_buttons+2,w,c
  4927  003252  6E20               	movwf	(??_buttons+6)& (0+255),c
  4928  003254  5046               	movf	_waitCnt+19,w,c
  4929  003256  201D               	addwfc	??_buttons+3,w,c
  4930  003258  6E21               	movwf	(??_buttons+7)& (0+255),c
  4931  00325A  5021               	movf	??_buttons+7,w,c
  4932  00325C  0A80               	xorlw	128
  4933  00325E  0F80               	addlw	128
  4934  003260  E108               	bnz	i1u731_25
  4935  003262  0E00               	movlw	0
  4936  003264  5C20               	subwf	??_buttons+6,w,c
  4937  003266  E105               	bnz	i1u731_25
  4938  003268  0E00               	movlw	0
  4939  00326A  5C1F               	subwf	??_buttons+5,w,c
  4940  00326C  E102               	bnz	i1u731_25
  4941  00326E  0E01               	movlw	1
  4942  003270  5C1E               	subwf	??_buttons+4,w,c
  4943  003272                     i1u731_25:
  4944  003272  B0D8               	btfsc	status,0,c
  4945  003274  D00D               	goto	i1l8463
  4946                           
  4947                           ;buttons.c: 60: {
  4948                           ;buttons.c: 61: waitCnt[4] = waitcnt + 15;
  4949  003276  0E0F               	movlw	15
  4950  003278  2453               	addwf	_waitcnt,w,c
  4951  00327A  6E43               	movwf	_waitCnt+16,c
  4952  00327C  0E00               	movlw	0
  4953  00327E  2054               	addwfc	_waitcnt+1,w,c
  4954  003280  6E44               	movwf	_waitCnt+17,c
  4955  003282  0E00               	movlw	0
  4956  003284  2055               	addwfc	_waitcnt+2,w,c
  4957  003286  6E45               	movwf	_waitCnt+18,c
  4958  003288  0E00               	movlw	0
  4959  00328A  2056               	addwfc	_waitcnt+3,w,c
  4960  00328C  6E46               	movwf	_waitCnt+19,c
  4961                           
  4962                           ;buttons.c: 62: LATC0 = 1;
  4963  00328E  808B               	bsf	3979,0,c	;volatile
  4964  003290                     i1l8463:
  4965                           
  4966                           ;buttons.c: 63: }
  4967                           ;buttons.c: 64: if ((( PORTB) & 0b100000) && ((int32_t) (waitCnt[5] - waitcnt) <= 0))
  4968  003290  AA81               	btfss	3969,5,c	;volatile
  4969  003292  D037               	goto	i1l8469
  4970  003294  C053  F01A         	movff	_waitcnt,??_buttons
  4971  003298  C054  F01B         	movff	_waitcnt+1,??_buttons+1
  4972  00329C  C055  F01C         	movff	_waitcnt+2,??_buttons+2
  4973  0032A0  C056  F01D         	movff	_waitcnt+3,??_buttons+3
  4974  0032A4  1E1A               	comf	??_buttons,f,c
  4975  0032A6  1E1B               	comf	??_buttons+1,f,c
  4976  0032A8  1E1C               	comf	??_buttons+2,f,c
  4977  0032AA  1E1D               	comf	??_buttons+3,f,c
  4978  0032AC  2A1A               	incf	??_buttons,f,c
  4979  0032AE  0E00               	movlw	0
  4980  0032B0  221B               	addwfc	??_buttons+1,f,c
  4981  0032B2  221C               	addwfc	??_buttons+2,f,c
  4982  0032B4  221D               	addwfc	??_buttons+3,f,c
  4983  0032B6  5047               	movf	_waitCnt+20,w,c
  4984  0032B8  241A               	addwf	??_buttons,w,c
  4985  0032BA  6E1E               	movwf	(??_buttons+4)& (0+255),c
  4986  0032BC  5048               	movf	_waitCnt+21,w,c
  4987  0032BE  201B               	addwfc	??_buttons+1,w,c
  4988  0032C0  6E1F               	movwf	(??_buttons+5)& (0+255),c
  4989  0032C2  5049               	movf	_waitCnt+22,w,c
  4990  0032C4  201C               	addwfc	??_buttons+2,w,c
  4991  0032C6  6E20               	movwf	(??_buttons+6)& (0+255),c
  4992  0032C8  504A               	movf	_waitCnt+23,w,c
  4993  0032CA  201D               	addwfc	??_buttons+3,w,c
  4994  0032CC  6E21               	movwf	(??_buttons+7)& (0+255),c
  4995  0032CE  5021               	movf	??_buttons+7,w,c
  4996  0032D0  0A80               	xorlw	128
  4997  0032D2  0F80               	addlw	128
  4998  0032D4  E108               	bnz	i1u733_25
  4999  0032D6  0E00               	movlw	0
  5000  0032D8  5C20               	subwf	??_buttons+6,w,c
  5001  0032DA  E105               	bnz	i1u733_25
  5002  0032DC  0E00               	movlw	0
  5003  0032DE  5C1F               	subwf	??_buttons+5,w,c
  5004  0032E0  E102               	bnz	i1u733_25
  5005  0032E2  0E01               	movlw	1
  5006  0032E4  5C1E               	subwf	??_buttons+4,w,c
  5007  0032E6                     i1u733_25:
  5008  0032E6  B0D8               	btfsc	status,0,c
  5009  0032E8  D00C               	goto	i1l8469
  5010                           
  5011                           ;buttons.c: 65: {
  5012                           ;buttons.c: 66: waitCnt[5] = waitcnt + 15;
  5013  0032EA  0E0F               	movlw	15
  5014  0032EC  2453               	addwf	_waitcnt,w,c
  5015  0032EE  6E47               	movwf	_waitCnt+20,c
  5016  0032F0  0E00               	movlw	0
  5017  0032F2  2054               	addwfc	_waitcnt+1,w,c
  5018  0032F4  6E48               	movwf	_waitCnt+21,c
  5019  0032F6  0E00               	movlw	0
  5020  0032F8  2055               	addwfc	_waitcnt+2,w,c
  5021  0032FA  6E49               	movwf	_waitCnt+22,c
  5022  0032FC  0E00               	movlw	0
  5023  0032FE  2056               	addwfc	_waitcnt+3,w,c
  5024  003300  6E4A               	movwf	_waitCnt+23,c
  5025  003302                     i1l8469:
  5026                           
  5027                           ;buttons.c: 67: }
  5028                           ;buttons.c: 68: if ((( PORTB) & 0b1000000) && ((int32_t) (waitCnt[6] - waitcnt) <= 0))
  5029  003302  AC81               	btfss	3969,6,c	;volatile
  5030  003304  D037               	goto	i1l8475
  5031  003306  C053  F01A         	movff	_waitcnt,??_buttons
  5032  00330A  C054  F01B         	movff	_waitcnt+1,??_buttons+1
  5033  00330E  C055  F01C         	movff	_waitcnt+2,??_buttons+2
  5034  003312  C056  F01D         	movff	_waitcnt+3,??_buttons+3
  5035  003316  1E1A               	comf	??_buttons,f,c
  5036  003318  1E1B               	comf	??_buttons+1,f,c
  5037  00331A  1E1C               	comf	??_buttons+2,f,c
  5038  00331C  1E1D               	comf	??_buttons+3,f,c
  5039  00331E  2A1A               	incf	??_buttons,f,c
  5040  003320  0E00               	movlw	0
  5041  003322  221B               	addwfc	??_buttons+1,f,c
  5042  003324  221C               	addwfc	??_buttons+2,f,c
  5043  003326  221D               	addwfc	??_buttons+3,f,c
  5044  003328  504B               	movf	_waitCnt+24,w,c
  5045  00332A  241A               	addwf	??_buttons,w,c
  5046  00332C  6E1E               	movwf	(??_buttons+4)& (0+255),c
  5047  00332E  504C               	movf	_waitCnt+25,w,c
  5048  003330  201B               	addwfc	??_buttons+1,w,c
  5049  003332  6E1F               	movwf	(??_buttons+5)& (0+255),c
  5050  003334  504D               	movf	_waitCnt+26,w,c
  5051  003336  201C               	addwfc	??_buttons+2,w,c
  5052  003338  6E20               	movwf	(??_buttons+6)& (0+255),c
  5053  00333A  504E               	movf	_waitCnt+27,w,c
  5054  00333C  201D               	addwfc	??_buttons+3,w,c
  5055  00333E  6E21               	movwf	(??_buttons+7)& (0+255),c
  5056  003340  5021               	movf	??_buttons+7,w,c
  5057  003342  0A80               	xorlw	128
  5058  003344  0F80               	addlw	128
  5059  003346  E108               	bnz	i1u735_25
  5060  003348  0E00               	movlw	0
  5061  00334A  5C20               	subwf	??_buttons+6,w,c
  5062  00334C  E105               	bnz	i1u735_25
  5063  00334E  0E00               	movlw	0
  5064  003350  5C1F               	subwf	??_buttons+5,w,c
  5065  003352  E102               	bnz	i1u735_25
  5066  003354  0E01               	movlw	1
  5067  003356  5C1E               	subwf	??_buttons+4,w,c
  5068  003358                     i1u735_25:
  5069  003358  B0D8               	btfsc	status,0,c
  5070  00335A  D00C               	goto	i1l8475
  5071                           
  5072                           ;buttons.c: 69: {
  5073                           ;buttons.c: 70: waitCnt[6] = waitcnt + 15;
  5074  00335C  0E0F               	movlw	15
  5075  00335E  2453               	addwf	_waitcnt,w,c
  5076  003360  6E4B               	movwf	_waitCnt+24,c
  5077  003362  0E00               	movlw	0
  5078  003364  2054               	addwfc	_waitcnt+1,w,c
  5079  003366  6E4C               	movwf	_waitCnt+25,c
  5080  003368  0E00               	movlw	0
  5081  00336A  2055               	addwfc	_waitcnt+2,w,c
  5082  00336C  6E4D               	movwf	_waitCnt+26,c
  5083  00336E  0E00               	movlw	0
  5084  003370  2056               	addwfc	_waitcnt+3,w,c
  5085  003372  6E4E               	movwf	_waitCnt+27,c
  5086  003374                     i1l8475:
  5087                           
  5088                           ;buttons.c: 71: }
  5089                           ;buttons.c: 72: if ((( PORTB) & 0b10000000) && ((int32_t) (waitCnt[7] - waitcnt) <= 0))
  5090  003374  AE81               	btfss	3969,7,c	;volatile
  5091  003376  D037               	goto	i1l8481
  5092  003378  C053  F01A         	movff	_waitcnt,??_buttons
  5093  00337C  C054  F01B         	movff	_waitcnt+1,??_buttons+1
  5094  003380  C055  F01C         	movff	_waitcnt+2,??_buttons+2
  5095  003384  C056  F01D         	movff	_waitcnt+3,??_buttons+3
  5096  003388  1E1A               	comf	??_buttons,f,c
  5097  00338A  1E1B               	comf	??_buttons+1,f,c
  5098  00338C  1E1C               	comf	??_buttons+2,f,c
  5099  00338E  1E1D               	comf	??_buttons+3,f,c
  5100  003390  2A1A               	incf	??_buttons,f,c
  5101  003392  0E00               	movlw	0
  5102  003394  221B               	addwfc	??_buttons+1,f,c
  5103  003396  221C               	addwfc	??_buttons+2,f,c
  5104  003398  221D               	addwfc	??_buttons+3,f,c
  5105  00339A  504F               	movf	_waitCnt+28,w,c
  5106  00339C  241A               	addwf	??_buttons,w,c
  5107  00339E  6E1E               	movwf	(??_buttons+4)& (0+255),c
  5108  0033A0  5050               	movf	_waitCnt+29,w,c
  5109  0033A2  201B               	addwfc	??_buttons+1,w,c
  5110  0033A4  6E1F               	movwf	(??_buttons+5)& (0+255),c
  5111  0033A6  5051               	movf	_waitCnt+30,w,c
  5112  0033A8  201C               	addwfc	??_buttons+2,w,c
  5113  0033AA  6E20               	movwf	(??_buttons+6)& (0+255),c
  5114  0033AC  5052               	movf	_waitCnt+31,w,c
  5115  0033AE  201D               	addwfc	??_buttons+3,w,c
  5116  0033B0  6E21               	movwf	(??_buttons+7)& (0+255),c
  5117  0033B2  5021               	movf	??_buttons+7,w,c
  5118  0033B4  0A80               	xorlw	128
  5119  0033B6  0F80               	addlw	128
  5120  0033B8  E108               	bnz	i1u737_25
  5121  0033BA  0E00               	movlw	0
  5122  0033BC  5C20               	subwf	??_buttons+6,w,c
  5123  0033BE  E105               	bnz	i1u737_25
  5124  0033C0  0E00               	movlw	0
  5125  0033C2  5C1F               	subwf	??_buttons+5,w,c
  5126  0033C4  E102               	bnz	i1u737_25
  5127  0033C6  0E01               	movlw	1
  5128  0033C8  5C1E               	subwf	??_buttons+4,w,c
  5129  0033CA                     i1u737_25:
  5130  0033CA  B0D8               	btfsc	status,0,c
  5131  0033CC  D00C               	goto	i1l8481
  5132                           
  5133                           ;buttons.c: 73: {
  5134                           ;buttons.c: 74: waitCnt[7] = waitcnt + 15;
  5135  0033CE  0E0F               	movlw	15
  5136  0033D0  2453               	addwf	_waitcnt,w,c
  5137  0033D2  6E4F               	movwf	_waitCnt+28,c
  5138  0033D4  0E00               	movlw	0
  5139  0033D6  2054               	addwfc	_waitcnt+1,w,c
  5140  0033D8  6E50               	movwf	_waitCnt+29,c
  5141  0033DA  0E00               	movlw	0
  5142  0033DC  2055               	addwfc	_waitcnt+2,w,c
  5143  0033DE  6E51               	movwf	_waitCnt+30,c
  5144  0033E0  0E00               	movlw	0
  5145  0033E2  2056               	addwfc	_waitcnt+3,w,c
  5146  0033E4  6E52               	movwf	_waitCnt+31,c
  5147  0033E6                     i1l8481:
  5148                           
  5149                           ;buttons.c: 75: }
  5150                           ;buttons.c: 76: LATC2 = 0;
  5151  0033E6  948B               	bcf	3979,2,c	;volatile
  5152                           
  5153                           ;buttons.c: 77: if ( PORTB)
  5154  0033E8  5081               	movf	3969,w,c	;volatile
  5155  0033EA  A4D8               	btfss	status,2,c
  5156                           
  5157                           ;buttons.c: 78: {
  5158                           ;buttons.c: 80: update();
  5159  0033EC  EC3B  F01A         	call	i1_update	;wreg free
  5160                           
  5161                           ;buttons.c: 81: }
  5162                           ;buttons.c: 82: if (! PORTB)
  5163  0033F0  6681               	tstfsz	3969,c	;volatile
  5164  0033F2  D040               	goto	i1l444
  5165                           
  5166                           ;buttons.c: 83: {
  5167                           ;buttons.c: 84: waitCnt[0] = 0;
  5168  0033F4  0E00               	movlw	0
  5169  0033F6  6E33               	movwf	_waitCnt,c
  5170  0033F8  0E00               	movlw	0
  5171  0033FA  6E34               	movwf	_waitCnt+1,c
  5172  0033FC  0E00               	movlw	0
  5173  0033FE  6E35               	movwf	_waitCnt+2,c
  5174  003400  0E00               	movlw	0
  5175  003402  6E36               	movwf	_waitCnt+3,c
  5176                           
  5177                           ;buttons.c: 85: waitCnt[1] = 0;
  5178  003404  0E00               	movlw	0
  5179  003406  6E37               	movwf	_waitCnt+4,c
  5180  003408  0E00               	movlw	0
  5181  00340A  6E38               	movwf	_waitCnt+5,c
  5182  00340C  0E00               	movlw	0
  5183  00340E  6E39               	movwf	_waitCnt+6,c
  5184  003410  0E00               	movlw	0
  5185  003412  6E3A               	movwf	_waitCnt+7,c
  5186                           
  5187                           ;buttons.c: 86: waitCnt[2] = 0;
  5188  003414  0E00               	movlw	0
  5189  003416  6E3B               	movwf	_waitCnt+8,c
  5190  003418  0E00               	movlw	0
  5191  00341A  6E3C               	movwf	_waitCnt+9,c
  5192  00341C  0E00               	movlw	0
  5193  00341E  6E3D               	movwf	_waitCnt+10,c
  5194  003420  0E00               	movlw	0
  5195  003422  6E3E               	movwf	_waitCnt+11,c
  5196                           
  5197                           ;buttons.c: 87: waitCnt[3] = 0;
  5198  003424  0E00               	movlw	0
  5199  003426  6E3F               	movwf	_waitCnt+12,c
  5200  003428  0E00               	movlw	0
  5201  00342A  6E40               	movwf	_waitCnt+13,c
  5202  00342C  0E00               	movlw	0
  5203  00342E  6E41               	movwf	_waitCnt+14,c
  5204  003430  0E00               	movlw	0
  5205  003432  6E42               	movwf	_waitCnt+15,c
  5206                           
  5207                           ;buttons.c: 88: waitCnt[4] = 0;
  5208  003434  0E00               	movlw	0
  5209  003436  6E43               	movwf	_waitCnt+16,c
  5210  003438  0E00               	movlw	0
  5211  00343A  6E44               	movwf	_waitCnt+17,c
  5212  00343C  0E00               	movlw	0
  5213  00343E  6E45               	movwf	_waitCnt+18,c
  5214  003440  0E00               	movlw	0
  5215  003442  6E46               	movwf	_waitCnt+19,c
  5216                           
  5217                           ;buttons.c: 89: waitCnt[5] = 0;
  5218  003444  0E00               	movlw	0
  5219  003446  6E47               	movwf	_waitCnt+20,c
  5220  003448  0E00               	movlw	0
  5221  00344A  6E48               	movwf	_waitCnt+21,c
  5222  00344C  0E00               	movlw	0
  5223  00344E  6E49               	movwf	_waitCnt+22,c
  5224  003450  0E00               	movlw	0
  5225  003452  6E4A               	movwf	_waitCnt+23,c
  5226                           
  5227                           ;buttons.c: 90: waitCnt[6] = 0;
  5228  003454  0E00               	movlw	0
  5229  003456  6E4B               	movwf	_waitCnt+24,c
  5230  003458  0E00               	movlw	0
  5231  00345A  6E4C               	movwf	_waitCnt+25,c
  5232  00345C  0E00               	movlw	0
  5233  00345E  6E4D               	movwf	_waitCnt+26,c
  5234  003460  0E00               	movlw	0
  5235  003462  6E4E               	movwf	_waitCnt+27,c
  5236                           
  5237                           ;buttons.c: 91: waitCnt[7] = 0;
  5238  003464  0E00               	movlw	0
  5239  003466  6E4F               	movwf	_waitCnt+28,c
  5240  003468  0E00               	movlw	0
  5241  00346A  6E50               	movwf	_waitCnt+29,c
  5242  00346C  0E00               	movlw	0
  5243  00346E  6E51               	movwf	_waitCnt+30,c
  5244  003470  0E00               	movlw	0
  5245  003472  6E52               	movwf	_waitCnt+31,c
  5246  003474                     i1l444:
  5247  003474  0012               	return	
  5248  003476                     __end_of_buttons:
  5249                           	opt stack 0
  5250                           pclatu	equ	0xFFB
  5251                           pclath	equ	0xFFA
  5252                           tblptru	equ	0xFF8
  5253                           tblptrh	equ	0xFF7
  5254                           tblptrl	equ	0xFF6
  5255                           tablat	equ	0xFF5
  5256                           prodh	equ	0xFF4
  5257                           prodl	equ	0xFF3
  5258                           intcon	equ	0xFF2
  5259                           intcon2	equ	0xFF1
  5260                           postinc0	equ	0xFEE
  5261                           fsr0h	equ	0xFEA
  5262                           fsr0l	equ	0xFE9
  5263                           wreg	equ	0xFE8
  5264                           postdec1	equ	0xFE5
  5265                           fsr1h	equ	0xFE2
  5266                           fsr1l	equ	0xFE1
  5267                           bsr	equ	0xFE0
  5268                           indf2	equ	0xFDF
  5269                           fsr2h	equ	0xFDA
  5270                           fsr2l	equ	0xFD9
  5271                           status	equ	0xFD8
  5272                           
  5273 ;; *************** function i1_update *****************
  5274 ;; Defined at:
  5275 ;;		line 13 in file "disp.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;		None
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  update          1   24[COMRAM] char 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;		None               void
  5282 ;; Registers used:
  5283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5289 ;;      Params:         0       0       0       0       0       0       0       0       0
  5290 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5291 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5292 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5293 ;;Total ram usage:        6 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:   10
  5296 ;; This function calls:
  5297 ;;		i1_spi
  5298 ;;		i1_writeDigit
  5299 ;; This function is called by:
  5300 ;;		_buttons
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text17
  5305  003476                     __ptext17:
  5306                           	opt stack 0
  5307  003476                     i1_update:
  5308                           	opt stack 14
  5309                           
  5310                           ;disp.c: 14: if (!screen.changed)
  5311                           
  5312                           ;incstack = 0
  5313                           ;incstack = 0
  5314  003476  0101               	movlb	1	; () banked
  5315  003478  0101               	movlb	1	; () banked
  5316  00347A  517B               	movf	(_screen+12)& (0+255),w,b
  5317  00347C  117A               	iorwf	(_screen+11)& (0+255),w,b
  5318  00347E  B4D8               	btfsc	status,2,c
  5319  003480  D23D               	goto	i1l58
  5320                           
  5321                           ; BSR set to: 1
  5322                           ;disp.c: 17: }
  5323                           ;disp.c: 18: int8_t cnt;
  5324                           ;disp.c: 19: for (cnt = 15; cnt >= 0; cnt--)
  5325                           
  5326                           ; BSR set to: 1
  5327                           
  5328                           ; BSR set to: 1
  5329                           ;disp.c: 15: {
  5330                           ;disp.c: 16: return;
  5331  003482  6E14               	movwf	??i1_update& (0+255),c
  5332  003484  0E0F               	movlw	15
  5333  003486  6E19               	movwf	i1update@cnt,c
  5334  003488  5014               	movf	??i1_update& (0+255),w,c
  5335  00348A                     
  5336                           ; BSR set to: 1
  5337  00348A  BE19               	btfsc	i1update@cnt,7,c
  5338  00348C  D237               	goto	i1l58
  5339  00348E  D05A               	goto	i1l8385
  5340  003490                     i1l8371:
  5341                           
  5342                           ; BSR set to: 1
  5343                           ;disp.c: 24: writeDigit(1 << cnt, screen.digits.screen[cnt].bits);
  5344  003490  C019  F014         	movff	i1update@cnt,??i1_update
  5345  003494  0E01               	movlw	1
  5346  003496  6E15               	movwf	(??i1_update+1)& (0+255),c
  5347  003498  2A14               	incf	??i1_update,f,c
  5348  00349A  D002               	goto	i1u716_24
  5349  00349C                     i1u716_25:
  5350  00349C  90D8               	bcf	status,0,c
  5351  00349E  3615               	rlcf	??i1_update+1,f,c
  5352  0034A0                     i1u716_24:
  5353  0034A0  2E14               	decfsz	??i1_update,f,c
  5354  0034A2  D7FC               	goto	i1u716_25
  5355  0034A4  5015               	movf	??i1_update+1,w,c
  5356  0034A6  6E0F               	movwf	?i1_writeDigit,c
  5357  0034A8  5019               	movf	i1update@cnt,w,c
  5358  0034AA  0D01               	mullw	1
  5359  0034AC  0101               	movlb	1	; () banked
  5360  0034AE  0E6F               	movlw	low _screen
  5361  0034B0  24F3               	addwf	prodl,w,c
  5362  0034B2  6ED9               	movwf	fsr2l,c
  5363  0034B4  0101               	movlb	1	; () banked
  5364  0034B6  0E01               	movlw	high _screen
  5365  0034B8  20F4               	addwfc	prodh,w,c
  5366  0034BA  6EDA               	movwf	fsr2h,c
  5367  0034BC  50DF               	movf	indf2,w,c
  5368  0034BE  6E10               	movwf	?i1_writeDigit+1,c
  5369  0034C0  ECE3  F035         	call	i1_writeDigit	;wreg free
  5370                           
  5371                           ;disp.c: 25: break;
  5372  0034C4  D201               	goto	i1l8387
  5373  0034C6                     i1l8373:
  5374                           
  5375                           ;disp.c: 27: spi(0b1001, screen.decode);
  5376  0034C6  6E14               	movwf	??i1_update& (0+255),c
  5377  0034C8  0E09               	movlw	9
  5378  0034CA  6E07               	movwf	?i1_spi,c
  5379  0034CC  5014               	movf	??i1_update& (0+255),w,c
  5380  0034CE  0101               	movlb	1	; () banked
  5381  0034D0  0101               	movlb	1	; () banked
  5382  0034D2  5177               	movf	(_screen+8)& (0+255),w,b
  5383  0034D4  0BFF               	andlw	255
  5384  0034D6  6E08               	movwf	?i1_spi+1,c
  5385  0034D8  EC16  F031         	call	i1_spi	;wreg free
  5386                           
  5387                           ;disp.c: 28: break;
  5388  0034DC  D1F5               	goto	i1l8387
  5389  0034DE                     i1l8375:
  5390                           
  5391                           ;disp.c: 30: spi(0b1010, screen.brightness);
  5392  0034DE  6E14               	movwf	??i1_update& (0+255),c
  5393  0034E0  0E0A               	movlw	10
  5394  0034E2  6E07               	movwf	?i1_spi,c
  5395  0034E4  5014               	movf	??i1_update& (0+255),w,c
  5396  0034E6  0101               	movlb	1	; () banked
  5397  0034E8  0101               	movlb	1	; () banked
  5398  0034EA  5178               	movf	(_screen+9)& (0+255),w,b
  5399  0034EC  0B0F               	andlw	15
  5400  0034EE  6E08               	movwf	?i1_spi+1,c
  5401  0034F0  EC16  F031         	call	i1_spi	;wreg free
  5402                           
  5403                           ;disp.c: 31: break;
  5404  0034F4  D1E9               	goto	i1l8387
  5405  0034F6                     i1l8377:
  5406                           
  5407                           ;disp.c: 33: spi(0b1011, screen.scan);
  5408  0034F6  6E14               	movwf	??i1_update& (0+255),c
  5409  0034F8  0E0B               	movlw	11
  5410  0034FA  6E07               	movwf	?i1_spi,c
  5411  0034FC  5014               	movf	??i1_update& (0+255),w,c
  5412  0034FE  0101               	movlb	1	; () banked
  5413  003500  0101               	movlb	1	; () banked
  5414  003502  3978               	swapf	(_screen+9)& (0+255),w,b
  5415  003504  0B07               	andlw	7
  5416  003506  6E08               	movwf	?i1_spi+1,c
  5417  003508  EC16  F031         	call	i1_spi	;wreg free
  5418                           
  5419                           ;disp.c: 34: break;
  5420  00350C  D1DD               	goto	i1l8387
  5421  00350E                     i1l8379:
  5422                           
  5423                           ;disp.c: 36: spi(0b1111, screen.test);
  5424  00350E  6E14               	movwf	??i1_update& (0+255),c
  5425  003510  0E0F               	movlw	15
  5426  003512  6E07               	movwf	?i1_spi,c
  5427  003514  5014               	movf	??i1_update& (0+255),w,c
  5428  003516  0E00               	movlw	0
  5429  003518  0101               	movlb	1	; () banked
  5430  00351A  BF78               	btfsc	(_screen+9)& (0+255),7,b
  5431  00351C  0E01               	movlw	1
  5432  00351E  6E08               	movwf	?i1_spi+1,c
  5433  003520  EC16  F031         	call	i1_spi	;wreg free
  5434                           
  5435                           ;disp.c: 37: break;
  5436  003524  D1D1               	goto	i1l8387
  5437  003526                     i1l8381:
  5438                           
  5439                           ;disp.c: 39: spi(0b1100, !screen.shutdown);
  5440  003526  6E14               	movwf	??i1_update& (0+255),c
  5441  003528  0E0C               	movlw	12
  5442  00352A  6E07               	movwf	?i1_spi,c
  5443  00352C  5014               	movf	??i1_update& (0+255),w,c
  5444  00352E  0101               	movlb	1	; () banked
  5445  003530  0101               	movlb	1	; () banked
  5446  003532  B179               	btfsc	(_screen+10)& (0+255),0,b
  5447  003534  D002               	goto	i1u717_20
  5448  003536  0E01               	movlw	1
  5449  003538  D001               	goto	i1u717_26
  5450  00353A                     i1u717_20:
  5451  00353A  0E00               	movlw	0
  5452  00353C                     i1u717_26:
  5453  00353C  6E08               	movwf	?i1_spi+1,c
  5454  00353E  EC16  F031         	call	i1_spi	;wreg free
  5455                           
  5456                           ;disp.c: 40: break;
  5457  003542  D1C2               	goto	i1l8387
  5458  003544                     i1l8385:
  5459  003544  C019  F014         	movff	i1update@cnt,??i1_update
  5460  003548  0E01               	movlw	1
  5461  00354A  6E15               	movwf	(??i1_update+1)& (0+255),c
  5462  00354C  6A16               	clrf	(??i1_update+2)& (0+255),c
  5463  00354E  2A14               	incf	??i1_update,f,c
  5464  003550  D003               	goto	i1u718_24
  5465  003552                     i1u718_25:
  5466  003552  90D8               	bcf	status,0,c
  5467  003554  3615               	rlcf	??i1_update+1,f,c
  5468  003556  3616               	rlcf	??i1_update+2,f,c
  5469  003558                     i1u718_24:
  5470  003558  2E14               	decfsz	??i1_update,f,c
  5471  00355A  D7FB               	goto	i1u718_25
  5472  00355C  0101               	movlb	1	; () banked
  5473  00355E  0101               	movlb	1	; () banked
  5474  003560  517A               	movf	(_screen+11)& (0+255),w,b
  5475  003562  1615               	andwf	??i1_update+1,f,c
  5476  003564  0101               	movlb	1	; () banked
  5477  003566  0101               	movlb	1	; () banked
  5478  003568  517B               	movf	(_screen+12)& (0+255),w,b
  5479  00356A  1616               	andwf	??i1_update+2,f,c
  5480                           
  5481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  5482                           ; Switch size 1, requested type "space"
  5483                           ; Number of cases is 6, Range of values is 0 to 32
  5484                           ; switch strategies available:
  5485                           ; Name         Instructions Cycles
  5486                           ; simple_byte           19    10 (average)
  5487                           ;	Chosen strategy is simple_byte
  5488  00356C  5016               	movf	??i1_update+2,w,c
  5489  00356E  0A00               	xorlw	0	; case 0
  5490  003570  B4D8               	btfsc	status,2,c
  5491  003572  D010               	goto	i1l8761
  5492  003574  0A02               	xorlw	2	; case 2
  5493  003576  B4D8               	btfsc	status,2,c
  5494  003578  D18F               	goto	i1l8763
  5495  00357A  0A06               	xorlw	6	; case 4
  5496  00357C  B4D8               	btfsc	status,2,c
  5497  00357E  D191               	goto	i1l8765
  5498  003580  0A0C               	xorlw	12	; case 8
  5499  003582  B4D8               	btfsc	status,2,c
  5500  003584  D193               	goto	i1l8767
  5501  003586  0A18               	xorlw	24	; case 16
  5502  003588  B4D8               	btfsc	status,2,c
  5503  00358A  D195               	goto	i1l8769
  5504  00358C  0A30               	xorlw	48	; case 32
  5505  00358E  B4D8               	btfsc	status,2,c
  5506  003590  D197               	goto	i1l8771
  5507  003592  D19A               	goto	i1l8387
  5508  003594                     i1l8761:
  5509                           
  5510                           ; BSR set to: 1
  5511                           ; Switch size 1, requested type "space"
  5512                           ; Number of cases is 128, Range of values is 1 to 128
  5513                           ; switch strategies available:
  5514                           ; Name         Instructions Cycles
  5515                           ; simple_byte          385   193 (average)
  5516                           ;	Chosen strategy is simple_byte
  5517  003594  5015               	movf	??i1_update+1,w,c
  5518  003596  0A01               	xorlw	1	; case 1
  5519  003598  B4D8               	btfsc	status,2,c
  5520  00359A  D77A               	goto	i1l8371
  5521  00359C  0A03               	xorlw	3	; case 2
  5522  00359E  B4D8               	btfsc	status,2,c
  5523  0035A0  D777               	goto	i1l8371
  5524  0035A2  0A01               	xorlw	1	; case 3
  5525  0035A4  B4D8               	btfsc	status,2,c
  5526  0035A6  D774               	goto	i1l8371
  5527  0035A8  0A07               	xorlw	7	; case 4
  5528  0035AA  B4D8               	btfsc	status,2,c
  5529  0035AC  D771               	goto	i1l8371
  5530  0035AE  0A01               	xorlw	1	; case 5
  5531  0035B0  B4D8               	btfsc	status,2,c
  5532  0035B2  D76E               	goto	i1l8371
  5533  0035B4  0A03               	xorlw	3	; case 6
  5534  0035B6  B4D8               	btfsc	status,2,c
  5535  0035B8  D76B               	goto	i1l8371
  5536  0035BA  0A01               	xorlw	1	; case 7
  5537  0035BC  B4D8               	btfsc	status,2,c
  5538  0035BE  D768               	goto	i1l8371
  5539  0035C0  0A0F               	xorlw	15	; case 8
  5540  0035C2  B4D8               	btfsc	status,2,c
  5541  0035C4  D765               	goto	i1l8371
  5542  0035C6  0A01               	xorlw	1	; case 9
  5543  0035C8  B4D8               	btfsc	status,2,c
  5544  0035CA  D762               	goto	i1l8371
  5545  0035CC  0A03               	xorlw	3	; case 10
  5546  0035CE  B4D8               	btfsc	status,2,c
  5547  0035D0  D75F               	goto	i1l8371
  5548  0035D2  0A01               	xorlw	1	; case 11
  5549  0035D4  B4D8               	btfsc	status,2,c
  5550  0035D6  D75C               	goto	i1l8371
  5551  0035D8  0A07               	xorlw	7	; case 12
  5552  0035DA  B4D8               	btfsc	status,2,c
  5553  0035DC  D759               	goto	i1l8371
  5554  0035DE  0A01               	xorlw	1	; case 13
  5555  0035E0  B4D8               	btfsc	status,2,c
  5556  0035E2  D756               	goto	i1l8371
  5557  0035E4  0A03               	xorlw	3	; case 14
  5558  0035E6  B4D8               	btfsc	status,2,c
  5559  0035E8  D753               	goto	i1l8371
  5560  0035EA  0A01               	xorlw	1	; case 15
  5561  0035EC  B4D8               	btfsc	status,2,c
  5562  0035EE  D750               	goto	i1l8371
  5563  0035F0  0A1F               	xorlw	31	; case 16
  5564  0035F2  B4D8               	btfsc	status,2,c
  5565  0035F4  D74D               	goto	i1l8371
  5566  0035F6  0A01               	xorlw	1	; case 17
  5567  0035F8  B4D8               	btfsc	status,2,c
  5568  0035FA  D74A               	goto	i1l8371
  5569  0035FC  0A03               	xorlw	3	; case 18
  5570  0035FE  B4D8               	btfsc	status,2,c
  5571  003600  D747               	goto	i1l8371
  5572  003602  0A01               	xorlw	1	; case 19
  5573  003604  B4D8               	btfsc	status,2,c
  5574  003606  D744               	goto	i1l8371
  5575  003608  0A07               	xorlw	7	; case 20
  5576  00360A  B4D8               	btfsc	status,2,c
  5577  00360C  D741               	goto	i1l8371
  5578  00360E  0A01               	xorlw	1	; case 21
  5579  003610  B4D8               	btfsc	status,2,c
  5580  003612  D73E               	goto	i1l8371
  5581  003614  0A03               	xorlw	3	; case 22
  5582  003616  B4D8               	btfsc	status,2,c
  5583  003618  D73B               	goto	i1l8371
  5584  00361A  0A01               	xorlw	1	; case 23
  5585  00361C  B4D8               	btfsc	status,2,c
  5586  00361E  D738               	goto	i1l8371
  5587  003620  0A0F               	xorlw	15	; case 24
  5588  003622  B4D8               	btfsc	status,2,c
  5589  003624  D735               	goto	i1l8371
  5590  003626  0A01               	xorlw	1	; case 25
  5591  003628  B4D8               	btfsc	status,2,c
  5592  00362A  D732               	goto	i1l8371
  5593  00362C  0A03               	xorlw	3	; case 26
  5594  00362E  B4D8               	btfsc	status,2,c
  5595  003630  D72F               	goto	i1l8371
  5596  003632  0A01               	xorlw	1	; case 27
  5597  003634  B4D8               	btfsc	status,2,c
  5598  003636  D72C               	goto	i1l8371
  5599  003638  0A07               	xorlw	7	; case 28
  5600  00363A  B4D8               	btfsc	status,2,c
  5601  00363C  D729               	goto	i1l8371
  5602  00363E  0A01               	xorlw	1	; case 29
  5603  003640  B4D8               	btfsc	status,2,c
  5604  003642  D726               	goto	i1l8371
  5605  003644  0A03               	xorlw	3	; case 30
  5606  003646  B4D8               	btfsc	status,2,c
  5607  003648  D723               	goto	i1l8371
  5608  00364A  0A01               	xorlw	1	; case 31
  5609  00364C  B4D8               	btfsc	status,2,c
  5610  00364E  D720               	goto	i1l8371
  5611  003650  0A3F               	xorlw	63	; case 32
  5612  003652  B4D8               	btfsc	status,2,c
  5613  003654  D71D               	goto	i1l8371
  5614  003656  0A01               	xorlw	1	; case 33
  5615  003658  B4D8               	btfsc	status,2,c
  5616  00365A  D71A               	goto	i1l8371
  5617  00365C  0A03               	xorlw	3	; case 34
  5618  00365E  B4D8               	btfsc	status,2,c
  5619  003660  D717               	goto	i1l8371
  5620  003662  0A01               	xorlw	1	; case 35
  5621  003664  B4D8               	btfsc	status,2,c
  5622  003666  D714               	goto	i1l8371
  5623  003668  0A07               	xorlw	7	; case 36
  5624  00366A  B4D8               	btfsc	status,2,c
  5625  00366C  D711               	goto	i1l8371
  5626  00366E  0A01               	xorlw	1	; case 37
  5627  003670  B4D8               	btfsc	status,2,c
  5628  003672  D70E               	goto	i1l8371
  5629  003674  0A03               	xorlw	3	; case 38
  5630  003676  B4D8               	btfsc	status,2,c
  5631  003678  D70B               	goto	i1l8371
  5632  00367A  0A01               	xorlw	1	; case 39
  5633  00367C  B4D8               	btfsc	status,2,c
  5634  00367E  D708               	goto	i1l8371
  5635  003680  0A0F               	xorlw	15	; case 40
  5636  003682  B4D8               	btfsc	status,2,c
  5637  003684  D705               	goto	i1l8371
  5638  003686  0A01               	xorlw	1	; case 41
  5639  003688  B4D8               	btfsc	status,2,c
  5640  00368A  D702               	goto	i1l8371
  5641  00368C  0A03               	xorlw	3	; case 42
  5642  00368E  B4D8               	btfsc	status,2,c
  5643  003690  D6FF               	goto	i1l8371
  5644  003692  0A01               	xorlw	1	; case 43
  5645  003694  B4D8               	btfsc	status,2,c
  5646  003696  D6FC               	goto	i1l8371
  5647  003698  0A07               	xorlw	7	; case 44
  5648  00369A  B4D8               	btfsc	status,2,c
  5649  00369C  D6F9               	goto	i1l8371
  5650  00369E  0A01               	xorlw	1	; case 45
  5651  0036A0  B4D8               	btfsc	status,2,c
  5652  0036A2  D6F6               	goto	i1l8371
  5653  0036A4  0A03               	xorlw	3	; case 46
  5654  0036A6  B4D8               	btfsc	status,2,c
  5655  0036A8  D6F3               	goto	i1l8371
  5656  0036AA  0A01               	xorlw	1	; case 47
  5657  0036AC  B4D8               	btfsc	status,2,c
  5658  0036AE  D6F0               	goto	i1l8371
  5659  0036B0  0A1F               	xorlw	31	; case 48
  5660  0036B2  B4D8               	btfsc	status,2,c
  5661  0036B4  D6ED               	goto	i1l8371
  5662  0036B6  0A01               	xorlw	1	; case 49
  5663  0036B8  B4D8               	btfsc	status,2,c
  5664  0036BA  D6EA               	goto	i1l8371
  5665  0036BC  0A03               	xorlw	3	; case 50
  5666  0036BE  B4D8               	btfsc	status,2,c
  5667  0036C0  D6E7               	goto	i1l8371
  5668  0036C2  0A01               	xorlw	1	; case 51
  5669  0036C4  B4D8               	btfsc	status,2,c
  5670  0036C6  D6E4               	goto	i1l8371
  5671  0036C8  0A07               	xorlw	7	; case 52
  5672  0036CA  B4D8               	btfsc	status,2,c
  5673  0036CC  D6E1               	goto	i1l8371
  5674  0036CE  0A01               	xorlw	1	; case 53
  5675  0036D0  B4D8               	btfsc	status,2,c
  5676  0036D2  D6DE               	goto	i1l8371
  5677  0036D4  0A03               	xorlw	3	; case 54
  5678  0036D6  B4D8               	btfsc	status,2,c
  5679  0036D8  D6DB               	goto	i1l8371
  5680  0036DA  0A01               	xorlw	1	; case 55
  5681  0036DC  B4D8               	btfsc	status,2,c
  5682  0036DE  D6D8               	goto	i1l8371
  5683  0036E0  0A0F               	xorlw	15	; case 56
  5684  0036E2  B4D8               	btfsc	status,2,c
  5685  0036E4  D6D5               	goto	i1l8371
  5686  0036E6  0A01               	xorlw	1	; case 57
  5687  0036E8  B4D8               	btfsc	status,2,c
  5688  0036EA  D6D2               	goto	i1l8371
  5689  0036EC  0A03               	xorlw	3	; case 58
  5690  0036EE  B4D8               	btfsc	status,2,c
  5691  0036F0  D6CF               	goto	i1l8371
  5692  0036F2  0A01               	xorlw	1	; case 59
  5693  0036F4  B4D8               	btfsc	status,2,c
  5694  0036F6  D6CC               	goto	i1l8371
  5695  0036F8  0A07               	xorlw	7	; case 60
  5696  0036FA  B4D8               	btfsc	status,2,c
  5697  0036FC  D6C9               	goto	i1l8371
  5698  0036FE  0A01               	xorlw	1	; case 61
  5699  003700  B4D8               	btfsc	status,2,c
  5700  003702  D6C6               	goto	i1l8371
  5701  003704  0A03               	xorlw	3	; case 62
  5702  003706  B4D8               	btfsc	status,2,c
  5703  003708  D6C3               	goto	i1l8371
  5704  00370A  0A01               	xorlw	1	; case 63
  5705  00370C  B4D8               	btfsc	status,2,c
  5706  00370E  D6C0               	goto	i1l8371
  5707  003710  0A7F               	xorlw	127	; case 64
  5708  003712  B4D8               	btfsc	status,2,c
  5709  003714  D6BD               	goto	i1l8371
  5710  003716  0A01               	xorlw	1	; case 65
  5711  003718  B4D8               	btfsc	status,2,c
  5712  00371A  D6BA               	goto	i1l8371
  5713  00371C  0A03               	xorlw	3	; case 66
  5714  00371E  B4D8               	btfsc	status,2,c
  5715  003720  D6B7               	goto	i1l8371
  5716  003722  0A01               	xorlw	1	; case 67
  5717  003724  B4D8               	btfsc	status,2,c
  5718  003726  D6B4               	goto	i1l8371
  5719  003728  0A07               	xorlw	7	; case 68
  5720  00372A  B4D8               	btfsc	status,2,c
  5721  00372C  D6B1               	goto	i1l8371
  5722  00372E  0A01               	xorlw	1	; case 69
  5723  003730  B4D8               	btfsc	status,2,c
  5724  003732  D6AE               	goto	i1l8371
  5725  003734  0A03               	xorlw	3	; case 70
  5726  003736  B4D8               	btfsc	status,2,c
  5727  003738  D6AB               	goto	i1l8371
  5728  00373A  0A01               	xorlw	1	; case 71
  5729  00373C  B4D8               	btfsc	status,2,c
  5730  00373E  D6A8               	goto	i1l8371
  5731  003740  0A0F               	xorlw	15	; case 72
  5732  003742  B4D8               	btfsc	status,2,c
  5733  003744  D6A5               	goto	i1l8371
  5734  003746  0A01               	xorlw	1	; case 73
  5735  003748  B4D8               	btfsc	status,2,c
  5736  00374A  D6A2               	goto	i1l8371
  5737  00374C  0A03               	xorlw	3	; case 74
  5738  00374E  B4D8               	btfsc	status,2,c
  5739  003750  D69F               	goto	i1l8371
  5740  003752  0A01               	xorlw	1	; case 75
  5741  003754  B4D8               	btfsc	status,2,c
  5742  003756  D69C               	goto	i1l8371
  5743  003758  0A07               	xorlw	7	; case 76
  5744  00375A  B4D8               	btfsc	status,2,c
  5745  00375C  D699               	goto	i1l8371
  5746  00375E  0A01               	xorlw	1	; case 77
  5747  003760  B4D8               	btfsc	status,2,c
  5748  003762  D696               	goto	i1l8371
  5749  003764  0A03               	xorlw	3	; case 78
  5750  003766  B4D8               	btfsc	status,2,c
  5751  003768  D693               	goto	i1l8371
  5752  00376A  0A01               	xorlw	1	; case 79
  5753  00376C  B4D8               	btfsc	status,2,c
  5754  00376E  D690               	goto	i1l8371
  5755  003770  0A1F               	xorlw	31	; case 80
  5756  003772  B4D8               	btfsc	status,2,c
  5757  003774  D68D               	goto	i1l8371
  5758  003776  0A01               	xorlw	1	; case 81
  5759  003778  B4D8               	btfsc	status,2,c
  5760  00377A  D68A               	goto	i1l8371
  5761  00377C  0A03               	xorlw	3	; case 82
  5762  00377E  B4D8               	btfsc	status,2,c
  5763  003780  D687               	goto	i1l8371
  5764  003782  0A01               	xorlw	1	; case 83
  5765  003784  B4D8               	btfsc	status,2,c
  5766  003786  D684               	goto	i1l8371
  5767  003788  0A07               	xorlw	7	; case 84
  5768  00378A  B4D8               	btfsc	status,2,c
  5769  00378C  D681               	goto	i1l8371
  5770  00378E  0A01               	xorlw	1	; case 85
  5771  003790  B4D8               	btfsc	status,2,c
  5772  003792  D67E               	goto	i1l8371
  5773  003794  0A03               	xorlw	3	; case 86
  5774  003796  B4D8               	btfsc	status,2,c
  5775  003798  D67B               	goto	i1l8371
  5776  00379A  0A01               	xorlw	1	; case 87
  5777  00379C  B4D8               	btfsc	status,2,c
  5778  00379E  D678               	goto	i1l8371
  5779  0037A0  0A0F               	xorlw	15	; case 88
  5780  0037A2  B4D8               	btfsc	status,2,c
  5781  0037A4  D675               	goto	i1l8371
  5782  0037A6  0A01               	xorlw	1	; case 89
  5783  0037A8  B4D8               	btfsc	status,2,c
  5784  0037AA  D672               	goto	i1l8371
  5785  0037AC  0A03               	xorlw	3	; case 90
  5786  0037AE  B4D8               	btfsc	status,2,c
  5787  0037B0  D66F               	goto	i1l8371
  5788  0037B2  0A01               	xorlw	1	; case 91
  5789  0037B4  B4D8               	btfsc	status,2,c
  5790  0037B6  D66C               	goto	i1l8371
  5791  0037B8  0A07               	xorlw	7	; case 92
  5792  0037BA  B4D8               	btfsc	status,2,c
  5793  0037BC  D669               	goto	i1l8371
  5794  0037BE  0A01               	xorlw	1	; case 93
  5795  0037C0  B4D8               	btfsc	status,2,c
  5796  0037C2  D666               	goto	i1l8371
  5797  0037C4  0A03               	xorlw	3	; case 94
  5798  0037C6  B4D8               	btfsc	status,2,c
  5799  0037C8  D663               	goto	i1l8371
  5800  0037CA  0A01               	xorlw	1	; case 95
  5801  0037CC  B4D8               	btfsc	status,2,c
  5802  0037CE  D660               	goto	i1l8371
  5803  0037D0  0A3F               	xorlw	63	; case 96
  5804  0037D2  B4D8               	btfsc	status,2,c
  5805  0037D4  D65D               	goto	i1l8371
  5806  0037D6  0A01               	xorlw	1	; case 97
  5807  0037D8  B4D8               	btfsc	status,2,c
  5808  0037DA  D65A               	goto	i1l8371
  5809  0037DC  0A03               	xorlw	3	; case 98
  5810  0037DE  B4D8               	btfsc	status,2,c
  5811  0037E0  D657               	goto	i1l8371
  5812  0037E2  0A01               	xorlw	1	; case 99
  5813  0037E4  B4D8               	btfsc	status,2,c
  5814  0037E6  D654               	goto	i1l8371
  5815  0037E8  0A07               	xorlw	7	; case 100
  5816  0037EA  B4D8               	btfsc	status,2,c
  5817  0037EC  D651               	goto	i1l8371
  5818  0037EE  0A01               	xorlw	1	; case 101
  5819  0037F0  B4D8               	btfsc	status,2,c
  5820  0037F2  D64E               	goto	i1l8371
  5821  0037F4  0A03               	xorlw	3	; case 102
  5822  0037F6  B4D8               	btfsc	status,2,c
  5823  0037F8  D64B               	goto	i1l8371
  5824  0037FA  0A01               	xorlw	1	; case 103
  5825  0037FC  B4D8               	btfsc	status,2,c
  5826  0037FE  D648               	goto	i1l8371
  5827  003800  0A0F               	xorlw	15	; case 104
  5828  003802  B4D8               	btfsc	status,2,c
  5829  003804  D645               	goto	i1l8371
  5830  003806  0A01               	xorlw	1	; case 105
  5831  003808  B4D8               	btfsc	status,2,c
  5832  00380A  D642               	goto	i1l8371
  5833  00380C  0A03               	xorlw	3	; case 106
  5834  00380E  B4D8               	btfsc	status,2,c
  5835  003810  D63F               	goto	i1l8371
  5836  003812  0A01               	xorlw	1	; case 107
  5837  003814  B4D8               	btfsc	status,2,c
  5838  003816  D63C               	goto	i1l8371
  5839  003818  0A07               	xorlw	7	; case 108
  5840  00381A  B4D8               	btfsc	status,2,c
  5841  00381C  D639               	goto	i1l8371
  5842  00381E  0A01               	xorlw	1	; case 109
  5843  003820  B4D8               	btfsc	status,2,c
  5844  003822  D636               	goto	i1l8371
  5845  003824  0A03               	xorlw	3	; case 110
  5846  003826  B4D8               	btfsc	status,2,c
  5847  003828  D633               	goto	i1l8371
  5848  00382A  0A01               	xorlw	1	; case 111
  5849  00382C  B4D8               	btfsc	status,2,c
  5850  00382E  D630               	goto	i1l8371
  5851  003830  0A1F               	xorlw	31	; case 112
  5852  003832  B4D8               	btfsc	status,2,c
  5853  003834  D62D               	goto	i1l8371
  5854  003836  0A01               	xorlw	1	; case 113
  5855  003838  B4D8               	btfsc	status,2,c
  5856  00383A  D62A               	goto	i1l8371
  5857  00383C  0A03               	xorlw	3	; case 114
  5858  00383E  B4D8               	btfsc	status,2,c
  5859  003840  D627               	goto	i1l8371
  5860  003842  0A01               	xorlw	1	; case 115
  5861  003844  B4D8               	btfsc	status,2,c
  5862  003846  D624               	goto	i1l8371
  5863  003848  0A07               	xorlw	7	; case 116
  5864  00384A  B4D8               	btfsc	status,2,c
  5865  00384C  D621               	goto	i1l8371
  5866  00384E  0A01               	xorlw	1	; case 117
  5867  003850  B4D8               	btfsc	status,2,c
  5868  003852  D61E               	goto	i1l8371
  5869  003854  0A03               	xorlw	3	; case 118
  5870  003856  B4D8               	btfsc	status,2,c
  5871  003858  D61B               	goto	i1l8371
  5872  00385A  0A01               	xorlw	1	; case 119
  5873  00385C  B4D8               	btfsc	status,2,c
  5874  00385E  D618               	goto	i1l8371
  5875  003860  0A0F               	xorlw	15	; case 120
  5876  003862  B4D8               	btfsc	status,2,c
  5877  003864  D615               	goto	i1l8371
  5878  003866  0A01               	xorlw	1	; case 121
  5879  003868  B4D8               	btfsc	status,2,c
  5880  00386A  D612               	goto	i1l8371
  5881  00386C  0A03               	xorlw	3	; case 122
  5882  00386E  B4D8               	btfsc	status,2,c
  5883  003870  D60F               	goto	i1l8371
  5884  003872  0A01               	xorlw	1	; case 123
  5885  003874  B4D8               	btfsc	status,2,c
  5886  003876  D60C               	goto	i1l8371
  5887  003878  0A07               	xorlw	7	; case 124
  5888  00387A  B4D8               	btfsc	status,2,c
  5889  00387C  D609               	goto	i1l8371
  5890  00387E  0A01               	xorlw	1	; case 125
  5891  003880  B4D8               	btfsc	status,2,c
  5892  003882  D606               	goto	i1l8371
  5893  003884  0A03               	xorlw	3	; case 126
  5894  003886  B4D8               	btfsc	status,2,c
  5895  003888  D603               	goto	i1l8371
  5896  00388A  0A01               	xorlw	1	; case 127
  5897  00388C  B4D8               	btfsc	status,2,c
  5898  00388E  D600               	goto	i1l8371
  5899  003890  0AFF               	xorlw	255	; case 128
  5900  003892  B4D8               	btfsc	status,2,c
  5901  003894  D5FD               	goto	i1l8371
  5902  003896  D018               	goto	i1l8387
  5903  003898                     i1l8763:
  5904                           
  5905                           ; BSR set to: 1
  5906                           ; Switch size 1, requested type "space"
  5907                           ; Number of cases is 1, Range of values is 0 to 0
  5908                           ; switch strategies available:
  5909                           ; Name         Instructions Cycles
  5910                           ; simple_byte            4     3 (average)
  5911                           ;	Chosen strategy is simple_byte
  5912  003898  5015               	movf	??i1_update+1,w,c
  5913  00389A  0A00               	xorlw	0	; case 0
  5914  00389C  B4D8               	btfsc	status,2,c
  5915  00389E  D613               	goto	i1l8373
  5916  0038A0  D013               	goto	i1l8387
  5917  0038A2                     i1l8765:
  5918                           
  5919                           ; BSR set to: 1
  5920                           ; Switch size 1, requested type "space"
  5921                           ; Number of cases is 1, Range of values is 0 to 0
  5922                           ; switch strategies available:
  5923                           ; Name         Instructions Cycles
  5924                           ; simple_byte            4     3 (average)
  5925                           ;	Chosen strategy is simple_byte
  5926  0038A2  5015               	movf	??i1_update+1,w,c
  5927  0038A4  0A00               	xorlw	0	; case 0
  5928  0038A6  B4D8               	btfsc	status,2,c
  5929  0038A8  D61A               	goto	i1l8375
  5930  0038AA  D00E               	goto	i1l8387
  5931  0038AC                     i1l8767:
  5932                           
  5933                           ; BSR set to: 1
  5934                           ; Switch size 1, requested type "space"
  5935                           ; Number of cases is 1, Range of values is 0 to 0
  5936                           ; switch strategies available:
  5937                           ; Name         Instructions Cycles
  5938                           ; simple_byte            4     3 (average)
  5939                           ;	Chosen strategy is simple_byte
  5940  0038AC  5015               	movf	??i1_update+1,w,c
  5941  0038AE  0A00               	xorlw	0	; case 0
  5942  0038B0  B4D8               	btfsc	status,2,c
  5943  0038B2  D621               	goto	i1l8377
  5944  0038B4  D009               	goto	i1l8387
  5945  0038B6                     i1l8769:
  5946                           
  5947                           ; BSR set to: 1
  5948                           ; Switch size 1, requested type "space"
  5949                           ; Number of cases is 1, Range of values is 0 to 0
  5950                           ; switch strategies available:
  5951                           ; Name         Instructions Cycles
  5952                           ; simple_byte            4     3 (average)
  5953                           ;	Chosen strategy is simple_byte
  5954  0038B6  5015               	movf	??i1_update+1,w,c
  5955  0038B8  0A00               	xorlw	0	; case 0
  5956  0038BA  B4D8               	btfsc	status,2,c
  5957  0038BC  D628               	goto	i1l8379
  5958  0038BE  D004               	goto	i1l8387
  5959  0038C0                     i1l8771:
  5960                           
  5961                           ; BSR set to: 1
  5962                           ; Switch size 1, requested type "space"
  5963                           ; Number of cases is 1, Range of values is 0 to 0
  5964                           ; switch strategies available:
  5965                           ; Name         Instructions Cycles
  5966                           ; simple_byte            4     3 (average)
  5967                           ;	Chosen strategy is simple_byte
  5968  0038C0  5015               	movf	??i1_update+1,w,c
  5969  0038C2  0A00               	xorlw	0	; case 0
  5970  0038C4  B4D8               	btfsc	status,2,c
  5971  0038C6  D62F               	goto	i1l8381
  5972  0038C8                     i1l8387:
  5973                           
  5974                           ;disp.c: 44: screen.changed &= ~(1 << cnt);
  5975  0038C8  C019  F014         	movff	i1update@cnt,??i1_update
  5976  0038CC  0E01               	movlw	1
  5977  0038CE  6E15               	movwf	(??i1_update+1)& (0+255),c
  5978  0038D0  6A16               	clrf	(??i1_update+2)& (0+255),c
  5979  0038D2  2A14               	incf	??i1_update,f,c
  5980  0038D4  D003               	goto	i1u719_24
  5981  0038D6                     i1u719_25:
  5982  0038D6  90D8               	bcf	status,0,c
  5983  0038D8  3615               	rlcf	??i1_update+1,f,c
  5984  0038DA  3616               	rlcf	??i1_update+2,f,c
  5985  0038DC                     i1u719_24:
  5986  0038DC  2E14               	decfsz	??i1_update,f,c
  5987  0038DE  D7FB               	goto	i1u719_25
  5988  0038E0  1C15               	comf	??i1_update+1,w,c
  5989  0038E2  6E17               	movwf	(??i1_update+3)& (0+255),c
  5990  0038E4  1C16               	comf	??i1_update+2,w,c
  5991  0038E6  6E18               	movwf	(??i1_update+4)& (0+255),c
  5992  0038E8  5017               	movf	??i1_update+3,w,c
  5993  0038EA  0101               	movlb	1	; () banked
  5994  0038EC  0101               	movlb	1	; () banked
  5995  0038EE  177A               	andwf	(_screen+11)& (0+255),f,b
  5996  0038F0  5018               	movf	??i1_update+4,w,c
  5997  0038F2  0101               	movlb	1	; () banked
  5998  0038F4  0101               	movlb	1	; () banked
  5999  0038F6  177B               	andwf	(_screen+12)& (0+255),f,b
  6000                           
  6001                           ; BSR set to: 1
  6002  0038F8  0619               	decf	i1update@cnt,f,c
  6003  0038FA  D5C7               	goto	L6
  6004  0038FC                     i1l58:
  6005                           
  6006                           ; BSR set to: 1
  6007  0038FC  0012               	return	
  6008  0038FE                     __end_ofi1_update:
  6009                           	opt stack 0
  6010                           pclatu	equ	0xFFB
  6011                           pclath	equ	0xFFA
  6012                           tblptru	equ	0xFF8
  6013                           tblptrh	equ	0xFF7
  6014                           tblptrl	equ	0xFF6
  6015                           tablat	equ	0xFF5
  6016                           prodh	equ	0xFF4
  6017                           prodl	equ	0xFF3
  6018                           intcon	equ	0xFF2
  6019                           intcon2	equ	0xFF1
  6020                           postinc0	equ	0xFEE
  6021                           fsr0h	equ	0xFEA
  6022                           fsr0l	equ	0xFE9
  6023                           wreg	equ	0xFE8
  6024                           postdec1	equ	0xFE5
  6025                           fsr1h	equ	0xFE2
  6026                           fsr1l	equ	0xFE1
  6027                           bsr	equ	0xFE0
  6028                           indf2	equ	0xFDF
  6029                           fsr2h	equ	0xFDA
  6030                           fsr2l	equ	0xFD9
  6031                           status	equ	0xFD8
  6032                           
  6033 ;; *************** function i1_writeDigit *****************
  6034 ;; Defined at:
  6035 ;;		line 109 in file "disp.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  writeDigit      1   14[COMRAM] unsigned char 
  6038 ;;  writeDigit      1   15[COMRAM] unsigned char 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  writeDigit      1   18[COMRAM] char 
  6041 ;;  writeDigit      1   17[COMRAM] unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;		None               void
  6044 ;; Registers used:
  6045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6051 ;;      Params:         2       0       0       0       0       0       0       0       0
  6052 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6053 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6054 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6055 ;;Total ram usage:        5 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; Hardware stack levels required when called:    9
  6058 ;; This function calls:
  6059 ;;		i1_spi
  6060 ;;		i1_rotate
  6061 ;;		i1_log2
  6062 ;; This function is called by:
  6063 ;;		i1_update
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text18
  6068  006BC6                     __ptext18:
  6069                           	opt stack 0
  6070  006BC6                     i1_writeDigit:
  6071                           	opt stack 14
  6072                           
  6073                           ;disp.c: 110: uint8_t dig = (uint8_t) log2(digit);
  6074                           
  6075                           ; BSR set to: 1
  6076                           ;incstack = 0
  6077                           ;incstack = 0
  6078  006BC6  500F               	movf	i1writeDigit@digit,w,c
  6079  006BC8  6E01               	movwf	?i1_log2,c
  6080  006BCA  6A02               	clrf	?i1_log2+1,c
  6081  006BCC  6A03               	clrf	?i1_log2+2,c
  6082  006BCE  6A04               	clrf	?i1_log2+3,c
  6083  006BD0  EC30  F036         	call	i1_log2	;wreg free
  6084  006BD4  5001               	movf	?i1_log2,w,c
  6085  006BD6  6E12               	movwf	i1writeDigit@dig,c
  6086                           
  6087                           ;disp.c: 111: screen.digits.screen[dig].bits = segs;
  6088  006BD8  5012               	movf	i1writeDigit@dig,w,c
  6089  006BDA  0D01               	mullw	1
  6090  006BDC  0101               	movlb	1	; () banked
  6091  006BDE  0E6F               	movlw	low _screen
  6092  006BE0  24F3               	addwf	prodl,w,c
  6093  006BE2  6ED9               	movwf	fsr2l,c
  6094  006BE4  0101               	movlb	1	; () banked
  6095  006BE6  0E01               	movlw	high _screen
  6096  006BE8  20F4               	addwfc	prodh,w,c
  6097  006BEA  6EDA               	movwf	fsr2h,c
  6098  006BEC  C010  FFDF         	movff	i1writeDigit@segs,indf2
  6099                           
  6100                           ; BSR set to: 1
  6101                           ;disp.c: 114: int8_t cnt;
  6102                           ;disp.c: 115: for (cnt = 7; cnt >= 0; cnt--)
  6103  006BF0  6E11               	movwf	??i1_writeDigit& (0+255),c
  6104  006BF2  0E07               	movlw	7
  6105  006BF4  6E13               	movwf	i1writeDigit@cnt,c
  6106  006BF6  5011               	movf	??i1_writeDigit& (0+255),w,c
  6107  006BF8                     
  6108                           ; BSR set to: 1
  6109  006BF8  BE13               	btfsc	i1writeDigit@cnt,7,c
  6110  006BFA  D00B               	goto	i1l88
  6111                           
  6112                           ;disp.c: 116: {
  6113                           ;disp.c: 118: spi(cnt + 1, rotate(cnt));
  6114                           
  6115                           ; BSR set to: 1
  6116                           
  6117                           ; BSR set to: 1
  6118  006BFC  2813               	incf	i1writeDigit@cnt,w,c
  6119  006BFE  6E07               	movwf	?i1_spi,c
  6120  006C00  C013  F001         	movff	i1writeDigit@cnt,?i1_rotate
  6121  006C04  EC62  F035         	call	i1_rotate	;wreg free
  6122  006C08  6E08               	movwf	?i1_spi+1,c
  6123  006C0A  EC16  F031         	call	i1_spi	;wreg free
  6124  006C0E  0613               	decf	i1writeDigit@cnt,f,c
  6125  006C10  D7F3               	goto	L7
  6126  006C12                     i1l88:
  6127  006C12  0012               	return	
  6128  006C14                     __end_ofi1_writeDigit:
  6129                           	opt stack 0
  6130                           pclatu	equ	0xFFB
  6131                           pclath	equ	0xFFA
  6132                           tblptru	equ	0xFF8
  6133                           tblptrh	equ	0xFF7
  6134                           tblptrl	equ	0xFF6
  6135                           tablat	equ	0xFF5
  6136                           prodh	equ	0xFF4
  6137                           prodl	equ	0xFF3
  6138                           intcon	equ	0xFF2
  6139                           intcon2	equ	0xFF1
  6140                           postinc0	equ	0xFEE
  6141                           fsr0h	equ	0xFEA
  6142                           fsr0l	equ	0xFE9
  6143                           wreg	equ	0xFE8
  6144                           postdec1	equ	0xFE5
  6145                           fsr1h	equ	0xFE2
  6146                           fsr1l	equ	0xFE1
  6147                           bsr	equ	0xFE0
  6148                           indf2	equ	0xFDF
  6149                           fsr2h	equ	0xFDA
  6150                           fsr2l	equ	0xFD9
  6151                           status	equ	0xFD8
  6152                           
  6153 ;; *************** function i1_log2 *****************
  6154 ;; Defined at:
  6155 ;;		line 48 in file "defs.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  log2            4    0[COMRAM] unsigned long 
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;  log2            4    4[COMRAM] unsigned long 
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  4    0[COMRAM] unsigned long 
  6162 ;; Registers used:
  6163 ;;		wreg, status,2, status,0
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6169 ;;      Params:         4       0       0       0       0       0       0       0       0
  6170 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6172 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6173 ;;Total ram usage:        8 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:    7
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		i1_writeDigit
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text19
  6184  006C60                     __ptext19:
  6185                           	opt stack 0
  6186  006C60                     i1_log2:
  6187                           	opt stack 15
  6188                           
  6189                           ;defs.c: 49: uint32_t log2Val = 0;
  6190                           
  6191                           ;incstack = 0
  6192                           ;incstack = 0
  6193  006C60  0E00               	movlw	0
  6194  006C62  6E05               	movwf	i1log2@log2Val,c
  6195  006C64  0E00               	movlw	0
  6196  006C66  6E06               	movwf	i1log2@log2Val+1,c
  6197  006C68  0E00               	movlw	0
  6198  006C6A  6E07               	movwf	i1log2@log2Val+2,c
  6199  006C6C  0E00               	movlw	0
  6200  006C6E  6E08               	movwf	i1log2@log2Val+3,c
  6201                           
  6202                           ;defs.c: 50: while (num >>= 1) log2Val++;
  6203  006C70  D008               	goto	i1l508
  6204  006C72                     i1l8263:
  6205  006C72  0E01               	movlw	1
  6206  006C74  2605               	addwf	i1log2@log2Val,f,c
  6207  006C76  0E00               	movlw	0
  6208  006C78  2206               	addwfc	i1log2@log2Val+1,f,c
  6209  006C7A  0E00               	movlw	0
  6210  006C7C  2207               	addwfc	i1log2@log2Val+2,f,c
  6211  006C7E  0E00               	movlw	0
  6212  006C80  2208               	addwfc	i1log2@log2Val+3,f,c
  6213  006C82                     i1l508:
  6214  006C82  90D8               	bcf	status,0,c
  6215  006C84  3204               	rrcf	i1log2@num+3,f,c
  6216  006C86  3203               	rrcf	i1log2@num+2,f,c
  6217  006C88  3202               	rrcf	i1log2@num+1,f,c
  6218  006C8A  3201               	rrcf	i1log2@num,f,c
  6219  006C8C  5004               	movf	(i1log2@num+3)& (0+255),w,c
  6220  006C8E  1001               	iorwf	i1log2@num& (0+255),w,c
  6221  006C90  1002               	iorwf	(i1log2@num+1)& (0+255),w,c
  6222  006C92  1003               	iorwf	(i1log2@num+2)& (0+255),w,c
  6223  006C94  A4D8               	btfss	status,2,c
  6224  006C96  D7ED               	goto	i1l8263
  6225                           
  6226                           ;defs.c: 51: return log2Val;
  6227  006C98  C005  F001         	movff	i1log2@log2Val,?i1_log2
  6228  006C9C  C006  F002         	movff	i1log2@log2Val+1,?i1_log2+1
  6229  006CA0  C007  F003         	movff	i1log2@log2Val+2,?i1_log2+2
  6230  006CA4  C008  F004         	movff	i1log2@log2Val+3,?i1_log2+3
  6231  006CA8  0012               	return	
  6232  006CAA                     __end_ofi1_log2:
  6233                           	opt stack 0
  6234                           pclatu	equ	0xFFB
  6235                           pclath	equ	0xFFA
  6236                           tblptru	equ	0xFF8
  6237                           tblptrh	equ	0xFF7
  6238                           tblptrl	equ	0xFF6
  6239                           tablat	equ	0xFF5
  6240                           prodh	equ	0xFF4
  6241                           prodl	equ	0xFF3
  6242                           intcon	equ	0xFF2
  6243                           intcon2	equ	0xFF1
  6244                           postinc0	equ	0xFEE
  6245                           fsr0h	equ	0xFEA
  6246                           fsr0l	equ	0xFE9
  6247                           wreg	equ	0xFE8
  6248                           postdec1	equ	0xFE5
  6249                           fsr1h	equ	0xFE2
  6250                           fsr1l	equ	0xFE1
  6251                           bsr	equ	0xFE0
  6252                           indf2	equ	0xFDF
  6253                           fsr2h	equ	0xFDA
  6254                           fsr2l	equ	0xFD9
  6255                           status	equ	0xFD8
  6256                           
  6257 ;; *************** function i1_rotate *****************
  6258 ;; Defined at:
  6259 ;;		line 208 in file "disp.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  rotate          1    0[COMRAM] unsigned char 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  rotate          1    5[COMRAM] char 
  6264 ;;  rotate          1    4[COMRAM] unsigned char 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1    wreg      unsigned char 
  6267 ;; Registers used:
  6268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6274 ;;      Params:         1       0       0       0       0       0       0       0       0
  6275 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6276 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6277 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6278 ;;Total ram usage:        6 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    7
  6281 ;; This function calls:
  6282 ;;		Nothing
  6283 ;; This function is called by:
  6284 ;;		i1_writeDigit
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text20
  6289  006AC4                     __ptext20:
  6290                           	opt stack 0
  6291  006AC4                     i1_rotate:
  6292                           	opt stack 15
  6293                           
  6294                           ;disp.c: 209: uint8_t ret = 0;
  6295                           
  6296                           ;incstack = 0
  6297                           ;incstack = 0
  6298  006AC4  6E02               	movwf	??i1_rotate& (0+255),c
  6299  006AC6  0E00               	movlw	0
  6300  006AC8  6E05               	movwf	i1rotate@ret,c
  6301  006ACA  5002               	movf	??i1_rotate& (0+255),w,c
  6302                           
  6303                           ;disp.c: 210: int8_t cnt;
  6304                           ;disp.c: 211: for (cnt = 7; cnt >= 0; cnt--)
  6305  006ACC  6E02               	movwf	??i1_rotate& (0+255),c
  6306  006ACE  0E07               	movlw	7
  6307  006AD0  6E06               	movwf	i1rotate@cnt,c
  6308  006AD2  5002               	movf	??i1_rotate& (0+255),w,c
  6309  006AD4  BE06               	btfsc	i1rotate@cnt,7,c
  6310  006AD6  D022               	goto	i1l8253
  6311                           
  6312                           ;disp.c: 212: {
  6313                           ;disp.c: 213: ret |= ((screen.digits.screen[cnt].bits >> seg) & 1) << cnt;
  6314  006AD8  C006  F002         	movff	i1rotate@cnt,??i1_rotate
  6315  006ADC  C001  F003         	movff	i1rotate@seg,??i1_rotate+1
  6316  006AE0  5006               	movf	i1rotate@cnt,w,c
  6317  006AE2  0D01               	mullw	1
  6318  006AE4  0101               	movlb	1	; () banked
  6319  006AE6  0E6F               	movlw	low _screen
  6320  006AE8  24F3               	addwf	prodl,w,c
  6321  006AEA  6ED9               	movwf	fsr2l,c
  6322  006AEC  0101               	movlb	1	; () banked
  6323  006AEE  0E01               	movlw	high _screen
  6324  006AF0  20F4               	addwfc	prodh,w,c
  6325  006AF2  6EDA               	movwf	fsr2h,c
  6326  006AF4  50DF               	movf	indf2,w,c
  6327  006AF6  6E04               	movwf	(??i1_rotate+2)& (0+255),c
  6328  006AF8  2A03               	incf	??i1_rotate+1,f,c
  6329  006AFA  D002               	goto	i1u696_24
  6330  006AFC                     i1u696_25:
  6331  006AFC  90D8               	bcf	status,0,c
  6332  006AFE  3204               	rrcf	??i1_rotate+2,f,c
  6333  006B00                     i1u696_24:
  6334  006B00  2E03               	decfsz	??i1_rotate+1,f,c
  6335  006B02  D7FC               	goto	i1u696_25
  6336  006B04  0E01               	movlw	1
  6337  006B06  1604               	andwf	??i1_rotate+2,f,c
  6338  006B08  2A02               	incf	??i1_rotate,f,c
  6339  006B0A  D002               	goto	i1u697_24
  6340  006B0C                     i1u697_25:
  6341  006B0C  90D8               	bcf	status,0,c
  6342  006B0E  3604               	rlcf	??i1_rotate+2,f,c
  6343  006B10                     i1u697_24:
  6344  006B10  2E02               	decfsz	??i1_rotate,f,c
  6345  006B12  D7FC               	goto	i1u697_25
  6346  006B14  5004               	movf	??i1_rotate+2,w,c
  6347  006B16  1205               	iorwf	i1rotate@ret,f,c
  6348                           
  6349                           ; BSR set to: 1
  6350  006B18  0606               	decf	i1rotate@cnt,f,c
  6351  006B1A  D7DC               	goto	L8
  6352  006B1C                     i1l8253:
  6353                           
  6354                           ;disp.c: 214: }
  6355                           ;disp.c: 215: return ret;
  6356  006B1C  5005               	movf	i1rotate@ret,w,c
  6357  006B1E  0012               	return	
  6358  006B20                     __end_ofi1_rotate:
  6359                           	opt stack 0
  6360                           pclatu	equ	0xFFB
  6361                           pclath	equ	0xFFA
  6362                           tblptru	equ	0xFF8
  6363                           tblptrh	equ	0xFF7
  6364                           tblptrl	equ	0xFF6
  6365                           tablat	equ	0xFF5
  6366                           prodh	equ	0xFF4
  6367                           prodl	equ	0xFF3
  6368                           intcon	equ	0xFF2
  6369                           intcon2	equ	0xFF1
  6370                           postinc0	equ	0xFEE
  6371                           fsr0h	equ	0xFEA
  6372                           fsr0l	equ	0xFE9
  6373                           wreg	equ	0xFE8
  6374                           postdec1	equ	0xFE5
  6375                           fsr1h	equ	0xFE2
  6376                           fsr1l	equ	0xFE1
  6377                           bsr	equ	0xFE0
  6378                           indf2	equ	0xFDF
  6379                           fsr2h	equ	0xFDA
  6380                           fsr2l	equ	0xFD9
  6381                           status	equ	0xFD8
  6382                           
  6383 ;; *************** function i1_spi *****************
  6384 ;; Defined at:
  6385 ;;		line 87 in file "disp.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  spi             1    6[COMRAM] unsigned char 
  6388 ;;  spi             1    7[COMRAM] unsigned char 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  spi             2   11[COMRAM] unsigned int 
  6391 ;;  spi             1   13[COMRAM] char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;		None               void
  6394 ;; Registers used:
  6395 ;;		wreg, status,2, status,0, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6401 ;;      Params:         2       0       0       0       0       0       0       0       0
  6402 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6403 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6404 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6405 ;;Total ram usage:        8 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    8
  6408 ;; This function calls:
  6409 ;;		i1_wait
  6410 ;; This function is called by:
  6411 ;;		i1_update
  6412 ;;		i1_writeDigit
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text21
  6417  00622C                     __ptext21:
  6418                           	opt stack 0
  6419  00622C                     i1_spi:
  6420                           	opt stack 14
  6421                           
  6422                           ;disp.c: 88: uint16_t send = (addr << 8) | data;
  6423                           
  6424                           ;incstack = 0
  6425                           ;incstack = 0
  6426  00622C  5008               	movf	i1spi@data,w,c
  6427  00622E  C007  F009         	movff	i1spi@addr,??i1_spi
  6428  006232  6A0A               	clrf	(??i1_spi+1)& (0+255),c
  6429  006234  C009  F00A         	movff	??i1_spi,??i1_spi+1
  6430  006238  6A09               	clrf	??i1_spi,c
  6431  00623A  1009               	iorwf	??i1_spi,w,c
  6432  00623C  6E0C               	movwf	i1spi@send,c
  6433  00623E  500A               	movf	??i1_spi+1,w,c
  6434  006240  6E0D               	movwf	i1spi@send+1,c
  6435                           
  6436                           ;disp.c: 89: LATA4 = 0;
  6437  006242  9889               	bcf	3977,4,c	;volatile
  6438                           
  6439                           ;disp.c: 90: LATA1 = 0;
  6440  006244  9289               	bcf	3977,1,c	;volatile
  6441                           
  6442                           ;disp.c: 91: LATA3 = 0;
  6443  006246  9689               	bcf	3977,3,c	;volatile
  6444                           
  6445                           ;disp.c: 92: int8_t cnt;
  6446                           ;disp.c: 93: for (cnt = 15; cnt >= 0; cnt--)
  6447  006248  6E09               	movwf	??i1_spi& (0+255),c
  6448  00624A  0E0F               	movlw	15
  6449  00624C  6E0E               	movwf	i1spi@cnt,c
  6450  00624E  5009               	movf	??i1_spi& (0+255),w,c
  6451  006250  BE0E               	btfsc	i1spi@cnt,7,c
  6452  006252  D02D               	goto	i1l82
  6453                           
  6454                           ;disp.c: 94: {
  6455                           ;disp.c: 95: LATA1 = 0x1 & (send >> cnt);
  6456  006254  C00E  F009         	movff	i1spi@cnt,??i1_spi
  6457  006258  C00C  F00A         	movff	i1spi@send,??i1_spi+1
  6458  00625C  C00D  F00B         	movff	i1spi@send+1,??i1_spi+2
  6459  006260  2A09               	incf	??i1_spi,f,c
  6460  006262  D003               	goto	i1u709_24
  6461  006264                     i1u709_25:
  6462  006264  90D8               	bcf	status,0,c
  6463  006266  320B               	rrcf	??i1_spi+2,f,c
  6464  006268  320A               	rrcf	??i1_spi+1,f,c
  6465  00626A                     i1u709_24:
  6466  00626A  2E09               	decfsz	??i1_spi,f,c
  6467  00626C  D7FB               	goto	i1u709_25
  6468  00626E  300A               	rrcf	??i1_spi+1,w,c
  6469  006270  A0D8               	btfss	status,0,c
  6470  006272  D001               	bra	i1u710_25
  6471  006274  8289               	bsf	3977,1,c	;volatile
  6472  006276                     i1u710_25:
  6473  006276  B0D8               	btfsc	status,0,c
  6474  006278  D001               	bra	i1u710_26
  6475  00627A  9289               	bcf	3977,1,c	;volatile
  6476  00627C                     i1u710_26:
  6477                           
  6478                           ;disp.c: 96: wait(0);
  6479  00627C  0E00               	movlw	0
  6480  00627E  6E01               	movwf	?i1_wait,c
  6481  006280  0E00               	movlw	0
  6482  006282  6E02               	movwf	?i1_wait+1,c
  6483  006284  0E00               	movlw	0
  6484  006286  6E03               	movwf	?i1_wait+2,c
  6485  006288  0E00               	movlw	0
  6486  00628A  6E04               	movwf	?i1_wait+3,c
  6487  00628C  ECD0  F037         	call	i1_wait	;wreg free
  6488                           
  6489                           ;disp.c: 97: LATA3 = 1;
  6490  006290  8689               	bsf	3977,3,c	;volatile
  6491                           
  6492                           ;disp.c: 98: wait(0);
  6493  006292  0E00               	movlw	0
  6494  006294  6E01               	movwf	?i1_wait,c
  6495  006296  0E00               	movlw	0
  6496  006298  6E02               	movwf	?i1_wait+1,c
  6497  00629A  0E00               	movlw	0
  6498  00629C  6E03               	movwf	?i1_wait+2,c
  6499  00629E  0E00               	movlw	0
  6500  0062A0  6E04               	movwf	?i1_wait+3,c
  6501  0062A2  ECD0  F037         	call	i1_wait	;wreg free
  6502                           
  6503                           ;disp.c: 99: LATA3 = 0;
  6504  0062A6  9689               	bcf	3977,3,c	;volatile
  6505                           
  6506                           ;disp.c: 100: LATA1 = 0;
  6507  0062A8  9289               	bcf	3977,1,c	;volatile
  6508  0062AA  060E               	decf	i1spi@cnt,f,c
  6509  0062AC  D7D1               	goto	L9
  6510  0062AE                     i1l82:
  6511                           
  6512                           ;disp.c: 101: }
  6513                           ;disp.c: 102: LATA4 = 1;
  6514  0062AE  8889               	bsf	3977,4,c	;volatile
  6515                           
  6516                           ;disp.c: 103: LATA3 = 0;
  6517  0062B0  9689               	bcf	3977,3,c	;volatile
  6518                           
  6519                           ;disp.c: 104: LATA1 = 0;
  6520  0062B2  9289               	bcf	3977,1,c	;volatile
  6521                           
  6522                           ;disp.c: 105: wait(0);
  6523  0062B4  0E00               	movlw	0
  6524  0062B6  6E01               	movwf	?i1_wait,c
  6525  0062B8  0E00               	movlw	0
  6526  0062BA  6E02               	movwf	?i1_wait+1,c
  6527  0062BC  0E00               	movlw	0
  6528  0062BE  6E03               	movwf	?i1_wait+2,c
  6529  0062C0  0E00               	movlw	0
  6530  0062C2  6E04               	movwf	?i1_wait+3,c
  6531  0062C4  ECD0  F037         	call	i1_wait	;wreg free
  6532  0062C8  0012               	return	
  6533  0062CA                     __end_ofi1_spi:
  6534                           	opt stack 0
  6535                           pclatu	equ	0xFFB
  6536                           pclath	equ	0xFFA
  6537                           tblptru	equ	0xFF8
  6538                           tblptrh	equ	0xFF7
  6539                           tblptrl	equ	0xFF6
  6540                           tablat	equ	0xFF5
  6541                           prodh	equ	0xFF4
  6542                           prodl	equ	0xFF3
  6543                           intcon	equ	0xFF2
  6544                           intcon2	equ	0xFF1
  6545                           postinc0	equ	0xFEE
  6546                           fsr0h	equ	0xFEA
  6547                           fsr0l	equ	0xFE9
  6548                           wreg	equ	0xFE8
  6549                           postdec1	equ	0xFE5
  6550                           fsr1h	equ	0xFE2
  6551                           fsr1l	equ	0xFE1
  6552                           bsr	equ	0xFE0
  6553                           indf2	equ	0xFDF
  6554                           fsr2h	equ	0xFDA
  6555                           fsr2l	equ	0xFD9
  6556                           status	equ	0xFD8
  6557                           
  6558 ;; *************** function i1_wait *****************
  6559 ;; Defined at:
  6560 ;;		line 4 in file "defs.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  wait            4    0[COMRAM] unsigned long 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;		None               void
  6567 ;; Registers used:
  6568 ;;		wreg, status,2, status,0
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6574 ;;      Params:         4       0       0       0       0       0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6577 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6578 ;;Total ram usage:        4 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:    7
  6581 ;; This function calls:
  6582 ;;		Nothing
  6583 ;; This function is called by:
  6584 ;;		i1_spi
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text22
  6589  006FA0                     __ptext22:
  6590                           	opt stack 0
  6591  006FA0                     i1_wait:
  6592                           	opt stack 14
  6593  006FA0                     i1l8259:
  6594  006FA0  0601               	decf	i1wait@count,f,c
  6595  006FA2  0E00               	movlw	0
  6596  006FA4  5A02               	subwfb	i1wait@count+1,f,c
  6597  006FA6  5A03               	subwfb	i1wait@count+2,f,c
  6598  006FA8  5A04               	subwfb	i1wait@count+3,f,c
  6599  006FAA  2801               	incf	i1wait@count& (0+255),w,c
  6600  006FAC  B4D8               	btfsc	status,2,c
  6601  006FAE  2802               	incf	(i1wait@count+1)& (0+255),w,c
  6602  006FB0  B4D8               	btfsc	status,2,c
  6603  006FB2  2803               	incf	(i1wait@count+2)& (0+255),w,c
  6604  006FB4  B4D8               	btfsc	status,2,c
  6605  006FB6  2804               	incf	(i1wait@count+3)& (0+255),w,c
  6606  006FB8  B4D8               	btfsc	status,2,c
  6607  006FBA  0012               	return	
  6608  006FBC  D7F1               	goto	i1l8259
  6609  006FBE                     __end_ofi1_wait:
  6610                           	opt stack 0
  6611                           pclatu	equ	0xFFB
  6612                           pclath	equ	0xFFA
  6613                           tblptru	equ	0xFF8
  6614                           tblptrh	equ	0xFF7
  6615                           tblptrl	equ	0xFF6
  6616                           tablat	equ	0xFF5
  6617                           prodh	equ	0xFF4
  6618                           prodl	equ	0xFF3
  6619                           intcon	equ	0xFF2
  6620                           intcon2	equ	0xFF1
  6621                           postinc0	equ	0xFEE
  6622                           fsr0h	equ	0xFEA
  6623                           fsr0l	equ	0xFE9
  6624                           wreg	equ	0xFE8
  6625                           postdec1	equ	0xFE5
  6626                           fsr1h	equ	0xFE2
  6627                           fsr1l	equ	0xFE1
  6628                           bsr	equ	0xFE0
  6629                           indf2	equ	0xFDF
  6630                           fsr2h	equ	0xFDA
  6631                           fsr2l	equ	0xFD9
  6632                           status	equ	0xFD8
  6633                           
  6634 ;; *************** function _advMenu *****************
  6635 ;; Defined at:
  6636 ;;		line 14 in file "menu.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;		None
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;		None
  6641 ;; Return value:  Size  Location     Type
  6642 ;;		None               void
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6650 ;;      Params:         0       0       0       0       0       0       0       0       0
  6651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6652 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6653 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6654 ;;Total ram usage:        2 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    7
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		_buttons
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text23
  6665  006846                     __ptext23:
  6666                           	opt stack 0
  6667  006846                     _advMenu:
  6668                           	opt stack 17
  6669                           
  6670                           ;menu.c: 15: if (menu == &rtcMenu)
  6671                           
  6672                           ;incstack = 0
  6673                           ;incstack = 0
  6674  006846  0E85               	movlw	low _rtcMenu
  6675  006848  6E01               	movwf	??_advMenu& (0+255),c
  6676  00684A  0E01               	movlw	high _rtcMenu
  6677  00684C  6E02               	movwf	(??_advMenu+1)& (0+255),c
  6678  00684E  5002               	movf	??_advMenu+1,w,c
  6679  006850  185B               	xorwf	_menu+1,w,c
  6680  006852  E102               	bnz	i1u588_25
  6681  006854  5001               	movf	??_advMenu,w,c
  6682  006856  185A               	xorwf	_menu,w,c
  6683  006858                     i1u588_25:
  6684  006858  A4D8               	btfss	status,2,c
  6685  00685A  D006               	goto	i1l7549
  6686                           
  6687                           ;menu.c: 16: {
  6688                           ;menu.c: 17: menu = &tempMenu;
  6689  00685C  0100               	movlb	0	; () banked
  6690  00685E  0E00               	movlw	high _tempMenu
  6691  006860  6E5B               	movwf	_menu+1,c
  6692  006862  0100               	movlb	0	; () banked
  6693  006864  0EFB               	movlw	low _tempMenu
  6694  006866  D010               	goto	L10
  6695  006868                     i1l7549:
  6696                           
  6697                           ;menu.c: 19: else if (menu == &tempMenu)
  6698  006868  0EFB               	movlw	low _tempMenu
  6699  00686A  6E01               	movwf	??_advMenu& (0+255),c
  6700  00686C  0E00               	movlw	high _tempMenu
  6701  00686E  6E02               	movwf	(??_advMenu+1)& (0+255),c
  6702  006870  5002               	movf	??_advMenu+1,w,c
  6703  006872  185B               	xorwf	_menu+1,w,c
  6704  006874  E102               	bnz	i1u589_25
  6705  006876  5001               	movf	??_advMenu,w,c
  6706  006878  185A               	xorwf	_menu,w,c
  6707  00687A                     i1u589_25:
  6708  00687A  A4D8               	btfss	status,2,c
  6709  00687C  D006               	goto	i1l7553
  6710                           
  6711                           ;menu.c: 20: {
  6712                           ;menu.c: 21: menu = &rtcMenu;
  6713  00687E  0101               	movlb	1	; () banked
  6714  006880  0E01               	movlw	high _rtcMenu
  6715  006882  6E5B               	movwf	_menu+1,c
  6716  006884  0101               	movlb	1	; () banked
  6717  006886  0E85               	movlw	low _rtcMenu
  6718  006888                     L10:
  6719  006888  6E5A               	movwf	_menu,c
  6720  00688A                     i1l7553:
  6721                           
  6722                           ;menu.c: 22: }
  6723                           ;menu.c: 23: screen.changed |= rtcMenu.digits | tempMenu.digits;
  6724  00688A  0101               	movlb	1	; () banked
  6725  00688C  0101               	movlb	1	; () banked
  6726  00688E  5186               	movf	(_rtcMenu+1)& (0+255),w,b
  6727  006890  0100               	movlb	0	; () banked
  6728  006892  0100               	movlb	0	; () banked
  6729  006894  11FC               	iorwf	(_tempMenu+1)& (0+255),w,b
  6730  006896  6E01               	movwf	??_advMenu& (0+255),c
  6731  006898  5001               	movf	??_advMenu,w,c
  6732  00689A  0101               	movlb	1	; () banked
  6733  00689C  0101               	movlb	1	; () banked
  6734  00689E  137A               	iorwf	(_screen+11)& (0+255),f,b
  6735                           
  6736                           ; BSR set to: 1
  6737                           ;menu.c: 24: LATA5 = (menu == &tempMenu) ? 0 : 1;
  6738  0068A0  0EFB               	movlw	low _tempMenu
  6739  0068A2  6E01               	movwf	??_advMenu& (0+255),c
  6740  0068A4  0E00               	movlw	high _tempMenu
  6741  0068A6  6E02               	movwf	(??_advMenu+1)& (0+255),c
  6742  0068A8  5002               	movf	??_advMenu+1,w,c
  6743  0068AA  185B               	xorwf	_menu+1,w,c
  6744  0068AC  E102               	bnz	i1u590_25
  6745  0068AE  5001               	movf	??_advMenu,w,c
  6746  0068B0  185A               	xorwf	_menu,w,c
  6747  0068B2                     i1u590_25:
  6748  0068B2  B4D8               	btfsc	status,2,c
  6749  0068B4  D002               	goto	i1u590_20
  6750  0068B6  8A89               	bsf	3977,5,c	;volatile
  6751  0068B8  D001               	goto	i1u591_25
  6752  0068BA                     i1u590_20:
  6753  0068BA  9A89               	bcf	3977,5,c	;volatile
  6754  0068BC                     i1u591_25:
  6755  0068BC  0012               	return	
  6756  0068BE                     __end_of_advMenu:
  6757                           	opt stack 0
  6758                           pclatu	equ	0xFFB
  6759                           pclath	equ	0xFFA
  6760                           tblptru	equ	0xFF8
  6761                           tblptrh	equ	0xFF7
  6762                           tblptrl	equ	0xFF6
  6763                           tablat	equ	0xFF5
  6764                           prodh	equ	0xFF4
  6765                           prodl	equ	0xFF3
  6766                           intcon	equ	0xFF2
  6767                           intcon2	equ	0xFF1
  6768                           postinc0	equ	0xFEE
  6769                           fsr0h	equ	0xFEA
  6770                           fsr0l	equ	0xFE9
  6771                           wreg	equ	0xFE8
  6772                           postdec1	equ	0xFE5
  6773                           fsr1h	equ	0xFE2
  6774                           fsr1l	equ	0xFE1
  6775                           bsr	equ	0xFE0
  6776                           indf2	equ	0xFDF
  6777                           fsr2h	equ	0xFDA
  6778                           fsr2l	equ	0xFD9
  6779                           status	equ	0xFD8
  6780                           
  6781 ;; *************** function _advState *****************
  6782 ;; Defined at:
  6783 ;;		line 7 in file "menu.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;		None
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      unsigned char 
  6790 ;; Registers used:
  6791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6797 ;;      Params:         0       0       0       0       0       0       0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6799 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6800 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6801 ;;Total ram usage:        2 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    8
  6804 ;; This function calls:
  6805 ;;		___awmod
  6806 ;; This function is called by:
  6807 ;;		_buttons
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text24
  6812  006A00                     __ptext24:
  6813                           	opt stack 0
  6814  006A00                     _advState:
  6815                           	opt stack 16
  6816                           
  6817                           ;menu.c: 8: menu->state = menu->num_states % (menu->state + 1);
  6818                           
  6819                           ;incstack = 0
  6820                           ;incstack = 0
  6821  006A00  EE20 F002          	lfsr	2,2
  6822  006A04  505A               	movf	_menu,w,c
  6823  006A06  26D9               	addwf	fsr2l,f,c
  6824  006A08  505B               	movf	_menu+1,w,c
  6825  006A0A  22DA               	addwfc	fsr2h,f,c
  6826  006A0C  50DF               	movf	indf2,w,c
  6827  006A0E  6E08               	movwf	??_advState& (0+255),c
  6828  006A10  5008               	movf	??_advState,w,c
  6829  006A12  6E01               	movwf	?___awmod,c
  6830  006A14  6A02               	clrf	?___awmod+1,c
  6831  006A16  C05A  FFD9         	movff	_menu,fsr2l
  6832  006A1A  C05B  FFDA         	movff	_menu+1,fsr2h
  6833  006A1E  50DF               	movf	indf2,w,c
  6834  006A20  6E09               	movwf	(??_advState+1)& (0+255),c
  6835  006A22  0E01               	movlw	1
  6836  006A24  2409               	addwf	??_advState+1,w,c
  6837  006A26  6E03               	movwf	?___awmod+2,c
  6838  006A28  6A04               	clrf	?___awmod+3,c
  6839  006A2A  0E00               	movlw	0
  6840  006A2C  2204               	addwfc	?___awmod+3,f,c
  6841  006A2E  ECA8  F033         	call	___awmod	;wreg free
  6842  006A32  5001               	movf	?___awmod,w,c
  6843  006A34  C05A  FFD9         	movff	_menu,fsr2l
  6844  006A38  C05B  FFDA         	movff	_menu+1,fsr2h
  6845  006A3C  6EDF               	movwf	indf2,c
  6846                           
  6847                           ;menu.c: 9: screen.changed |= menu->digits;
  6848  006A3E  EE20 F001          	lfsr	2,1
  6849  006A42  505A               	movf	_menu,w,c
  6850  006A44  26D9               	addwf	fsr2l,f,c
  6851  006A46  505B               	movf	_menu+1,w,c
  6852  006A48  22DA               	addwfc	fsr2h,f,c
  6853  006A4A  50DF               	movf	indf2,w,c
  6854  006A4C  6E08               	movwf	??_advState& (0+255),c
  6855  006A4E  5008               	movf	??_advState,w,c
  6856  006A50  0101               	movlb	1	; () banked
  6857  006A52  0101               	movlb	1	; () banked
  6858  006A54  137A               	iorwf	(_screen+11)& (0+255),f,b
  6859                           
  6860                           ; BSR set to: 1
  6861                           ;menu.c: 10: return menu->state;
  6862  006A56  C05A  FFD9         	movff	_menu,fsr2l
  6863  006A5A  C05B  FFDA         	movff	_menu+1,fsr2h
  6864  006A5E  50DF               	movf	indf2,w,c
  6865                           
  6866                           ; BSR set to: 1
  6867                           
  6868                           ; BSR set to: 1
  6869  006A60  0012               	return	
  6870  006A62                     __end_of_advState:
  6871                           	opt stack 0
  6872                           pclatu	equ	0xFFB
  6873                           pclath	equ	0xFFA
  6874                           tblptru	equ	0xFF8
  6875                           tblptrh	equ	0xFF7
  6876                           tblptrl	equ	0xFF6
  6877                           tablat	equ	0xFF5
  6878                           prodh	equ	0xFF4
  6879                           prodl	equ	0xFF3
  6880                           intcon	equ	0xFF2
  6881                           intcon2	equ	0xFF1
  6882                           postinc0	equ	0xFEE
  6883                           fsr0h	equ	0xFEA
  6884                           fsr0l	equ	0xFE9
  6885                           wreg	equ	0xFE8
  6886                           postdec1	equ	0xFE5
  6887                           fsr1h	equ	0xFE2
  6888                           fsr1l	equ	0xFE1
  6889                           bsr	equ	0xFE0
  6890                           indf2	equ	0xFDF
  6891                           fsr2h	equ	0xFDA
  6892                           fsr2l	equ	0xFD9
  6893                           status	equ	0xFD8
  6894                           
  6895 ;; *************** function ___awmod *****************
  6896 ;; Defined at:
  6897 ;;		line 10 in file "/usr/opt/microchip/xc8/v1.20/sources/common/awmod.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  dividend        2    0[COMRAM] int 
  6900 ;;  divisor         2    2[COMRAM] int 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;  sign            1    6[COMRAM] unsigned char 
  6903 ;;  counter         1    5[COMRAM] unsigned char 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  2    0[COMRAM] int 
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6913 ;;      Params:         4       0       0       0       0       0       0       0       0
  6914 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6915 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6916 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6917 ;;Total ram usage:        7 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    7
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_dayOfWeek
  6924 ;;		_advState
  6925 ;;		_fround
  6926 ;;		_scale
  6927 ;;		_sprintf
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text25
  6932  006750                     __ptext25:
  6933                           	opt stack 0
  6934  006750                     ___awmod:
  6935                           	opt stack 16
  6936                           
  6937                           ; BSR set to: 1
  6938                           ;incstack = 0
  6939                           ;incstack = 0
  6940  006750  6E05               	movwf	??___awmod& (0+255),c
  6941  006752  0E00               	movlw	0
  6942  006754  6E07               	movwf	___awmod@sign,c
  6943  006756  5005               	movf	??___awmod& (0+255),w,c
  6944  006758  AE02               	btfss	___awmod@dividend+1,7,c
  6945  00675A  D008               	goto	i1l8071
  6946  00675C  6C01               	negf	___awmod@dividend,c
  6947  00675E  1E02               	comf	___awmod@dividend+1,f,c
  6948  006760  B0D8               	btfsc	status,0,c
  6949  006762  2A02               	incf	___awmod@dividend+1,f,c
  6950  006764  6E05               	movwf	??___awmod& (0+255),c
  6951  006766  0E01               	movlw	1
  6952  006768  6E07               	movwf	___awmod@sign,c
  6953  00676A  5005               	movf	??___awmod& (0+255),w,c
  6954  00676C                     i1l8071:
  6955  00676C  AE04               	btfss	___awmod@divisor+1,7,c
  6956  00676E  D004               	goto	i1l8075
  6957  006770  6C03               	negf	___awmod@divisor,c
  6958  006772  1E04               	comf	___awmod@divisor+1,f,c
  6959  006774  B0D8               	btfsc	status,0,c
  6960  006776  2A04               	incf	___awmod@divisor+1,f,c
  6961  006778                     i1l8075:
  6962  006778  5004               	movf	___awmod@divisor+1,w,c
  6963  00677A  1003               	iorwf	___awmod@divisor,w,c
  6964  00677C  B4D8               	btfsc	status,2,c
  6965  00677E  D01A               	goto	i1l8091
  6966  006780  6E05               	movwf	??___awmod& (0+255),c
  6967  006782  0E01               	movlw	1
  6968  006784  6E06               	movwf	___awmod@counter,c
  6969  006786  5005               	movf	??___awmod& (0+255),w,c
  6970  006788  D004               	goto	i1l8081
  6971  00678A                     i1l8079:
  6972  00678A  90D8               	bcf	status,0,c
  6973  00678C  3603               	rlcf	___awmod@divisor,f,c
  6974  00678E  3604               	rlcf	___awmod@divisor+1,f,c
  6975  006790  2A06               	incf	___awmod@counter,f,c
  6976  006792                     i1l8081:
  6977  006792  AE04               	btfss	___awmod@divisor+1,7,c
  6978  006794  D7FA               	goto	i1l8079
  6979  006796                     i1l8083:
  6980  006796  5003               	movf	___awmod@divisor,w,c
  6981  006798  5C01               	subwf	___awmod@dividend,w,c
  6982  00679A  5004               	movf	___awmod@divisor+1,w,c
  6983  00679C  5802               	subwfb	___awmod@dividend+1,w,c
  6984  00679E  A0D8               	btfss	status,0,c
  6985  0067A0  D004               	goto	i1l8087
  6986  0067A2  5003               	movf	___awmod@divisor,w,c
  6987  0067A4  5E01               	subwf	___awmod@dividend,f,c
  6988  0067A6  5004               	movf	___awmod@divisor+1,w,c
  6989  0067A8  5A02               	subwfb	___awmod@dividend+1,f,c
  6990  0067AA                     i1l8087:
  6991  0067AA  90D8               	bcf	status,0,c
  6992  0067AC  3204               	rrcf	___awmod@divisor+1,f,c
  6993  0067AE  3203               	rrcf	___awmod@divisor,f,c
  6994  0067B0  2E06               	decfsz	___awmod@counter,f,c
  6995  0067B2  D7F1               	goto	i1l8083
  6996  0067B4                     i1l8091:
  6997  0067B4  5007               	movf	___awmod@sign,w,c
  6998  0067B6  B4D8               	btfsc	status,2,c
  6999  0067B8  D004               	goto	i1l8095
  7000  0067BA  6C01               	negf	___awmod@dividend,c
  7001  0067BC  1E02               	comf	___awmod@dividend+1,f,c
  7002  0067BE  B0D8               	btfsc	status,0,c
  7003  0067C0  2A02               	incf	___awmod@dividend+1,f,c
  7004  0067C2                     i1l8095:
  7005  0067C2  C001  F001         	movff	___awmod@dividend,?___awmod
  7006  0067C6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7007  0067CA  0012               	return	
  7008  0067CC                     __end_of___awmod:
  7009                           	opt stack 0
  7010                           pclatu	equ	0xFFB
  7011                           pclath	equ	0xFFA
  7012                           tblptru	equ	0xFF8
  7013                           tblptrh	equ	0xFF7
  7014                           tblptrl	equ	0xFF6
  7015                           tablat	equ	0xFF5
  7016                           prodh	equ	0xFF4
  7017                           prodl	equ	0xFF3
  7018                           intcon	equ	0xFF2
  7019                           intcon2	equ	0xFF1
  7020                           postinc0	equ	0xFEE
  7021                           fsr0h	equ	0xFEA
  7022                           fsr0l	equ	0xFE9
  7023                           wreg	equ	0xFE8
  7024                           postdec1	equ	0xFE5
  7025                           fsr1h	equ	0xFE2
  7026                           fsr1l	equ	0xFE1
  7027                           bsr	equ	0xFE0
  7028                           indf2	equ	0xFDF
  7029                           fsr2h	equ	0xFDA
  7030                           fsr2l	equ	0xFD9
  7031                           status	equ	0xFD8
  7032                           
  7033 ;; *************** function _high_isr *****************
  7034 ;; Defined at:
  7035 ;;		line 99 in file "temp-clock_main.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;		None
  7040 ;; Return value:  Size  Location     Type
  7041 ;;		None               void
  7042 ;; Registers used:
  7043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0
  7050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7051 ;;      Temps:          0       0      15       0       0       0       0       0       0
  7052 ;;      Totals:         0       0      15       0       0       0       0       0       0
  7053 ;;Total ram usage:       15 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    6
  7056 ;; This function calls:
  7057 ;;		_tick
  7058 ;;		_printRTC
  7059 ;;		_getTemp
  7060 ;;		_printTemp
  7061 ;; This function is called by:
  7062 ;;		Interrupt level 2
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	intcode
  7067  000008                     __pintcode:
  7068                           	opt stack 0
  7069  000008                     _high_isr:
  7070                           	opt stack 14
  7071                           
  7072                           ;incstack = 0
  7073  000008  CFFA F111          	movff	pclath,??_high_isr+1
  7074  00000C  CFFB F112          	movff	pclatu,??_high_isr+2
  7075  000010  CFE9 F113          	movff	fsr0l,??_high_isr+3
  7076  000014  EDA5  F02C         	call	int_func,f	;refresh shadow registers
  7077                           pclatu	equ	0xFFB
  7078                           pclath	equ	0xFFA
  7079                           tblptru	equ	0xFF8
  7080                           tblptrh	equ	0xFF7
  7081                           tblptrl	equ	0xFF6
  7082                           tablat	equ	0xFF5
  7083                           prodh	equ	0xFF4
  7084                           prodl	equ	0xFF3
  7085                           intcon	equ	0xFF2
  7086                           intcon2	equ	0xFF1
  7087                           postinc0	equ	0xFEE
  7088                           fsr0h	equ	0xFEA
  7089                           fsr0l	equ	0xFE9
  7090                           wreg	equ	0xFE8
  7091                           postdec1	equ	0xFE5
  7092                           fsr1h	equ	0xFE2
  7093                           fsr1l	equ	0xFE1
  7094                           bsr	equ	0xFE0
  7095                           indf2	equ	0xFDF
  7096                           fsr2h	equ	0xFDA
  7097                           fsr2l	equ	0xFD9
  7098                           status	equ	0xFD8
  7099                           
  7100                           	psect	intcode_body
  7101  00594A                     __pintcode_body:
  7102                           	opt stack 14
  7103  00594A                     int_func:
  7104                           	opt stack 14
  7105  00594A  0006               	pop		; remove dummy address from shadow register refresh
  7106  00594C  CFEA F114          	movff	fsr0h,??_high_isr+4
  7107  005950  CFE1 F115          	movff	fsr1l,??_high_isr+5
  7108  005954  CFE2 F116          	movff	fsr1h,??_high_isr+6
  7109  005958  CFD9 F117          	movff	fsr2l,??_high_isr+7
  7110  00595C  CFDA F118          	movff	fsr2h,??_high_isr+8
  7111  005960  CFF3 F119          	movff	prodl,??_high_isr+9
  7112  005964  CFF4 F11A          	movff	prodh,??_high_isr+10
  7113  005968  CFF6 F11B          	movff	tblptrl,??_high_isr+11
  7114  00596C  CFF7 F11C          	movff	tblptrh,??_high_isr+12
  7115  005970  CFF8 F11D          	movff	tblptru,??_high_isr+13
  7116  005974  CFF5 F11E          	movff	tablat,??_high_isr+14
  7117  005978                     
  7118                           ;temp-clock_main.c: 100: if (TMR1IE && TMR1IF)
  7119  005978  A09D               	btfss	3997,0,c	;volatile
  7120  00597A  D001               	goto	i2u593_41
  7121  00597C  D001               	goto	i2u593_40
  7122  00597E                     i2u593_41:
  7123  00597E  D04E               	goto	i2l7613
  7124  005980                     i2u593_40:
  7125  005980  A09E               	btfss	3998,0,c	;volatile
  7126  005982  D001               	goto	i2u594_41
  7127  005984  D001               	goto	i2u594_40
  7128  005986                     i2u594_41:
  7129  005986  D04A               	goto	i2l7613
  7130  005988                     i2u594_40:
  7131  005988                     
  7132                           ;temp-clock_main.c: 101: {
  7133                           ;temp-clock_main.c: 102: TMR1IF = CLEAR;
  7134  005988  909E               	bcf	3998,0,c	;volatile
  7135                           
  7136                           ;temp-clock_main.c: 103: TMR1ON = 0;
  7137  00598A  90CD               	bcf	4045,0,c	;volatile
  7138  00598C                     
  7139                           ;temp-clock_main.c: 104: TMR1 = 0;
  7140  00598C  0E00               	movlw	0
  7141  00598E  6ECF               	movwf	4047,c	;volatile
  7142  005990  0E00               	movlw	0
  7143  005992  6ECE               	movwf	4046,c	;volatile
  7144  005994                     
  7145                           ;temp-clock_main.c: 105: if (++rtc_big_ticks > (1+1))
  7146  005994  0100               	movlb	0	; () banked
  7147  005996  0100               	movlb	0	; () banked
  7148  005998  4BF9               	infsnz	_rtc_big_ticks& (0+255),f,b
  7149  00599A  2BFA               	incf	(_rtc_big_ticks+1)& (0+255),f,b
  7150  00599C  0E03               	movlw	3
  7151  00599E  0100               	movlb	0	; () banked
  7152  0059A0  5DF9               	subwf	_rtc_big_ticks& (0+255),w,b
  7153  0059A2  0E00               	movlw	0
  7154  0059A4  0100               	movlb	0	; () banked
  7155  0059A6  59FA               	subwfb	(_rtc_big_ticks+1)& (0+255),w,b
  7156  0059A8  A0D8               	btfss	status,0,c
  7157  0059AA  D001               	goto	i2u595_41
  7158  0059AC  D001               	goto	i2u595_40
  7159  0059AE                     i2u595_41:
  7160  0059AE  D034               	goto	i2l608
  7161  0059B0                     i2u595_40:
  7162  0059B0                     
  7163                           ; BSR set to: 0
  7164                           ;temp-clock_main.c: 106: {
  7165                           ;temp-clock_main.c: 107: rtc_big_ticks = 0;
  7166  0059B0  0E00               	movlw	0
  7167  0059B2  0100               	movlb	0	; () banked
  7168  0059B4  0100               	movlb	0	; () banked
  7169  0059B6  6FFA               	movwf	(_rtc_big_ticks+1)& (0+255),b
  7170  0059B8  0E00               	movlw	0
  7171  0059BA  0100               	movlb	0	; () banked
  7172  0059BC  6FF9               	movwf	_rtc_big_ticks& (0+255),b
  7173                           
  7174                           ;temp-clock_main.c: 108: TMR1 = (65536-63765);
  7175  0059BE  0E06               	movlw	6
  7176  0059C0  6ECF               	movwf	4047,c	;volatile
  7177  0059C2  0EEB               	movlw	235
  7178  0059C4  6ECE               	movwf	4046,c	;volatile
  7179  0059C6                     
  7180                           ; BSR set to: 0
  7181                           ;temp-clock_main.c: 109: TMR1ON = 1;
  7182  0059C6  80CD               	bsf	4045,0,c	;volatile
  7183  0059C8                     
  7184                           ; BSR set to: 0
  7185                           ;temp-clock_main.c: 111: tick(second);
  7186  0059C8  0101               	movlb	1	; () banked
  7187  0059CA  6F10               	movwf	??_high_isr& (0+255),b
  7188  0059CC  0E00               	movlw	0
  7189  0059CE  0100               	movlb	0	; () banked
  7190  0059D0  0100               	movlb	0	; () banked
  7191  0059D2  6F96               	movwf	?_tick& (0+255),b
  7192  0059D4  0101               	movlb	1	; () banked
  7193  0059D6  5110               	movf	??_high_isr& (0+255),w,b
  7194  0059D8  ECB1  F02D         	call	_tick	;wreg free
  7195  0059DC                     
  7196                           ;temp-clock_main.c: 114: getTemp();
  7197  0059DC  EC26  F023         	call	_getTemp	;wreg free
  7198  0059E0                     
  7199                           ;temp-clock_main.c: 116: menu->printFn(menu->digits);
  7200  0059E0  EE20 F001          	lfsr	2,1
  7201  0059E4  505A               	movf	_menu,w,c
  7202  0059E6  26D9               	addwf	fsr2l,f,c
  7203  0059E8  505B               	movf	_menu+1,w,c
  7204  0059EA  22DA               	addwfc	fsr2h,f,c
  7205  0059EC  50DF               	movf	indf2,w,c
  7206  0059EE  0100               	movlb	0	; () banked
  7207  0059F0  0100               	movlb	0	; () banked
  7208  0059F2  6FF0               	movwf	?_printTemp& (0+255),b
  7209  0059F4  EE20 F003          	lfsr	2,3
  7210  0059F8  505A               	movf	_menu,w,c
  7211  0059FA  26D9               	addwf	fsr2l,f,c
  7212  0059FC  505B               	movf	_menu+1,w,c
  7213  0059FE  22DA               	addwfc	fsr2h,f,c
  7214  005A00  D801               	call	i2u596_48
  7215  005A02  D00A               	goto	i2u596_49
  7216  005A04                     i2u596_48:
  7217  005A04  0005               	push	
  7218  005A06  6EFA               	movwf	pclath,c
  7219  005A08  50DE               	movf	postinc2,w,c
  7220  005A0A  6EFD               	movwf	tosl,c
  7221  005A0C  50DE               	movf	postinc2,w,c
  7222  005A0E  6EFE               	movwf	tosh,c
  7223  005A10  50F8               	movf	tblptru,w,c
  7224  005A12  6EFF               	movwf	tosu,c
  7225  005A14  50FA               	movf	pclath,w,c
  7226  005A16  0012               	return		;indir
  7227  005A18                     i2u596_49:
  7228  005A18                     i2l608:
  7229  005A18  0004               	clrwdt		;# 
  7230  005A1A  D000               	goto	i2l7613
  7231  005A1C                     i2l7613:
  7232                           
  7233                           ;temp-clock_main.c: 120: }
  7234                           ;temp-clock_main.c: 121: GIEH = 1;
  7235  005A1C  8EF2               	bsf	intcon,7,c	;volatile
  7236  005A1E  C11E  FFF5         	movff	??_high_isr+14,tablat
  7237  005A22  C11D  FFF8         	movff	??_high_isr+13,tblptru
  7238  005A26  C11C  FFF7         	movff	??_high_isr+12,tblptrh
  7239  005A2A  C11B  FFF6         	movff	??_high_isr+11,tblptrl
  7240  005A2E  C11A  FFF4         	movff	??_high_isr+10,prodh
  7241  005A32  C119  FFF3         	movff	??_high_isr+9,prodl
  7242  005A36  C118  FFDA         	movff	??_high_isr+8,fsr2h
  7243  005A3A  C117  FFD9         	movff	??_high_isr+7,fsr2l
  7244  005A3E  C116  FFE2         	movff	??_high_isr+6,fsr1h
  7245  005A42  C115  FFE1         	movff	??_high_isr+5,fsr1l
  7246  005A46  C114  FFEA         	movff	??_high_isr+4,fsr0h
  7247  005A4A  C113  FFE9         	movff	??_high_isr+3,fsr0l
  7248  005A4E  C112  FFFB         	movff	??_high_isr+2,pclatu
  7249  005A52  C111  FFFA         	movff	??_high_isr+1,pclath
  7250  005A56  0011               	retfie		f
  7251  005A58                     __end_of_high_isr:
  7252                           	opt stack 0
  7253                           tosu	equ	0xFFF
  7254                           tosh	equ	0xFFE
  7255                           tosl	equ	0xFFD
  7256                           pclatu	equ	0xFFB
  7257                           pclath	equ	0xFFA
  7258                           tblptru	equ	0xFF8
  7259                           tblptrh	equ	0xFF7
  7260                           tblptrl	equ	0xFF6
  7261                           tablat	equ	0xFF5
  7262                           prodh	equ	0xFF4
  7263                           prodl	equ	0xFF3
  7264                           intcon	equ	0xFF2
  7265                           intcon2	equ	0xFF1
  7266                           postinc0	equ	0xFEE
  7267                           fsr0h	equ	0xFEA
  7268                           fsr0l	equ	0xFE9
  7269                           wreg	equ	0xFE8
  7270                           postdec1	equ	0xFE5
  7271                           fsr1h	equ	0xFE2
  7272                           fsr1l	equ	0xFE1
  7273                           bsr	equ	0xFE0
  7274                           indf2	equ	0xFDF
  7275                           postinc2	equ	0xFDE
  7276                           fsr2h	equ	0xFDA
  7277                           fsr2l	equ	0xFD9
  7278                           status	equ	0xFD8
  7279                           
  7280 ;; *************** function _printRTC *****************
  7281 ;; Defined at:
  7282 ;;		line 259 in file "RTC.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  digits          1  144[BANK0 ] unsigned char 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  str            12    1[BANK1 ] unsigned char [12]
  7287 ;;  cnt             1   15[BANK1 ] unsigned char 
  7288 ;;  first           1    0[BANK1 ] unsigned char 
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  2  144[BANK0 ] PTR void 
  7291 ;; Registers used:
  7292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7298 ;;      Params:         0       1       0       0       0       0       0       0       0
  7299 ;;      Locals:         0       0      16       0       0       0       0       0       0
  7300 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7301 ;;      Totals:         0       2      16       0       0       0       0       0       0
  7302 ;;Total ram usage:       18 bytes
  7303 ;; Hardware stack levels used:    1
  7304 ;; Hardware stack levels required when called:    5
  7305 ;; This function calls:
  7306 ;;		_countBits
  7307 ;;		_sprintf
  7308 ;;		_writeString
  7309 ;;		___lwmod
  7310 ;; This function is called by:
  7311 ;;		_initRTC
  7312 ;;		_high_isr
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	text27
  7317  001E40                     __ptext27:
  7318                           	opt stack 0
  7319  001E40                     _printRTC:
  7320                           	opt stack 14
  7321                           
  7322                           ;RTC.c: 260: char str[12] = "";
  7323                           
  7324                           ;incstack = 0
  7325                           ;incstack = 0
  7326  001E40  EE21  F04D         	lfsr	2,printRTC@F5073
  7327  001E44  EE11  F001         	lfsr	1,printRTC@str
  7328  001E48  0E0C               	movlw	12
  7329  001E4A                     i2u574_41:
  7330  001E4A  CFDE FFE6          	movff	postinc2,postinc1
  7331  001E4E  2EE8               	decfsz	wreg,f,c
  7332  001E50  D7FC               	goto	i2u574_41
  7333                           
  7334                           ;RTC.c: 261: uint8_t cnt;
  7335                           ;RTC.c: 262: bool first = 1;
  7336  001E52  0100               	movlb	0	; () banked
  7337  001E54  6FF1               	movwf	??_printRTC& (0+255),b
  7338  001E56  0E01               	movlw	1
  7339  001E58  0101               	movlb	1	; () banked
  7340  001E5A  0101               	movlb	1	; () banked
  7341  001E5C  6F00               	movwf	printRTC@first& (0+255),b
  7342  001E5E  0100               	movlb	0	; () banked
  7343  001E60  51F1               	movf	??_printRTC& (0+255),w,b
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;RTC.c: 263: for (cnt = rtcMenu.state; cnt != rtcMenu.state && !first; cnt++)
  7347  001E62  C185  F10F         	movff	_rtcMenu,printRTC@cnt
  7348  001E66  D2FC               	goto	i2l7431
  7349  001E68                     i2l282:
  7350                           
  7351                           ; BSR set to: 1
  7352                           ;RTC.c: 264: {
  7353                           ;RTC.c: 265: if (cnt == 0)
  7354  001E68  0101               	movlb	1	; () banked
  7355  001E6A  0101               	movlb	1	; () banked
  7356  001E6C  670F               	tstfsz	printRTC@cnt& (0+255),b
  7357  001E6E  D2CC               	goto	i2l7427
  7358                           
  7359                           ; BSR set to: 1
  7360                           ;RTC.c: 266: {
  7361                           ;RTC.c: 267: first = 0;
  7362  001E70  0100               	movlb	0	; () banked
  7363  001E72  6FF1               	movwf	??_printRTC& (0+255),b
  7364  001E74  0E00               	movlw	0
  7365  001E76  0101               	movlb	1	; () banked
  7366  001E78  0101               	movlb	1	; () banked
  7367  001E7A  6F00               	movwf	printRTC@first& (0+255),b
  7368  001E7C  0100               	movlb	0	; () banked
  7369  001E7E  51F1               	movf	??_printRTC& (0+255),w,b
  7370  001E80  D2C3               	goto	i2l7427
  7371  001E82                     i2l7377:
  7372                           
  7373                           ;RTC.c: 275: sprintf(&str, "%s %02d.%02d", (dow[date.dow]), date.hour, date.minute);
  7374  001E82  0101               	movlb	1	; () banked
  7375  001E84  0E01               	movlw	high printRTC@str
  7376  001E86  0100               	movlb	0	; () banked
  7377  001E88  0100               	movlb	0	; () banked
  7378  001E8A  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7379  001E8C  0101               	movlb	1	; () banked
  7380  001E8E  0E01               	movlw	low printRTC@str
  7381  001E90  0100               	movlb	0	; () banked
  7382  001E92  6FBB               	movwf	?_sprintf& (0+255),b
  7383  001E94  0E7F               	movlw	high STR_3
  7384  001E96  0100               	movlb	0	; () banked
  7385  001E98  0100               	movlb	0	; () banked
  7386  001E9A  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7387  001E9C  0ED1               	movlw	low STR_3
  7388  001E9E  0100               	movlb	0	; () banked
  7389  001EA0  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7390  001EA2  0101               	movlb	1	; () banked
  7391  001EA4  0101               	movlb	1	; () banked
  7392  001EA6  515D               	movf	(_date+4)& (0+255),w,b
  7393  001EA8  0D04               	mullw	4
  7394  001EAA  0E77               	movlw	low _dow
  7395  001EAC  24F3               	addwf	prodl,w,c
  7396  001EAE  0100               	movlb	0	; () banked
  7397  001EB0  0100               	movlb	0	; () banked
  7398  001EB2  6FBF               	movwf	(?_sprintf+4)& (0+255),b
  7399  001EB4  0E7F               	movlw	high _dow
  7400  001EB6  20F4               	addwfc	prodh,w,c
  7401  001EB8  0100               	movlb	0	; () banked
  7402  001EBA  6FC0               	movwf	(?_sprintf+5)& (0+255),b
  7403  001EBC  0101               	movlb	1	; () banked
  7404  001EBE  0100               	movlb	0	; () banked
  7405  001EC0  C15B  F0C1         	movff	_date+2,?_sprintf+6
  7406  001EC4  0100               	movlb	0	; () banked
  7407  001EC6  0100               	movlb	0	; () banked
  7408  001EC8  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7409  001ECA  0101               	movlb	1	; () banked
  7410  001ECC  0100               	movlb	0	; () banked
  7411  001ECE  C15A  F0C3         	movff	_date+1,?_sprintf+8
  7412  001ED2  0100               	movlb	0	; () banked
  7413  001ED4  0100               	movlb	0	; () banked
  7414  001ED6  6BC4               	clrf	(?_sprintf+9)& (0+255),b
  7415  001ED8  EC8E  F000         	call	_sprintf	;wreg free
  7416                           
  7417                           ;RTC.c: 276: break;
  7418  001EDC  D223               	goto	i2l7413
  7419  001EDE                     i2l7379:
  7420                           
  7421                           ;RTC.c: 278: sprintf(&str, "%02d %02d %02d", date.day, date.month, date.year % 100);
  7422  001EDE  C15F  F060         	movff	_date+6,?___lwmod
  7423  001EE2  C160  F061         	movff	_date+7,?___lwmod+1
  7424  001EE6  0E00               	movlw	0
  7425  001EE8  0100               	movlb	0	; () banked
  7426  001EEA  0100               	movlb	0	; () banked
  7427  001EEC  6F63               	movwf	(?___lwmod+3)& (0+255),b
  7428  001EEE  0E64               	movlw	100
  7429  001EF0  0100               	movlb	0	; () banked
  7430  001EF2  6F62               	movwf	(?___lwmod+2)& (0+255),b
  7431  001EF4  ECDC  F032         	call	___lwmod	;wreg free
  7432  001EF8  0100               	movlb	0	; () banked
  7433  001EFA  C060  F10D         	movff	?___lwmod,_printRTC$1430
  7434  001EFE  0100               	movlb	0	; () banked
  7435  001F00  C061  F10E         	movff	?___lwmod+1,_printRTC$1430+1
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;RTC.c: 278: sprintf(&str, "%02d %02d %02d", date.day, date.month, date.year % 100);
  7439  001F04  0101               	movlb	1	; () banked
  7440  001F06  0E01               	movlw	high printRTC@str
  7441  001F08  0100               	movlb	0	; () banked
  7442  001F0A  0100               	movlb	0	; () banked
  7443  001F0C  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7444  001F0E  0101               	movlb	1	; () banked
  7445  001F10  0E01               	movlw	low printRTC@str
  7446  001F12  0100               	movlb	0	; () banked
  7447  001F14  6FBB               	movwf	?_sprintf& (0+255),b
  7448  001F16  0E7F               	movlw	high STR_4
  7449  001F18  0100               	movlb	0	; () banked
  7450  001F1A  0100               	movlb	0	; () banked
  7451  001F1C  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7452  001F1E  0EB4               	movlw	low STR_4
  7453  001F20  0100               	movlb	0	; () banked
  7454  001F22  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7455  001F24  0101               	movlb	1	; () banked
  7456  001F26  0100               	movlb	0	; () banked
  7457  001F28  C15C  F0BF         	movff	_date+3,?_sprintf+4
  7458  001F2C  0100               	movlb	0	; () banked
  7459  001F2E  0100               	movlb	0	; () banked
  7460  001F30  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  7461  001F32  0101               	movlb	1	; () banked
  7462  001F34  0100               	movlb	0	; () banked
  7463  001F36  C15E  F0C1         	movff	_date+5,?_sprintf+6
  7464  001F3A  0100               	movlb	0	; () banked
  7465  001F3C  0100               	movlb	0	; () banked
  7466  001F3E  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7467  001F40  C10D  F0C3         	movff	_printRTC$1430,?_sprintf+8
  7468  001F44  C10E  F0C4         	movff	_printRTC$1430+1,?_sprintf+9
  7469  001F48  EC8E  F000         	call	_sprintf	;wreg free
  7470                           
  7471                           ;RTC.c: 279: break;
  7472  001F4C  D1EB               	goto	i2l7413
  7473  001F4E                     i2l7383:
  7474                           
  7475                           ;RTC.c: 281: sprintf(&str, "  %02d.%02d.%02d", date.hour, date.minute, date.second);
  7476  001F4E  0101               	movlb	1	; () banked
  7477  001F50  0E01               	movlw	high printRTC@str
  7478  001F52  0100               	movlb	0	; () banked
  7479  001F54  0100               	movlb	0	; () banked
  7480  001F56  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7481  001F58  0101               	movlb	1	; () banked
  7482  001F5A  0E01               	movlw	low printRTC@str
  7483  001F5C  0100               	movlb	0	; () banked
  7484  001F5E  6FBB               	movwf	?_sprintf& (0+255),b
  7485  001F60  0E7F               	movlw	high STR_5
  7486  001F62  0100               	movlb	0	; () banked
  7487  001F64  0100               	movlb	0	; () banked
  7488  001F66  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7489  001F68  0E93               	movlw	low STR_5
  7490  001F6A  0100               	movlb	0	; () banked
  7491  001F6C  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7492  001F6E  0101               	movlb	1	; () banked
  7493  001F70  0100               	movlb	0	; () banked
  7494  001F72  C15B  F0BF         	movff	_date+2,?_sprintf+4
  7495  001F76  0100               	movlb	0	; () banked
  7496  001F78  0100               	movlb	0	; () banked
  7497  001F7A  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  7498  001F7C  0101               	movlb	1	; () banked
  7499  001F7E  0100               	movlb	0	; () banked
  7500  001F80  C15A  F0C1         	movff	_date+1,?_sprintf+6
  7501  001F84  0100               	movlb	0	; () banked
  7502  001F86  0100               	movlb	0	; () banked
  7503  001F88  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7504  001F8A  0101               	movlb	1	; () banked
  7505  001F8C  0100               	movlb	0	; () banked
  7506  001F8E  C159  F0C3         	movff	_date,?_sprintf+8
  7507  001F92  0100               	movlb	0	; () banked
  7508  001F94  0100               	movlb	0	; () banked
  7509  001F96  6BC4               	clrf	(?_sprintf+9)& (0+255),b
  7510  001F98  EC8E  F000         	call	_sprintf	;wreg free
  7511                           
  7512                           ;RTC.c: 282: break;
  7513  001F9C  D1C3               	goto	i2l7413
  7514  001F9E                     i2l7385:
  7515                           
  7516                           ;RTC.c: 284: sprintf(&str, " %c%c %02d.%02d", (dow[date.dow])[0], (dow[date.dow])[1], da
      +                          te.minute, date.second);
  7517  001F9E  0101               	movlb	1	; () banked
  7518  001FA0  0E01               	movlw	high printRTC@str
  7519  001FA2  0100               	movlb	0	; () banked
  7520  001FA4  0100               	movlb	0	; () banked
  7521  001FA6  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7522  001FA8  0101               	movlb	1	; () banked
  7523  001FAA  0E01               	movlw	low printRTC@str
  7524  001FAC  0100               	movlb	0	; () banked
  7525  001FAE  6FBB               	movwf	?_sprintf& (0+255),b
  7526  001FB0  0E7F               	movlw	high STR_6
  7527  001FB2  0100               	movlb	0	; () banked
  7528  001FB4  0100               	movlb	0	; () banked
  7529  001FB6  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7530  001FB8  0EA4               	movlw	low STR_6
  7531  001FBA  0100               	movlb	0	; () banked
  7532  001FBC  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7533  001FBE  0101               	movlb	1	; () banked
  7534  001FC0  0101               	movlb	1	; () banked
  7535  001FC2  515D               	movf	(_date+4)& (0+255),w,b
  7536  001FC4  0D04               	mullw	4
  7537  001FC6  0E77               	movlw	low _dow
  7538  001FC8  24F3               	addwf	prodl,w,c
  7539  001FCA  6EF6               	movwf	tblptrl,c
  7540  001FCC  0E7F               	movlw	high _dow
  7541  001FCE  20F4               	addwfc	prodh,w,c
  7542  001FD0  6EF7               	movwf	tblptrh,c
  7543  001FD2  0008               	tblrd		*
  7544  001FD4  50F5               	movf	tablat,w,c
  7545  001FD6  0100               	movlb	0	; () banked
  7546  001FD8  0100               	movlb	0	; () banked
  7547  001FDA  6FBF               	movwf	(?_sprintf+4)& (0+255),b
  7548  001FDC  0100               	movlb	0	; () banked
  7549  001FDE  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  7550  001FE0  0101               	movlb	1	; () banked
  7551  001FE2  0101               	movlb	1	; () banked
  7552  001FE4  515D               	movf	(_date+4)& (0+255),w,b
  7553  001FE6  0D04               	mullw	4
  7554  001FE8  0E01               	movlw	1
  7555  001FEA  26F3               	addwf	prodl,f,c
  7556  001FEC  0E00               	movlw	0
  7557  001FEE  22F4               	addwfc	prodh,f,c
  7558  001FF0  0E77               	movlw	low _dow
  7559  001FF2  24F3               	addwf	prodl,w,c
  7560  001FF4  6EF6               	movwf	tblptrl,c
  7561  001FF6  0E7F               	movlw	high _dow
  7562  001FF8  20F4               	addwfc	prodh,w,c
  7563  001FFA  6EF7               	movwf	tblptrh,c
  7564  001FFC  0008               	tblrd		*
  7565  001FFE  50F5               	movf	tablat,w,c
  7566  002000  0100               	movlb	0	; () banked
  7567  002002  0100               	movlb	0	; () banked
  7568  002004  6FC1               	movwf	(?_sprintf+6)& (0+255),b
  7569  002006  0100               	movlb	0	; () banked
  7570  002008  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7571  00200A  0101               	movlb	1	; () banked
  7572  00200C  0100               	movlb	0	; () banked
  7573  00200E  C15A  F0C3         	movff	_date+1,?_sprintf+8
  7574  002012  0100               	movlb	0	; () banked
  7575  002014  0100               	movlb	0	; () banked
  7576  002016  6BC4               	clrf	(?_sprintf+9)& (0+255),b
  7577  002018  0101               	movlb	1	; () banked
  7578  00201A  0100               	movlb	0	; () banked
  7579  00201C  C159  F0C5         	movff	_date,?_sprintf+10
  7580  002020  0100               	movlb	0	; () banked
  7581  002022  0100               	movlb	0	; () banked
  7582  002024  6BC6               	clrf	(?_sprintf+11)& (0+255),b
  7583  002026  EC8E  F000         	call	_sprintf	;wreg free
  7584                           
  7585                           ;RTC.c: 285: break;
  7586  00202A  D17C               	goto	i2l7413
  7587  00202C                     i2l7387:
  7588                           
  7589                           ;RTC.c: 287: sprintf(&str, "  %02d.%02d.%02d", date.day, date.month, date.year % 100);
  7590  00202C  C15F  F060         	movff	_date+6,?___lwmod
  7591  002030  C160  F061         	movff	_date+7,?___lwmod+1
  7592  002034  0E00               	movlw	0
  7593  002036  0100               	movlb	0	; () banked
  7594  002038  0100               	movlb	0	; () banked
  7595  00203A  6F63               	movwf	(?___lwmod+3)& (0+255),b
  7596  00203C  0E64               	movlw	100
  7597  00203E  0100               	movlb	0	; () banked
  7598  002040  6F62               	movwf	(?___lwmod+2)& (0+255),b
  7599  002042  ECDC  F032         	call	___lwmod	;wreg free
  7600  002046  0100               	movlb	0	; () banked
  7601  002048  C060  F10D         	movff	?___lwmod,_printRTC$1430
  7602  00204C  0100               	movlb	0	; () banked
  7603  00204E  C061  F10E         	movff	?___lwmod+1,_printRTC$1430+1
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;RTC.c: 287: sprintf(&str, "  %02d.%02d.%02d", date.day, date.month, date.year % 100);
  7607  002052  0101               	movlb	1	; () banked
  7608  002054  0E01               	movlw	high printRTC@str
  7609  002056  0100               	movlb	0	; () banked
  7610  002058  0100               	movlb	0	; () banked
  7611  00205A  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7612  00205C  0101               	movlb	1	; () banked
  7613  00205E  0E01               	movlw	low printRTC@str
  7614  002060  0100               	movlb	0	; () banked
  7615  002062  6FBB               	movwf	?_sprintf& (0+255),b
  7616  002064  0E7F               	movlw	high STR_5
  7617  002066  0100               	movlb	0	; () banked
  7618  002068  0100               	movlb	0	; () banked
  7619  00206A  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7620  00206C  0E93               	movlw	low STR_5
  7621  00206E  0100               	movlb	0	; () banked
  7622  002070  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7623  002072  0101               	movlb	1	; () banked
  7624  002074  0100               	movlb	0	; () banked
  7625  002076  C15C  F0BF         	movff	_date+3,?_sprintf+4
  7626  00207A  0100               	movlb	0	; () banked
  7627  00207C  0100               	movlb	0	; () banked
  7628  00207E  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  7629  002080  0101               	movlb	1	; () banked
  7630  002082  0100               	movlb	0	; () banked
  7631  002084  C15E  F0C1         	movff	_date+5,?_sprintf+6
  7632  002088  0100               	movlb	0	; () banked
  7633  00208A  0100               	movlb	0	; () banked
  7634  00208C  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7635  00208E  C10D  F0C3         	movff	_printRTC$1430,?_sprintf+8
  7636  002092  C10E  F0C4         	movff	_printRTC$1430+1,?_sprintf+9
  7637  002096  EC8E  F000         	call	_sprintf	;wreg free
  7638                           
  7639                           ;RTC.c: 288: break;
  7640  00209A  D144               	goto	i2l7413
  7641  00209C                     i2l7391:
  7642                           
  7643                           ;RTC.c: 290: sprintf(&str, "    %02d.%02d", date.hour, date.minute);
  7644  00209C  0101               	movlb	1	; () banked
  7645  00209E  0E01               	movlw	high printRTC@str
  7646  0020A0  0100               	movlb	0	; () banked
  7647  0020A2  0100               	movlb	0	; () banked
  7648  0020A4  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7649  0020A6  0101               	movlb	1	; () banked
  7650  0020A8  0E01               	movlw	low printRTC@str
  7651  0020AA  0100               	movlb	0	; () banked
  7652  0020AC  6FBB               	movwf	?_sprintf& (0+255),b
  7653  0020AE  0E7F               	movlw	high STR_8
  7654  0020B0  0100               	movlb	0	; () banked
  7655  0020B2  0100               	movlb	0	; () banked
  7656  0020B4  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7657  0020B6  0EC3               	movlw	low STR_8
  7658  0020B8  0100               	movlb	0	; () banked
  7659  0020BA  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7660  0020BC  0101               	movlb	1	; () banked
  7661  0020BE  0100               	movlb	0	; () banked
  7662  0020C0  C15B  F0BF         	movff	_date+2,?_sprintf+4
  7663  0020C4  0100               	movlb	0	; () banked
  7664  0020C6  0100               	movlb	0	; () banked
  7665  0020C8  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  7666  0020CA  0101               	movlb	1	; () banked
  7667  0020CC  0100               	movlb	0	; () banked
  7668  0020CE  C15A  F0C1         	movff	_date+1,?_sprintf+6
  7669  0020D2  0100               	movlb	0	; () banked
  7670  0020D4  0100               	movlb	0	; () banked
  7671  0020D6  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7672  0020D8  EC8E  F000         	call	_sprintf	;wreg free
  7673                           
  7674                           ;RTC.c: 291: break;
  7675  0020DC  D123               	goto	i2l7413
  7676  0020DE                     i2l7393:
  7677                           
  7678                           ;RTC.c: 293: sprintf(&str, "    %02d.%02d", date.day, date.month);
  7679  0020DE  0101               	movlb	1	; () banked
  7680  0020E0  0E01               	movlw	high printRTC@str
  7681  0020E2  0100               	movlb	0	; () banked
  7682  0020E4  0100               	movlb	0	; () banked
  7683  0020E6  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7684  0020E8  0101               	movlb	1	; () banked
  7685  0020EA  0E01               	movlw	low printRTC@str
  7686  0020EC  0100               	movlb	0	; () banked
  7687  0020EE  6FBB               	movwf	?_sprintf& (0+255),b
  7688  0020F0  0E7F               	movlw	high STR_8
  7689  0020F2  0100               	movlb	0	; () banked
  7690  0020F4  0100               	movlb	0	; () banked
  7691  0020F6  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7692  0020F8  0EC3               	movlw	low STR_8
  7693  0020FA  0100               	movlb	0	; () banked
  7694  0020FC  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7695  0020FE  0101               	movlb	1	; () banked
  7696  002100  0100               	movlb	0	; () banked
  7697  002102  C15C  F0BF         	movff	_date+3,?_sprintf+4
  7698  002106  0100               	movlb	0	; () banked
  7699  002108  0100               	movlb	0	; () banked
  7700  00210A  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  7701  00210C  0101               	movlb	1	; () banked
  7702  00210E  0100               	movlb	0	; () banked
  7703  002110  C15E  F0C1         	movff	_date+5,?_sprintf+6
  7704  002114  0100               	movlb	0	; () banked
  7705  002116  0100               	movlb	0	; () banked
  7706  002118  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7707  00211A  EC8E  F000         	call	_sprintf	;wreg free
  7708                           
  7709                           ;RTC.c: 294: break;
  7710  00211E  D102               	goto	i2l7413
  7711  002120                     i2l7397:
  7712  002120  0101               	movlb	1	; () banked
  7713  002122  0101               	movlb	1	; () banked
  7714  002124  510F               	movf	printRTC@cnt& (0+255),w,b
  7715                           
  7716                           ; Switch size 1, requested type "space"
  7717                           ; Number of cases is 7, Range of values is 0 to 9
  7718                           ; switch strategies available:
  7719                           ; Name         Instructions Cycles
  7720                           ; simple_byte           22    12 (average)
  7721                           ;	Chosen strategy is simple_byte
  7722  002126  0A00               	xorlw	0	; case 0
  7723  002128  B4D8               	btfsc	status,2,c
  7724  00212A  D7B8               	goto	i2l7391
  7725  00212C  0A01               	xorlw	1	; case 1
  7726  00212E  B4D8               	btfsc	status,2,c
  7727  002130  D70E               	goto	i2l7383
  7728  002132  0A03               	xorlw	3	; case 2
  7729  002134  B4D8               	btfsc	status,2,c
  7730  002136  D6A5               	goto	i2l7377
  7731  002138  0A01               	xorlw	1	; case 3
  7732  00213A  B4D8               	btfsc	status,2,c
  7733  00213C  D730               	goto	i2l7385
  7734  00213E  0A05               	xorlw	5	; case 6
  7735  002140  B4D8               	btfsc	status,2,c
  7736  002142  D7CD               	goto	i2l7393
  7737  002144  0A0E               	xorlw	14	; case 8
  7738  002146  B4D8               	btfsc	status,2,c
  7739  002148  D771               	goto	i2l7387
  7740  00214A  0A01               	xorlw	1	; case 9
  7741  00214C  B4D8               	btfsc	status,2,c
  7742  00214E  D6C7               	goto	i2l7379
  7743  002150  D0E9               	goto	i2l7413
  7744  002152                     i2l7399:
  7745                           
  7746                           ; BSR set to: 1
  7747                           ;RTC.c: 300: sprintf(&str, "%02d.%02d.%02d", date.hour, date.minute, date.second);
  7748  002152  0101               	movlb	1	; () banked
  7749  002154  0E01               	movlw	high printRTC@str
  7750  002156  0100               	movlb	0	; () banked
  7751  002158  0100               	movlb	0	; () banked
  7752  00215A  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7753  00215C  0101               	movlb	1	; () banked
  7754  00215E  0E01               	movlw	low printRTC@str
  7755  002160  0100               	movlb	0	; () banked
  7756  002162  6FBB               	movwf	?_sprintf& (0+255),b
  7757  002164  0E7F               	movlw	high (STR_5+2)
  7758  002166  0100               	movlb	0	; () banked
  7759  002168  0100               	movlb	0	; () banked
  7760  00216A  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7761  00216C  0E95               	movlw	low (STR_5+2)
  7762  00216E  0100               	movlb	0	; () banked
  7763  002170  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7764  002172  0101               	movlb	1	; () banked
  7765  002174  0100               	movlb	0	; () banked
  7766  002176  C15B  F0BF         	movff	_date+2,?_sprintf+4
  7767  00217A  0100               	movlb	0	; () banked
  7768  00217C  0100               	movlb	0	; () banked
  7769  00217E  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  7770  002180  0101               	movlb	1	; () banked
  7771  002182  0100               	movlb	0	; () banked
  7772  002184  C15A  F0C1         	movff	_date+1,?_sprintf+6
  7773  002188  0100               	movlb	0	; () banked
  7774  00218A  0100               	movlb	0	; () banked
  7775  00218C  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7776  00218E  0101               	movlb	1	; () banked
  7777  002190  0100               	movlb	0	; () banked
  7778  002192  C159  F0C3         	movff	_date,?_sprintf+8
  7779  002196  0100               	movlb	0	; () banked
  7780  002198  0100               	movlb	0	; () banked
  7781  00219A  6BC4               	clrf	(?_sprintf+9)& (0+255),b
  7782  00219C  EC8E  F000         	call	_sprintf	;wreg free
  7783                           
  7784                           ;RTC.c: 301: break;
  7785  0021A0  D116               	goto	i2l7421
  7786  0021A2                     i2l7401:
  7787                           
  7788                           ;RTC.c: 303: sprintf(&str, "%c%c %02d.%02d", (dow[date.dow])[0], (dow[date.dow])[1], dat
      +                          e.minute, date.second);
  7789  0021A2  0101               	movlb	1	; () banked
  7790  0021A4  0E01               	movlw	high printRTC@str
  7791  0021A6  0100               	movlb	0	; () banked
  7792  0021A8  0100               	movlb	0	; () banked
  7793  0021AA  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7794  0021AC  0101               	movlb	1	; () banked
  7795  0021AE  0E01               	movlw	low printRTC@str
  7796  0021B0  0100               	movlb	0	; () banked
  7797  0021B2  6FBB               	movwf	?_sprintf& (0+255),b
  7798  0021B4  0E7F               	movlw	high (STR_6+1)
  7799  0021B6  0100               	movlb	0	; () banked
  7800  0021B8  0100               	movlb	0	; () banked
  7801  0021BA  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7802  0021BC  0EA5               	movlw	low (STR_6+1)
  7803  0021BE  0100               	movlb	0	; () banked
  7804  0021C0  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7805  0021C2  0101               	movlb	1	; () banked
  7806  0021C4  0101               	movlb	1	; () banked
  7807  0021C6  515D               	movf	(_date+4)& (0+255),w,b
  7808  0021C8  0D04               	mullw	4
  7809  0021CA  0E77               	movlw	low _dow
  7810  0021CC  24F3               	addwf	prodl,w,c
  7811  0021CE  6EF6               	movwf	tblptrl,c
  7812  0021D0  0E7F               	movlw	high _dow
  7813  0021D2  20F4               	addwfc	prodh,w,c
  7814  0021D4  6EF7               	movwf	tblptrh,c
  7815  0021D6  0008               	tblrd		*
  7816  0021D8  50F5               	movf	tablat,w,c
  7817  0021DA  0100               	movlb	0	; () banked
  7818  0021DC  0100               	movlb	0	; () banked
  7819  0021DE  6FBF               	movwf	(?_sprintf+4)& (0+255),b
  7820  0021E0  0100               	movlb	0	; () banked
  7821  0021E2  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  7822  0021E4  0101               	movlb	1	; () banked
  7823  0021E6  0101               	movlb	1	; () banked
  7824  0021E8  515D               	movf	(_date+4)& (0+255),w,b
  7825  0021EA  0D04               	mullw	4
  7826  0021EC  0E01               	movlw	1
  7827  0021EE  26F3               	addwf	prodl,f,c
  7828  0021F0  0E00               	movlw	0
  7829  0021F2  22F4               	addwfc	prodh,f,c
  7830  0021F4  0E77               	movlw	low _dow
  7831  0021F6  24F3               	addwf	prodl,w,c
  7832  0021F8  6EF6               	movwf	tblptrl,c
  7833  0021FA  0E7F               	movlw	high _dow
  7834  0021FC  20F4               	addwfc	prodh,w,c
  7835  0021FE  6EF7               	movwf	tblptrh,c
  7836  002200  0008               	tblrd		*
  7837  002202  50F5               	movf	tablat,w,c
  7838  002204  0100               	movlb	0	; () banked
  7839  002206  0100               	movlb	0	; () banked
  7840  002208  6FC1               	movwf	(?_sprintf+6)& (0+255),b
  7841  00220A  0100               	movlb	0	; () banked
  7842  00220C  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7843  00220E  0101               	movlb	1	; () banked
  7844  002210  0100               	movlb	0	; () banked
  7845  002212  C15A  F0C3         	movff	_date+1,?_sprintf+8
  7846  002216  0100               	movlb	0	; () banked
  7847  002218  0100               	movlb	0	; () banked
  7848  00221A  6BC4               	clrf	(?_sprintf+9)& (0+255),b
  7849  00221C  0101               	movlb	1	; () banked
  7850  00221E  0100               	movlb	0	; () banked
  7851  002220  C159  F0C5         	movff	_date,?_sprintf+10
  7852  002224  0100               	movlb	0	; () banked
  7853  002226  0100               	movlb	0	; () banked
  7854  002228  6BC6               	clrf	(?_sprintf+11)& (0+255),b
  7855  00222A  EC8E  F000         	call	_sprintf	;wreg free
  7856                           
  7857                           ;RTC.c: 304: break;
  7858  00222E  D0CF               	goto	i2l7421
  7859  002230                     i2l7403:
  7860                           
  7861                           ;RTC.c: 306: sprintf(&str, "%02d.%02d.%02d", date.day, date.month, date.year % 100);
  7862  002230  C15F  F060         	movff	_date+6,?___lwmod
  7863  002234  C160  F061         	movff	_date+7,?___lwmod+1
  7864  002238  0E00               	movlw	0
  7865  00223A  0100               	movlb	0	; () banked
  7866  00223C  0100               	movlb	0	; () banked
  7867  00223E  6F63               	movwf	(?___lwmod+3)& (0+255),b
  7868  002240  0E64               	movlw	100
  7869  002242  0100               	movlb	0	; () banked
  7870  002244  6F62               	movwf	(?___lwmod+2)& (0+255),b
  7871  002246  ECDC  F032         	call	___lwmod	;wreg free
  7872  00224A  0100               	movlb	0	; () banked
  7873  00224C  C060  F10D         	movff	?___lwmod,_printRTC$1430
  7874  002250  0100               	movlb	0	; () banked
  7875  002252  C061  F10E         	movff	?___lwmod+1,_printRTC$1430+1
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;RTC.c: 306: sprintf(&str, "%02d.%02d.%02d", date.day, date.month, date.year % 100);
  7879  002256  0101               	movlb	1	; () banked
  7880  002258  0E01               	movlw	high printRTC@str
  7881  00225A  0100               	movlb	0	; () banked
  7882  00225C  0100               	movlb	0	; () banked
  7883  00225E  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7884  002260  0101               	movlb	1	; () banked
  7885  002262  0E01               	movlw	low printRTC@str
  7886  002264  0100               	movlb	0	; () banked
  7887  002266  6FBB               	movwf	?_sprintf& (0+255),b
  7888  002268  0E7F               	movlw	high (STR_5+2)
  7889  00226A  0100               	movlb	0	; () banked
  7890  00226C  0100               	movlb	0	; () banked
  7891  00226E  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7892  002270  0E95               	movlw	low (STR_5+2)
  7893  002272  0100               	movlb	0	; () banked
  7894  002274  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7895  002276  0101               	movlb	1	; () banked
  7896  002278  0100               	movlb	0	; () banked
  7897  00227A  C15C  F0BF         	movff	_date+3,?_sprintf+4
  7898  00227E  0100               	movlb	0	; () banked
  7899  002280  0100               	movlb	0	; () banked
  7900  002282  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  7901  002284  0101               	movlb	1	; () banked
  7902  002286  0100               	movlb	0	; () banked
  7903  002288  C15E  F0C1         	movff	_date+5,?_sprintf+6
  7904  00228C  0100               	movlb	0	; () banked
  7905  00228E  0100               	movlb	0	; () banked
  7906  002290  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7907  002292  C10D  F0C3         	movff	_printRTC$1430,?_sprintf+8
  7908  002296  C10E  F0C4         	movff	_printRTC$1430+1,?_sprintf+9
  7909  00229A  EC8E  F000         	call	_sprintf	;wreg free
  7910                           
  7911                           ;RTC.c: 307: break;
  7912  00229E  D097               	goto	i2l7421
  7913  0022A0                     i2l7407:
  7914                           
  7915                           ;RTC.c: 309: sprintf(&str, "  %02d.%02d", date.hour, date.minute);
  7916  0022A0  0101               	movlb	1	; () banked
  7917  0022A2  0E01               	movlw	high printRTC@str
  7918  0022A4  0100               	movlb	0	; () banked
  7919  0022A6  0100               	movlb	0	; () banked
  7920  0022A8  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7921  0022AA  0101               	movlb	1	; () banked
  7922  0022AC  0E01               	movlw	low printRTC@str
  7923  0022AE  0100               	movlb	0	; () banked
  7924  0022B0  6FBB               	movwf	?_sprintf& (0+255),b
  7925  0022B2  0E7F               	movlw	high (STR_8+2)
  7926  0022B4  0100               	movlb	0	; () banked
  7927  0022B6  0100               	movlb	0	; () banked
  7928  0022B8  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7929  0022BA  0EC5               	movlw	low (STR_8+2)
  7930  0022BC  0100               	movlb	0	; () banked
  7931  0022BE  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7932  0022C0  0101               	movlb	1	; () banked
  7933  0022C2  0100               	movlb	0	; () banked
  7934  0022C4  C15B  F0BF         	movff	_date+2,?_sprintf+4
  7935  0022C8  0100               	movlb	0	; () banked
  7936  0022CA  0100               	movlb	0	; () banked
  7937  0022CC  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  7938  0022CE  0101               	movlb	1	; () banked
  7939  0022D0  0100               	movlb	0	; () banked
  7940  0022D2  C15A  F0C1         	movff	_date+1,?_sprintf+6
  7941  0022D6  0100               	movlb	0	; () banked
  7942  0022D8  0100               	movlb	0	; () banked
  7943  0022DA  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7944  0022DC  EC8E  F000         	call	_sprintf	;wreg free
  7945                           
  7946                           ;RTC.c: 310: break;
  7947  0022E0  D076               	goto	i2l7421
  7948  0022E2                     i2l7409:
  7949                           
  7950                           ;RTC.c: 312: sprintf(&str, "  %02d.%02d", date.day, date.month);
  7951  0022E2  0101               	movlb	1	; () banked
  7952  0022E4  0E01               	movlw	high printRTC@str
  7953  0022E6  0100               	movlb	0	; () banked
  7954  0022E8  0100               	movlb	0	; () banked
  7955  0022EA  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  7956  0022EC  0101               	movlb	1	; () banked
  7957  0022EE  0E01               	movlw	low printRTC@str
  7958  0022F0  0100               	movlb	0	; () banked
  7959  0022F2  6FBB               	movwf	?_sprintf& (0+255),b
  7960  0022F4  0E7F               	movlw	high (STR_8+2)
  7961  0022F6  0100               	movlb	0	; () banked
  7962  0022F8  0100               	movlb	0	; () banked
  7963  0022FA  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  7964  0022FC  0EC5               	movlw	low (STR_8+2)
  7965  0022FE  0100               	movlb	0	; () banked
  7966  002300  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  7967  002302  0101               	movlb	1	; () banked
  7968  002304  0100               	movlb	0	; () banked
  7969  002306  C15C  F0BF         	movff	_date+3,?_sprintf+4
  7970  00230A  0100               	movlb	0	; () banked
  7971  00230C  0100               	movlb	0	; () banked
  7972  00230E  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  7973  002310  0101               	movlb	1	; () banked
  7974  002312  0100               	movlb	0	; () banked
  7975  002314  C15E  F0C1         	movff	_date+5,?_sprintf+6
  7976  002318  0100               	movlb	0	; () banked
  7977  00231A  0100               	movlb	0	; () banked
  7978  00231C  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  7979  00231E  EC8E  F000         	call	_sprintf	;wreg free
  7980                           
  7981                           ;RTC.c: 313: break;
  7982  002322  D055               	goto	i2l7421
  7983  002324                     i2l7413:
  7984  002324  0101               	movlb	1	; () banked
  7985  002326  0101               	movlb	1	; () banked
  7986  002328  510F               	movf	printRTC@cnt& (0+255),w,b
  7987                           
  7988                           ; Switch size 1, requested type "space"
  7989                           ; Number of cases is 5, Range of values is 0 to 8
  7990                           ; switch strategies available:
  7991                           ; Name         Instructions Cycles
  7992                           ; simple_byte           16     9 (average)
  7993                           ;	Chosen strategy is simple_byte
  7994  00232A  0A00               	xorlw	0	; case 0
  7995  00232C  B4D8               	btfsc	status,2,c
  7996  00232E  D7B8               	goto	i2l7407
  7997  002330  0A01               	xorlw	1	; case 1
  7998  002332  B4D8               	btfsc	status,2,c
  7999  002334  D70E               	goto	i2l7399
  8000  002336  0A02               	xorlw	2	; case 3
  8001  002338  B4D8               	btfsc	status,2,c
  8002  00233A  D733               	goto	i2l7401
  8003  00233C  0A05               	xorlw	5	; case 6
  8004  00233E  B4D8               	btfsc	status,2,c
  8005  002340  D7D0               	goto	i2l7409
  8006  002342  0A0E               	xorlw	14	; case 8
  8007  002344  B4D8               	btfsc	status,2,c
  8008  002346  D774               	goto	i2l7403
  8009  002348  D088               	goto	i2l7429
  8010  00234A                     i2l7415:
  8011                           
  8012                           ; BSR set to: 1
  8013                           ;RTC.c: 321: sprintf(&str, "%02d.%02d", date.hour, date.minute);
  8014  00234A  0101               	movlb	1	; () banked
  8015  00234C  0E01               	movlw	high printRTC@str
  8016  00234E  0100               	movlb	0	; () banked
  8017  002350  0100               	movlb	0	; () banked
  8018  002352  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  8019  002354  0101               	movlb	1	; () banked
  8020  002356  0E01               	movlw	low printRTC@str
  8021  002358  0100               	movlb	0	; () banked
  8022  00235A  6FBB               	movwf	?_sprintf& (0+255),b
  8023  00235C  0E7F               	movlw	high (STR_8+4)
  8024  00235E  0100               	movlb	0	; () banked
  8025  002360  0100               	movlb	0	; () banked
  8026  002362  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  8027  002364  0EC7               	movlw	low (STR_8+4)
  8028  002366  0100               	movlb	0	; () banked
  8029  002368  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  8030  00236A  0101               	movlb	1	; () banked
  8031  00236C  0100               	movlb	0	; () banked
  8032  00236E  C15B  F0BF         	movff	_date+2,?_sprintf+4
  8033  002372  0100               	movlb	0	; () banked
  8034  002374  0100               	movlb	0	; () banked
  8035  002376  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  8036  002378  0101               	movlb	1	; () banked
  8037  00237A  0100               	movlb	0	; () banked
  8038  00237C  C15A  F0C1         	movff	_date+1,?_sprintf+6
  8039  002380  0100               	movlb	0	; () banked
  8040  002382  0100               	movlb	0	; () banked
  8041  002384  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  8042  002386  EC8E  F000         	call	_sprintf	;wreg free
  8043                           
  8044                           ;RTC.c: 322: break;
  8045  00238A  D02B               	goto	i2l7423
  8046  00238C                     i2l7417:
  8047                           
  8048                           ;RTC.c: 324: sprintf(&str, "%02d.%02d", date.day, date.month);
  8049  00238C  0101               	movlb	1	; () banked
  8050  00238E  0E01               	movlw	high printRTC@str
  8051  002390  0100               	movlb	0	; () banked
  8052  002392  0100               	movlb	0	; () banked
  8053  002394  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  8054  002396  0101               	movlb	1	; () banked
  8055  002398  0E01               	movlw	low printRTC@str
  8056  00239A  0100               	movlb	0	; () banked
  8057  00239C  6FBB               	movwf	?_sprintf& (0+255),b
  8058  00239E  0E7F               	movlw	high (STR_8+4)
  8059  0023A0  0100               	movlb	0	; () banked
  8060  0023A2  0100               	movlb	0	; () banked
  8061  0023A4  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  8062  0023A6  0EC7               	movlw	low (STR_8+4)
  8063  0023A8  0100               	movlb	0	; () banked
  8064  0023AA  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  8065  0023AC  0101               	movlb	1	; () banked
  8066  0023AE  0100               	movlb	0	; () banked
  8067  0023B0  C15C  F0BF         	movff	_date+3,?_sprintf+4
  8068  0023B4  0100               	movlb	0	; () banked
  8069  0023B6  0100               	movlb	0	; () banked
  8070  0023B8  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  8071  0023BA  0101               	movlb	1	; () banked
  8072  0023BC  0100               	movlb	0	; () banked
  8073  0023BE  C15E  F0C1         	movff	_date+5,?_sprintf+6
  8074  0023C2  0100               	movlb	0	; () banked
  8075  0023C4  0100               	movlb	0	; () banked
  8076  0023C6  6BC2               	clrf	(?_sprintf+7)& (0+255),b
  8077  0023C8  EC8E  F000         	call	_sprintf	;wreg free
  8078                           
  8079                           ;RTC.c: 325: break;
  8080  0023CC  D00A               	goto	i2l7423
  8081  0023CE                     i2l7421:
  8082  0023CE  0101               	movlb	1	; () banked
  8083  0023D0  0101               	movlb	1	; () banked
  8084  0023D2  510F               	movf	printRTC@cnt& (0+255),w,b
  8085                           
  8086                           ; Switch size 1, requested type "space"
  8087                           ; Number of cases is 2, Range of values is 0 to 6
  8088                           ; switch strategies available:
  8089                           ; Name         Instructions Cycles
  8090                           ; simple_byte            7     4 (average)
  8091                           ;	Chosen strategy is simple_byte
  8092  0023D4  0A00               	xorlw	0	; case 0
  8093  0023D6  B4D8               	btfsc	status,2,c
  8094  0023D8  D7B8               	goto	i2l7415
  8095  0023DA  0A06               	xorlw	6	; case 6
  8096  0023DC  B4D8               	btfsc	status,2,c
  8097  0023DE  D7D6               	goto	i2l7417
  8098  0023E0  D03C               	goto	i2l7429
  8099  0023E2                     i2l7423:
  8100                           
  8101                           ;RTC.c: 330: sprintf(&str, "    ");
  8102  0023E2  0101               	movlb	1	; () banked
  8103  0023E4  0E01               	movlw	high printRTC@str
  8104  0023E6  0100               	movlb	0	; () banked
  8105  0023E8  0100               	movlb	0	; () banked
  8106  0023EA  6FBC               	movwf	(?_sprintf+1)& (0+255),b
  8107  0023EC  0101               	movlb	1	; () banked
  8108  0023EE  0E01               	movlw	low printRTC@str
  8109  0023F0  0100               	movlb	0	; () banked
  8110  0023F2  6FBB               	movwf	?_sprintf& (0+255),b
  8111  0023F4  0E7F               	movlw	high STR_17
  8112  0023F6  0100               	movlb	0	; () banked
  8113  0023F8  0100               	movlb	0	; () banked
  8114  0023FA  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  8115  0023FC  0EE5               	movlw	low STR_17
  8116  0023FE  0100               	movlb	0	; () banked
  8117  002400  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  8118  002402  EC8E  F000         	call	_sprintf	;wreg free
  8119                           
  8120                           ;RTC.c: 331: break;
  8121  002406  D029               	goto	i2l7429
  8122  002408                     i2l7427:
  8123  002408  0100               	movlb	0	; () banked
  8124  00240A  0100               	movlb	0	; () banked
  8125  00240C  51F0               	movf	printRTC@digits& (0+255),w,b
  8126  00240E  0100               	movlb	0	; () banked
  8127  002410  0100               	movlb	0	; () banked
  8128  002412  6F60               	movwf	?_countBits& (0+255),b
  8129  002414  0100               	movlb	0	; () banked
  8130  002416  6B61               	clrf	(?_countBits+1)& (0+255),b
  8131  002418  0100               	movlb	0	; () banked
  8132  00241A  6B62               	clrf	(?_countBits+2)& (0+255),b
  8133  00241C  0100               	movlb	0	; () banked
  8134  00241E  6B63               	clrf	(?_countBits+3)& (0+255),b
  8135  002420  EC79  F036         	call	_countBits	;wreg free
  8136                           
  8137                           ; Switch size 1, requested type "space"
  8138                           ; Number of cases is 9, Range of values is 0 to 8
  8139                           ; switch strategies available:
  8140                           ; Name         Instructions Cycles
  8141                           ; simple_byte           28    15 (average)
  8142                           ;	Chosen strategy is simple_byte
  8143  002424  0A00               	xorlw	0	; case 0
  8144  002426  B4D8               	btfsc	status,2,c
  8145  002428  D7DC               	goto	i2l7423
  8146  00242A  0A01               	xorlw	1	; case 1
  8147  00242C  B4D8               	btfsc	status,2,c
  8148  00242E  D7D9               	goto	i2l7423
  8149  002430  0A03               	xorlw	3	; case 2
  8150  002432  B4D8               	btfsc	status,2,c
  8151  002434  D7D6               	goto	i2l7423
  8152  002436  0A01               	xorlw	1	; case 3
  8153  002438  B4D8               	btfsc	status,2,c
  8154  00243A  D7D3               	goto	i2l7423
  8155  00243C  0A07               	xorlw	7	; case 4
  8156  00243E  B4D8               	btfsc	status,2,c
  8157  002440  D7C6               	goto	i2l7421
  8158  002442  0A01               	xorlw	1	; case 5
  8159  002444  B4D8               	btfsc	status,2,c
  8160  002446  D7C3               	goto	i2l7421
  8161  002448  0A03               	xorlw	3	; case 6
  8162  00244A  B4D8               	btfsc	status,2,c
  8163  00244C  D76B               	goto	i2l7413
  8164  00244E  0A01               	xorlw	1	; case 7
  8165  002450  B4D8               	btfsc	status,2,c
  8166  002452  D768               	goto	i2l7413
  8167  002454  0A0F               	xorlw	15	; case 8
  8168  002456  B4D8               	btfsc	status,2,c
  8169  002458  D663               	goto	i2l7397
  8170  00245A                     i2l7429:
  8171  00245A  0101               	movlb	1	; () banked
  8172  00245C  0101               	movlb	1	; () banked
  8173  00245E  2B0F               	incf	printRTC@cnt& (0+255),f,b
  8174  002460                     i2l7431:
  8175  002460  0101               	movlb	1	; () banked
  8176  002462  0101               	movlb	1	; () banked
  8177  002464  5185               	movf	_rtcMenu& (0+255),w,b
  8178  002466  0101               	movlb	1	; () banked
  8179  002468  0101               	movlb	1	; () banked
  8180  00246A  190F               	xorwf	printRTC@cnt& (0+255),w,b
  8181  00246C  B4D8               	btfsc	status,2,c
  8182  00246E  D005               	goto	i2l315
  8183                           
  8184                           ; BSR set to: 1
  8185  002470  0101               	movlb	1	; () banked
  8186  002472  0101               	movlb	1	; () banked
  8187  002474  5100               	movf	printRTC@first& (0+255),w,b
  8188  002476  B4D8               	btfsc	status,2,c
  8189  002478  D4F7               	goto	i2l282
  8190  00247A                     i2l315:
  8191                           
  8192                           ; BSR set to: 1
  8193                           ;RTC.c: 333: }
  8194                           ;RTC.c: 334: rtcMenu.state = cnt;
  8195  00247A  C10F  F185         	movff	printRTC@cnt,_rtcMenu
  8196                           
  8197                           ; BSR set to: 1
  8198                           ;RTC.c: 335: writeString(digits, &str);
  8199  00247E  C0F0  F084         	movff	printRTC@digits,?_writeString
  8200  002482  0101               	movlb	1	; () banked
  8201  002484  0E01               	movlw	high printRTC@str
  8202  002486  0100               	movlb	0	; () banked
  8203  002488  0100               	movlb	0	; () banked
  8204  00248A  6F86               	movwf	(?_writeString+2)& (0+255),b
  8205  00248C  0101               	movlb	1	; () banked
  8206  00248E  0E01               	movlw	low printRTC@str
  8207  002490  0100               	movlb	0	; () banked
  8208  002492  6F85               	movwf	(?_writeString+1)& (0+255),b
  8209  002494  EC7F  F01C         	call	_writeString	;wreg free
  8210                           
  8211                           ;RTC.c: 336: screen.changed |= digits;
  8212  002498  0100               	movlb	0	; () banked
  8213  00249A  0100               	movlb	0	; () banked
  8214  00249C  51F0               	movf	printRTC@digits& (0+255),w,b
  8215  00249E  0101               	movlb	1	; () banked
  8216  0024A0  0101               	movlb	1	; () banked
  8217  0024A2  137A               	iorwf	(_screen+11)& (0+255),f,b
  8218                           
  8219                           ; BSR set to: 1
  8220                           ;RTC.c: 337: LATC1 = ~LATC1;
  8221  0024A4  728B               	btg	3979,1,c	;volatile
  8222                           
  8223                           ; BSR set to: 1
  8224                           
  8225                           ; BSR set to: 1
  8226                           ;RTC.c: 338: return (0);
  8227                           ;	Return value of _printRTC is never used
  8228  0024A6  0012               	return	
  8229  0024A8                     __end_of_printRTC:
  8230                           	opt stack 0
  8231                           tosu	equ	0xFFF
  8232                           tosh	equ	0xFFE
  8233                           tosl	equ	0xFFD
  8234                           pclatu	equ	0xFFB
  8235                           pclath	equ	0xFFA
  8236                           tblptru	equ	0xFF8
  8237                           tblptrh	equ	0xFF7
  8238                           tblptrl	equ	0xFF6
  8239                           tablat	equ	0xFF5
  8240                           prodh	equ	0xFF4
  8241                           prodl	equ	0xFF3
  8242                           intcon	equ	0xFF2
  8243                           intcon2	equ	0xFF1
  8244                           postinc0	equ	0xFEE
  8245                           fsr0h	equ	0xFEA
  8246                           fsr0l	equ	0xFE9
  8247                           wreg	equ	0xFE8
  8248                           postinc1	equ	0xFE6
  8249                           postdec1	equ	0xFE5
  8250                           fsr1h	equ	0xFE2
  8251                           fsr1l	equ	0xFE1
  8252                           bsr	equ	0xFE0
  8253                           indf2	equ	0xFDF
  8254                           postinc2	equ	0xFDE
  8255                           fsr2h	equ	0xFDA
  8256                           fsr2l	equ	0xFD9
  8257                           status	equ	0xFD8
  8258                           
  8259 ;; *************** function _printTemp *****************
  8260 ;; Defined at:
  8261 ;;		line 76 in file "temp.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;  digits          1  144[BANK0 ] unsigned char 
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;  str             2  150[BANK0 ] PTR unsigned char 
  8266 ;;		 -> STR_20(5), 
  8267 ;;  units           1  152[BANK0 ] unsigned char 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  2  144[BANK0 ] PTR void 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8277 ;;      Params:         0       1       0       0       0       0       0       0       0
  8278 ;;      Locals:         0       7       0       0       0       0       0       0       0
  8279 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8280 ;;      Totals:         0       9       0       0       0       0       0       0       0
  8281 ;;Total ram usage:        9 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    5
  8284 ;; This function calls:
  8285 ;;		_countBits
  8286 ;;		_sprintf
  8287 ;;		_writeString
  8288 ;;		_lowbit
  8289 ;; This function is called by:
  8290 ;;		_initTemp
  8291 ;;		_high_isr
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text28
  8296  0056E4                     __ptext28:
  8297                           	opt stack 0
  8298  0056E4                     _printTemp:
  8299                           	opt stack 14
  8300                           
  8301                           ;temp.c: 77: uint8_t units = 0;
  8302                           
  8303                           ; BSR set to: 1
  8304                           ;incstack = 0
  8305                           ;incstack = 0
  8306  0056E4  0100               	movlb	0	; () banked
  8307  0056E6  6FF1               	movwf	??_printTemp& (0+255),b
  8308  0056E8  0E00               	movlw	0
  8309  0056EA  0100               	movlb	0	; () banked
  8310  0056EC  0100               	movlb	0	; () banked
  8311  0056EE  6FF8               	movwf	printTemp@units& (0+255),b
  8312  0056F0  0100               	movlb	0	; () banked
  8313  0056F2  51F1               	movf	??_printTemp& (0+255),w,b
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;temp.c: 78: units |= lowbit(digits);
  8317  0056F4  0100               	movlb	0	; () banked
  8318  0056F6  0100               	movlb	0	; () banked
  8319  0056F8  51F0               	movf	printTemp@digits& (0+255),w,b
  8320  0056FA  0100               	movlb	0	; () banked
  8321  0056FC  0100               	movlb	0	; () banked
  8322  0056FE  6F60               	movwf	?_lowbit& (0+255),b
  8323  005700  0100               	movlb	0	; () banked
  8324  005702  6B61               	clrf	(?_lowbit+1)& (0+255),b
  8325  005704  0100               	movlb	0	; () banked
  8326  005706  6B62               	clrf	(?_lowbit+2)& (0+255),b
  8327  005708  0100               	movlb	0	; () banked
  8328  00570A  6B63               	clrf	(?_lowbit+3)& (0+255),b
  8329  00570C  EC6E  F030         	call	_lowbit	;wreg free
  8330  005710  0100               	movlb	0	; () banked
  8331  005712  0100               	movlb	0	; () banked
  8332  005714  5160               	movf	?_lowbit& (0+255),w,b
  8333  005716  0100               	movlb	0	; () banked
  8334  005718  0100               	movlb	0	; () banked
  8335  00571A  13F8               	iorwf	printTemp@units& (0+255),f,b
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;temp.c: 79: units |= lowbit(digits &= (~lowbit(digits)));
  8339  00571C  0100               	movlb	0	; () banked
  8340  00571E  0100               	movlb	0	; () banked
  8341  005720  51F0               	movf	printTemp@digits& (0+255),w,b
  8342  005722  0100               	movlb	0	; () banked
  8343  005724  0100               	movlb	0	; () banked
  8344  005726  6F60               	movwf	?_lowbit& (0+255),b
  8345  005728  0100               	movlb	0	; () banked
  8346  00572A  6B61               	clrf	(?_lowbit+1)& (0+255),b
  8347  00572C  0100               	movlb	0	; () banked
  8348  00572E  6B62               	clrf	(?_lowbit+2)& (0+255),b
  8349  005730  0100               	movlb	0	; () banked
  8350  005732  6B63               	clrf	(?_lowbit+3)& (0+255),b
  8351  005734  EC6E  F030         	call	_lowbit	;wreg free
  8352  005738  0100               	movlb	0	; () banked
  8353  00573A  0100               	movlb	0	; () banked
  8354  00573C  5160               	movf	?_lowbit& (0+255),w,b
  8355  00573E  0AFF               	xorlw	255
  8356  005740  0100               	movlb	0	; () banked
  8357  005742  0100               	movlb	0	; () banked
  8358  005744  17F0               	andwf	printTemp@digits& (0+255),f,b
  8359  005746  0100               	movlb	0	; () banked
  8360  005748  51F0               	movf	printTemp@digits& (0+255),w,b
  8361  00574A  0100               	movlb	0	; () banked
  8362  00574C  0100               	movlb	0	; () banked
  8363  00574E  6FF2               	movwf	_printTemp$1431& (0+255),b
  8364  005750  0100               	movlb	0	; () banked
  8365  005752  6BF3               	clrf	(_printTemp$1431+1)& (0+255),b
  8366  005754  0100               	movlb	0	; () banked
  8367  005756  6BF4               	clrf	(_printTemp$1431+2)& (0+255),b
  8368  005758  0100               	movlb	0	; () banked
  8369  00575A  6BF5               	clrf	(_printTemp$1431+3)& (0+255),b
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;temp.c: 79: units |= lowbit(digits &= (~lowbit(digits)));
  8373  00575C  C0F2  F060         	movff	_printTemp$1431,?_lowbit
  8374  005760  C0F3  F061         	movff	_printTemp$1431+1,?_lowbit+1
  8375  005764  C0F4  F062         	movff	_printTemp$1431+2,?_lowbit+2
  8376  005768  C0F5  F063         	movff	_printTemp$1431+3,?_lowbit+3
  8377  00576C  EC6E  F030         	call	_lowbit	;wreg free
  8378  005770  0100               	movlb	0	; () banked
  8379  005772  0100               	movlb	0	; () banked
  8380  005774  5160               	movf	?_lowbit& (0+255),w,b
  8381  005776  0100               	movlb	0	; () banked
  8382  005778  0100               	movlb	0	; () banked
  8383  00577A  13F8               	iorwf	printTemp@units& (0+255),f,b
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;temp.c: 80: digits &= ~units;
  8387  00577C  0100               	movlb	0	; () banked
  8388  00577E  0100               	movlb	0	; () banked
  8389  005780  51F8               	movf	printTemp@units& (0+255),w,b
  8390  005782  0AFF               	xorlw	255
  8391  005784  0100               	movlb	0	; () banked
  8392  005786  0100               	movlb	0	; () banked
  8393  005788  17F0               	andwf	printTemp@digits& (0+255),f,b
  8394                           
  8395                           ; BSR set to: 0
  8396                           ;temp.c: 81: if (tempMenu.state == 0)
  8397  00578A  0100               	movlb	0	; () banked
  8398  00578C  0100               	movlb	0	; () banked
  8399  00578E  67FB               	tstfsz	_tempMenu& (0+255),b
  8400  005790  D00C               	goto	i2l7503
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;temp.c: 82: {
  8404                           ;temp.c: 83: writeString(units, (char*) "*C");
  8405  005792  C0F8  F084         	movff	printTemp@units,?_writeString
  8406  005796  0E7F               	movlw	high STR_18
  8407  005798  0100               	movlb	0	; () banked
  8408  00579A  0100               	movlb	0	; () banked
  8409  00579C  6F86               	movwf	(?_writeString+2)& (0+255),b
  8410  00579E  0EF8               	movlw	low STR_18
  8411  0057A0  0100               	movlb	0	; () banked
  8412  0057A2  6F85               	movwf	(?_writeString+1)& (0+255),b
  8413  0057A4  EC7F  F01C         	call	_writeString	;wreg free
  8414                           
  8415                           ;temp.c: 84: }
  8416  0057A8  D00B               	goto	i2l7505
  8417  0057AA                     i2l7503:
  8418                           
  8419                           ;temp.c: 85: else
  8420                           ;temp.c: 86: {
  8421                           ;temp.c: 87: writeString(units, (char*) "*F");
  8422  0057AA  C0F8  F084         	movff	printTemp@units,?_writeString
  8423  0057AE  0E7F               	movlw	high STR_19
  8424  0057B0  0100               	movlb	0	; () banked
  8425  0057B2  0100               	movlb	0	; () banked
  8426  0057B4  6F86               	movwf	(?_writeString+2)& (0+255),b
  8427  0057B6  0EFB               	movlw	low STR_19
  8428  0057B8  0100               	movlb	0	; () banked
  8429  0057BA  6F85               	movwf	(?_writeString+1)& (0+255),b
  8430  0057BC  EC7F  F01C         	call	_writeString	;wreg free
  8431  0057C0                     i2l7505:
  8432                           
  8433                           ;temp.c: 88: }
  8434                           ;temp.c: 89: char* str = (char*)"    ";
  8435  0057C0  0E7F               	movlw	high STR_17
  8436  0057C2  0100               	movlb	0	; () banked
  8437  0057C4  0100               	movlb	0	; () banked
  8438  0057C6  6FF7               	movwf	(printTemp@str+1)& (0+255),b
  8439  0057C8  0EE5               	movlw	low STR_17
  8440  0057CA  0100               	movlb	0	; () banked
  8441  0057CC  6FF6               	movwf	printTemp@str& (0+255),b
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;temp.c: 90: sprintf(str, "%*g", countBits(digits), temp);
  8445  0057CE  C0F6  F0BB         	movff	printTemp@str,?_sprintf
  8446  0057D2  C0F7  F0BC         	movff	printTemp@str+1,?_sprintf+1
  8447  0057D6  0E7F               	movlw	high STR_21
  8448  0057D8  0100               	movlb	0	; () banked
  8449  0057DA  0100               	movlb	0	; () banked
  8450  0057DC  6FBE               	movwf	(?_sprintf+3)& (0+255),b
  8451  0057DE  0EF4               	movlw	low STR_21
  8452  0057E0  0100               	movlb	0	; () banked
  8453  0057E2  6FBD               	movwf	(?_sprintf+2)& (0+255),b
  8454  0057E4  0100               	movlb	0	; () banked
  8455  0057E6  0100               	movlb	0	; () banked
  8456  0057E8  51F0               	movf	printTemp@digits& (0+255),w,b
  8457  0057EA  0100               	movlb	0	; () banked
  8458  0057EC  0100               	movlb	0	; () banked
  8459  0057EE  6F60               	movwf	?_countBits& (0+255),b
  8460  0057F0  0100               	movlb	0	; () banked
  8461  0057F2  6B61               	clrf	(?_countBits+1)& (0+255),b
  8462  0057F4  0100               	movlb	0	; () banked
  8463  0057F6  6B62               	clrf	(?_countBits+2)& (0+255),b
  8464  0057F8  0100               	movlb	0	; () banked
  8465  0057FA  6B63               	clrf	(?_countBits+3)& (0+255),b
  8466  0057FC  EC79  F036         	call	_countBits	;wreg free
  8467  005800  0100               	movlb	0	; () banked
  8468  005802  6FF1               	movwf	??_printTemp& (0+255),b
  8469  005804  0100               	movlb	0	; () banked
  8470  005806  51F1               	movf	??_printTemp& (0+255),w,b
  8471  005808  0100               	movlb	0	; () banked
  8472  00580A  0100               	movlb	0	; () banked
  8473  00580C  6FBF               	movwf	(?_sprintf+4)& (0+255),b
  8474  00580E  0100               	movlb	0	; () banked
  8475  005810  6BC0               	clrf	(?_sprintf+5)& (0+255),b
  8476  005812  C057  F0C1         	movff	_temp,?_sprintf+6
  8477  005816  C058  F0C2         	movff	_temp+1,?_sprintf+7
  8478  00581A  C059  F0C3         	movff	_temp+2,?_sprintf+8
  8479  00581E  EC8E  F000         	call	_sprintf	;wreg free
  8480                           
  8481                           ;temp.c: 91: writeString(digits, str);
  8482  005822  C0F0  F084         	movff	printTemp@digits,?_writeString
  8483  005826  C0F6  F085         	movff	printTemp@str,?_writeString+1
  8484  00582A  C0F7  F086         	movff	printTemp@str+1,?_writeString+2
  8485  00582E  EC7F  F01C         	call	_writeString	;wreg free
  8486                           
  8487                           ;temp.c: 92: return (0);
  8488                           ;	Return value of _printTemp is never used
  8489  005832  0012               	return	
  8490  005834                     __end_of_printTemp:
  8491                           	opt stack 0
  8492                           tosu	equ	0xFFF
  8493                           tosh	equ	0xFFE
  8494                           tosl	equ	0xFFD
  8495                           pclatu	equ	0xFFB
  8496                           pclath	equ	0xFFA
  8497                           tblptru	equ	0xFF8
  8498                           tblptrh	equ	0xFF7
  8499                           tblptrl	equ	0xFF6
  8500                           tablat	equ	0xFF5
  8501                           prodh	equ	0xFF4
  8502                           prodl	equ	0xFF3
  8503                           intcon	equ	0xFF2
  8504                           intcon2	equ	0xFF1
  8505                           postinc0	equ	0xFEE
  8506                           fsr0h	equ	0xFEA
  8507                           fsr0l	equ	0xFE9
  8508                           wreg	equ	0xFE8
  8509                           postinc1	equ	0xFE6
  8510                           postdec1	equ	0xFE5
  8511                           fsr1h	equ	0xFE2
  8512                           fsr1l	equ	0xFE1
  8513                           bsr	equ	0xFE0
  8514                           indf2	equ	0xFDF
  8515                           postinc2	equ	0xFDE
  8516                           fsr2h	equ	0xFDA
  8517                           fsr2l	equ	0xFD9
  8518                           status	equ	0xFD8
  8519                           
  8520 ;; *************** function _lowbit *****************
  8521 ;; Defined at:
  8522 ;;		line 26 in file "defs.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  x               4    0[BANK0 ] unsigned long 
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;  log2Val         4    7[BANK0 ] unsigned long 
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  4    0[BANK0 ] unsigned long 
  8529 ;; Registers used:
  8530 ;;		wreg, status,2, status,0
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8536 ;;      Params:         0       4       0       0       0       0       0       0       0
  8537 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8538 ;;      Temps:          0       3       0       0       0       0       0       0       0
  8539 ;;      Totals:         0      11       0       0       0       0       0       0       0
  8540 ;;Total ram usage:       11 bytes
  8541 ;; Hardware stack levels used:    1
  8542 ;; This function calls:
  8543 ;;		Nothing
  8544 ;; This function is called by:
  8545 ;;		_printTemp
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           	psect	text29
  8550  0060DC                     __ptext29:
  8551                           	opt stack 0
  8552  0060DC                     _lowbit:
  8553                           	opt stack 18
  8554                           
  8555                           ;defs.c: 27: uint32_t log2Val = 0;
  8556                           
  8557                           ;incstack = 0
  8558                           ;incstack = 0
  8559  0060DC  0E00               	movlw	0
  8560  0060DE  0100               	movlb	0	; () banked
  8561  0060E0  0100               	movlb	0	; () banked
  8562  0060E2  6F67               	movwf	lowbit@log2Val& (0+255),b
  8563  0060E4  0E00               	movlw	0
  8564  0060E6  0100               	movlb	0	; () banked
  8565  0060E8  6F68               	movwf	(lowbit@log2Val+1)& (0+255),b
  8566  0060EA  0E00               	movlw	0
  8567  0060EC  0100               	movlb	0	; () banked
  8568  0060EE  6F69               	movwf	(lowbit@log2Val+2)& (0+255),b
  8569  0060F0  0E00               	movlw	0
  8570  0060F2  0100               	movlb	0	; () banked
  8571  0060F4  6F6A               	movwf	(lowbit@log2Val+3)& (0+255),b
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;defs.c: 28: if (x & 1)
  8575  0060F6  0100               	movlb	0	; () banked
  8576  0060F8  0100               	movlb	0	; () banked
  8577  0060FA  A160               	btfss	lowbit@x& (0+255),0,b
  8578  0060FC  D00C               	goto	i2l7523
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;defs.c: 29: return 1;
  8582  0060FE  0E01               	movlw	1
  8583  006100  0100               	movlb	0	; () banked
  8584  006102  0100               	movlb	0	; () banked
  8585  006104  6F60               	movwf	?_lowbit& (0+255),b
  8586  006106  0E00               	movlw	0
  8587  006108  0100               	movlb	0	; () banked
  8588  00610A  6F61               	movwf	(?_lowbit+1)& (0+255),b
  8589  00610C  0E00               	movlw	0
  8590  00610E  0100               	movlb	0	; () banked
  8591  006110  6F62               	movwf	(?_lowbit+2)& (0+255),b
  8592  006112  0E00               	movlw	0
  8593  006114  D037               	goto	L11
  8594  006116                     i2l7523:
  8595                           
  8596                           ; BSR set to: 0
  8597  006116  0E01               	movlw	1
  8598  006118  0100               	movlb	0	; () banked
  8599  00611A  0100               	movlb	0	; () banked
  8600  00611C  2767               	addwf	lowbit@log2Val& (0+255),f,b
  8601  00611E  0E00               	movlw	0
  8602  006120  0100               	movlb	0	; () banked
  8603  006122  2368               	addwfc	(lowbit@log2Val+1)& (0+255),f,b
  8604  006124  0E00               	movlw	0
  8605  006126  0100               	movlb	0	; () banked
  8606  006128  2369               	addwfc	(lowbit@log2Val+2)& (0+255),f,b
  8607  00612A  0E00               	movlw	0
  8608  00612C  0100               	movlb	0	; () banked
  8609  00612E  236A               	addwfc	(lowbit@log2Val+3)& (0+255),f,b
  8610                           
  8611                           ; BSR set to: 0
  8612                           
  8613                           ; BSR set to: 0
  8614  006130  0100               	movlb	0	; () banked
  8615  006132  90D8               	bcf	status,0,c
  8616  006134  0100               	movlb	0	; () banked
  8617  006136  3363               	rrcf	(lowbit@x+3)& (0+255),f,b
  8618  006138  0100               	movlb	0	; () banked
  8619  00613A  3362               	rrcf	(lowbit@x+2)& (0+255),f,b
  8620  00613C  0100               	movlb	0	; () banked
  8621  00613E  3361               	rrcf	(lowbit@x+1)& (0+255),f,b
  8622  006140  0100               	movlb	0	; () banked
  8623  006142  3360               	rrcf	lowbit@x& (0+255),f,b
  8624  006144  0100               	movlb	0	; () banked
  8625  006146  A160               	btfss	lowbit@x& (0+255),0,b
  8626  006148  D7E6               	goto	i2l7523
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;defs.c: 32: return 1 << log2Val;
  8630                           
  8631                           ; BSR set to: 0
  8632  00614A  C067  F064         	movff	lowbit@log2Val,??_lowbit
  8633  00614E  0E01               	movlw	1
  8634  006150  0100               	movlb	0	; () banked
  8635  006152  6F65               	movwf	(??_lowbit+1)& (0+255),b
  8636  006154  6B66               	clrf	(??_lowbit+2)& (0+255),b
  8637  006156  0100               	movlb	0	; () banked
  8638  006158  2B64               	incf	??_lowbit& (0+255),f,b
  8639  00615A  D004               	goto	i2u587_44
  8640  00615C                     i2u587_45:
  8641  00615C  90D8               	bcf	status,0,c
  8642  00615E  0100               	movlb	0	; () banked
  8643  006160  3765               	rlcf	(??_lowbit+1)& (0+255),f,b
  8644  006162  3766               	rlcf	(??_lowbit+2)& (0+255),f,b
  8645  006164                     i2u587_44:
  8646  006164  0100               	movlb	0	; () banked
  8647  006166  2F64               	decfsz	??_lowbit& (0+255),f,b
  8648  006168  D7F9               	goto	i2u587_45
  8649  00616A  0100               	movlb	0	; () banked
  8650  00616C  C065  F060         	movff	??_lowbit+1,?_lowbit
  8651  006170  0100               	movlb	0	; () banked
  8652  006172  C066  F061         	movff	??_lowbit+2,?_lowbit+1
  8653  006176  0100               	movlb	0	; () banked
  8654  006178  0E00               	movlw	0
  8655  00617A  0100               	movlb	0	; () banked
  8656  00617C  BF61               	btfsc	(?_lowbit+1)& (0+255),7,b
  8657  00617E  0EFF               	movlw	-1
  8658  006180  0100               	movlb	0	; () banked
  8659  006182  6F62               	movwf	(?_lowbit+2)& (0+255),b
  8660  006184                     L11:
  8661  006184  0100               	movlb	0	; () banked
  8662  006186  6F63               	movwf	(?_lowbit+3)& (0+255),b
  8663                           
  8664                           ; BSR set to: 0
  8665                           
  8666                           ; BSR set to: 0
  8667  006188  0012               	return	
  8668  00618A                     __end_of_lowbit:
  8669                           	opt stack 0
  8670                           tosu	equ	0xFFF
  8671                           tosh	equ	0xFFE
  8672                           tosl	equ	0xFFD
  8673                           pclatu	equ	0xFFB
  8674                           pclath	equ	0xFFA
  8675                           tblptru	equ	0xFF8
  8676                           tblptrh	equ	0xFF7
  8677                           tblptrl	equ	0xFF6
  8678                           tablat	equ	0xFF5
  8679                           prodh	equ	0xFF4
  8680                           prodl	equ	0xFF3
  8681                           intcon	equ	0xFF2
  8682                           intcon2	equ	0xFF1
  8683                           postinc0	equ	0xFEE
  8684                           fsr0h	equ	0xFEA
  8685                           fsr0l	equ	0xFE9
  8686                           wreg	equ	0xFE8
  8687                           postinc1	equ	0xFE6
  8688                           postdec1	equ	0xFE5
  8689                           fsr1h	equ	0xFE2
  8690                           fsr1l	equ	0xFE1
  8691                           bsr	equ	0xFE0
  8692                           indf2	equ	0xFDF
  8693                           postinc2	equ	0xFDE
  8694                           fsr2h	equ	0xFDA
  8695                           fsr2l	equ	0xFD9
  8696                           status	equ	0xFD8
  8697                           
  8698 ;; *************** function _getTemp *****************
  8699 ;; Defined at:
  8700 ;;		line 44 in file "temp.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;		None
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  oldTempsTemp    9   86[BANK0 ] [3]
  8705 ;;  total           3   98[BANK0 ] [3]
  8706 ;;  temp            3   95[BANK0 ] [3]
  8707 ;;  cnt             1  101[BANK0 ] unsigned char 
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  3  353[COMRAM] unsigned char 
  8710 ;; Registers used:
  8711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8717 ;;      Params:         0       0       0       0       0       0       0       0       0
  8718 ;;      Locals:         0      16       0       0       0       0       0       0       0
  8719 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8720 ;;      Totals:         0      17       0       0       0       0       0       0       0
  8721 ;;Total ram usage:       17 bytes
  8722 ;; Hardware stack levels used:    1
  8723 ;; Hardware stack levels required when called:    3
  8724 ;; This function calls:
  8725 ;;		___asftadd
  8726 ;;		___ftadd
  8727 ;;		___ftdiv
  8728 ;;		___ftmul
  8729 ;;		___lwtoft
  8730 ;;		___wmul
  8731 ;; This function is called by:
  8732 ;;		_high_isr
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           	psect	text30
  8737  00464C                     __ptext30:
  8738                           	opt stack 0
  8739  00464C                     _getTemp:
  8740                           	opt stack 16
  8741                           
  8742                           ;temp.c: 45: double oldTempsTemp[3];
  8743                           ;temp.c: 46: uint8_t cnt;
  8744                           ;temp.c: 47: for (cnt = 3; cnt > 0; cnt--)
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;incstack = 0
  8748                           ;incstack = 0
  8749  00464C  0100               	movlb	0	; () banked
  8750  00464E  6FB5               	movwf	??_getTemp& (0+255),b
  8751  004650  0E03               	movlw	3
  8752  004652  0100               	movlb	0	; () banked
  8753  004654  0100               	movlb	0	; () banked
  8754  004656  6FC5               	movwf	getTemp@cnt& (0+255),b
  8755  004658  0100               	movlb	0	; () banked
  8756  00465A  51B5               	movf	??_getTemp& (0+255),w,b
  8757  00465C  D037               	goto	L13
  8758  00465E                     i2l7459:
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;temp.c: 48: {
  8762                           ;temp.c: 49: oldTempsTemp[cnt - 1] = oldTemps[cnt];
  8763  00465E  0100               	movlb	0	; () banked
  8764  004660  0100               	movlb	0	; () banked
  8765  004662  51C5               	movf	getTemp@cnt& (0+255),w,b
  8766  004664  0D03               	mullw	3
  8767  004666  0101               	movlb	1	; () banked
  8768  004668  0E41               	movlw	low _oldTemps
  8769  00466A  24F3               	addwf	prodl,w,c
  8770  00466C  6ED9               	movwf	fsr2l,c
  8771  00466E  0101               	movlb	1	; () banked
  8772  004670  0E01               	movlw	high _oldTemps
  8773  004672  20F4               	addwfc	prodh,w,c
  8774  004674  6EDA               	movwf	fsr2h,c
  8775  004676  0EFF               	movlw	255
  8776  004678  0100               	movlb	0	; () banked
  8777  00467A  0100               	movlb	0	; () banked
  8778  00467C  25C5               	addwf	getTemp@cnt& (0+255),w,b
  8779  00467E  0100               	movlb	0	; () banked
  8780  004680  0100               	movlb	0	; () banked
  8781  004682  6F76               	movwf	?___wmul& (0+255),b
  8782  004684  0100               	movlb	0	; () banked
  8783  004686  0100               	movlb	0	; () banked
  8784  004688  6B77               	clrf	(?___wmul+1)& (0+255),b
  8785  00468A  0EFF               	movlw	255
  8786  00468C  2377               	addwfc	(?___wmul+1)& (0+255),f,b
  8787  00468E  0E00               	movlw	0
  8788  004690  0100               	movlb	0	; () banked
  8789  004692  0100               	movlb	0	; () banked
  8790  004694  6F79               	movwf	(?___wmul+3)& (0+255),b
  8791  004696  0E03               	movlw	3
  8792  004698  0100               	movlb	0	; () banked
  8793  00469A  6F78               	movwf	(?___wmul+2)& (0+255),b
  8794  00469C  EC31  F035         	call	___wmul	;wreg free
  8795  0046A0  0100               	movlb	0	; () banked
  8796  0046A2  0EB6               	movlw	low getTemp@oldTempsTemp
  8797  0046A4  0100               	movlb	0	; () banked
  8798  0046A6  0100               	movlb	0	; () banked
  8799  0046A8  2576               	addwf	?___wmul& (0+255),w,b
  8800  0046AA  6EE1               	movwf	fsr1l,c
  8801  0046AC  0100               	movlb	0	; () banked
  8802  0046AE  0E00               	movlw	high getTemp@oldTempsTemp
  8803  0046B0  0100               	movlb	0	; () banked
  8804  0046B2  0100               	movlb	0	; () banked
  8805  0046B4  2177               	addwfc	(?___wmul+1)& (0+255),w,b
  8806  0046B6  6EE2               	movwf	fsr1h,c
  8807  0046B8  CFDE FFE6          	movff	postinc2,postinc1
  8808  0046BC  CFDE FFE6          	movff	postinc2,postinc1
  8809  0046C0  CFDE FFE5          	movff	postinc2,postdec1
  8810  0046C4  52E5               	movf	postdec1,f,c
  8811                           
  8812                           ; BSR set to: 0
  8813  0046C6  0100               	movlb	0	; () banked
  8814  0046C8  0100               	movlb	0	; () banked
  8815  0046CA  07C5               	decf	getTemp@cnt& (0+255),f,b
  8816  0046CC                     L13:
  8817                           
  8818                           ; BSR set to: 0
  8819  0046CC  0100               	movlb	0	; () banked
  8820  0046CE  0100               	movlb	0	; () banked
  8821  0046D0  67C5               	tstfsz	getTemp@cnt& (0+255),b
  8822  0046D2  D7C5               	goto	i2l7459
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;temp.c: 50: }
  8826                           ;temp.c: 51: GO = 1;
  8827  0046D4  82C2               	bsf	4034,1,c	;volatile
  8828  0046D6                     i2l356:
  8829  0046D6  B2C2               	btfsc	4034,1,c	;volatile
  8830  0046D8  D7FE               	goto	i2l356
  8831                           
  8832                           ;temp.c: 53: double temp;
  8833                           ;temp.c: 55: if (tempMenu.state == 0)
  8834  0046DA  0100               	movlb	0	; () banked
  8835  0046DC  0100               	movlb	0	; () banked
  8836  0046DE  67FB               	tstfsz	_tempMenu& (0+255),b
  8837  0046E0  D02F               	goto	i2l7467
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;temp.c: 56: {
  8841                           ;temp.c: 57: temp = (((double) ADRES) * ((0.0048828125)/0.0195/(4.0303030303030303030303
      +                          0303)) - (20.5128205128));
  8842  0046E2  0E7B               	movlw	123
  8843  0046E4  0100               	movlb	0	; () banked
  8844  0046E6  0100               	movlb	0	; () banked
  8845  0046E8  6F90               	movwf	(?___ftmul+3)& (0+255),b
  8846  0046EA  0E7E               	movlw	126
  8847  0046EC  0100               	movlb	0	; () banked
  8848  0046EE  0100               	movlb	0	; () banked
  8849  0046F0  6F91               	movwf	(?___ftmul+4)& (0+255),b
  8850  0046F2  0E3D               	movlw	61
  8851  0046F4  0100               	movlb	0	; () banked
  8852  0046F6  0100               	movlb	0	; () banked
  8853  0046F8  6F92               	movwf	(?___ftmul+5)& (0+255),b
  8854  0046FA  CFC3 F068          	movff	4035,?___lwtoft	;volatile
  8855  0046FE  CFC4 F069          	movff	4036,?___lwtoft+1	;volatile
  8856  004702  EC55  F036         	call	___lwtoft	;wreg free
  8857  004706  C06A  F08F         	movff	?___lwtoft+2,?___ftmul+2
  8858  00470A  C069  F08E         	movff	?___lwtoft+1,?___ftmul+1
  8859  00470E  C068  F08D         	movff	?___lwtoft,?___ftmul
  8860  004712  EC79  F026         	call	___ftmul	;wreg free
  8861  004716  C08F  F0A4         	movff	?___ftmul+2,?___ftadd+2
  8862  00471A  C08E  F0A3         	movff	?___ftmul+1,?___ftadd+1
  8863  00471E  C08D  F0A2         	movff	?___ftmul,?___ftadd
  8864  004722  0E1A               	movlw	26
  8865  004724  0100               	movlb	0	; () banked
  8866  004726  0100               	movlb	0	; () banked
  8867  004728  6FA5               	movwf	(?___ftadd+3)& (0+255),b
  8868  00472A  0EA4               	movlw	164
  8869  00472C  0100               	movlb	0	; () banked
  8870  00472E  0100               	movlb	0	; () banked
  8871  004730  6FA6               	movwf	(?___ftadd+4)& (0+255),b
  8872  004732  0EC1               	movlw	193
  8873  004734  0100               	movlb	0	; () banked
  8874  004736  0100               	movlb	0	; () banked
  8875  004738  6FA7               	movwf	(?___ftadd+5)& (0+255),b
  8876  00473A  ECFC  F01F         	call	___ftadd	;wreg free
  8877  00473E  D02E               	goto	L12
  8878  004740                     i2l7467:
  8879                           
  8880                           ;temp.c: 59: else
  8881                           ;temp.c: 60: {
  8882                           ;temp.c: 61: temp = (((double) ADRES) * ((0.0048828125)/0.0195/(4.0303030303030303030303
      +                          0303)) - (20.5128205128) * 5 / 9 + 32);
  8883  004740  0E7B               	movlw	123
  8884  004742  0100               	movlb	0	; () banked
  8885  004744  0100               	movlb	0	; () banked
  8886  004746  6F90               	movwf	(?___ftmul+3)& (0+255),b
  8887  004748  0E7E               	movlw	126
  8888  00474A  0100               	movlb	0	; () banked
  8889  00474C  0100               	movlb	0	; () banked
  8890  00474E  6F91               	movwf	(?___ftmul+4)& (0+255),b
  8891  004750  0E3D               	movlw	61
  8892  004752  0100               	movlb	0	; () banked
  8893  004754  0100               	movlb	0	; () banked
  8894  004756  6F92               	movwf	(?___ftmul+5)& (0+255),b
  8895  004758  CFC3 F068          	movff	4035,?___lwtoft	;volatile
  8896  00475C  CFC4 F069          	movff	4036,?___lwtoft+1	;volatile
  8897  004760  EC55  F036         	call	___lwtoft	;wreg free
  8898  004764  C06A  F08F         	movff	?___lwtoft+2,?___ftmul+2
  8899  004768  C069  F08E         	movff	?___lwtoft+1,?___ftmul+1
  8900  00476C  C068  F08D         	movff	?___lwtoft,?___ftmul
  8901  004770  EC79  F026         	call	___ftmul	;wreg free
  8902  004774  C08F  F0A4         	movff	?___ftmul+2,?___ftadd+2
  8903  004778  C08E  F0A3         	movff	?___ftmul+1,?___ftadd+1
  8904  00477C  C08D  F0A2         	movff	?___ftmul,?___ftadd
  8905  004780  0ED5               	movlw	213
  8906  004782  0100               	movlb	0	; () banked
  8907  004784  0100               	movlb	0	; () banked
  8908  004786  6FA5               	movwf	(?___ftadd+3)& (0+255),b
  8909  004788  0EA4               	movlw	164
  8910  00478A  0100               	movlb	0	; () banked
  8911  00478C  0100               	movlb	0	; () banked
  8912  00478E  6FA6               	movwf	(?___ftadd+4)& (0+255),b
  8913  004790  0E41               	movlw	65
  8914  004792  0100               	movlb	0	; () banked
  8915  004794  0100               	movlb	0	; () banked
  8916  004796  6FA7               	movwf	(?___ftadd+5)& (0+255),b
  8917  004798  ECFC  F01F         	call	___ftadd	;wreg free
  8918  00479C                     L12:
  8919  00479C  C0A4  F0C1         	movff	?___ftadd+2,getTemp@temp+2
  8920  0047A0  C0A3  F0C0         	movff	?___ftadd+1,getTemp@temp+1
  8921  0047A4  C0A2  F0BF         	movff	?___ftadd,getTemp@temp
  8922                           
  8923                           ;temp.c: 62: }
  8924                           ;temp.c: 63: double total = temp;
  8925  0047A8  C0BF  F0C2         	movff	getTemp@temp,getTemp@total
  8926  0047AC  C0C0  F0C3         	movff	getTemp@temp+1,getTemp@total+1
  8927  0047B0  C0C1  F0C4         	movff	getTemp@temp+2,getTemp@total+2
  8928                           
  8929                           ;temp.c: 64: for (cnt = 0; cnt < 3; cnt++)
  8930  0047B4  0100               	movlb	0	; () banked
  8931  0047B6  6FB5               	movwf	??_getTemp& (0+255),b
  8932  0047B8  0E00               	movlw	0
  8933  0047BA  0100               	movlb	0	; () banked
  8934  0047BC  0100               	movlb	0	; () banked
  8935  0047BE  6FC5               	movwf	getTemp@cnt& (0+255),b
  8936  0047C0  0100               	movlb	0	; () banked
  8937  0047C2  51B5               	movf	??_getTemp& (0+255),w,b
  8938  0047C4  D042               	goto	L14
  8939  0047C6                     i2l7477:
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;temp.c: 65: {
  8943                           ;temp.c: 66: oldTemps[cnt] = oldTempsTemp[cnt];
  8944  0047C6  0100               	movlb	0	; () banked
  8945  0047C8  0100               	movlb	0	; () banked
  8946  0047CA  51C5               	movf	getTemp@cnt& (0+255),w,b
  8947  0047CC  0D03               	mullw	3
  8948  0047CE  0100               	movlb	0	; () banked
  8949  0047D0  0EB6               	movlw	low getTemp@oldTempsTemp
  8950  0047D2  24F3               	addwf	prodl,w,c
  8951  0047D4  6ED9               	movwf	fsr2l,c
  8952  0047D6  0100               	movlb	0	; () banked
  8953  0047D8  0E00               	movlw	high getTemp@oldTempsTemp
  8954  0047DA  20F4               	addwfc	prodh,w,c
  8955  0047DC  6EDA               	movwf	fsr2h,c
  8956  0047DE  0100               	movlb	0	; () banked
  8957  0047E0  0100               	movlb	0	; () banked
  8958  0047E2  51C5               	movf	getTemp@cnt& (0+255),w,b
  8959  0047E4  0D03               	mullw	3
  8960  0047E6  0101               	movlb	1	; () banked
  8961  0047E8  0E41               	movlw	low _oldTemps
  8962  0047EA  24F3               	addwf	prodl,w,c
  8963  0047EC  6EE1               	movwf	fsr1l,c
  8964  0047EE  0101               	movlb	1	; () banked
  8965  0047F0  0E01               	movlw	high _oldTemps
  8966  0047F2  20F4               	addwfc	prodh,w,c
  8967  0047F4  6EE2               	movwf	fsr1h,c
  8968  0047F6  CFDE FFE6          	movff	postinc2,postinc1
  8969  0047FA  CFDE FFE6          	movff	postinc2,postinc1
  8970  0047FE  CFDE FFE5          	movff	postinc2,postdec1
  8971  004802  52E5               	movf	postdec1,f,c
  8972                           
  8973                           ; BSR set to: 1
  8974                           ;temp.c: 67: total += oldTemps[cnt];
  8975  004804  0100               	movlb	0	; () banked
  8976  004806  0E00               	movlw	high getTemp@total
  8977  004808  0100               	movlb	0	; () banked
  8978  00480A  0100               	movlb	0	; () banked
  8979  00480C  6FB1               	movwf	(?___asftadd+1)& (0+255),b
  8980  00480E  0100               	movlb	0	; () banked
  8981  004810  0EC2               	movlw	low getTemp@total
  8982  004812  0100               	movlb	0	; () banked
  8983  004814  6FB0               	movwf	?___asftadd& (0+255),b
  8984  004816  0100               	movlb	0	; () banked
  8985  004818  0100               	movlb	0	; () banked
  8986  00481A  51C5               	movf	getTemp@cnt& (0+255),w,b
  8987  00481C  0D03               	mullw	3
  8988  00481E  0101               	movlb	1	; () banked
  8989  004820  0E41               	movlw	low _oldTemps
  8990  004822  24F3               	addwf	prodl,w,c
  8991  004824  6ED9               	movwf	fsr2l,c
  8992  004826  0101               	movlb	1	; () banked
  8993  004828  0E01               	movlw	high _oldTemps
  8994  00482A  20F4               	addwfc	prodh,w,c
  8995  00482C  6EDA               	movwf	fsr2h,c
  8996  00482E  0100               	movlb	0	; () banked
  8997  004830  CFDE F0B2          	movff	postinc2,?___asftadd+2
  8998  004834  0100               	movlb	0	; () banked
  8999  004836  CFDE F0B3          	movff	postinc2,?___asftadd+3
  9000  00483A  0100               	movlb	0	; () banked
  9001  00483C  CFDD F0B4          	movff	postdec2,?___asftadd+4
  9002  004840  EC21  F037         	call	___asftadd	;wreg free
  9003  004844  0100               	movlb	0	; () banked
  9004  004846  0100               	movlb	0	; () banked
  9005  004848  2BC5               	incf	getTemp@cnt& (0+255),f,b
  9006  00484A                     L14:
  9007                           
  9008                           ; BSR set to: 0
  9009  00484A  0E02               	movlw	2
  9010  00484C  0100               	movlb	0	; () banked
  9011  00484E  0100               	movlb	0	; () banked
  9012  004850  65C5               	cpfsgt	getTemp@cnt& (0+255),b
  9013  004852  D7B9               	goto	i2l7477
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;temp.c: 68: }
  9017                           ;temp.c: 69: oldTemps[3] = temp;
  9018  004854  C0BF  F14A         	movff	getTemp@temp,_oldTemps+9
  9019  004858  C0C0  F14B         	movff	getTemp@temp+1,_oldTemps+10
  9020  00485C  C0C1  F14C         	movff	getTemp@temp+2,_oldTemps+11
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;temp.c: 71: temp = total / 4;
  9024  004860  C0C2  F068         	movff	getTemp@total,?___ftdiv
  9025  004864  C0C3  F069         	movff	getTemp@total+1,?___ftdiv+1
  9026  004868  C0C4  F06A         	movff	getTemp@total+2,?___ftdiv+2
  9027  00486C  0E00               	movlw	0
  9028  00486E  0100               	movlb	0	; () banked
  9029  004870  0100               	movlb	0	; () banked
  9030  004872  6F6B               	movwf	(?___ftdiv+3)& (0+255),b
  9031  004874  0E80               	movlw	128
  9032  004876  0100               	movlb	0	; () banked
  9033  004878  0100               	movlb	0	; () banked
  9034  00487A  6F6C               	movwf	(?___ftdiv+4)& (0+255),b
  9035  00487C  0E40               	movlw	64
  9036  00487E  0100               	movlb	0	; () banked
  9037  004880  0100               	movlb	0	; () banked
  9038  004882  6F6D               	movwf	(?___ftdiv+5)& (0+255),b
  9039  004884  EC5A  F028         	call	___ftdiv	;wreg free
  9040  004888  C06A  F0C1         	movff	?___ftdiv+2,getTemp@temp+2
  9041  00488C  C069  F0C0         	movff	?___ftdiv+1,getTemp@temp+1
  9042  004890  C068  F0BF         	movff	?___ftdiv,getTemp@temp
  9043                           
  9044                           ;temp.c: 72: return total / 4;
  9045                           ;	Return value of _getTemp is never used
  9046  004894  C0C2  F068         	movff	getTemp@total,?___ftdiv
  9047  004898  C0C3  F069         	movff	getTemp@total+1,?___ftdiv+1
  9048  00489C  C0C4  F06A         	movff	getTemp@total+2,?___ftdiv+2
  9049  0048A0  0E00               	movlw	0
  9050  0048A2  0100               	movlb	0	; () banked
  9051  0048A4  0100               	movlb	0	; () banked
  9052  0048A6  6F6B               	movwf	(?___ftdiv+3)& (0+255),b
  9053  0048A8  0E80               	movlw	128
  9054  0048AA  0100               	movlb	0	; () banked
  9055  0048AC  0100               	movlb	0	; () banked
  9056  0048AE  6F6C               	movwf	(?___ftdiv+4)& (0+255),b
  9057  0048B0  0E40               	movlw	64
  9058  0048B2  0100               	movlb	0	; () banked
  9059  0048B4  0100               	movlb	0	; () banked
  9060  0048B6  6F6D               	movwf	(?___ftdiv+5)& (0+255),b
  9061  0048B8  EC5A  F028         	call	___ftdiv	;wreg free
  9062  0048BC  0012               	return	
  9063  0048BE                     __end_of_getTemp:
  9064                           	opt stack 0
  9065                           tosu	equ	0xFFF
  9066                           tosh	equ	0xFFE
  9067                           tosl	equ	0xFFD
  9068                           pclatu	equ	0xFFB
  9069                           pclath	equ	0xFFA
  9070                           tblptru	equ	0xFF8
  9071                           tblptrh	equ	0xFF7
  9072                           tblptrl	equ	0xFF6
  9073                           tablat	equ	0xFF5
  9074                           prodh	equ	0xFF4
  9075                           prodl	equ	0xFF3
  9076                           intcon	equ	0xFF2
  9077                           intcon2	equ	0xFF1
  9078                           postinc0	equ	0xFEE
  9079                           fsr0h	equ	0xFEA
  9080                           fsr0l	equ	0xFE9
  9081                           wreg	equ	0xFE8
  9082                           postinc1	equ	0xFE6
  9083                           postdec1	equ	0xFE5
  9084                           fsr1h	equ	0xFE2
  9085                           fsr1l	equ	0xFE1
  9086                           bsr	equ	0xFE0
  9087                           indf2	equ	0xFDF
  9088                           postinc2	equ	0xFDE
  9089                           postdec2	equ	0xFDD
  9090                           fsr2h	equ	0xFDA
  9091                           fsr2l	equ	0xFD9
  9092                           status	equ	0xFD8
  9093                           
  9094 ;; *************** function ___lwtoft *****************
  9095 ;; Defined at:
  9096 ;;		line 29 in file "/usr/opt/microchip/xc8/v1.20/sources/common/lwtoft.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;  c               2    8[BANK0 ] unsigned int 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  3    8[BANK0 ] float 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0, cstack
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9110 ;;      Params:         0       3       0       0       0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9112 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9113 ;;      Totals:         0       5       0       0       0       0       0       0       0
  9114 ;;Total ram usage:        5 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    1
  9117 ;; This function calls:
  9118 ;;		___ftpack
  9119 ;; This function is called by:
  9120 ;;		_getTemp
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text31
  9125  006CAA                     __ptext31:
  9126                           	opt stack 0
  9127  006CAA                     ___lwtoft:
  9128                           	opt stack 17
  9129                           
  9130                           ;incstack = 0
  9131                           ;incstack = 0
  9132  006CAA  0100               	movlb	0	; () banked
  9133  006CAC  0100               	movlb	0	; () banked
  9134  006CAE  C068  F060         	movff	___lwtoft@c,?___ftpack
  9135  006CB2  0100               	movlb	0	; () banked
  9136  006CB4  0100               	movlb	0	; () banked
  9137  006CB6  C069  F061         	movff	___lwtoft@c+1,?___ftpack+1
  9138  006CBA  0100               	movlb	0	; () banked
  9139  006CBC  0100               	movlb	0	; () banked
  9140  006CBE  6B62               	clrf	(?___ftpack+2)& (0+255),b
  9141  006CC0  0100               	movlb	0	; () banked
  9142  006CC2  6F6B               	movwf	??___lwtoft& (0+255),b
  9143  006CC4  0E8E               	movlw	142
  9144  006CC6  0100               	movlb	0	; () banked
  9145  006CC8  0100               	movlb	0	; () banked
  9146  006CCA  6F63               	movwf	(?___ftpack+3)& (0+255),b
  9147  006CCC  0100               	movlb	0	; () banked
  9148  006CCE  516B               	movf	??___lwtoft& (0+255),w,b
  9149  006CD0  0100               	movlb	0	; () banked
  9150  006CD2  6F6C               	movwf	(??___lwtoft+1)& (0+255),b
  9151  006CD4  0E00               	movlw	0
  9152  006CD6  0100               	movlb	0	; () banked
  9153  006CD8  0100               	movlb	0	; () banked
  9154  006CDA  6F64               	movwf	(?___ftpack+4)& (0+255),b
  9155  006CDC  0100               	movlb	0	; () banked
  9156  006CDE  516C               	movf	(??___lwtoft+1)& (0+255),w,b
  9157  006CE0  ECC5  F02A         	call	___ftpack	;wreg free
  9158  006CE4  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  9159  006CE8  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  9160  006CEC  C060  F068         	movff	?___ftpack,?___lwtoft
  9161  006CF0  0012               	return	
  9162  006CF2                     __end_of___lwtoft:
  9163                           	opt stack 0
  9164                           tosu	equ	0xFFF
  9165                           tosh	equ	0xFFE
  9166                           tosl	equ	0xFFD
  9167                           pclatu	equ	0xFFB
  9168                           pclath	equ	0xFFA
  9169                           tblptru	equ	0xFF8
  9170                           tblptrh	equ	0xFF7
  9171                           tblptrl	equ	0xFF6
  9172                           tablat	equ	0xFF5
  9173                           prodh	equ	0xFF4
  9174                           prodl	equ	0xFF3
  9175                           intcon	equ	0xFF2
  9176                           intcon2	equ	0xFF1
  9177                           postinc0	equ	0xFEE
  9178                           fsr0h	equ	0xFEA
  9179                           fsr0l	equ	0xFE9
  9180                           wreg	equ	0xFE8
  9181                           postinc1	equ	0xFE6
  9182                           postdec1	equ	0xFE5
  9183                           fsr1h	equ	0xFE2
  9184                           fsr1l	equ	0xFE1
  9185                           bsr	equ	0xFE0
  9186                           indf2	equ	0xFDF
  9187                           postinc2	equ	0xFDE
  9188                           postdec2	equ	0xFDD
  9189                           fsr2h	equ	0xFDA
  9190                           fsr2l	equ	0xFD9
  9191                           status	equ	0xFD8
  9192                           
  9193 ;; *************** function _writeString *****************
  9194 ;; Defined at:
  9195 ;;		line 174 in file "disp.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  digits          1   36[BANK0 ] unsigned char 
  9198 ;;  string          2   37[BANK0 ] PTR unsigned char 
  9199 ;;		 -> STR_20(5), STR_19(3), STR_18(3), printRTC@str(12), 
  9200 ;;		 -> writeFloat@str(9), writeLong@str(9), 
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;  i               1   45[BANK0 ] char 
  9203 ;;  cnt             1   44[BANK0 ] char 
  9204 ;;  bits            1   43[BANK0 ] unsigned char 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;		None               void
  9207 ;; Registers used:
  9208 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9214 ;;      Params:         0       3       0       0       0       0       0       0       0
  9215 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9216 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9217 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9218 ;;Total ram usage:       10 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; Hardware stack levels required when called:    2
  9221 ;; This function calls:
  9222 ;;		_getFontChar
  9223 ;;		_writeChar
  9224 ;;		_countBits
  9225 ;;		_hibit
  9226 ;;		___wmul
  9227 ;;		i2_log2
  9228 ;; This function is called by:
  9229 ;;		_printRTC
  9230 ;;		_printTemp
  9231 ;;		_writeLong
  9232 ;;		_writeFloat
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236                           	psect	text32
  9237  0038FE                     __ptext32:
  9238                           	opt stack 0
  9239  0038FE                     _writeString:
  9240                           	opt stack 16
  9241                           
  9242                           ;disp.c: 179: int8_t cnt = 0, i = 0;
  9243                           
  9244                           ;incstack = 0
  9245                           ;incstack = 0
  9246  0038FE  0100               	movlb	0	; () banked
  9247  003900  6F87               	movwf	??_writeString& (0+255),b
  9248  003902  0E00               	movlw	0
  9249  003904  0100               	movlb	0	; () banked
  9250  003906  0100               	movlb	0	; () banked
  9251  003908  6F8C               	movwf	writeString@cnt& (0+255),b
  9252  00390A  0100               	movlb	0	; () banked
  9253  00390C  5187               	movf	??_writeString& (0+255),w,b
  9254  00390E  0100               	movlb	0	; () banked
  9255  003910  6F87               	movwf	??_writeString& (0+255),b
  9256  003912  0E00               	movlw	0
  9257  003914  0100               	movlb	0	; () banked
  9258  003916  0100               	movlb	0	; () banked
  9259  003918  6F8D               	movwf	writeString@i& (0+255),b
  9260  00391A  0100               	movlb	0	; () banked
  9261  00391C  5187               	movf	??_writeString& (0+255),w,b
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;disp.c: 180: uint8_t bits = countBits(digits);
  9265  00391E  0100               	movlb	0	; () banked
  9266  003920  0100               	movlb	0	; () banked
  9267  003922  5184               	movf	writeString@digits& (0+255),w,b
  9268  003924  0100               	movlb	0	; () banked
  9269  003926  0100               	movlb	0	; () banked
  9270  003928  6F60               	movwf	?_countBits& (0+255),b
  9271  00392A  0100               	movlb	0	; () banked
  9272  00392C  6B61               	clrf	(?_countBits+1)& (0+255),b
  9273  00392E  0100               	movlb	0	; () banked
  9274  003930  6B62               	clrf	(?_countBits+2)& (0+255),b
  9275  003932  0100               	movlb	0	; () banked
  9276  003934  6B63               	clrf	(?_countBits+3)& (0+255),b
  9277  003936  EC79  F036         	call	_countBits	;wreg free
  9278  00393A  0100               	movlb	0	; () banked
  9279  00393C  0100               	movlb	0	; () banked
  9280  00393E  6F8B               	movwf	writeString@bits& (0+255),b
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;disp.c: 182: bits += 1;
  9284  003940  0100               	movlb	0	; () banked
  9285  003942  0100               	movlb	0	; () banked
  9286  003944  2B8B               	incf	writeString@bits& (0+255),f,b
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;disp.c: 183: for (cnt = log2(hibit(digits)); --bits; cnt--)
  9290  003946  0100               	movlb	0	; () banked
  9291  003948  0100               	movlb	0	; () banked
  9292  00394A  5184               	movf	writeString@digits& (0+255),w,b
  9293  00394C  0100               	movlb	0	; () banked
  9294  00394E  0100               	movlb	0	; () banked
  9295  003950  6F60               	movwf	?_hibit& (0+255),b
  9296  003952  0100               	movlb	0	; () banked
  9297  003954  6B61               	clrf	(?_hibit+1)& (0+255),b
  9298  003956  0100               	movlb	0	; () banked
  9299  003958  6B62               	clrf	(?_hibit+2)& (0+255),b
  9300  00395A  0100               	movlb	0	; () banked
  9301  00395C  6B63               	clrf	(?_hibit+3)& (0+255),b
  9302  00395E  EC00  F032         	call	_hibit	;wreg free
  9303  003962  C063  F06E         	movff	?_hibit+3,?i2_log2+3
  9304  003966  C062  F06D         	movff	?_hibit+2,?i2_log2+2
  9305  00396A  C061  F06C         	movff	?_hibit+1,?i2_log2+1
  9306  00396E  C060  F06B         	movff	?_hibit,?i2_log2
  9307  003972  ECCB  F034         	call	i2_log2	;wreg free
  9308  003976  0100               	movlb	0	; () banked
  9309  003978  0100               	movlb	0	; () banked
  9310  00397A  516B               	movf	?i2_log2& (0+255),w,b
  9311  00397C  0100               	movlb	0	; () banked
  9312  00397E  0100               	movlb	0	; () banked
  9313  003980  6F8C               	movwf	writeString@cnt& (0+255),b
  9314  003982  D17E               	goto	i2l7175
  9315  003984                     i2l7149:
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;disp.c: 184: {
  9319                           ;disp.c: 185: if (0x1 & (digits >> cnt))
  9320  003984  C08C  F087         	movff	writeString@cnt,??_writeString
  9321  003988  C084  F088         	movff	writeString@digits,??_writeString+1
  9322  00398C  0100               	movlb	0	; () banked
  9323  00398E  2B87               	incf	??_writeString& (0+255),f,b
  9324  003990  D003               	goto	i2u534_44
  9325  003992                     i2u534_45:
  9326  003992  0100               	movlb	0	; () banked
  9327  003994  90D8               	bcf	status,0,c
  9328  003996  3388               	rrcf	(??_writeString+1)& (0+255),f,b
  9329  003998                     i2u534_44:
  9330  003998  0100               	movlb	0	; () banked
  9331  00399A  2F87               	decfsz	??_writeString& (0+255),f,b
  9332  00399C  D7FA               	goto	i2u534_45
  9333  00399E  0100               	movlb	0	; () banked
  9334  0039A0  A188               	btfss	(??_writeString+1)& (0+255),0,b
  9335  0039A2  D16B               	goto	i2l7173
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;disp.c: 186: {
  9339                           ;disp.c: 187: if (string[i] == '\0')
  9340  0039A4  0100               	movlb	0	; () banked
  9341  0039A6  0100               	movlb	0	; () banked
  9342  0039A8  518D               	movf	writeString@i& (0+255),w,b
  9343  0039AA  0100               	movlb	0	; () banked
  9344  0039AC  0100               	movlb	0	; () banked
  9345  0039AE  6F76               	movwf	?___wmul& (0+255),b
  9346  0039B0  0100               	movlb	0	; () banked
  9347  0039B2  6B77               	clrf	(?___wmul+1)& (0+255),b
  9348  0039B4  0100               	movlb	0	; () banked
  9349  0039B6  BF76               	btfsc	?___wmul& (0+255),7,b
  9350  0039B8  0777               	decf	(?___wmul+1)& (0+255),f,b
  9351  0039BA  0E00               	movlw	0
  9352  0039BC  0100               	movlb	0	; () banked
  9353  0039BE  0100               	movlb	0	; () banked
  9354  0039C0  6F79               	movwf	(?___wmul+3)& (0+255),b
  9355  0039C2  0E01               	movlw	1
  9356  0039C4  0100               	movlb	0	; () banked
  9357  0039C6  6F78               	movwf	(?___wmul+2)& (0+255),b
  9358  0039C8  EC31  F035         	call	___wmul	;wreg free
  9359  0039CC  0100               	movlb	0	; () banked
  9360  0039CE  0100               	movlb	0	; () banked
  9361  0039D0  5176               	movf	?___wmul& (0+255),w,b
  9362  0039D2  0100               	movlb	0	; () banked
  9363  0039D4  0100               	movlb	0	; () banked
  9364  0039D6  2585               	addwf	writeString@string& (0+255),w,b
  9365  0039D8  0100               	movlb	0	; () banked
  9366  0039DA  6F87               	movwf	??_writeString& (0+255),b
  9367  0039DC  0100               	movlb	0	; () banked
  9368  0039DE  0100               	movlb	0	; () banked
  9369  0039E0  5177               	movf	(?___wmul+1)& (0+255),w,b
  9370  0039E2  0100               	movlb	0	; () banked
  9371  0039E4  0100               	movlb	0	; () banked
  9372  0039E6  2186               	addwfc	(writeString@string+1)& (0+255),w,b
  9373  0039E8  0100               	movlb	0	; () banked
  9374  0039EA  6F88               	movwf	(??_writeString+1)& (0+255),b
  9375  0039EC  0100               	movlb	0	; () banked
  9376  0039EE  5187               	movf	??_writeString& (0+255),w,b
  9377  0039F0  6EF6               	movwf	tblptrl,c
  9378  0039F2  6EE9               	movwf	fsr0l,c
  9379  0039F4  0E07               	movlw	(high __ramtop+-1)
  9380  0039F6  6EEA               	movwf	fsr0h,c
  9381  0039F8  0100               	movlb	0	; () banked
  9382  0039FA  5188               	movf	(??_writeString+1)& (0+255),w,b
  9383  0039FC  64EA               	cpfsgt	fsr0h,c
  9384  0039FE  D003               	bra	i2u536_47
  9385  003A00  6EEA               	movwf	fsr0h,c
  9386  003A02  50EF               	movf	indf0,w,c
  9387  003A04  D003               	bra	i2u536_40
  9388  003A06                     i2u536_47:
  9389  003A06  6EF7               	movwf	tblptrh,c
  9390  003A08  0008               	tblrd		*
  9391  003A0A  50F5               	movf	tablat,w,c
  9392  003A0C                     i2u536_40:
  9393  003A0C  0900               	iorlw	0
  9394  003A0E  B4D8               	btfsc	status,2,c
  9395  003A10  D13B               	goto	i2l113
  9396                           
  9397                           ;disp.c: 190: }
  9398                           ;disp.c: 191: if (string[i] == '.')
  9399                           
  9400                           ;disp.c: 188: {
  9401                           ;disp.c: 189: break;
  9402  003A12  0100               	movlb	0	; () banked
  9403  003A14  0100               	movlb	0	; () banked
  9404  003A16  518D               	movf	writeString@i& (0+255),w,b
  9405  003A18  0100               	movlb	0	; () banked
  9406  003A1A  0100               	movlb	0	; () banked
  9407  003A1C  6F76               	movwf	?___wmul& (0+255),b
  9408  003A1E  0100               	movlb	0	; () banked
  9409  003A20  6B77               	clrf	(?___wmul+1)& (0+255),b
  9410  003A22  0100               	movlb	0	; () banked
  9411  003A24  BF76               	btfsc	?___wmul& (0+255),7,b
  9412  003A26  0777               	decf	(?___wmul+1)& (0+255),f,b
  9413  003A28  0E00               	movlw	0
  9414  003A2A  0100               	movlb	0	; () banked
  9415  003A2C  0100               	movlb	0	; () banked
  9416  003A2E  6F79               	movwf	(?___wmul+3)& (0+255),b
  9417  003A30  0E01               	movlw	1
  9418  003A32  0100               	movlb	0	; () banked
  9419  003A34  6F78               	movwf	(?___wmul+2)& (0+255),b
  9420  003A36  EC31  F035         	call	___wmul	;wreg free
  9421  003A3A  0100               	movlb	0	; () banked
  9422  003A3C  0100               	movlb	0	; () banked
  9423  003A3E  5176               	movf	?___wmul& (0+255),w,b
  9424  003A40  0100               	movlb	0	; () banked
  9425  003A42  0100               	movlb	0	; () banked
  9426  003A44  2585               	addwf	writeString@string& (0+255),w,b
  9427  003A46  0100               	movlb	0	; () banked
  9428  003A48  6F87               	movwf	??_writeString& (0+255),b
  9429  003A4A  0100               	movlb	0	; () banked
  9430  003A4C  0100               	movlb	0	; () banked
  9431  003A4E  5177               	movf	(?___wmul+1)& (0+255),w,b
  9432  003A50  0100               	movlb	0	; () banked
  9433  003A52  0100               	movlb	0	; () banked
  9434  003A54  2186               	addwfc	(writeString@string+1)& (0+255),w,b
  9435  003A56  0100               	movlb	0	; () banked
  9436  003A58  6F88               	movwf	(??_writeString+1)& (0+255),b
  9437  003A5A  0100               	movlb	0	; () banked
  9438  003A5C  5187               	movf	??_writeString& (0+255),w,b
  9439  003A5E  6EF6               	movwf	tblptrl,c
  9440  003A60  6EE9               	movwf	fsr0l,c
  9441  003A62  0E07               	movlw	(high __ramtop+-1)
  9442  003A64  6EEA               	movwf	fsr0h,c
  9443  003A66  0100               	movlb	0	; () banked
  9444  003A68  5188               	movf	(??_writeString+1)& (0+255),w,b
  9445  003A6A  64EA               	cpfsgt	fsr0h,c
  9446  003A6C  D003               	bra	i2u538_47
  9447  003A6E  6EEA               	movwf	fsr0h,c
  9448  003A70  50EF               	movf	indf0,w,c
  9449  003A72  D003               	bra	i2u538_40
  9450  003A74                     i2u538_47:
  9451  003A74  6EF7               	movwf	tblptrh,c
  9452  003A76  0008               	tblrd		*
  9453  003A78  50F5               	movf	tablat,w,c
  9454  003A7A                     i2u538_40:
  9455  003A7A  0A2E               	xorlw	46
  9456  003A7C  A4D8               	btfss	status,2,c
  9457  003A7E  D03B               	goto	i2l7165
  9458                           
  9459                           ;disp.c: 192: {
  9460                           ;disp.c: 193: screen.digits.screen[cnt + 1].bits |= 0b10000000;
  9461  003A80  0100               	movlb	0	; () banked
  9462  003A82  C08C  F087         	movff	writeString@cnt,??_writeString
  9463  003A86  0100               	movlb	0	; () banked
  9464  003A88  6B88               	clrf	(??_writeString+1)& (0+255),b
  9465  003A8A  BF87               	btfsc	??_writeString& (0+255),7,b
  9466  003A8C  0788               	decf	(??_writeString+1)& (0+255),f,b
  9467  003A8E  0E01               	movlw	1
  9468  003A90  0100               	movlb	0	; () banked
  9469  003A92  2787               	addwf	??_writeString& (0+255),f,b
  9470  003A94  0E00               	movlw	0
  9471  003A96  2388               	addwfc	(??_writeString+1)& (0+255),f,b
  9472  003A98  0101               	movlb	1	; () banked
  9473  003A9A  0E6F               	movlw	low _screen
  9474  003A9C  0100               	movlb	0	; () banked
  9475  003A9E  2587               	addwf	??_writeString& (0+255),w,b
  9476  003AA0  6ED9               	movwf	fsr2l,c
  9477  003AA2  0101               	movlb	1	; () banked
  9478  003AA4  0E01               	movlw	high _screen
  9479  003AA6  0100               	movlb	0	; () banked
  9480  003AA8  2188               	addwfc	(??_writeString+1)& (0+255),w,b
  9481  003AAA  6EDA               	movwf	fsr2h,c
  9482  003AAC  0E00               	movlw	0
  9483  003AAE  8EDB               	bsf	plusw2,7,c
  9484                           
  9485                           ; BSR set to: 0
  9486                           ;disp.c: 194: screen.changed |= 1 << (cnt + 1);
  9487  003AB0  C08C  F087         	movff	writeString@cnt,??_writeString
  9488  003AB4  0E01               	movlw	1
  9489  003AB6  0100               	movlb	0	; () banked
  9490  003AB8  2787               	addwf	??_writeString& (0+255),f,b
  9491  003ABA  0E01               	movlw	1
  9492  003ABC  0100               	movlb	0	; () banked
  9493  003ABE  6F88               	movwf	(??_writeString+1)& (0+255),b
  9494  003AC0  6B89               	clrf	(??_writeString+2)& (0+255),b
  9495  003AC2  0100               	movlb	0	; () banked
  9496  003AC4  2B87               	incf	??_writeString& (0+255),f,b
  9497  003AC6  D004               	goto	i2u540_44
  9498  003AC8                     i2u540_45:
  9499  003AC8  90D8               	bcf	status,0,c
  9500  003ACA  0100               	movlb	0	; () banked
  9501  003ACC  3788               	rlcf	(??_writeString+1)& (0+255),f,b
  9502  003ACE  3789               	rlcf	(??_writeString+2)& (0+255),f,b
  9503  003AD0                     i2u540_44:
  9504  003AD0  0100               	movlb	0	; () banked
  9505  003AD2  2F87               	decfsz	??_writeString& (0+255),f,b
  9506  003AD4  D7F9               	goto	i2u540_45
  9507  003AD6  0100               	movlb	0	; () banked
  9508  003AD8  5188               	movf	(??_writeString+1)& (0+255),w,b
  9509  003ADA  0101               	movlb	1	; () banked
  9510  003ADC  0101               	movlb	1	; () banked
  9511  003ADE  137A               	iorwf	(_screen+11)& (0+255),f,b
  9512  003AE0  0100               	movlb	0	; () banked
  9513  003AE2  5189               	movf	(??_writeString+2)& (0+255),w,b
  9514  003AE4  0101               	movlb	1	; () banked
  9515  003AE6  0101               	movlb	1	; () banked
  9516  003AE8  137B               	iorwf	(_screen+12)& (0+255),f,b
  9517                           
  9518                           ; BSR set to: 1
  9519                           ;disp.c: 195: bits++;
  9520  003AEA  0100               	movlb	0	; () banked
  9521  003AEC  0100               	movlb	0	; () banked
  9522  003AEE  2B8B               	incf	writeString@bits& (0+255),f,b
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;disp.c: 196: i++;
  9526  003AF0  0100               	movlb	0	; () banked
  9527  003AF2  0100               	movlb	0	; () banked
  9528  003AF4  2B8D               	incf	writeString@i& (0+255),f,b
  9529  003AF6                     i2l7165:
  9530                           
  9531                           ;disp.c: 197: }
  9532                           ;disp.c: 198: if (getFontChar(string[i]) || string[i] == ' ')
  9533  003AF6  0100               	movlb	0	; () banked
  9534  003AF8  0100               	movlb	0	; () banked
  9535  003AFA  518D               	movf	writeString@i& (0+255),w,b
  9536  003AFC  0100               	movlb	0	; () banked
  9537  003AFE  0100               	movlb	0	; () banked
  9538  003B00  6F76               	movwf	?___wmul& (0+255),b
  9539  003B02  0100               	movlb	0	; () banked
  9540  003B04  6B77               	clrf	(?___wmul+1)& (0+255),b
  9541  003B06  0100               	movlb	0	; () banked
  9542  003B08  BF76               	btfsc	?___wmul& (0+255),7,b
  9543  003B0A  0777               	decf	(?___wmul+1)& (0+255),f,b
  9544  003B0C  0E00               	movlw	0
  9545  003B0E  0100               	movlb	0	; () banked
  9546  003B10  0100               	movlb	0	; () banked
  9547  003B12  6F79               	movwf	(?___wmul+3)& (0+255),b
  9548  003B14  0E01               	movlw	1
  9549  003B16  0100               	movlb	0	; () banked
  9550  003B18  6F78               	movwf	(?___wmul+2)& (0+255),b
  9551  003B1A  EC31  F035         	call	___wmul	;wreg free
  9552  003B1E  0100               	movlb	0	; () banked
  9553  003B20  0100               	movlb	0	; () banked
  9554  003B22  5176               	movf	?___wmul& (0+255),w,b
  9555  003B24  0100               	movlb	0	; () banked
  9556  003B26  0100               	movlb	0	; () banked
  9557  003B28  2585               	addwf	writeString@string& (0+255),w,b
  9558  003B2A  0100               	movlb	0	; () banked
  9559  003B2C  6F87               	movwf	??_writeString& (0+255),b
  9560  003B2E  0100               	movlb	0	; () banked
  9561  003B30  0100               	movlb	0	; () banked
  9562  003B32  5177               	movf	(?___wmul+1)& (0+255),w,b
  9563  003B34  0100               	movlb	0	; () banked
  9564  003B36  0100               	movlb	0	; () banked
  9565  003B38  2186               	addwfc	(writeString@string+1)& (0+255),w,b
  9566  003B3A  0100               	movlb	0	; () banked
  9567  003B3C  6F88               	movwf	(??_writeString+1)& (0+255),b
  9568  003B3E  0100               	movlb	0	; () banked
  9569  003B40  5187               	movf	??_writeString& (0+255),w,b
  9570  003B42  6EF6               	movwf	tblptrl,c
  9571  003B44  6EE9               	movwf	fsr0l,c
  9572  003B46  0E07               	movlw	(high __ramtop+-1)
  9573  003B48  6EEA               	movwf	fsr0h,c
  9574  003B4A  0100               	movlb	0	; () banked
  9575  003B4C  5188               	movf	(??_writeString+1)& (0+255),w,b
  9576  003B4E  64EA               	cpfsgt	fsr0h,c
  9577  003B50  D003               	bra	i2u541_47
  9578  003B52  6EEA               	movwf	fsr0h,c
  9579  003B54  50EF               	movf	indf0,w,c
  9580  003B56  D003               	bra	i2u541_40
  9581  003B58                     i2u541_47:
  9582  003B58  6EF7               	movwf	tblptrh,c
  9583  003B5A  0008               	tblrd		*
  9584  003B5C  50F5               	movf	tablat,w,c
  9585  003B5E                     i2u541_40:
  9586  003B5E  0100               	movlb	0	; () banked
  9587  003B60  0100               	movlb	0	; () banked
  9588  003B62  6F7E               	movwf	?_getFontChar& (0+255),b
  9589  003B64  EC5F  F024         	call	_getFontChar	;wreg free
  9590  003B68  0900               	iorlw	0
  9591  003B6A  A4D8               	btfss	status,2,c
  9592  003B6C  D037               	goto	i2l7169
  9593  003B6E  0100               	movlb	0	; () banked
  9594  003B70  0100               	movlb	0	; () banked
  9595  003B72  518D               	movf	writeString@i& (0+255),w,b
  9596  003B74  0100               	movlb	0	; () banked
  9597  003B76  0100               	movlb	0	; () banked
  9598  003B78  6F76               	movwf	?___wmul& (0+255),b
  9599  003B7A  0100               	movlb	0	; () banked
  9600  003B7C  6B77               	clrf	(?___wmul+1)& (0+255),b
  9601  003B7E  0100               	movlb	0	; () banked
  9602  003B80  BF76               	btfsc	?___wmul& (0+255),7,b
  9603  003B82  0777               	decf	(?___wmul+1)& (0+255),f,b
  9604  003B84  0E00               	movlw	0
  9605  003B86  0100               	movlb	0	; () banked
  9606  003B88  0100               	movlb	0	; () banked
  9607  003B8A  6F79               	movwf	(?___wmul+3)& (0+255),b
  9608  003B8C  0E01               	movlw	1
  9609  003B8E  0100               	movlb	0	; () banked
  9610  003B90  6F78               	movwf	(?___wmul+2)& (0+255),b
  9611  003B92  EC31  F035         	call	___wmul	;wreg free
  9612  003B96  0100               	movlb	0	; () banked
  9613  003B98  0100               	movlb	0	; () banked
  9614  003B9A  5176               	movf	?___wmul& (0+255),w,b
  9615  003B9C  0100               	movlb	0	; () banked
  9616  003B9E  0100               	movlb	0	; () banked
  9617  003BA0  2585               	addwf	writeString@string& (0+255),w,b
  9618  003BA2  0100               	movlb	0	; () banked
  9619  003BA4  6F87               	movwf	??_writeString& (0+255),b
  9620  003BA6  0100               	movlb	0	; () banked
  9621  003BA8  0100               	movlb	0	; () banked
  9622  003BAA  5177               	movf	(?___wmul+1)& (0+255),w,b
  9623  003BAC  0100               	movlb	0	; () banked
  9624  003BAE  0100               	movlb	0	; () banked
  9625  003BB0  2186               	addwfc	(writeString@string+1)& (0+255),w,b
  9626  003BB2  0100               	movlb	0	; () banked
  9627  003BB4  6F88               	movwf	(??_writeString+1)& (0+255),b
  9628  003BB6  0100               	movlb	0	; () banked
  9629  003BB8  5187               	movf	??_writeString& (0+255),w,b
  9630  003BBA  6EF6               	movwf	tblptrl,c
  9631  003BBC  6EE9               	movwf	fsr0l,c
  9632  003BBE  0E07               	movlw	(high __ramtop+-1)
  9633  003BC0  6EEA               	movwf	fsr0h,c
  9634  003BC2  0100               	movlb	0	; () banked
  9635  003BC4  5188               	movf	(??_writeString+1)& (0+255),w,b
  9636  003BC6  64EA               	cpfsgt	fsr0h,c
  9637  003BC8  D003               	bra	i2u543_47
  9638  003BCA  6EEA               	movwf	fsr0h,c
  9639  003BCC  50EF               	movf	indf0,w,c
  9640  003BCE  D003               	bra	i2u543_40
  9641  003BD0                     i2u543_47:
  9642  003BD0  6EF7               	movwf	tblptrh,c
  9643  003BD2  0008               	tblrd		*
  9644  003BD4  50F5               	movf	tablat,w,c
  9645  003BD6                     i2u543_40:
  9646  003BD6  0A20               	xorlw	32
  9647  003BD8  A4D8               	btfss	status,2,c
  9648  003BDA  D04C               	goto	i2l7171
  9649  003BDC                     i2l7169:
  9650                           
  9651                           ;disp.c: 199: {
  9652                           ;disp.c: 200: writeChar(1 << cnt, string[i]);
  9653  003BDC  C08C  F087         	movff	writeString@cnt,??_writeString
  9654  003BE0  0E01               	movlw	1
  9655  003BE2  0100               	movlb	0	; () banked
  9656  003BE4  6F88               	movwf	(??_writeString+1)& (0+255),b
  9657  003BE6  0100               	movlb	0	; () banked
  9658  003BE8  2B87               	incf	??_writeString& (0+255),f,b
  9659  003BEA  D003               	goto	i2u545_44
  9660  003BEC                     i2u545_45:
  9661  003BEC  0100               	movlb	0	; () banked
  9662  003BEE  90D8               	bcf	status,0,c
  9663  003BF0  3788               	rlcf	(??_writeString+1)& (0+255),f,b
  9664  003BF2                     i2u545_44:
  9665  003BF2  0100               	movlb	0	; () banked
  9666  003BF4  2F87               	decfsz	??_writeString& (0+255),f,b
  9667  003BF6  D7FA               	goto	i2u545_45
  9668  003BF8  0100               	movlb	0	; () banked
  9669  003BFA  5188               	movf	(??_writeString+1)& (0+255),w,b
  9670  003BFC  0100               	movlb	0	; () banked
  9671  003BFE  0100               	movlb	0	; () banked
  9672  003C00  6F81               	movwf	?_writeChar& (0+255),b
  9673  003C02  0100               	movlb	0	; () banked
  9674  003C04  0100               	movlb	0	; () banked
  9675  003C06  518D               	movf	writeString@i& (0+255),w,b
  9676  003C08  0100               	movlb	0	; () banked
  9677  003C0A  0100               	movlb	0	; () banked
  9678  003C0C  6F76               	movwf	?___wmul& (0+255),b
  9679  003C0E  0100               	movlb	0	; () banked
  9680  003C10  6B77               	clrf	(?___wmul+1)& (0+255),b
  9681  003C12  0100               	movlb	0	; () banked
  9682  003C14  BF76               	btfsc	?___wmul& (0+255),7,b
  9683  003C16  0777               	decf	(?___wmul+1)& (0+255),f,b
  9684  003C18  0E00               	movlw	0
  9685  003C1A  0100               	movlb	0	; () banked
  9686  003C1C  0100               	movlb	0	; () banked
  9687  003C1E  6F79               	movwf	(?___wmul+3)& (0+255),b
  9688  003C20  0E01               	movlw	1
  9689  003C22  0100               	movlb	0	; () banked
  9690  003C24  6F78               	movwf	(?___wmul+2)& (0+255),b
  9691  003C26  EC31  F035         	call	___wmul	;wreg free
  9692  003C2A  0100               	movlb	0	; () banked
  9693  003C2C  0100               	movlb	0	; () banked
  9694  003C2E  5176               	movf	?___wmul& (0+255),w,b
  9695  003C30  0100               	movlb	0	; () banked
  9696  003C32  0100               	movlb	0	; () banked
  9697  003C34  2585               	addwf	writeString@string& (0+255),w,b
  9698  003C36  0100               	movlb	0	; () banked
  9699  003C38  6F89               	movwf	(??_writeString+2)& (0+255),b
  9700  003C3A  0100               	movlb	0	; () banked
  9701  003C3C  0100               	movlb	0	; () banked
  9702  003C3E  5177               	movf	(?___wmul+1)& (0+255),w,b
  9703  003C40  0100               	movlb	0	; () banked
  9704  003C42  0100               	movlb	0	; () banked
  9705  003C44  2186               	addwfc	(writeString@string+1)& (0+255),w,b
  9706  003C46  0100               	movlb	0	; () banked
  9707  003C48  6F8A               	movwf	(??_writeString+3)& (0+255),b
  9708  003C4A  0100               	movlb	0	; () banked
  9709  003C4C  5189               	movf	(??_writeString+2)& (0+255),w,b
  9710  003C4E  6EF6               	movwf	tblptrl,c
  9711  003C50  6EE9               	movwf	fsr0l,c
  9712  003C52  0E07               	movlw	(high __ramtop+-1)
  9713  003C54  6EEA               	movwf	fsr0h,c
  9714  003C56  0100               	movlb	0	; () banked
  9715  003C58  518A               	movf	(??_writeString+3)& (0+255),w,b
  9716  003C5A  64EA               	cpfsgt	fsr0h,c
  9717  003C5C  D003               	bra	i2u546_47
  9718  003C5E  6EEA               	movwf	fsr0h,c
  9719  003C60  50EF               	movf	indf0,w,c
  9720  003C62  D003               	bra	i2u546_40
  9721  003C64                     i2u546_47:
  9722  003C64  6EF7               	movwf	tblptrh,c
  9723  003C66  0008               	tblrd		*
  9724  003C68  50F5               	movf	tablat,w,c
  9725  003C6A                     i2u546_40:
  9726  003C6A  0100               	movlb	0	; () banked
  9727  003C6C  0100               	movlb	0	; () banked
  9728  003C6E  6F82               	movwf	(?_writeChar+1)& (0+255),b
  9729  003C70  EC90  F035         	call	_writeChar	;wreg free
  9730  003C74                     i2l7171:
  9731                           
  9732                           ;disp.c: 201: }
  9733                           ;disp.c: 202: i++;
  9734  003C74  0100               	movlb	0	; () banked
  9735  003C76  0100               	movlb	0	; () banked
  9736  003C78  2B8D               	incf	writeString@i& (0+255),f,b
  9737  003C7A                     i2l7173:
  9738                           
  9739                           ; BSR set to: 0
  9740  003C7A  0100               	movlb	0	; () banked
  9741  003C7C  0100               	movlb	0	; () banked
  9742  003C7E  078C               	decf	writeString@cnt& (0+255),f,b
  9743  003C80                     i2l7175:
  9744                           
  9745                           ; BSR set to: 0
  9746  003C80  0100               	movlb	0	; () banked
  9747  003C82  0100               	movlb	0	; () banked
  9748  003C84  2F8B               	decfsz	writeString@bits& (0+255),f,b
  9749  003C86  D67E               	goto	i2l7149
  9750  003C88                     i2l113:
  9751  003C88  0012               	return	
  9752  003C8A                     __end_of_writeString:
  9753                           	opt stack 0
  9754                           tosu	equ	0xFFF
  9755                           tosh	equ	0xFFE
  9756                           tosl	equ	0xFFD
  9757                           pclatu	equ	0xFFB
  9758                           pclath	equ	0xFFA
  9759                           tblptru	equ	0xFF8
  9760                           tblptrh	equ	0xFF7
  9761                           tblptrl	equ	0xFF6
  9762                           tablat	equ	0xFF5
  9763                           prodh	equ	0xFF4
  9764                           prodl	equ	0xFF3
  9765                           intcon	equ	0xFF2
  9766                           intcon2	equ	0xFF1
  9767                           indf0	equ	0xFEF
  9768                           postinc0	equ	0xFEE
  9769                           fsr0h	equ	0xFEA
  9770                           fsr0l	equ	0xFE9
  9771                           wreg	equ	0xFE8
  9772                           postinc1	equ	0xFE6
  9773                           postdec1	equ	0xFE5
  9774                           fsr1h	equ	0xFE2
  9775                           fsr1l	equ	0xFE1
  9776                           bsr	equ	0xFE0
  9777                           indf2	equ	0xFDF
  9778                           postinc2	equ	0xFDE
  9779                           postdec2	equ	0xFDD
  9780                           plusw2	equ	0xFDB
  9781                           fsr2h	equ	0xFDA
  9782                           fsr2l	equ	0xFD9
  9783                           status	equ	0xFD8
  9784                           
  9785 ;; *************** function _hibit *****************
  9786 ;; Defined at:
  9787 ;;		line 19 in file "defs.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  x               4    0[BANK0 ] unsigned long 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;  log2Val         4    7[BANK0 ] unsigned long 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  4    0[BANK0 ] unsigned long 
  9794 ;; Registers used:
  9795 ;;		wreg, status,2, status,0
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9801 ;;      Params:         0       4       0       0       0       0       0       0       0
  9802 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9803 ;;      Temps:          0       3       0       0       0       0       0       0       0
  9804 ;;      Totals:         0      11       0       0       0       0       0       0       0
  9805 ;;Total ram usage:       11 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; This function calls:
  9808 ;;		Nothing
  9809 ;; This function is called by:
  9810 ;;		_writeString
  9811 ;; This function uses a non-reentrant model
  9812 ;;
  9813                           
  9814                           	psect	text33
  9815  006400                     __ptext33:
  9816                           	opt stack 0
  9817  006400                     _hibit:
  9818                           	opt stack 17
  9819                           
  9820                           ;defs.c: 20: uint32_t log2Val = 0;
  9821                           
  9822                           ;incstack = 0
  9823                           ;incstack = 0
  9824  006400  0E00               	movlw	0
  9825  006402  0100               	movlb	0	; () banked
  9826  006404  0100               	movlb	0	; () banked
  9827  006406  6F67               	movwf	hibit@log2Val& (0+255),b
  9828  006408  0E00               	movlw	0
  9829  00640A  0100               	movlb	0	; () banked
  9830  00640C  6F68               	movwf	(hibit@log2Val+1)& (0+255),b
  9831  00640E  0E00               	movlw	0
  9832  006410  0100               	movlb	0	; () banked
  9833  006412  6F69               	movwf	(hibit@log2Val+2)& (0+255),b
  9834  006414  0E00               	movlw	0
  9835  006416  0100               	movlb	0	; () banked
  9836  006418  6F6A               	movwf	(hibit@log2Val+3)& (0+255),b
  9837                           
  9838                           ;defs.c: 21: while (x >>= 1) log2Val++;
  9839  00641A  D00D               	goto	i2l492
  9840  00641C                     i2l7187:
  9841                           
  9842                           ; BSR set to: 0
  9843  00641C  0E01               	movlw	1
  9844  00641E  0100               	movlb	0	; () banked
  9845  006420  0100               	movlb	0	; () banked
  9846  006422  2767               	addwf	hibit@log2Val& (0+255),f,b
  9847  006424  0E00               	movlw	0
  9848  006426  0100               	movlb	0	; () banked
  9849  006428  2368               	addwfc	(hibit@log2Val+1)& (0+255),f,b
  9850  00642A  0E00               	movlw	0
  9851  00642C  0100               	movlb	0	; () banked
  9852  00642E  2369               	addwfc	(hibit@log2Val+2)& (0+255),f,b
  9853  006430  0E00               	movlw	0
  9854  006432  0100               	movlb	0	; () banked
  9855  006434  236A               	addwfc	(hibit@log2Val+3)& (0+255),f,b
  9856  006436                     i2l492:
  9857                           
  9858                           ; BSR set to: 0
  9859  006436  0100               	movlb	0	; () banked
  9860  006438  90D8               	bcf	status,0,c
  9861  00643A  0100               	movlb	0	; () banked
  9862  00643C  3363               	rrcf	(hibit@x+3)& (0+255),f,b
  9863  00643E  0100               	movlb	0	; () banked
  9864  006440  3362               	rrcf	(hibit@x+2)& (0+255),f,b
  9865  006442  0100               	movlb	0	; () banked
  9866  006444  3361               	rrcf	(hibit@x+1)& (0+255),f,b
  9867  006446  0100               	movlb	0	; () banked
  9868  006448  3360               	rrcf	hibit@x& (0+255),f,b
  9869  00644A  0100               	movlb	0	; () banked
  9870  00644C  5163               	movf	(hibit@x+3)& (0+255),w,b
  9871  00644E  1160               	iorwf	hibit@x& (0+255),w,b
  9872  006450  1161               	iorwf	(hibit@x+1)& (0+255),w,b
  9873  006452  1162               	iorwf	(hibit@x+2)& (0+255),w,b
  9874  006454  A4D8               	btfss	status,2,c
  9875  006456  D7E2               	goto	i2l7187
  9876                           
  9877                           ; BSR set to: 0
  9878                           ;defs.c: 22: return 1 << log2Val;
  9879                           
  9880                           ; BSR set to: 0
  9881  006458  C067  F064         	movff	hibit@log2Val,??_hibit
  9882  00645C  0E01               	movlw	1
  9883  00645E  0100               	movlb	0	; () banked
  9884  006460  6F65               	movwf	(??_hibit+1)& (0+255),b
  9885  006462  6B66               	clrf	(??_hibit+2)& (0+255),b
  9886  006464  0100               	movlb	0	; () banked
  9887  006466  2B64               	incf	??_hibit& (0+255),f,b
  9888  006468  D004               	goto	i2u549_44
  9889  00646A                     i2u549_45:
  9890  00646A  90D8               	bcf	status,0,c
  9891  00646C  0100               	movlb	0	; () banked
  9892  00646E  3765               	rlcf	(??_hibit+1)& (0+255),f,b
  9893  006470  3766               	rlcf	(??_hibit+2)& (0+255),f,b
  9894  006472                     i2u549_44:
  9895  006472  0100               	movlb	0	; () banked
  9896  006474  2F64               	decfsz	??_hibit& (0+255),f,b
  9897  006476  D7F9               	goto	i2u549_45
  9898  006478  0100               	movlb	0	; () banked
  9899  00647A  C065  F060         	movff	??_hibit+1,?_hibit
  9900  00647E  0100               	movlb	0	; () banked
  9901  006480  C066  F061         	movff	??_hibit+2,?_hibit+1
  9902  006484  0100               	movlb	0	; () banked
  9903  006486  0E00               	movlw	0
  9904  006488  0100               	movlb	0	; () banked
  9905  00648A  BF61               	btfsc	(?_hibit+1)& (0+255),7,b
  9906  00648C  0EFF               	movlw	-1
  9907  00648E  0100               	movlb	0	; () banked
  9908  006490  6F62               	movwf	(?_hibit+2)& (0+255),b
  9909  006492  0100               	movlb	0	; () banked
  9910  006494  6F63               	movwf	(?_hibit+3)& (0+255),b
  9911                           
  9912                           ; BSR set to: 0
  9913                           
  9914                           ; BSR set to: 0
  9915  006496  0012               	return	
  9916  006498                     __end_of_hibit:
  9917                           	opt stack 0
  9918                           tosu	equ	0xFFF
  9919                           tosh	equ	0xFFE
  9920                           tosl	equ	0xFFD
  9921                           pclatu	equ	0xFFB
  9922                           pclath	equ	0xFFA
  9923                           tblptru	equ	0xFF8
  9924                           tblptrh	equ	0xFF7
  9925                           tblptrl	equ	0xFF6
  9926                           tablat	equ	0xFF5
  9927                           prodh	equ	0xFF4
  9928                           prodl	equ	0xFF3
  9929                           intcon	equ	0xFF2
  9930                           intcon2	equ	0xFF1
  9931                           indf0	equ	0xFEF
  9932                           postinc0	equ	0xFEE
  9933                           fsr0h	equ	0xFEA
  9934                           fsr0l	equ	0xFE9
  9935                           wreg	equ	0xFE8
  9936                           postinc1	equ	0xFE6
  9937                           postdec1	equ	0xFE5
  9938                           fsr1h	equ	0xFE2
  9939                           fsr1l	equ	0xFE1
  9940                           bsr	equ	0xFE0
  9941                           indf2	equ	0xFDF
  9942                           postinc2	equ	0xFDE
  9943                           postdec2	equ	0xFDD
  9944                           plusw2	equ	0xFDB
  9945                           fsr2h	equ	0xFDA
  9946                           fsr2l	equ	0xFD9
  9947                           status	equ	0xFD8
  9948                           
  9949 ;; *************** function _countBits *****************
  9950 ;; Defined at:
  9951 ;;		line 9 in file "defs.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;  num             4    0[BANK0 ] unsigned long 
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  ret             1    4[BANK0 ] unsigned char 
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  1    wreg      unsigned char 
  9958 ;; Registers used:
  9959 ;;		wreg, status,2, status,0
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9965 ;;      Params:         0       4       0       0       0       0       0       0       0
  9966 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9968 ;;      Totals:         0       5       0       0       0       0       0       0       0
  9969 ;;Total ram usage:        5 bytes
  9970 ;; Hardware stack levels used:    1
  9971 ;; This function calls:
  9972 ;;		Nothing
  9973 ;; This function is called by:
  9974 ;;		_writeString
  9975 ;;		_printRTC
  9976 ;;		_printTemp
  9977 ;;		_writeLong
  9978 ;;		_writeFloat
  9979 ;;		_maxSize
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           	psect	text34
  9984  006CF2                     __ptext34:
  9985                           	opt stack 0
  9986  006CF2                     _countBits:
  9987                           	opt stack 17
  9988                           
  9989                           ;defs.c: 10: uint8_t ret = num & 1;
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;incstack = 0
  9993                           ;incstack = 0
  9994  006CF2  0100               	movlb	0	; () banked
  9995  006CF4  0100               	movlb	0	; () banked
  9996  006CF6  5160               	movf	countBits@num& (0+255),w,b
  9997  006CF8  0B01               	andlw	1
  9998  006CFA  0100               	movlb	0	; () banked
  9999  006CFC  0100               	movlb	0	; () banked
 10000  006CFE  6F64               	movwf	countBits@ret& (0+255),b
 10001                           
 10002                           ;defs.c: 11: while (num) ret += (0x1 & (num >>= 1));
 10003  006D00  D010               	goto	i2l486
 10004  006D02                     i2l6569:
 10005                           
 10006                           ; BSR set to: 0
 10007  006D02  0100               	movlb	0	; () banked
 10008  006D04  90D8               	bcf	status,0,c
 10009  006D06  0100               	movlb	0	; () banked
 10010  006D08  3363               	rrcf	(countBits@num+3)& (0+255),f,b
 10011  006D0A  0100               	movlb	0	; () banked
 10012  006D0C  3362               	rrcf	(countBits@num+2)& (0+255),f,b
 10013  006D0E  0100               	movlb	0	; () banked
 10014  006D10  3361               	rrcf	(countBits@num+1)& (0+255),f,b
 10015  006D12  0100               	movlb	0	; () banked
 10016  006D14  3360               	rrcf	countBits@num& (0+255),f,b
 10017  006D16  0100               	movlb	0	; () banked
 10018  006D18  5160               	movf	countBits@num& (0+255),w,b
 10019  006D1A  0B01               	andlw	1
 10020  006D1C  0100               	movlb	0	; () banked
 10021  006D1E  0100               	movlb	0	; () banked
 10022  006D20  2764               	addwf	countBits@ret& (0+255),f,b
 10023  006D22                     i2l486:
 10024                           
 10025                           ; BSR set to: 0
 10026  006D22  0100               	movlb	0	; () banked
 10027  006D24  0100               	movlb	0	; () banked
 10028  006D26  5163               	movf	(countBits@num+3)& (0+255),w,b
 10029  006D28  1160               	iorwf	countBits@num& (0+255),w,b
 10030  006D2A  1161               	iorwf	(countBits@num+1)& (0+255),w,b
 10031  006D2C  1162               	iorwf	(countBits@num+2)& (0+255),w,b
 10032  006D2E  A4D8               	btfss	status,2,c
 10033  006D30  D7E8               	goto	i2l6569
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;defs.c: 12: return ret;
 10037                           
 10038                           ; BSR set to: 0
 10039  006D32  0100               	movlb	0	; () banked
 10040  006D34  0100               	movlb	0	; () banked
 10041  006D36  5164               	movf	countBits@ret& (0+255),w,b
 10042                           
 10043                           ; BSR set to: 0
 10044                           
 10045                           ; BSR set to: 0
 10046  006D38  0012               	return	
 10047  006D3A                     __end_of_countBits:
 10048                           	opt stack 0
 10049                           tosu	equ	0xFFF
 10050                           tosh	equ	0xFFE
 10051                           tosl	equ	0xFFD
 10052                           pclatu	equ	0xFFB
 10053                           pclath	equ	0xFFA
 10054                           tblptru	equ	0xFF8
 10055                           tblptrh	equ	0xFF7
 10056                           tblptrl	equ	0xFF6
 10057                           tablat	equ	0xFF5
 10058                           prodh	equ	0xFF4
 10059                           prodl	equ	0xFF3
 10060                           intcon	equ	0xFF2
 10061                           intcon2	equ	0xFF1
 10062                           indf0	equ	0xFEF
 10063                           postinc0	equ	0xFEE
 10064                           fsr0h	equ	0xFEA
 10065                           fsr0l	equ	0xFE9
 10066                           wreg	equ	0xFE8
 10067                           postinc1	equ	0xFE6
 10068                           postdec1	equ	0xFE5
 10069                           fsr1h	equ	0xFE2
 10070                           fsr1l	equ	0xFE1
 10071                           bsr	equ	0xFE0
 10072                           indf2	equ	0xFDF
 10073                           postinc2	equ	0xFDE
 10074                           postdec2	equ	0xFDD
 10075                           plusw2	equ	0xFDB
 10076                           fsr2h	equ	0xFDA
 10077                           fsr2l	equ	0xFD9
 10078                           status	equ	0xFD8
 10079                           
 10080 ;; *************** function _writeChar *****************
 10081 ;; Defined at:
 10082 ;;		line 123 in file "disp.c"
 10083 ;; Parameters:    Size  Location     Type
 10084 ;;  digit           1   33[BANK0 ] unsigned char 
 10085 ;;  ch              1   34[BANK0 ] unsigned char 
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;  dig             1   35[BANK0 ] unsigned char 
 10088 ;; Return value:  Size  Location     Type
 10089 ;;		None               void
 10090 ;; Registers used:
 10091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10097 ;;      Params:         0       2       0       0       0       0       0       0       0
 10098 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10100 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10101 ;;Total ram usage:        3 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:    1
 10104 ;; This function calls:
 10105 ;;		_getFontChar
 10106 ;;		i2_log2
 10107 ;; This function is called by:
 10108 ;;		_writeString
 10109 ;; This function uses a non-reentrant model
 10110 ;;
 10111                           
 10112                           	psect	text35
 10113  006B20                     __ptext35:
 10114                           	opt stack 0
 10115  006B20                     _writeChar:
 10116                           	opt stack 16
 10117                           
 10118                           ;disp.c: 124: uint8_t dig = (uint8_t) log2(digit);
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;incstack = 0
 10122                           ;incstack = 0
 10123  006B20  0100               	movlb	0	; () banked
 10124  006B22  0100               	movlb	0	; () banked
 10125  006B24  5181               	movf	writeChar@digit& (0+255),w,b
 10126  006B26  0100               	movlb	0	; () banked
 10127  006B28  0100               	movlb	0	; () banked
 10128  006B2A  6F6B               	movwf	?i2_log2& (0+255),b
 10129  006B2C  0100               	movlb	0	; () banked
 10130  006B2E  6B6C               	clrf	(?i2_log2+1)& (0+255),b
 10131  006B30  0100               	movlb	0	; () banked
 10132  006B32  6B6D               	clrf	(?i2_log2+2)& (0+255),b
 10133  006B34  0100               	movlb	0	; () banked
 10134  006B36  6B6E               	clrf	(?i2_log2+3)& (0+255),b
 10135  006B38  ECCB  F034         	call	i2_log2	;wreg free
 10136  006B3C  0100               	movlb	0	; () banked
 10137  006B3E  0100               	movlb	0	; () banked
 10138  006B40  516B               	movf	?i2_log2& (0+255),w,b
 10139  006B42  0100               	movlb	0	; () banked
 10140  006B44  0100               	movlb	0	; () banked
 10141  006B46  6F83               	movwf	writeChar@dig& (0+255),b
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;disp.c: 125: screen.digits.screen[dig].bits = getFontChar(ch);
 10145  006B48  0100               	movlb	0	; () banked
 10146  006B4A  0100               	movlb	0	; () banked
 10147  006B4C  5183               	movf	writeChar@dig& (0+255),w,b
 10148  006B4E  0D01               	mullw	1
 10149  006B50  0101               	movlb	1	; () banked
 10150  006B52  0E6F               	movlw	low _screen
 10151  006B54  24F3               	addwf	prodl,w,c
 10152  006B56  6ED9               	movwf	fsr2l,c
 10153  006B58  0101               	movlb	1	; () banked
 10154  006B5A  0E01               	movlw	high _screen
 10155  006B5C  20F4               	addwfc	prodh,w,c
 10156  006B5E  6EDA               	movwf	fsr2h,c
 10157  006B60  C082  F07E         	movff	writeChar@ch,?_getFontChar
 10158  006B64  EC5F  F024         	call	_getFontChar	;wreg free
 10159  006B68  6EDF               	movwf	indf2,c
 10160                           
 10161                           ;disp.c: 126: screen.changed |= digit;
 10162  006B6A  0100               	movlb	0	; () banked
 10163  006B6C  0100               	movlb	0	; () banked
 10164  006B6E  5181               	movf	writeChar@digit& (0+255),w,b
 10165  006B70  0101               	movlb	1	; () banked
 10166  006B72  0101               	movlb	1	; () banked
 10167  006B74  137A               	iorwf	(_screen+11)& (0+255),f,b
 10168                           
 10169                           ; BSR set to: 1
 10170  006B76  0012               	return	
 10171  006B78                     __end_of_writeChar:
 10172                           	opt stack 0
 10173                           tosu	equ	0xFFF
 10174                           tosh	equ	0xFFE
 10175                           tosl	equ	0xFFD
 10176                           pclatu	equ	0xFFB
 10177                           pclath	equ	0xFFA
 10178                           tblptru	equ	0xFF8
 10179                           tblptrh	equ	0xFF7
 10180                           tblptrl	equ	0xFF6
 10181                           tablat	equ	0xFF5
 10182                           prodh	equ	0xFF4
 10183                           prodl	equ	0xFF3
 10184                           intcon	equ	0xFF2
 10185                           intcon2	equ	0xFF1
 10186                           indf0	equ	0xFEF
 10187                           postinc0	equ	0xFEE
 10188                           fsr0h	equ	0xFEA
 10189                           fsr0l	equ	0xFE9
 10190                           wreg	equ	0xFE8
 10191                           postinc1	equ	0xFE6
 10192                           postdec1	equ	0xFE5
 10193                           fsr1h	equ	0xFE2
 10194                           fsr1l	equ	0xFE1
 10195                           bsr	equ	0xFE0
 10196                           indf2	equ	0xFDF
 10197                           postinc2	equ	0xFDE
 10198                           postdec2	equ	0xFDD
 10199                           plusw2	equ	0xFDB
 10200                           fsr2h	equ	0xFDA
 10201                           fsr2l	equ	0xFD9
 10202                           status	equ	0xFD8
 10203                           
 10204 ;; *************** function i2_log2 *****************
 10205 ;; Defined at:
 10206 ;;		line 48 in file "defs.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;  log2            4   11[BANK0 ] unsigned long 
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;  log2            4   15[BANK0 ] unsigned long 
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  4   11[BANK0 ] unsigned long 
 10213 ;; Registers used:
 10214 ;;		wreg, status,2, status,0
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/0
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10220 ;;      Params:         0       4       0       0       0       0       0       0       0
 10221 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10222 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10223 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10224 ;;Total ram usage:        8 bytes
 10225 ;; Hardware stack levels used:    1
 10226 ;; This function calls:
 10227 ;;		Nothing
 10228 ;; This function is called by:
 10229 ;;		_writeChar
 10230 ;;		_writeString
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           	psect	text36
 10235  006996                     __ptext36:
 10236                           	opt stack 0
 10237  006996                     i2_log2:
 10238                           	opt stack 17
 10239                           
 10240                           ;defs.c: 49: uint32_t log2Val = 0;
 10241                           
 10242                           ; BSR set to: 1
 10243                           ;incstack = 0
 10244                           ;incstack = 0
 10245  006996  0E00               	movlw	0
 10246  006998  0100               	movlb	0	; () banked
 10247  00699A  0100               	movlb	0	; () banked
 10248  00699C  6F6F               	movwf	i2log2@log2Val& (0+255),b
 10249  00699E  0E00               	movlw	0
 10250  0069A0  0100               	movlb	0	; () banked
 10251  0069A2  6F70               	movwf	(i2log2@log2Val+1)& (0+255),b
 10252  0069A4  0E00               	movlw	0
 10253  0069A6  0100               	movlb	0	; () banked
 10254  0069A8  6F71               	movwf	(i2log2@log2Val+2)& (0+255),b
 10255  0069AA  0E00               	movlw	0
 10256  0069AC  0100               	movlb	0	; () banked
 10257  0069AE  6F72               	movwf	(i2log2@log2Val+3)& (0+255),b
 10258                           
 10259                           ;defs.c: 50: while (num >>= 1) log2Val++;
 10260  0069B0  D00D               	goto	i2l508
 10261  0069B2                     i2l8267:
 10262                           
 10263                           ; BSR set to: 0
 10264  0069B2  0E01               	movlw	1
 10265  0069B4  0100               	movlb	0	; () banked
 10266  0069B6  0100               	movlb	0	; () banked
 10267  0069B8  276F               	addwf	i2log2@log2Val& (0+255),f,b
 10268  0069BA  0E00               	movlw	0
 10269  0069BC  0100               	movlb	0	; () banked
 10270  0069BE  2370               	addwfc	(i2log2@log2Val+1)& (0+255),f,b
 10271  0069C0  0E00               	movlw	0
 10272  0069C2  0100               	movlb	0	; () banked
 10273  0069C4  2371               	addwfc	(i2log2@log2Val+2)& (0+255),f,b
 10274  0069C6  0E00               	movlw	0
 10275  0069C8  0100               	movlb	0	; () banked
 10276  0069CA  2372               	addwfc	(i2log2@log2Val+3)& (0+255),f,b
 10277  0069CC                     i2l508:
 10278                           
 10279                           ; BSR set to: 0
 10280  0069CC  0100               	movlb	0	; () banked
 10281  0069CE  90D8               	bcf	status,0,c
 10282  0069D0  0100               	movlb	0	; () banked
 10283  0069D2  336E               	rrcf	(i2log2@num+3)& (0+255),f,b
 10284  0069D4  0100               	movlb	0	; () banked
 10285  0069D6  336D               	rrcf	(i2log2@num+2)& (0+255),f,b
 10286  0069D8  0100               	movlb	0	; () banked
 10287  0069DA  336C               	rrcf	(i2log2@num+1)& (0+255),f,b
 10288  0069DC  0100               	movlb	0	; () banked
 10289  0069DE  336B               	rrcf	i2log2@num& (0+255),f,b
 10290  0069E0  0100               	movlb	0	; () banked
 10291  0069E2  516E               	movf	(i2log2@num+3)& (0+255),w,b
 10292  0069E4  116B               	iorwf	i2log2@num& (0+255),w,b
 10293  0069E6  116C               	iorwf	(i2log2@num+1)& (0+255),w,b
 10294  0069E8  116D               	iorwf	(i2log2@num+2)& (0+255),w,b
 10295  0069EA  A4D8               	btfss	status,2,c
 10296  0069EC  D7E2               	goto	i2l8267
 10297                           
 10298                           ; BSR set to: 0
 10299                           ;defs.c: 51: return log2Val;
 10300  0069EE  C06F  F06B         	movff	i2log2@log2Val,?i2_log2
 10301  0069F2  C070  F06C         	movff	i2log2@log2Val+1,?i2_log2+1
 10302  0069F6  C071  F06D         	movff	i2log2@log2Val+2,?i2_log2+2
 10303  0069FA  C072  F06E         	movff	i2log2@log2Val+3,?i2_log2+3
 10304                           
 10305                           ; BSR set to: 0
 10306  0069FE  0012               	return	
 10307  006A00                     __end_ofi2_log2:
 10308                           	opt stack 0
 10309                           tosu	equ	0xFFF
 10310                           tosh	equ	0xFFE
 10311                           tosl	equ	0xFFD
 10312                           pclatu	equ	0xFFB
 10313                           pclath	equ	0xFFA
 10314                           tblptru	equ	0xFF8
 10315                           tblptrh	equ	0xFF7
 10316                           tblptrl	equ	0xFF6
 10317                           tablat	equ	0xFF5
 10318                           prodh	equ	0xFF4
 10319                           prodl	equ	0xFF3
 10320                           intcon	equ	0xFF2
 10321                           intcon2	equ	0xFF1
 10322                           indf0	equ	0xFEF
 10323                           postinc0	equ	0xFEE
 10324                           fsr0h	equ	0xFEA
 10325                           fsr0l	equ	0xFE9
 10326                           wreg	equ	0xFE8
 10327                           postinc1	equ	0xFE6
 10328                           postdec1	equ	0xFE5
 10329                           fsr1h	equ	0xFE2
 10330                           fsr1l	equ	0xFE1
 10331                           bsr	equ	0xFE0
 10332                           indf2	equ	0xFDF
 10333                           postinc2	equ	0xFDE
 10334                           postdec2	equ	0xFDD
 10335                           plusw2	equ	0xFDB
 10336                           fsr2h	equ	0xFDA
 10337                           fsr2l	equ	0xFD9
 10338                           status	equ	0xFD8
 10339                           
 10340 ;; *************** function _getFontChar *****************
 10341 ;; Defined at:
 10342 ;;		line 117 in file "display1.h"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  ch              1   30[BANK0 ] unsigned char 
 10345 ;; Auto vars:     Size  Location     Type
 10346 ;;		None
 10347 ;; Return value:  Size  Location     Type
 10348 ;;                  1    wreg      unsigned char 
 10349 ;; Registers used:
 10350 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10351 ;; Tracked objects:
 10352 ;;		On entry : 0/0
 10353 ;;		On exit  : 0/0
 10354 ;;		Unchanged: 0/0
 10355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10356 ;;      Params:         0       1       0       0       0       0       0       0       0
 10357 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10358 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10359 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10360 ;;Total ram usage:        3 bytes
 10361 ;; Hardware stack levels used:    1
 10362 ;; This function calls:
 10363 ;;		Nothing
 10364 ;; This function is called by:
 10365 ;;		_writeChar
 10366 ;;		_writeString
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           	psect	text37
 10371  0048BE                     __ptext37:
 10372                           	opt stack 0
 10373  0048BE                     _getFontChar:
 10374                           	opt stack 16
 10375                           
 10376                           ;display1.h: 118: switch (ch)
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;incstack = 0
 10380                           ;incstack = 0
 10381  0048BE  D025               	goto	i2l6401
 10382  0048C0                     i2l6359:
 10383                           
 10384                           ;display1.h: 121: return lcd_font[ch - '0'];
 10385  0048C0  0ED0               	movlw	208
 10386  0048C2  D001               	goto	L15
 10387  0048C4                     i2l6363:
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;display1.h: 123: return lcd_font[ch - ('0' + ('a' - 'A'))];
 10391  0048C4  0EB0               	movlw	176
 10392  0048C6                     L15:
 10393  0048C6  0100               	movlb	0	; () banked
 10394  0048C8  0100               	movlb	0	; () banked
 10395  0048CA  257E               	addwf	getFontChar@ch& (0+255),w,b
 10396  0048CC  0100               	movlb	0	; () banked
 10397  0048CE  6F7F               	movwf	??_getFontChar& (0+255),b
 10398  0048D0  0100               	movlb	0	; () banked
 10399  0048D2  0100               	movlb	0	; () banked
 10400  0048D4  6B80               	clrf	(??_getFontChar+1)& (0+255),b
 10401  0048D6  0EFF               	movlw	255
 10402  0048D8  2380               	addwfc	(??_getFontChar+1)& (0+255),f,b
 10403  0048DA  0EAE               	movlw	low _lcd_font
 10404  0048DC  0100               	movlb	0	; () banked
 10405  0048DE  257F               	addwf	??_getFontChar& (0+255),w,b
 10406  0048E0  6EF6               	movwf	tblptrl,c
 10407  0048E2  0E7E               	movlw	high _lcd_font
 10408  0048E4  2180               	addwfc	(??_getFontChar+1)& (0+255),w,b
 10409  0048E6  6EF7               	movwf	tblptrh,c
 10410  0048E8  0008               	tblrd		*
 10411  0048EA  50F5               	movf	tablat,w,c
 10412  0048EC  D0F9               	goto	i2l43
 10413  0048EE                     i2l6367:
 10414                           
 10415                           ; BSR set to: 0
 10416                           ;display1.h: 125: return 0b01000000;
 10417  0048EE  0E40               	movlw	64
 10418  0048F0  D0F7               	goto	i2l43
 10419  0048F2                     i2l6371:
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;display1.h: 127: case ',':
 10423                           ;display1.h: 128: return 0b10000000;
 10424  0048F2  0E80               	movlw	128
 10425  0048F4  D0F5               	goto	i2l43
 10426  0048F6                     i2l6375:
 10427                           
 10428                           ; BSR set to: 0
 10429                           ;display1.h: 130: return 0b00000001 + 0b00001000 + 0b00010000 + 0b00100000;
 10430  0048F6  0E39               	movlw	57
 10431  0048F8  D0F3               	goto	i2l43
 10432  0048FA                     i2l6379:
 10433                           
 10434                           ; BSR set to: 0
 10435                           ;display1.h: 132: return 0b00000001 + 0b00000010 + 0b00000100 + 0b00001000;
 10436  0048FA  0E0F               	movlw	15
 10437  0048FC  D0F1               	goto	i2l43
 10438  0048FE                     i2l6383:
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;display1.h: 134: return 0b00001000;
 10442  0048FE  0E08               	movlw	8
 10443  004900  D0EF               	goto	i2l43
 10444  004902                     i2l6387:
 10445                           
 10446                           ; BSR set to: 0
 10447                           ;display1.h: 136: return 0b00000001 + 0b00000010 + 0b00100000 + 0b01000000;
 10448  004902  0E63               	movlw	99
 10449  004904  D0ED               	goto	i2l43
 10450  004906                     i2l6395:
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;display1.h: 140: return 0;
 10454  004906  0E00               	movlw	0
 10455  004908  D0EB               	goto	i2l43
 10456  00490A                     i2l6401:
 10457  00490A  0100               	movlb	0	; () banked
 10458  00490C  0100               	movlb	0	; () banked
 10459  00490E  517E               	movf	getFontChar@ch& (0+255),w,b
 10460                           
 10461                           ; Switch size 1, requested type "space"
 10462                           ; Number of cases is 77, Range of values is 32 to 122
 10463                           ; switch strategies available:
 10464                           ; Name         Instructions Cycles
 10465                           ; simple_byte          232   117 (average)
 10466                           ;	Chosen strategy is simple_byte
 10467  004910  0A20               	xorlw	32	; case 32
 10468  004912  B4D8               	btfsc	status,2,c
 10469  004914  D7F8               	goto	i2l6395
 10470  004916  0A0A               	xorlw	10	; case 42
 10471  004918  B4D8               	btfsc	status,2,c
 10472  00491A  D7F3               	goto	i2l6387
 10473  00491C  0A06               	xorlw	6	; case 44
 10474  00491E  B4D8               	btfsc	status,2,c
 10475  004920  D7E8               	goto	i2l6371
 10476  004922  0A01               	xorlw	1	; case 45
 10477  004924  B4D8               	btfsc	status,2,c
 10478  004926  D7E3               	goto	i2l6367
 10479  004928  0A03               	xorlw	3	; case 46
 10480  00492A  B4D8               	btfsc	status,2,c
 10481  00492C  D7E2               	goto	i2l6371
 10482  00492E  0A1E               	xorlw	30	; case 48
 10483  004930  B4D8               	btfsc	status,2,c
 10484  004932  D7C6               	goto	i2l6359
 10485  004934  0A01               	xorlw	1	; case 49
 10486  004936  B4D8               	btfsc	status,2,c
 10487  004938  D7C3               	goto	i2l6359
 10488  00493A  0A03               	xorlw	3	; case 50
 10489  00493C  B4D8               	btfsc	status,2,c
 10490  00493E  D7C0               	goto	i2l6359
 10491  004940  0A01               	xorlw	1	; case 51
 10492  004942  B4D8               	btfsc	status,2,c
 10493  004944  D7BD               	goto	i2l6359
 10494  004946  0A07               	xorlw	7	; case 52
 10495  004948  B4D8               	btfsc	status,2,c
 10496  00494A  D7BA               	goto	i2l6359
 10497  00494C  0A01               	xorlw	1	; case 53
 10498  00494E  B4D8               	btfsc	status,2,c
 10499  004950  D7B7               	goto	i2l6359
 10500  004952  0A03               	xorlw	3	; case 54
 10501  004954  B4D8               	btfsc	status,2,c
 10502  004956  D7B4               	goto	i2l6359
 10503  004958  0A01               	xorlw	1	; case 55
 10504  00495A  B4D8               	btfsc	status,2,c
 10505  00495C  D7B1               	goto	i2l6359
 10506  00495E  0A0F               	xorlw	15	; case 56
 10507  004960  B4D8               	btfsc	status,2,c
 10508  004962  D7AE               	goto	i2l6359
 10509  004964  0A01               	xorlw	1	; case 57
 10510  004966  B4D8               	btfsc	status,2,c
 10511  004968  D7AB               	goto	i2l6359
 10512  00496A  0A03               	xorlw	3	; case 58
 10513  00496C  B4D8               	btfsc	status,2,c
 10514  00496E  D7A8               	goto	i2l6359
 10515  004970  0A01               	xorlw	1	; case 59
 10516  004972  B4D8               	btfsc	status,2,c
 10517  004974  D7A5               	goto	i2l6359
 10518  004976  0A07               	xorlw	7	; case 60
 10519  004978  B4D8               	btfsc	status,2,c
 10520  00497A  D7A2               	goto	i2l6359
 10521  00497C  0A01               	xorlw	1	; case 61
 10522  00497E  B4D8               	btfsc	status,2,c
 10523  004980  D79F               	goto	i2l6359
 10524  004982  0A03               	xorlw	3	; case 62
 10525  004984  B4D8               	btfsc	status,2,c
 10526  004986  D79C               	goto	i2l6359
 10527  004988  0A01               	xorlw	1	; case 63
 10528  00498A  B4D8               	btfsc	status,2,c
 10529  00498C  D799               	goto	i2l6359
 10530  00498E  0A7F               	xorlw	127	; case 64
 10531  004990  B4D8               	btfsc	status,2,c
 10532  004992  D796               	goto	i2l6359
 10533  004994  0A01               	xorlw	1	; case 65
 10534  004996  B4D8               	btfsc	status,2,c
 10535  004998  D793               	goto	i2l6359
 10536  00499A  0A03               	xorlw	3	; case 66
 10537  00499C  B4D8               	btfsc	status,2,c
 10538  00499E  D790               	goto	i2l6359
 10539  0049A0  0A01               	xorlw	1	; case 67
 10540  0049A2  B4D8               	btfsc	status,2,c
 10541  0049A4  D78D               	goto	i2l6359
 10542  0049A6  0A07               	xorlw	7	; case 68
 10543  0049A8  B4D8               	btfsc	status,2,c
 10544  0049AA  D78A               	goto	i2l6359
 10545  0049AC  0A01               	xorlw	1	; case 69
 10546  0049AE  B4D8               	btfsc	status,2,c
 10547  0049B0  D787               	goto	i2l6359
 10548  0049B2  0A03               	xorlw	3	; case 70
 10549  0049B4  B4D8               	btfsc	status,2,c
 10550  0049B6  D784               	goto	i2l6359
 10551  0049B8  0A01               	xorlw	1	; case 71
 10552  0049BA  B4D8               	btfsc	status,2,c
 10553  0049BC  D781               	goto	i2l6359
 10554  0049BE  0A0F               	xorlw	15	; case 72
 10555  0049C0  B4D8               	btfsc	status,2,c
 10556  0049C2  D77E               	goto	i2l6359
 10557  0049C4  0A01               	xorlw	1	; case 73
 10558  0049C6  B4D8               	btfsc	status,2,c
 10559  0049C8  D77B               	goto	i2l6359
 10560  0049CA  0A03               	xorlw	3	; case 74
 10561  0049CC  B4D8               	btfsc	status,2,c
 10562  0049CE  D778               	goto	i2l6359
 10563  0049D0  0A01               	xorlw	1	; case 75
 10564  0049D2  B4D8               	btfsc	status,2,c
 10565  0049D4  D775               	goto	i2l6359
 10566  0049D6  0A07               	xorlw	7	; case 76
 10567  0049D8  B4D8               	btfsc	status,2,c
 10568  0049DA  D772               	goto	i2l6359
 10569  0049DC  0A01               	xorlw	1	; case 77
 10570  0049DE  B4D8               	btfsc	status,2,c
 10571  0049E0  D76F               	goto	i2l6359
 10572  0049E2  0A03               	xorlw	3	; case 78
 10573  0049E4  B4D8               	btfsc	status,2,c
 10574  0049E6  D76C               	goto	i2l6359
 10575  0049E8  0A01               	xorlw	1	; case 79
 10576  0049EA  B4D8               	btfsc	status,2,c
 10577  0049EC  D769               	goto	i2l6359
 10578  0049EE  0A1F               	xorlw	31	; case 80
 10579  0049F0  B4D8               	btfsc	status,2,c
 10580  0049F2  D766               	goto	i2l6359
 10581  0049F4  0A01               	xorlw	1	; case 81
 10582  0049F6  B4D8               	btfsc	status,2,c
 10583  0049F8  D763               	goto	i2l6359
 10584  0049FA  0A03               	xorlw	3	; case 82
 10585  0049FC  B4D8               	btfsc	status,2,c
 10586  0049FE  D760               	goto	i2l6359
 10587  004A00  0A01               	xorlw	1	; case 83
 10588  004A02  B4D8               	btfsc	status,2,c
 10589  004A04  D75D               	goto	i2l6359
 10590  004A06  0A07               	xorlw	7	; case 84
 10591  004A08  B4D8               	btfsc	status,2,c
 10592  004A0A  D75A               	goto	i2l6359
 10593  004A0C  0A01               	xorlw	1	; case 85
 10594  004A0E  B4D8               	btfsc	status,2,c
 10595  004A10  D757               	goto	i2l6359
 10596  004A12  0A03               	xorlw	3	; case 86
 10597  004A14  B4D8               	btfsc	status,2,c
 10598  004A16  D754               	goto	i2l6359
 10599  004A18  0A01               	xorlw	1	; case 87
 10600  004A1A  B4D8               	btfsc	status,2,c
 10601  004A1C  D751               	goto	i2l6359
 10602  004A1E  0A0F               	xorlw	15	; case 88
 10603  004A20  B4D8               	btfsc	status,2,c
 10604  004A22  D74E               	goto	i2l6359
 10605  004A24  0A01               	xorlw	1	; case 89
 10606  004A26  B4D8               	btfsc	status,2,c
 10607  004A28  D74B               	goto	i2l6359
 10608  004A2A  0A03               	xorlw	3	; case 90
 10609  004A2C  B4D8               	btfsc	status,2,c
 10610  004A2E  D748               	goto	i2l6359
 10611  004A30  0A01               	xorlw	1	; case 91
 10612  004A32  B4D8               	btfsc	status,2,c
 10613  004A34  D760               	goto	i2l6375
 10614  004A36  0A06               	xorlw	6	; case 93
 10615  004A38  B4D8               	btfsc	status,2,c
 10616  004A3A  D75F               	goto	i2l6379
 10617  004A3C  0A02               	xorlw	2	; case 95
 10618  004A3E  B4D8               	btfsc	status,2,c
 10619  004A40  D75E               	goto	i2l6383
 10620  004A42  0A3E               	xorlw	62	; case 97
 10621  004A44  B4D8               	btfsc	status,2,c
 10622  004A46  D73E               	goto	i2l6363
 10623  004A48  0A03               	xorlw	3	; case 98
 10624  004A4A  B4D8               	btfsc	status,2,c
 10625  004A4C  D73B               	goto	i2l6363
 10626  004A4E  0A01               	xorlw	1	; case 99
 10627  004A50  B4D8               	btfsc	status,2,c
 10628  004A52  D738               	goto	i2l6363
 10629  004A54  0A07               	xorlw	7	; case 100
 10630  004A56  B4D8               	btfsc	status,2,c
 10631  004A58  D735               	goto	i2l6363
 10632  004A5A  0A01               	xorlw	1	; case 101
 10633  004A5C  B4D8               	btfsc	status,2,c
 10634  004A5E  D732               	goto	i2l6363
 10635  004A60  0A03               	xorlw	3	; case 102
 10636  004A62  B4D8               	btfsc	status,2,c
 10637  004A64  D72F               	goto	i2l6363
 10638  004A66  0A01               	xorlw	1	; case 103
 10639  004A68  B4D8               	btfsc	status,2,c
 10640  004A6A  D72C               	goto	i2l6363
 10641  004A6C  0A0F               	xorlw	15	; case 104
 10642  004A6E  B4D8               	btfsc	status,2,c
 10643  004A70  D729               	goto	i2l6363
 10644  004A72  0A01               	xorlw	1	; case 105
 10645  004A74  B4D8               	btfsc	status,2,c
 10646  004A76  D726               	goto	i2l6363
 10647  004A78  0A03               	xorlw	3	; case 106
 10648  004A7A  B4D8               	btfsc	status,2,c
 10649  004A7C  D723               	goto	i2l6363
 10650  004A7E  0A01               	xorlw	1	; case 107
 10651  004A80  B4D8               	btfsc	status,2,c
 10652  004A82  D720               	goto	i2l6363
 10653  004A84  0A07               	xorlw	7	; case 108
 10654  004A86  B4D8               	btfsc	status,2,c
 10655  004A88  D71D               	goto	i2l6363
 10656  004A8A  0A01               	xorlw	1	; case 109
 10657  004A8C  B4D8               	btfsc	status,2,c
 10658  004A8E  D71A               	goto	i2l6363
 10659  004A90  0A03               	xorlw	3	; case 110
 10660  004A92  B4D8               	btfsc	status,2,c
 10661  004A94  D717               	goto	i2l6363
 10662  004A96  0A01               	xorlw	1	; case 111
 10663  004A98  B4D8               	btfsc	status,2,c
 10664  004A9A  D714               	goto	i2l6363
 10665  004A9C  0A1F               	xorlw	31	; case 112
 10666  004A9E  B4D8               	btfsc	status,2,c
 10667  004AA0  D711               	goto	i2l6363
 10668  004AA2  0A01               	xorlw	1	; case 113
 10669  004AA4  B4D8               	btfsc	status,2,c
 10670  004AA6  D70E               	goto	i2l6363
 10671  004AA8  0A03               	xorlw	3	; case 114
 10672  004AAA  B4D8               	btfsc	status,2,c
 10673  004AAC  D70B               	goto	i2l6363
 10674  004AAE  0A01               	xorlw	1	; case 115
 10675  004AB0  B4D8               	btfsc	status,2,c
 10676  004AB2  D708               	goto	i2l6363
 10677  004AB4  0A07               	xorlw	7	; case 116
 10678  004AB6  B4D8               	btfsc	status,2,c
 10679  004AB8  D705               	goto	i2l6363
 10680  004ABA  0A01               	xorlw	1	; case 117
 10681  004ABC  B4D8               	btfsc	status,2,c
 10682  004ABE  D702               	goto	i2l6363
 10683  004AC0  0A03               	xorlw	3	; case 118
 10684  004AC2  B4D8               	btfsc	status,2,c
 10685  004AC4  D6FF               	goto	i2l6363
 10686  004AC6  0A01               	xorlw	1	; case 119
 10687  004AC8  B4D8               	btfsc	status,2,c
 10688  004ACA  D6FC               	goto	i2l6363
 10689  004ACC  0A0F               	xorlw	15	; case 120
 10690  004ACE  B4D8               	btfsc	status,2,c
 10691  004AD0  D6F9               	goto	i2l6363
 10692  004AD2  0A01               	xorlw	1	; case 121
 10693  004AD4  B4D8               	btfsc	status,2,c
 10694  004AD6  D6F6               	goto	i2l6363
 10695  004AD8  0A03               	xorlw	3	; case 122
 10696  004ADA  B4D8               	btfsc	status,2,c
 10697  004ADC  D6F3               	goto	i2l6363
 10698  004ADE  D713               	goto	i2l6395
 10699  004AE0                     i2l43:
 10700                           
 10701                           ; BSR set to: 0
 10702  004AE0  0012               	return	
 10703  004AE2                     __end_of_getFontChar:
 10704                           	opt stack 0
 10705                           tosu	equ	0xFFF
 10706                           tosh	equ	0xFFE
 10707                           tosl	equ	0xFFD
 10708                           pclatu	equ	0xFFB
 10709                           pclath	equ	0xFFA
 10710                           tblptru	equ	0xFF8
 10711                           tblptrh	equ	0xFF7
 10712                           tblptrl	equ	0xFF6
 10713                           tablat	equ	0xFF5
 10714                           prodh	equ	0xFF4
 10715                           prodl	equ	0xFF3
 10716                           intcon	equ	0xFF2
 10717                           intcon2	equ	0xFF1
 10718                           indf0	equ	0xFEF
 10719                           postinc0	equ	0xFEE
 10720                           fsr0h	equ	0xFEA
 10721                           fsr0l	equ	0xFE9
 10722                           wreg	equ	0xFE8
 10723                           postinc1	equ	0xFE6
 10724                           postdec1	equ	0xFE5
 10725                           fsr1h	equ	0xFE2
 10726                           fsr1l	equ	0xFE1
 10727                           bsr	equ	0xFE0
 10728                           indf2	equ	0xFDF
 10729                           postinc2	equ	0xFDE
 10730                           postdec2	equ	0xFDD
 10731                           plusw2	equ	0xFDB
 10732                           fsr2h	equ	0xFDA
 10733                           fsr2l	equ	0xFD9
 10734                           status	equ	0xFD8
 10735                           
 10736 ;; *************** function _sprintf *****************
 10737 ;; Defined at:
 10738 ;;		line 493 in file "/usr/opt/microchip/xc8/v1.20/sources/common/doprnt.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;  sp              2   91[BANK0 ] PTR unsigned char 
 10741 ;;		 -> STR_20(5), printRTC@str(12), writeFloat@str(9), writeLong@str(9), 
 10742 ;;  f               2   93[BANK0 ] PTR const unsigned char 
 10743 ;;		 -> STR_21(4), STR_17(5), STR_16(10), STR_15(10), 
 10744 ;;		 -> STR_14(12), STR_13(12), STR_12(15), STR_11(15), 
 10745 ;;		 -> STR_10(15), STR_9(14), STR_8(14), STR_7(17), 
 10746 ;;		 -> STR_6(16), STR_5(17), STR_4(15), STR_3(13), 
 10747 ;;		 -> STR_2(5), STR_1(5), 
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;  vd              2  116[BANK0 ] unsigned int 
 10750 ;;  temp            3  120[BANK0 ] unsigned int 
 10751 ;;  vd              2  118[BANK0 ] unsigned int 
 10752 ;;  _val            4  139[BANK0 ] struct .
 10753 ;;  fval            3  134[BANK0 ] struct .
 10754 ;;  integ           3  123[BANK0 ] struct .
 10755 ;;  ival            3    0        struct .
 10756 ;;  prec            2  137[BANK0 ] int 
 10757 ;;  exp             2  132[BANK0 ] int 
 10758 ;;  flag            2  130[BANK0 ] unsigned short 
 10759 ;;  width           2  128[BANK0 ] int 
 10760 ;;  ap              2  126[BANK0 ] PTR void [1]
 10761 ;;		 -> ?_sprintf(2), 
 10762 ;;  c               1  143[BANK0 ] char 
 10763 ;;  d               1    0        unsigned char 
 10764 ;; Return value:  Size  Location     Type
 10765 ;;                  2   91[BANK0 ] int 
 10766 ;; Registers used:
 10767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 10768 ;; Tracked objects:
 10769 ;;		On entry : 0/0
 10770 ;;		On exit  : 0/0
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10773 ;;      Params:         0      12       0       0       0       0       0       0       0
 10774 ;;      Locals:         0      35       0       0       0       0       0       0       0
 10775 ;;      Temps:          0       6       0       0       0       0       0       0       0
 10776 ;;      Totals:         0      53       0       0       0       0       0       0       0
 10777 ;;Total ram usage:       53 bytes
 10778 ;; Hardware stack levels used:    1
 10779 ;; Hardware stack levels required when called:    4
 10780 ;; This function calls:
 10781 ;;		_fround
 10782 ;;		_scale
 10783 ;;		_isdigit
 10784 ;;		__tdiv_to_l_
 10785 ;;		__div_to_l_
 10786 ;;		___asftadd
 10787 ;;		___ftadd
 10788 ;;		___asftdiv
 10789 ;;		___asftmul
 10790 ;;		___ftmul
 10791 ;;		___asftsub
 10792 ;;		___awdiv
 10793 ;;		___ftge
 10794 ;;		___ftneg
 10795 ;;		___fttol
 10796 ;;		___lldiv
 10797 ;;		___llmod
 10798 ;;		___lltoft
 10799 ;;		___lwmod
 10800 ;;		___wmul
 10801 ;;		i2___awmod
 10802 ;; This function is called by:
 10803 ;;		_printRTC
 10804 ;;		_printTemp
 10805 ;;		_writeLong
 10806 ;;		_writeFloat
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text38
 10811  00011C                     __ptext38:
 10812                           	opt stack 0
 10813  00011C                     _sprintf:
 10814                           	opt stack 14
 10815                           
 10816                           ;doprnt.c: 494: va_list ap;
 10817                           ;doprnt.c: 499: signed char c;
 10818                           ;doprnt.c: 501: int width;
 10819                           ;doprnt.c: 504: int prec;
 10820                           ;doprnt.c: 508: unsigned short flag;
 10821                           ;doprnt.c: 515: char d;
 10822                           ;doprnt.c: 516: double fval, integ;
 10823                           ;doprnt.c: 517: int exp;
 10824                           ;doprnt.c: 518: double ival;
 10825                           ;doprnt.c: 519: union {
 10826                           ;doprnt.c: 520: unsigned long _val;
 10827                           ;doprnt.c: 521: struct {
 10828                           ;doprnt.c: 522: const char * _cp;
 10829                           ;doprnt.c: 523: unsigned _len;
 10830                           ;doprnt.c: 524: } _str;
 10831                           ;doprnt.c: 525: } _val;
 10832                           ;doprnt.c: 542: *ap = __va_start();
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;incstack = 0
 10836                           ;incstack = 0
 10837  00011C  0100               	movlb	0	; () banked
 10838  00011E  0E00               	movlw	high (?_sprintf+4)
 10839  000120  0100               	movlb	0	; () banked
 10840  000122  0100               	movlb	0	; () banked
 10841  000124  6FDF               	movwf	(sprintf@ap+1)& (0+255),b
 10842  000126  0100               	movlb	0	; () banked
 10843  000128  0EBF               	movlw	low (?_sprintf+4)
 10844  00012A  0100               	movlb	0	; () banked
 10845  00012C  6FDE               	movwf	sprintf@ap& (0+255),b
 10846                           
 10847                           ;doprnt.c: 545: while(c = *f++) {
 10848  00012E  EFF9  F00E         	goto	i2l7135
 10849  000132                     i2l6577:
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;doprnt.c: 547: if(c != '%')
 10853  000132  0100               	movlb	0	; () banked
 10854  000134  0100               	movlb	0	; () banked
 10855  000136  51EF               	movf	sprintf@c& (0+255),w,b
 10856  000138  0A25               	xorlw	37
 10857  00013A  B4D8               	btfsc	status,2,c
 10858  00013C  D018               	goto	i2l6583
 10859                           
 10860                           ; BSR set to: 0
 10861                           ;doprnt.c: 549: {
 10862                           ;doprnt.c: 550: ((*sp++ = (c)));
 10863  00013E  0100               	movlb	0	; () banked
 10864  000140  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 10865  000144  0100               	movlb	0	; () banked
 10866  000146  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 10867  00014A  6AF8               	clrf	tblptru,c
 10868  00014C  0E07               	movlw	(high __ramtop+-1)
 10869  00014E  64F7               	cpfsgt	tblptrh,c
 10870  000150  D005               	bra	i2u408_47
 10871  000152  0100               	movlb	0	; () banked
 10872  000154  C0EF  FFF5         	movff	sprintf@c,tablat
 10873  000158  000C               	tblwt		*
 10874  00015A  D007               	bra	i2u408_40
 10875  00015C                     i2u408_47:
 10876  00015C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10877  000160  CFF7 FFEA          	movff	tblptrh,fsr0h
 10878  000164  0100               	movlb	0	; () banked
 10879  000166  C0EF  FFEF         	movff	sprintf@c,indf0
 10880  00016A                     i2u408_40:
 10881  00016A  EF2E  F008         	goto	i2u467_40
 10882  00016E                     i2l6583:
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;doprnt.c: 552: }
 10886                           ;doprnt.c: 555: width = 0;
 10887  00016E  0E00               	movlw	0
 10888  000170  0100               	movlb	0	; () banked
 10889  000172  0100               	movlb	0	; () banked
 10890  000174  6FE1               	movwf	(sprintf@width+1)& (0+255),b
 10891  000176  0E00               	movlw	0
 10892  000178  0100               	movlb	0	; () banked
 10893  00017A  6FE0               	movwf	sprintf@width& (0+255),b
 10894                           
 10895                           ;doprnt.c: 557: flag = 0;
 10896  00017C  0E00               	movlw	0
 10897  00017E  0100               	movlb	0	; () banked
 10898  000180  0100               	movlb	0	; () banked
 10899  000182  6FE3               	movwf	(sprintf@flag+1)& (0+255),b
 10900  000184  0E00               	movlw	0
 10901  000186  0100               	movlb	0	; () banked
 10902  000188  6FE2               	movwf	sprintf@flag& (0+255),b
 10903  00018A  D007               	goto	i2l6589
 10904  00018C                     i2l6585:
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;doprnt.c: 589: flag |= 0x04;
 10908  00018C  0100               	movlb	0	; () banked
 10909  00018E  0100               	movlb	0	; () banked
 10910  000190  85E2               	bsf	sprintf@flag& (0+255),2,b
 10911                           
 10912                           ;doprnt.c: 590: f++;
 10913  000192  0100               	movlb	0	; () banked
 10914  000194  0100               	movlb	0	; () banked
 10915  000196  4BBD               	infsnz	sprintf@f& (0+255),f,b
 10916  000198  2BBE               	incf	(sprintf@f+1)& (0+255),f,b
 10917  00019A                     i2l6589:
 10918                           
 10919                           ; BSR set to: 0
 10920  00019A  0100               	movlb	0	; () banked
 10921  00019C  C0BD  FFF6         	movff	sprintf@f,tblptrl
 10922  0001A0  0100               	movlb	0	; () banked
 10923  0001A2  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
 10924  0001A6  0008               	tblrd		*
 10925  0001A8  50F5               	movf	tablat,w,c
 10926                           
 10927                           ; Switch size 1, requested type "space"
 10928                           ; Number of cases is 1, Range of values is 48 to 48
 10929                           ; switch strategies available:
 10930                           ; Name         Instructions Cycles
 10931                           ; simple_byte            4     3 (average)
 10932                           ;	Chosen strategy is simple_byte
 10933  0001AA  0A30               	xorlw	48	; case 48
 10934  0001AC  B4D8               	btfsc	status,2,c
 10935  0001AE  D7EE               	goto	i2l6585
 10936                           
 10937                           ; BSR set to: 0
 10938                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 10939                           
 10940                           ; BSR set to: 0
 10941                           
 10942                           ; BSR set to: 0
 10943                           ;doprnt.c: 595: }
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;doprnt.c: 594: break;
 10947  0001B0  0100               	movlb	0	; () banked
 10948  0001B2  C0BD  FFF6         	movff	sprintf@f,tblptrl
 10949  0001B6  0100               	movlb	0	; () banked
 10950  0001B8  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
 10951  0001BC  0008               	tblrd		*
 10952  0001BE  0100               	movlb	0	; () banked
 10953  0001C0  CFF5 F060          	movff	tablat,?_isdigit
 10954  0001C4  EC42  F037         	call	_isdigit	;wreg free
 10955  0001C8  A0D8               	btfss	status,0,c
 10956  0001CA  D04A               	goto	i2l6603
 10957                           
 10958                           ;doprnt.c: 607: width = 0;
 10959  0001CC  0E00               	movlw	0
 10960  0001CE  0100               	movlb	0	; () banked
 10961  0001D0  0100               	movlb	0	; () banked
 10962  0001D2  6FE1               	movwf	(sprintf@width+1)& (0+255),b
 10963  0001D4  0E00               	movlw	0
 10964  0001D6  0100               	movlb	0	; () banked
 10965  0001D8  6FE0               	movwf	sprintf@width& (0+255),b
 10966  0001DA                     i2l6595:
 10967                           
 10968                           ;doprnt.c: 609: width *= 10;
 10969  0001DA  C0E0  F076         	movff	sprintf@width,?___wmul
 10970  0001DE  C0E1  F077         	movff	sprintf@width+1,?___wmul+1
 10971  0001E2  0E00               	movlw	0
 10972  0001E4  0100               	movlb	0	; () banked
 10973  0001E6  0100               	movlb	0	; () banked
 10974  0001E8  6F79               	movwf	(?___wmul+3)& (0+255),b
 10975  0001EA  0E0A               	movlw	10
 10976  0001EC  0100               	movlb	0	; () banked
 10977  0001EE  6F78               	movwf	(?___wmul+2)& (0+255),b
 10978  0001F0  EC31  F035         	call	___wmul	;wreg free
 10979  0001F4  0100               	movlb	0	; () banked
 10980  0001F6  C076  F0E0         	movff	?___wmul,sprintf@width
 10981  0001FA  0100               	movlb	0	; () banked
 10982  0001FC  C077  F0E1         	movff	?___wmul+1,sprintf@width+1
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;doprnt.c: 610: width += *f++ - '0';
 10986  000200  0100               	movlb	0	; () banked
 10987  000202  C0BD  FFF6         	movff	sprintf@f,tblptrl
 10988  000206  0100               	movlb	0	; () banked
 10989  000208  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
 10990  00020C  0008               	tblrd		*
 10991  00020E  CFF5 F0C7          	movff	tablat,??_sprintf
 10992  000212  0ED0               	movlw	208
 10993  000214  0100               	movlb	0	; () banked
 10994  000216  25C7               	addwf	??_sprintf& (0+255),w,b
 10995  000218  0100               	movlb	0	; () banked
 10996  00021A  6FC8               	movwf	(??_sprintf+1)& (0+255),b
 10997  00021C  0100               	movlb	0	; () banked
 10998  00021E  0100               	movlb	0	; () banked
 10999  000220  6BC9               	clrf	(??_sprintf+2)& (0+255),b
 11000  000222  0EFF               	movlw	255
 11001  000224  23C9               	addwfc	(??_sprintf+2)& (0+255),f,b
 11002  000226  0100               	movlb	0	; () banked
 11003  000228  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 11004  00022A  0100               	movlb	0	; () banked
 11005  00022C  0100               	movlb	0	; () banked
 11006  00022E  27E0               	addwf	sprintf@width& (0+255),f,b
 11007  000230  0100               	movlb	0	; () banked
 11008  000232  51C9               	movf	(??_sprintf+2)& (0+255),w,b
 11009  000234  0100               	movlb	0	; () banked
 11010  000236  0100               	movlb	0	; () banked
 11011  000238  23E1               	addwfc	(sprintf@width+1)& (0+255),f,b
 11012                           
 11013                           ; BSR set to: 0
 11014  00023A  0100               	movlb	0	; () banked
 11015  00023C  0100               	movlb	0	; () banked
 11016  00023E  4BBD               	infsnz	sprintf@f& (0+255),f,b
 11017  000240  2BBE               	incf	(sprintf@f+1)& (0+255),f,b
 11018                           
 11019                           ; BSR set to: 0
 11020                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 11021  000242  0100               	movlb	0	; () banked
 11022  000244  C0BD  FFF6         	movff	sprintf@f,tblptrl
 11023  000248  0100               	movlb	0	; () banked
 11024  00024A  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
 11025  00024E  0008               	tblrd		*
 11026  000250  0100               	movlb	0	; () banked
 11027  000252  CFF5 F060          	movff	tablat,?_isdigit
 11028  000256  EC42  F037         	call	_isdigit	;wreg free
 11029  00025A  A0D8               	btfss	status,0,c
 11030  00025C  D021               	goto	i2l6611
 11031  00025E  D7BD               	goto	i2l6595
 11032  000260                     i2l6603:
 11033  000260  0100               	movlb	0	; () banked
 11034  000262  C0BD  FFF6         	movff	sprintf@f,tblptrl
 11035  000266  0100               	movlb	0	; () banked
 11036  000268  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
 11037  00026C  0008               	tblrd		*
 11038  00026E  50F5               	movf	tablat,w,c
 11039  000270  0A2A               	xorlw	42
 11040  000272  A4D8               	btfss	status,2,c
 11041  000274  D015               	goto	i2l6611
 11042                           
 11043                           ; BSR set to: 0
 11044                           ;doprnt.c: 614: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 11045  000276  C0DE  FFD9         	movff	sprintf@ap,fsr2l
 11046  00027A  C0DF  FFDA         	movff	sprintf@ap+1,fsr2h
 11047  00027E  0100               	movlb	0	; () banked
 11048  000280  CFDE F0E0          	movff	postinc2,sprintf@width
 11049  000284  0100               	movlb	0	; () banked
 11050  000286  CFDD F0E1          	movff	postdec2,sprintf@width+1
 11051                           
 11052                           ; BSR set to: 0
 11053  00028A  0E02               	movlw	2
 11054  00028C  0100               	movlb	0	; () banked
 11055  00028E  0100               	movlb	0	; () banked
 11056  000290  27DE               	addwf	sprintf@ap& (0+255),f,b
 11057  000292  0E00               	movlw	0
 11058  000294  0100               	movlb	0	; () banked
 11059  000296  23DF               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11060                           
 11061                           ; BSR set to: 0
 11062                           ;doprnt.c: 615: f++;
 11063  000298  0100               	movlb	0	; () banked
 11064  00029A  0100               	movlb	0	; () banked
 11065  00029C  4BBD               	infsnz	sprintf@f& (0+255),f,b
 11066  00029E  2BBE               	incf	(sprintf@f+1)& (0+255),f,b
 11067  0002A0                     i2l6611:
 11068                           
 11069                           ;doprnt.c: 617: }
 11070                           ;doprnt.c: 620: if(*f == '.') {
 11071  0002A0  0100               	movlb	0	; () banked
 11072  0002A2  C0BD  FFF6         	movff	sprintf@f,tblptrl
 11073  0002A6  0100               	movlb	0	; () banked
 11074  0002A8  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
 11075  0002AC  0008               	tblrd		*
 11076  0002AE  50F5               	movf	tablat,w,c
 11077  0002B0  0A2E               	xorlw	46
 11078  0002B2  A4D8               	btfss	status,2,c
 11079  0002B4  D06B               	goto	i2l6631
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;doprnt.c: 621: flag |= 0x4000;
 11083  0002B6  0100               	movlb	0	; () banked
 11084  0002B8  0100               	movlb	0	; () banked
 11085  0002BA  8DE3               	bsf	(sprintf@flag+1)& (0+255),6,b
 11086                           
 11087                           ;doprnt.c: 622: f++;
 11088  0002BC  0100               	movlb	0	; () banked
 11089  0002BE  0100               	movlb	0	; () banked
 11090  0002C0  4BBD               	infsnz	sprintf@f& (0+255),f,b
 11091  0002C2  2BBE               	incf	(sprintf@f+1)& (0+255),f,b
 11092                           
 11093                           ; BSR set to: 0
 11094                           ;doprnt.c: 624: if(*f == '*') {
 11095  0002C4  0100               	movlb	0	; () banked
 11096  0002C6  C0BD  FFF6         	movff	sprintf@f,tblptrl
 11097  0002CA  0100               	movlb	0	; () banked
 11098  0002CC  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
 11099  0002D0  0008               	tblrd		*
 11100  0002D2  50F5               	movf	tablat,w,c
 11101  0002D4  0A2A               	xorlw	42
 11102  0002D6  A4D8               	btfss	status,2,c
 11103  0002D8  D016               	goto	i2l6623
 11104                           
 11105                           ; BSR set to: 0
 11106                           ;doprnt.c: 625: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 11107  0002DA  C0DE  FFD9         	movff	sprintf@ap,fsr2l
 11108  0002DE  C0DF  FFDA         	movff	sprintf@ap+1,fsr2h
 11109  0002E2  0100               	movlb	0	; () banked
 11110  0002E4  CFDE F0E9          	movff	postinc2,sprintf@prec
 11111  0002E8  0100               	movlb	0	; () banked
 11112  0002EA  CFDD F0EA          	movff	postdec2,sprintf@prec+1
 11113                           
 11114                           ; BSR set to: 0
 11115  0002EE  0E02               	movlw	2
 11116  0002F0  0100               	movlb	0	; () banked
 11117  0002F2  0100               	movlb	0	; () banked
 11118  0002F4  27DE               	addwf	sprintf@ap& (0+255),f,b
 11119  0002F6  0E00               	movlw	0
 11120  0002F8  0100               	movlb	0	; () banked
 11121  0002FA  23DF               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11122                           
 11123                           ; BSR set to: 0
 11124                           ;doprnt.c: 626: f++;
 11125  0002FC  0100               	movlb	0	; () banked
 11126  0002FE  0100               	movlb	0	; () banked
 11127  000300  4BBD               	infsnz	sprintf@f& (0+255),f,b
 11128  000302  2BBE               	incf	(sprintf@f+1)& (0+255),f,b
 11129                           
 11130                           ;doprnt.c: 627: } else
 11131  000304  D162               	goto	i2l6689
 11132  000306                     i2l6623:
 11133                           
 11134                           ; BSR set to: 0
 11135                           ;doprnt.c: 629: {
 11136                           ;doprnt.c: 630: prec = 0;
 11137  000306  0E00               	movlw	0
 11138  000308  0100               	movlb	0	; () banked
 11139  00030A  0100               	movlb	0	; () banked
 11140  00030C  6FEA               	movwf	(sprintf@prec+1)& (0+255),b
 11141  00030E  0E00               	movlw	0
 11142  000310  0100               	movlb	0	; () banked
 11143  000312  6FE9               	movwf	sprintf@prec& (0+255),b
 11144                           
 11145                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 11146  000314  D02C               	goto	i2l6629
 11147  000316                     i2l6625:
 11148                           
 11149                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 11150  000316  C0E9  F076         	movff	sprintf@prec,?___wmul
 11151  00031A  C0EA  F077         	movff	sprintf@prec+1,?___wmul+1
 11152  00031E  0E00               	movlw	0
 11153  000320  0100               	movlb	0	; () banked
 11154  000322  0100               	movlb	0	; () banked
 11155  000324  6F79               	movwf	(?___wmul+3)& (0+255),b
 11156  000326  0E0A               	movlw	10
 11157  000328  0100               	movlb	0	; () banked
 11158  00032A  6F78               	movwf	(?___wmul+2)& (0+255),b
 11159  00032C  EC31  F035         	call	___wmul	;wreg free
 11160  000330  0100               	movlb	0	; () banked
 11161  000332  C0BD  FFF6         	movff	sprintf@f,tblptrl
 11162  000336  0100               	movlb	0	; () banked
 11163  000338  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
 11164  00033C  0008               	tblrd		*
 11165  00033E  50F5               	movf	tablat,w,c
 11166  000340  0100               	movlb	0	; () banked
 11167  000342  0100               	movlb	0	; () banked
 11168  000344  2776               	addwf	?___wmul& (0+255),f,b
 11169  000346  0E00               	movlw	0
 11170  000348  0100               	movlb	0	; () banked
 11171  00034A  2377               	addwfc	(?___wmul+1)& (0+255),f,b
 11172  00034C  0ED0               	movlw	208
 11173  00034E  0100               	movlb	0	; () banked
 11174  000350  0100               	movlb	0	; () banked
 11175  000352  2576               	addwf	?___wmul& (0+255),w,b
 11176  000354  0100               	movlb	0	; () banked
 11177  000356  0100               	movlb	0	; () banked
 11178  000358  6FE9               	movwf	sprintf@prec& (0+255),b
 11179  00035A  0EFF               	movlw	255
 11180  00035C  0100               	movlb	0	; () banked
 11181  00035E  0100               	movlb	0	; () banked
 11182  000360  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 11183  000362  0100               	movlb	0	; () banked
 11184  000364  6FEA               	movwf	(sprintf@prec+1)& (0+255),b
 11185                           
 11186                           ; BSR set to: 0
 11187  000366  0100               	movlb	0	; () banked
 11188  000368  0100               	movlb	0	; () banked
 11189  00036A  4BBD               	infsnz	sprintf@f& (0+255),f,b
 11190  00036C  2BBE               	incf	(sprintf@f+1)& (0+255),f,b
 11191  00036E                     i2l6629:
 11192                           
 11193                           ; BSR set to: 0
 11194  00036E  0100               	movlb	0	; () banked
 11195  000370  C0BD  FFF6         	movff	sprintf@f,tblptrl
 11196  000374  0100               	movlb	0	; () banked
 11197  000376  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
 11198  00037A  0008               	tblrd		*
 11199  00037C  0100               	movlb	0	; () banked
 11200  00037E  CFF5 F060          	movff	tablat,?_isdigit
 11201  000382  EC42  F037         	call	_isdigit	;wreg free
 11202  000386  A0D8               	btfss	status,0,c
 11203  000388  D120               	goto	i2l6689
 11204  00038A  D7C5               	goto	i2l6625
 11205  00038C                     i2l6631:
 11206                           
 11207                           ;doprnt.c: 635: prec = 0;
 11208  00038C  0E00               	movlw	0
 11209  00038E  0100               	movlb	0	; () banked
 11210  000390  0100               	movlb	0	; () banked
 11211  000392  6FEA               	movwf	(sprintf@prec+1)& (0+255),b
 11212  000394  0E00               	movlw	0
 11213  000396  0100               	movlb	0	; () banked
 11214  000398  6FE9               	movwf	sprintf@prec& (0+255),b
 11215                           
 11216                           ; BSR set to: 0
 11217                           ;doprnt.c: 637: flag |= 0x1000;
 11218  00039A  0100               	movlb	0	; () banked
 11219  00039C  0100               	movlb	0	; () banked
 11220  00039E  89E3               	bsf	(sprintf@flag+1)& (0+255),4,b
 11221  0003A0  D114               	goto	i2l6689
 11222  0003A2                     i2l6635:
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;doprnt.c: 652: flag |= 0x10;
 11226  0003A2  0100               	movlb	0	; () banked
 11227  0003A4  0100               	movlb	0	; () banked
 11228  0003A6  89E2               	bsf	sprintf@flag& (0+255),4,b
 11229                           
 11230                           ;doprnt.c: 653: goto loop;
 11231  0003A8  D110               	goto	i2l6689
 11232  0003AA                     i2l6637:
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;doprnt.c: 672: flag |= 0x400;
 11236  0003AA  0100               	movlb	0	; () banked
 11237  0003AC  0100               	movlb	0	; () banked
 11238  0003AE  85E3               	bsf	(sprintf@flag+1)& (0+255),2,b
 11239                           
 11240                           ;doprnt.c: 673: break;
 11241  0003B0  D136               	goto	i2l6691
 11242  0003B2                     i2l6639:
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;doprnt.c: 692: flag |= 0x200;
 11246  0003B2  0100               	movlb	0	; () banked
 11247  0003B4  0100               	movlb	0	; () banked
 11248  0003B6  83E3               	bsf	(sprintf@flag+1)& (0+255),1,b
 11249                           
 11250                           ;doprnt.c: 693: break;
 11251  0003B8  D132               	goto	i2l6691
 11252  0003BA                     i2l6641:
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
 11256  0003BA  C0DE  FFD9         	movff	sprintf@ap,fsr2l
 11257  0003BE  C0DF  FFDA         	movff	sprintf@ap+1,fsr2h
 11258  0003C2  0100               	movlb	0	; () banked
 11259  0003C4  CFDE F0EB          	movff	postinc2,sprintf@_val
 11260  0003C8  0100               	movlb	0	; () banked
 11261  0003CA  CFDD F0EC          	movff	postdec2,sprintf@_val+1
 11262                           
 11263                           ; BSR set to: 0
 11264  0003CE  0E02               	movlw	2
 11265  0003D0  0100               	movlb	0	; () banked
 11266  0003D2  0100               	movlb	0	; () banked
 11267  0003D4  27DE               	addwf	sprintf@ap& (0+255),f,b
 11268  0003D6  0E00               	movlw	0
 11269  0003D8  0100               	movlb	0	; () banked
 11270  0003DA  23DF               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11271                           
 11272                           ; BSR set to: 0
 11273                           ;doprnt.c: 749: if(!_val._str._cp)
 11274  0003DC  0100               	movlb	0	; () banked
 11275  0003DE  0100               	movlb	0	; () banked
 11276  0003E0  51EC               	movf	(sprintf@_val+1)& (0+255),w,b
 11277  0003E2  11EB               	iorwf	sprintf@_val& (0+255),w,b
 11278  0003E4  A4D8               	btfss	status,2,c
 11279  0003E6  D007               	goto	i2l681
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;doprnt.c: 750: _val._str._cp = "(null)";
 11283  0003E8  0E7F               	movlw	high STR_22
 11284  0003EA  0100               	movlb	0	; () banked
 11285  0003EC  0100               	movlb	0	; () banked
 11286  0003EE  6FEC               	movwf	(sprintf@_val+1)& (0+255),b
 11287  0003F0  0EDE               	movlw	low STR_22
 11288  0003F2  0100               	movlb	0	; () banked
 11289  0003F4  6FEB               	movwf	sprintf@_val& (0+255),b
 11290  0003F6                     i2l681:
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;doprnt.c: 754: _val._str._len = 0;
 11294  0003F6  0E00               	movlw	0
 11295  0003F8  0100               	movlb	0	; () banked
 11296  0003FA  0100               	movlb	0	; () banked
 11297  0003FC  6FEE               	movwf	(sprintf@_val+3)& (0+255),b
 11298  0003FE  0E00               	movlw	0
 11299  000400  0100               	movlb	0	; () banked
 11300  000402  6FED               	movwf	(sprintf@_val+2)& (0+255),b
 11301                           
 11302                           ;doprnt.c: 755: while(_val._str._cp[_val._str._len])
 11303  000404  D004               	goto	i2l6651
 11304  000406                     i2l6649:
 11305                           
 11306                           ;doprnt.c: 756: _val._str._len++;
 11307  000406  0100               	movlb	0	; () banked
 11308  000408  0100               	movlb	0	; () banked
 11309  00040A  4BED               	infsnz	(sprintf@_val+2)& (0+255),f,b
 11310  00040C  2BEE               	incf	(sprintf@_val+3)& (0+255),f,b
 11311  00040E                     i2l6651:
 11312                           
 11313                           ; BSR set to: 0
 11314  00040E  0100               	movlb	0	; () banked
 11315  000410  C0EB  F0C7         	movff	sprintf@_val,??_sprintf
 11316  000414  0100               	movlb	0	; () banked
 11317  000416  C0EC  F0C8         	movff	sprintf@_val+1,??_sprintf+1
 11318  00041A  0100               	movlb	0	; () banked
 11319  00041C  0100               	movlb	0	; () banked
 11320  00041E  51ED               	movf	(sprintf@_val+2)& (0+255),w,b
 11321  000420  0100               	movlb	0	; () banked
 11322  000422  27C7               	addwf	??_sprintf& (0+255),f,b
 11323  000424  0100               	movlb	0	; () banked
 11324  000426  0100               	movlb	0	; () banked
 11325  000428  51EE               	movf	(sprintf@_val+3)& (0+255),w,b
 11326  00042A  0100               	movlb	0	; () banked
 11327  00042C  23C8               	addwfc	(??_sprintf+1)& (0+255),f,b
 11328  00042E  0100               	movlb	0	; () banked
 11329  000430  51C7               	movf	??_sprintf& (0+255),w,b
 11330  000432  6EF6               	movwf	tblptrl,c
 11331  000434  6EE9               	movwf	fsr0l,c
 11332  000436  0E07               	movlw	(high __ramtop+-1)
 11333  000438  6EEA               	movwf	fsr0h,c
 11334  00043A  0100               	movlb	0	; () banked
 11335  00043C  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 11336  00043E  64EA               	cpfsgt	fsr0h,c
 11337  000440  D003               	bra	i2u416_47
 11338  000442  6EEA               	movwf	fsr0h,c
 11339  000444  50EF               	movf	indf0,w,c
 11340  000446  D003               	bra	i2u416_40
 11341  000448                     i2u416_47:
 11342  000448  6EF7               	movwf	tblptrh,c
 11343  00044A  0008               	tblrd		*
 11344  00044C  50F5               	movf	tablat,w,c
 11345  00044E                     i2u416_40:
 11346  00044E  0900               	iorlw	0
 11347  000450  A4D8               	btfss	status,2,c
 11348  000452  D7D9               	goto	i2l6649
 11349  000454                     i2l6653:
 11350                           
 11351                           ;doprnt.c: 762: if(prec && prec < _val._str._len)
 11352  000454  0100               	movlb	0	; () banked
 11353  000456  0100               	movlb	0	; () banked
 11354  000458  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 11355  00045A  11E9               	iorwf	sprintf@prec& (0+255),w,b
 11356  00045C  B4D8               	btfsc	status,2,c
 11357  00045E  D012               	goto	i2l6659
 11358                           
 11359                           ; BSR set to: 0
 11360  000460  0100               	movlb	0	; () banked
 11361  000462  0100               	movlb	0	; () banked
 11362  000464  51ED               	movf	(sprintf@_val+2)& (0+255),w,b
 11363  000466  0100               	movlb	0	; () banked
 11364  000468  0100               	movlb	0	; () banked
 11365  00046A  5DE9               	subwf	sprintf@prec& (0+255),w,b
 11366  00046C  0100               	movlb	0	; () banked
 11367  00046E  0100               	movlb	0	; () banked
 11368  000470  51EE               	movf	(sprintf@_val+3)& (0+255),w,b
 11369  000472  0100               	movlb	0	; () banked
 11370  000474  0100               	movlb	0	; () banked
 11371  000476  59EA               	subwfb	(sprintf@prec+1)& (0+255),w,b
 11372  000478  B0D8               	btfsc	status,0,c
 11373  00047A  D004               	goto	i2l6659
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;doprnt.c: 763: _val._str._len = prec;
 11377  00047C  C0E9  F0ED         	movff	sprintf@prec,sprintf@_val+2
 11378  000480  C0EA  F0EE         	movff	sprintf@prec+1,sprintf@_val+3
 11379  000484                     i2l6659:
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;doprnt.c: 766: if(width > _val._str._len)
 11383  000484  0100               	movlb	0	; () banked
 11384  000486  0100               	movlb	0	; () banked
 11385  000488  51E0               	movf	sprintf@width& (0+255),w,b
 11386  00048A  0100               	movlb	0	; () banked
 11387  00048C  0100               	movlb	0	; () banked
 11388  00048E  5DED               	subwf	(sprintf@_val+2)& (0+255),w,b
 11389  000490  0100               	movlb	0	; () banked
 11390  000492  0100               	movlb	0	; () banked
 11391  000494  51E1               	movf	(sprintf@width+1)& (0+255),w,b
 11392  000496  0100               	movlb	0	; () banked
 11393  000498  0100               	movlb	0	; () banked
 11394  00049A  59EE               	subwfb	(sprintf@_val+3)& (0+255),w,b
 11395  00049C  B0D8               	btfsc	status,0,c
 11396  00049E  D00C               	goto	i2l6663
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;doprnt.c: 767: width -= _val._str._len;
 11400  0004A0  0100               	movlb	0	; () banked
 11401  0004A2  EE20  F0ED         	lfsr	2,sprintf@_val+2
 11402  0004A6  50DE               	movf	postinc2,w,c
 11403  0004A8  0100               	movlb	0	; () banked
 11404  0004AA  0100               	movlb	0	; () banked
 11405  0004AC  5FE0               	subwf	sprintf@width& (0+255),f,b
 11406  0004AE  50DD               	movf	postdec2,w,c
 11407  0004B0  0100               	movlb	0	; () banked
 11408  0004B2  0100               	movlb	0	; () banked
 11409  0004B4  5BE1               	subwfb	(sprintf@width+1)& (0+255),f,b
 11410  0004B6  D020               	goto	i2l6669
 11411  0004B8                     i2l6663:
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;doprnt.c: 768: else
 11415                           ;doprnt.c: 769: width = 0;
 11416  0004B8  0E00               	movlw	0
 11417  0004BA  0100               	movlb	0	; () banked
 11418  0004BC  0100               	movlb	0	; () banked
 11419  0004BE  6FE1               	movwf	(sprintf@width+1)& (0+255),b
 11420  0004C0  0E00               	movlw	0
 11421  0004C2  0100               	movlb	0	; () banked
 11422  0004C4  6FE0               	movwf	sprintf@width& (0+255),b
 11423  0004C6  D018               	goto	i2l6669
 11424  0004C8                     i2l6665:
 11425                           
 11426                           ; BSR set to: 0
 11427                           ;doprnt.c: 774: ((*sp++ = (' ')));
 11428  0004C8  0100               	movlb	0	; () banked
 11429  0004CA  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 11430  0004CE  0100               	movlb	0	; () banked
 11431  0004D0  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 11432  0004D4  6AF8               	clrf	tblptru,c
 11433  0004D6  0E07               	movlw	(high __ramtop+-1)
 11434  0004D8  64F7               	cpfsgt	tblptrh,c
 11435  0004DA  D004               	bra	i2u421_47
 11436  0004DC  0E20               	movlw	32
 11437  0004DE  6EF5               	movwf	tablat,c
 11438  0004E0  000C               	tblwt		*
 11439  0004E2  D006               	bra	i2u421_40
 11440  0004E4                     i2u421_47:
 11441  0004E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 11442  0004E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 11443  0004EC  0E20               	movlw	32
 11444  0004EE  6EEF               	movwf	indf0,c
 11445  0004F0                     i2u421_40:
 11446  0004F0  0100               	movlb	0	; () banked
 11447  0004F2  0100               	movlb	0	; () banked
 11448  0004F4  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 11449  0004F6  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 11450  0004F8                     i2l6669:
 11451                           
 11452                           ; BSR set to: 0
 11453  0004F8  0100               	movlb	0	; () banked
 11454  0004FA  0100               	movlb	0	; () banked
 11455  0004FC  07E0               	decf	sprintf@width& (0+255),f,b
 11456  0004FE  A0D8               	btfss	status,0,c
 11457  000500  07E1               	decf	(sprintf@width+1)& (0+255),f,b
 11458  000502  0100               	movlb	0	; () banked
 11459  000504  29E0               	incf	sprintf@width& (0+255),w,b
 11460  000506  B4D8               	btfsc	status,2,c
 11461  000508  29E1               	incf	(sprintf@width+1)& (0+255),w,b
 11462  00050A  B4D8               	btfsc	status,2,c
 11463  00050C  D031               	goto	i2l6677
 11464  00050E  D7DC               	goto	i2l6665
 11465  000510                     i2l6671:
 11466                           
 11467                           ; BSR set to: 0
 11468                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
 11469  000510  0100               	movlb	0	; () banked
 11470  000512  0100               	movlb	0	; () banked
 11471  000514  51EB               	movf	sprintf@_val& (0+255),w,b
 11472  000516  6EF6               	movwf	tblptrl,c
 11473  000518  6EE9               	movwf	fsr0l,c
 11474  00051A  0E07               	movlw	(high __ramtop+-1)
 11475  00051C  6EEA               	movwf	fsr0h,c
 11476  00051E  0100               	movlb	0	; () banked
 11477  000520  0100               	movlb	0	; () banked
 11478  000522  51EC               	movf	(sprintf@_val+1)& (0+255),w,b
 11479  000524  64EA               	cpfsgt	fsr0h,c
 11480  000526  D003               	bra	i2u423_47
 11481  000528  6EEA               	movwf	fsr0h,c
 11482  00052A  50EF               	movf	indf0,w,c
 11483  00052C  D003               	bra	i2u423_40
 11484  00052E                     i2u423_47:
 11485  00052E  6EF7               	movwf	tblptrh,c
 11486  000530  0008               	tblrd		*
 11487  000532  50F5               	movf	tablat,w,c
 11488  000534                     i2u423_40:
 11489  000534  0100               	movlb	0	; () banked
 11490  000536  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 11491  00053A  0100               	movlb	0	; () banked
 11492  00053C  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 11493  000540  6AF8               	clrf	tblptru,c
 11494  000542  0100               	movlb	0	; () banked
 11495  000544  6FC7               	movwf	??_sprintf& (0+255),b
 11496  000546  0E07               	movlw	(high __ramtop+-1)
 11497  000548  64F7               	cpfsgt	tblptrh,c
 11498  00054A  D004               	bra	i2u424_47
 11499  00054C  C0C7  FFF5         	movff	??_sprintf,tablat
 11500  000550  000C               	tblwt		*
 11501  000552  D006               	bra	i2u424_40
 11502  000554                     i2u424_47:
 11503  000554  CFF6 FFE9          	movff	tblptrl,fsr0l
 11504  000558  CFF7 FFEA          	movff	tblptrh,fsr0h
 11505  00055C  C0C7  FFEF         	movff	??_sprintf,indf0
 11506  000560                     i2u424_40:
 11507  000560  0100               	movlb	0	; () banked
 11508  000562  0100               	movlb	0	; () banked
 11509  000564  4BEB               	infsnz	sprintf@_val& (0+255),f,b
 11510  000566  2BEC               	incf	(sprintf@_val+1)& (0+255),f,b
 11511                           
 11512                           ; BSR set to: 0
 11513  000568  0100               	movlb	0	; () banked
 11514  00056A  0100               	movlb	0	; () banked
 11515  00056C  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 11516  00056E  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 11517  000570                     i2l6677:
 11518                           
 11519                           ; BSR set to: 0
 11520  000570  0100               	movlb	0	; () banked
 11521  000572  0100               	movlb	0	; () banked
 11522  000574  07ED               	decf	(sprintf@_val+2)& (0+255),f,b
 11523  000576  A0D8               	btfss	status,0,c
 11524  000578  07EE               	decf	(sprintf@_val+3)& (0+255),f,b
 11525  00057A  0100               	movlb	0	; () banked
 11526  00057C  29ED               	incf	(sprintf@_val+2)& (0+255),w,b
 11527  00057E  B4D8               	btfsc	status,2,c
 11528  000580  29EE               	incf	(sprintf@_val+3)& (0+255),w,b
 11529  000582  B4D8               	btfsc	status,2,c
 11530  000584  EFF9  F00E         	goto	i2l7135
 11531  000588  D7C3               	goto	i2l6671
 11532  00058A                     i2l6679:
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;doprnt.c: 808: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 11536  00058A  C0DE  FFD9         	movff	sprintf@ap,fsr2l
 11537  00058E  C0DF  FFDA         	movff	sprintf@ap+1,fsr2h
 11538  000592  50DF               	movf	indf2,w,c
 11539  000594  0100               	movlb	0	; () banked
 11540  000596  0100               	movlb	0	; () banked
 11541  000598  6FEF               	movwf	sprintf@c& (0+255),b
 11542                           
 11543                           ; BSR set to: 0
 11544  00059A  0E02               	movlw	2
 11545  00059C  0100               	movlb	0	; () banked
 11546  00059E  0100               	movlb	0	; () banked
 11547  0005A0  27DE               	addwf	sprintf@ap& (0+255),f,b
 11548  0005A2  0E00               	movlw	0
 11549  0005A4  0100               	movlb	0	; () banked
 11550  0005A6  23DF               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11551  0005A8                     i2l6683:
 11552                           
 11553                           ; BSR set to: 0
 11554                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
 11555  0005A8  0100               	movlb	0	; () banked
 11556  0005AA  0E00               	movlw	high sprintf@c
 11557  0005AC  0100               	movlb	0	; () banked
 11558  0005AE  0100               	movlb	0	; () banked
 11559  0005B0  6FEC               	movwf	(sprintf@_val+1)& (0+255),b
 11560  0005B2  0100               	movlb	0	; () banked
 11561  0005B4  0EEF               	movlw	low sprintf@c
 11562  0005B6  0100               	movlb	0	; () banked
 11563  0005B8  6FEB               	movwf	sprintf@_val& (0+255),b
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;doprnt.c: 815: _val._str._len = 1;
 11567  0005BA  0E00               	movlw	0
 11568  0005BC  0100               	movlb	0	; () banked
 11569  0005BE  0100               	movlb	0	; () banked
 11570  0005C0  6FEE               	movwf	(sprintf@_val+3)& (0+255),b
 11571  0005C2  0E01               	movlw	1
 11572  0005C4  0100               	movlb	0	; () banked
 11573  0005C6  6FED               	movwf	(sprintf@_val+2)& (0+255),b
 11574                           
 11575                           ;doprnt.c: 816: goto dostring;
 11576  0005C8  D745               	goto	i2l6653
 11577  0005CA                     i2l6689:
 11578  0005CA  0100               	movlb	0	; () banked
 11579  0005CC  C0BD  FFF6         	movff	sprintf@f,tblptrl
 11580  0005D0  0100               	movlb	0	; () banked
 11581  0005D2  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
 11582  0005D6  0100               	movlb	0	; () banked
 11583  0005D8  0100               	movlb	0	; () banked
 11584  0005DA  4BBD               	infsnz	sprintf@f& (0+255),f,b
 11585  0005DC  2BBE               	incf	(sprintf@f+1)& (0+255),f,b
 11586  0005DE  0008               	tblrd		*
 11587  0005E0  0100               	movlb	0	; () banked
 11588  0005E2  CFF5 F0EF          	movff	tablat,sprintf@c
 11589  0005E6  0100               	movlb	0	; () banked
 11590  0005E8  51EF               	movf	sprintf@c& (0+255),w,b
 11591                           
 11592                           ; Switch size 1, requested type "space"
 11593                           ; Number of cases is 8, Range of values is 0 to 115
 11594                           ; switch strategies available:
 11595                           ; Name         Instructions Cycles
 11596                           ; simple_byte           25    13 (average)
 11597                           ;	Chosen strategy is simple_byte
 11598  0005EA  0A00               	xorlw	0	; case 0
 11599  0005EC  B4D8               	btfsc	status,2,c
 11600  0005EE  EF0B  F00F         	goto	i2l7137
 11601  0005F2  0A63               	xorlw	99	; case 99
 11602  0005F4  B4D8               	btfsc	status,2,c
 11603  0005F6  D7C9               	goto	i2l6679
 11604  0005F8  0A07               	xorlw	7	; case 100
 11605  0005FA  B4D8               	btfsc	status,2,c
 11606  0005FC  D010               	goto	i2l6691
 11607  0005FE  0A02               	xorlw	2	; case 102
 11608  000600  B4D8               	btfsc	status,2,c
 11609  000602  D6D3               	goto	i2l6637
 11610  000604  0A01               	xorlw	1	; case 103
 11611  000606  B4D8               	btfsc	status,2,c
 11612  000608  D6D4               	goto	i2l6639
 11613  00060A  0A0E               	xorlw	14	; case 105
 11614  00060C  B4D8               	btfsc	status,2,c
 11615  00060E  D007               	goto	i2l6691
 11616  000610  0A05               	xorlw	5	; case 108
 11617  000612  B4D8               	btfsc	status,2,c
 11618  000614  D6C6               	goto	i2l6635
 11619  000616  0A1F               	xorlw	31	; case 115
 11620  000618  B4D8               	btfsc	status,2,c
 11621  00061A  D6CF               	goto	i2l6641
 11622  00061C  D7C5               	goto	i2l6683
 11623  00061E                     i2l6691:
 11624                           
 11625                           ; BSR set to: 0
 11626                           ;doprnt.c: 834: if(flag & (0x700)) {
 11627  00061E  0E07               	movlw	7
 11628  000620  0100               	movlb	0	; () banked
 11629  000622  0100               	movlb	0	; () banked
 11630  000624  15E3               	andwf	(sprintf@flag+1)& (0+255),w,b
 11631  000626  B4D8               	btfsc	status,2,c
 11632  000628  EFB7  F00C         	goto	i2l697
 11633                           
 11634                           ; BSR set to: 0
 11635                           ;doprnt.c: 836: if(flag & 0x1000)
 11636  00062C  0100               	movlb	0	; () banked
 11637  00062E  0100               	movlb	0	; () banked
 11638  000630  A9E3               	btfss	(sprintf@flag+1)& (0+255),4,b
 11639  000632  D007               	goto	i2l6697
 11640                           
 11641                           ; BSR set to: 0
 11642                           ;doprnt.c: 838: prec = 6;
 11643  000634  0E00               	movlw	0
 11644  000636  0100               	movlb	0	; () banked
 11645  000638  0100               	movlb	0	; () banked
 11646  00063A  6FEA               	movwf	(sprintf@prec+1)& (0+255),b
 11647  00063C  0E06               	movlw	6
 11648  00063E  0100               	movlb	0	; () banked
 11649  000640  6FE9               	movwf	sprintf@prec& (0+255),b
 11650  000642                     i2l6697:
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 11654  000642  C0DE  FFD9         	movff	sprintf@ap,fsr2l
 11655  000646  C0DF  FFDA         	movff	sprintf@ap+1,fsr2h
 11656  00064A  0100               	movlb	0	; () banked
 11657  00064C  CFDE F0E6          	movff	postinc2,sprintf@fval
 11658  000650  0100               	movlb	0	; () banked
 11659  000652  CFDE F0E7          	movff	postinc2,sprintf@fval+1
 11660  000656  0100               	movlb	0	; () banked
 11661  000658  CFDD F0E8          	movff	postdec2,sprintf@fval+2
 11662                           
 11663                           ; BSR set to: 0
 11664  00065C  0E03               	movlw	3
 11665  00065E  0100               	movlb	0	; () banked
 11666  000660  0100               	movlb	0	; () banked
 11667  000662  27DE               	addwf	sprintf@ap& (0+255),f,b
 11668  000664  0E00               	movlw	0
 11669  000666  0100               	movlb	0	; () banked
 11670  000668  23DF               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11671                           
 11672                           ; BSR set to: 0
 11673                           ;doprnt.c: 840: if(fval < 0.0) {
 11674  00066A  0100               	movlb	0	; () banked
 11675  00066C  0100               	movlb	0	; () banked
 11676  00066E  51E8               	movf	(sprintf@fval+2)& (0+255),w,b
 11677  000670  0A80               	xorlw	128
 11678  000672  0F80               	addlw	128
 11679  000674  E107               	bnz	i2u428_45
 11680  000676  0E00               	movlw	0
 11681  000678  0100               	movlb	0	; () banked
 11682  00067A  5DE7               	subwf	(sprintf@fval+1)& (0+255),w,b
 11683  00067C  E103               	bnz	i2u428_45
 11684  00067E  0E00               	movlw	0
 11685  000680  0100               	movlb	0	; () banked
 11686  000682  5DE6               	subwf	sprintf@fval& (0+255),w,b
 11687  000684                     i2u428_45:
 11688  000684  B0D8               	btfsc	status,0,c
 11689  000686  D012               	goto	i2l6707
 11690                           
 11691                           ; BSR set to: 0
 11692                           ;doprnt.c: 841: fval = -fval;
 11693  000688  C0E6  F08D         	movff	sprintf@fval,?___ftneg
 11694  00068C  C0E7  F08E         	movff	sprintf@fval+1,?___ftneg+1
 11695  000690  C0E8  F08F         	movff	sprintf@fval+2,?___ftneg+2
 11696  000694  EC7F  F037         	call	___ftneg	;wreg free
 11697  000698  C08F  F0E8         	movff	?___ftneg+2,sprintf@fval+2
 11698  00069C  C08E  F0E7         	movff	?___ftneg+1,sprintf@fval+1
 11699  0006A0  C08D  F0E6         	movff	?___ftneg,sprintf@fval
 11700                           
 11701                           ;doprnt.c: 842: flag |= 0x03;
 11702  0006A4  0E03               	movlw	3
 11703  0006A6  0100               	movlb	0	; () banked
 11704  0006A8  0100               	movlb	0	; () banked
 11705  0006AA  13E2               	iorwf	sprintf@flag& (0+255),f,b
 11706  0006AC                     i2l6707:
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;doprnt.c: 843: }
 11710                           ;doprnt.c: 844: exp = 0;
 11711  0006AC  0E00               	movlw	0
 11712  0006AE  0100               	movlb	0	; () banked
 11713  0006B0  0100               	movlb	0	; () banked
 11714  0006B2  6FE5               	movwf	(sprintf@exp+1)& (0+255),b
 11715  0006B4  0E00               	movlw	0
 11716  0006B6  0100               	movlb	0	; () banked
 11717  0006B8  6FE4               	movwf	sprintf@exp& (0+255),b
 11718                           
 11719                           ; BSR set to: 0
 11720                           ;doprnt.c: 845: if( fval!=0) {
 11721  0006BA  0E7F               	movlw	127
 11722  0006BC  0100               	movlb	0	; () banked
 11723  0006BE  0100               	movlb	0	; () banked
 11724  0006C0  15E8               	andwf	(sprintf@fval+2)& (0+255),w,b
 11725  0006C2  0100               	movlb	0	; () banked
 11726  0006C4  11E7               	iorwf	(sprintf@fval+1)& (0+255),w,b
 11727  0006C6  0100               	movlb	0	; () banked
 11728  0006C8  11E6               	iorwf	sprintf@fval& (0+255),w,b
 11729  0006CA  B4D8               	btfsc	status,2,c
 11730  0006CC  D0B1               	goto	i2l6735
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 11734  0006CE  0E82               	movlw	130
 11735  0006D0  0100               	movlb	0	; () banked
 11736  0006D2  6FC7               	movwf	??_sprintf& (0+255),b
 11737  0006D4  0EFF               	movlw	255
 11738  0006D6  6FC8               	movwf	(??_sprintf+1)& (0+255),b
 11739  0006D8  0100               	movlb	0	; () banked
 11740  0006DA  C0E6  F0C9         	movff	sprintf@fval,??_sprintf+2
 11741  0006DE  0100               	movlb	0	; () banked
 11742  0006E0  C0E7  F0CA         	movff	sprintf@fval+1,??_sprintf+3
 11743  0006E4  0100               	movlb	0	; () banked
 11744  0006E6  C0E8  F0CB         	movff	sprintf@fval+2,??_sprintf+4
 11745  0006EA  0100               	movlb	0	; () banked
 11746  0006EC  C0E9  F0CC         	movff	sprintf@fval+3,??_sprintf+5
 11747  0006F0  0E10               	movlw	16
 11748  0006F2  D006               	goto	i2u430_40
 11749  0006F4                     i2u430_45:
 11750  0006F4  0100               	movlb	0	; () banked
 11751  0006F6  90D8               	bcf	status,0,c
 11752  0006F8  33CC               	rrcf	(??_sprintf+5)& (0+255),f,b
 11753  0006FA  33CB               	rrcf	(??_sprintf+4)& (0+255),f,b
 11754  0006FC  33CA               	rrcf	(??_sprintf+3)& (0+255),f,b
 11755  0006FE  33C9               	rrcf	(??_sprintf+2)& (0+255),f,b
 11756  000700                     i2u430_40:
 11757  000700  2EE8               	decfsz	wreg,f,c
 11758  000702  D7F8               	goto	i2u430_45
 11759  000704  0100               	movlb	0	; () banked
 11760  000706  51C9               	movf	(??_sprintf+2)& (0+255),w,b
 11761  000708  0100               	movlb	0	; () banked
 11762  00070A  25C7               	addwf	??_sprintf& (0+255),w,b
 11763  00070C  0100               	movlb	0	; () banked
 11764  00070E  0100               	movlb	0	; () banked
 11765  000710  6FE4               	movwf	sprintf@exp& (0+255),b
 11766  000712  0100               	movlb	0	; () banked
 11767  000714  0100               	movlb	0	; () banked
 11768  000716  0E00               	movlw	0
 11769  000718  21C8               	addwfc	(??_sprintf+1)& (0+255),w,b
 11770  00071A  6FE5               	movwf	(sprintf@exp+1)& (0+255),b
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;doprnt.c: 847: exp--;
 11774  00071C  0100               	movlb	0	; () banked
 11775  00071E  0100               	movlb	0	; () banked
 11776  000720  07E4               	decf	sprintf@exp& (0+255),f,b
 11777  000722  A0D8               	btfss	status,0,c
 11778  000724  07E5               	decf	(sprintf@exp+1)& (0+255),f,b
 11779                           
 11780                           ; BSR set to: 0
 11781                           ;doprnt.c: 848: exp *= 3;
 11782  000726  C0E4  F076         	movff	sprintf@exp,?___wmul
 11783  00072A  C0E5  F077         	movff	sprintf@exp+1,?___wmul+1
 11784  00072E  0E00               	movlw	0
 11785  000730  0100               	movlb	0	; () banked
 11786  000732  0100               	movlb	0	; () banked
 11787  000734  6F79               	movwf	(?___wmul+3)& (0+255),b
 11788  000736  0E03               	movlw	3
 11789  000738  0100               	movlb	0	; () banked
 11790  00073A  6F78               	movwf	(?___wmul+2)& (0+255),b
 11791  00073C  EC31  F035         	call	___wmul	;wreg free
 11792  000740  0100               	movlb	0	; () banked
 11793  000742  C076  F0E4         	movff	?___wmul,sprintf@exp
 11794  000746  0100               	movlb	0	; () banked
 11795  000748  C077  F0E5         	movff	?___wmul+1,sprintf@exp+1
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;doprnt.c: 849: exp /= 10;
 11799  00074C  C0E4  F069         	movff	sprintf@exp,?___awdiv
 11800  000750  C0E5  F06A         	movff	sprintf@exp+1,?___awdiv+1
 11801  000754  0E00               	movlw	0
 11802  000756  0100               	movlb	0	; () banked
 11803  000758  0100               	movlb	0	; () banked
 11804  00075A  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 11805  00075C  0E0A               	movlw	10
 11806  00075E  0100               	movlb	0	; () banked
 11807  000760  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 11808  000762  EC1A  F02C         	call	___awdiv	;wreg free
 11809  000766  0100               	movlb	0	; () banked
 11810  000768  C069  F0E4         	movff	?___awdiv,sprintf@exp
 11811  00076C  0100               	movlb	0	; () banked
 11812  00076E  C06A  F0E5         	movff	?___awdiv+1,sprintf@exp+1
 11813                           
 11814                           ; BSR set to: 0
 11815                           ;doprnt.c: 850: if(exp < 0)
 11816  000772  0100               	movlb	0	; () banked
 11817  000774  0100               	movlb	0	; () banked
 11818  000776  AFE5               	btfss	(sprintf@exp+1)& (0+255),7,b
 11819  000778  D005               	goto	i2l6723
 11820                           
 11821                           ; BSR set to: 0
 11822                           ;doprnt.c: 851: exp--;
 11823  00077A  0100               	movlb	0	; () banked
 11824  00077C  0100               	movlb	0	; () banked
 11825  00077E  07E4               	decf	sprintf@exp& (0+255),f,b
 11826  000780  A0D8               	btfss	status,0,c
 11827  000782  07E5               	decf	(sprintf@exp+1)& (0+255),f,b
 11828  000784                     i2l6723:
 11829                           
 11830                           ; BSR set to: 0
 11831                           ;doprnt.c: 855: integ = scale(-exp);
 11832  000784  0100               	movlb	0	; () banked
 11833  000786  0100               	movlb	0	; () banked
 11834  000788  51E4               	movf	sprintf@exp& (0+255),w,b
 11835  00078A  0800               	sublw	0
 11836  00078C  0100               	movlb	0	; () banked
 11837  00078E  0100               	movlb	0	; () banked
 11838  000790  6F9E               	movwf	?_scale& (0+255),b
 11839  000792  EC54  F012         	call	_scale	;wreg free
 11840  000796  C0A0  F0DD         	movff	?_scale+2,sprintf@integ+2
 11841  00079A  C09F  F0DC         	movff	?_scale+1,sprintf@integ+1
 11842  00079E  C09E  F0DB         	movff	?_scale,sprintf@integ
 11843                           
 11844                           ;doprnt.c: 856: integ *= fval;
 11845  0007A2  0100               	movlb	0	; () banked
 11846  0007A4  0E00               	movlw	high sprintf@integ
 11847  0007A6  0100               	movlb	0	; () banked
 11848  0007A8  0100               	movlb	0	; () banked
 11849  0007AA  6FB1               	movwf	(?___asftmul+1)& (0+255),b
 11850  0007AC  0100               	movlb	0	; () banked
 11851  0007AE  0EDB               	movlw	low sprintf@integ
 11852  0007B0  0100               	movlb	0	; () banked
 11853  0007B2  6FB0               	movwf	?___asftmul& (0+255),b
 11854  0007B4  C0E6  F0B2         	movff	sprintf@fval,?___asftmul+2
 11855  0007B8  C0E7  F0B3         	movff	sprintf@fval+1,?___asftmul+3
 11856  0007BC  C0E8  F0B4         	movff	sprintf@fval+2,?___asftmul+4
 11857  0007C0  ECDF  F036         	call	___asftmul	;wreg free
 11858                           
 11859                           ;doprnt.c: 857: if(integ < 1.0)
 11860  0007C4  C0DB  F090         	movff	sprintf@integ,?___ftge
 11861  0007C8  C0DC  F091         	movff	sprintf@integ+1,?___ftge+1
 11862  0007CC  C0DD  F092         	movff	sprintf@integ+2,?___ftge+2
 11863  0007D0  0E00               	movlw	0
 11864  0007D2  0100               	movlb	0	; () banked
 11865  0007D4  0100               	movlb	0	; () banked
 11866  0007D6  6F93               	movwf	(?___ftge+3)& (0+255),b
 11867  0007D8  0E80               	movlw	128
 11868  0007DA  0100               	movlb	0	; () banked
 11869  0007DC  0100               	movlb	0	; () banked
 11870  0007DE  6F94               	movwf	(?___ftge+4)& (0+255),b
 11871  0007E0  0E3F               	movlw	63
 11872  0007E2  0100               	movlb	0	; () banked
 11873  0007E4  0100               	movlb	0	; () banked
 11874  0007E6  6F95               	movwf	(?___ftge+5)& (0+255),b
 11875  0007E8  EC2F  F02E         	call	___ftge	;wreg free
 11876  0007EC  B0D8               	btfsc	status,0,c
 11877  0007EE  D006               	goto	i2l6731
 11878                           
 11879                           ;doprnt.c: 858: exp--;
 11880  0007F0  0100               	movlb	0	; () banked
 11881  0007F2  0100               	movlb	0	; () banked
 11882  0007F4  07E4               	decf	sprintf@exp& (0+255),f,b
 11883  0007F6  A0D8               	btfss	status,0,c
 11884  0007F8  07E5               	decf	(sprintf@exp+1)& (0+255),f,b
 11885  0007FA  D01A               	goto	i2l6735
 11886  0007FC                     i2l6731:
 11887                           
 11888                           ;doprnt.c: 859: else if(integ >= 10.0)
 11889  0007FC  C0DB  F090         	movff	sprintf@integ,?___ftge
 11890  000800  C0DC  F091         	movff	sprintf@integ+1,?___ftge+1
 11891  000804  C0DD  F092         	movff	sprintf@integ+2,?___ftge+2
 11892  000808  0E00               	movlw	0
 11893  00080A  0100               	movlb	0	; () banked
 11894  00080C  0100               	movlb	0	; () banked
 11895  00080E  6F93               	movwf	(?___ftge+3)& (0+255),b
 11896  000810  0E20               	movlw	32
 11897  000812  0100               	movlb	0	; () banked
 11898  000814  0100               	movlb	0	; () banked
 11899  000816  6F94               	movwf	(?___ftge+4)& (0+255),b
 11900  000818  0E41               	movlw	65
 11901  00081A  0100               	movlb	0	; () banked
 11902  00081C  0100               	movlb	0	; () banked
 11903  00081E  6F95               	movwf	(?___ftge+5)& (0+255),b
 11904  000820  EC2F  F02E         	call	___ftge	;wreg free
 11905  000824  A0D8               	btfss	status,0,c
 11906  000826  D004               	goto	i2l6735
 11907                           
 11908                           ;doprnt.c: 860: exp++;
 11909  000828  0100               	movlb	0	; () banked
 11910  00082A  0100               	movlb	0	; () banked
 11911  00082C  4BE4               	infsnz	sprintf@exp& (0+255),f,b
 11912  00082E  2BE5               	incf	(sprintf@exp+1)& (0+255),f,b
 11913  000830                     i2l6735:
 11914                           
 11915                           ;doprnt.c: 861: }
 11916                           ;doprnt.c: 863: if(exp <= 0)
 11917  000830  0100               	movlb	0	; () banked
 11918  000832  0100               	movlb	0	; () banked
 11919  000834  51E5               	movf	(sprintf@exp+1)& (0+255),w,b
 11920  000836  0A80               	xorlw	128
 11921  000838  0F80               	addlw	-128
 11922  00083A  0E01               	movlw	1
 11923  00083C  B4D8               	btfsc	status,2,c
 11924  00083E  5DE4               	subwf	sprintf@exp& (0+255),w,b
 11925  000840  B0D8               	btfsc	status,0,c
 11926  000842  D009               	goto	i2l705
 11927                           
 11928                           ; BSR set to: 0
 11929                           ;doprnt.c: 864: c = 1;
 11930  000844  0100               	movlb	0	; () banked
 11931  000846  6FC7               	movwf	??_sprintf& (0+255),b
 11932  000848  0E01               	movlw	1
 11933  00084A  0100               	movlb	0	; () banked
 11934  00084C  0100               	movlb	0	; () banked
 11935  00084E  6FEF               	movwf	sprintf@c& (0+255),b
 11936  000850  0100               	movlb	0	; () banked
 11937  000852  51C7               	movf	??_sprintf& (0+255),w,b
 11938  000854  D002               	goto	i2l706
 11939  000856                     i2l705:
 11940                           
 11941                           ; BSR set to: 0
 11942                           ;doprnt.c: 865: else
 11943                           ;doprnt.c: 866: c = exp;
 11944  000856  C0E4  F0EF         	movff	sprintf@exp,sprintf@c
 11945  00085A                     i2l706:
 11946                           
 11947                           ; BSR set to: 0
 11948                           ;doprnt.c: 867: if(
 11949                           ;doprnt.c: 875: flag & 0x200 && (exp < -4 || exp >= (int)prec)
 11950                           ;doprnt.c: 877: ) {
 11951  00085A  0100               	movlb	0	; () banked
 11952  00085C  0100               	movlb	0	; () banked
 11953  00085E  A3E3               	btfss	(sprintf@flag+1)& (0+255),1,b
 11954  000860  EF34  F008         	goto	i2l707
 11955                           
 11956                           ; BSR set to: 0
 11957  000864  0100               	movlb	0	; () banked
 11958  000866  0100               	movlb	0	; () banked
 11959  000868  51E5               	movf	(sprintf@exp+1)& (0+255),w,b
 11960  00086A  0A80               	xorlw	128
 11961  00086C  0F81               	addlw	-127
 11962  00086E  0EFC               	movlw	252
 11963  000870  B4D8               	btfsc	status,2,c
 11964  000872  5DE4               	subwf	sprintf@exp& (0+255),w,b
 11965  000874  A0D8               	btfss	status,0,c
 11966  000876  D013               	goto	i2l6743
 11967                           
 11968                           ; BSR set to: 0
 11969  000878  0100               	movlb	0	; () banked
 11970  00087A  0100               	movlb	0	; () banked
 11971  00087C  51E5               	movf	(sprintf@exp+1)& (0+255),w,b
 11972  00087E  0A80               	xorlw	128
 11973  000880  0100               	movlb	0	; () banked
 11974  000882  6FC7               	movwf	??_sprintf& (0+255),b
 11975  000884  0100               	movlb	0	; () banked
 11976  000886  51E9               	movf	sprintf@prec& (0+255),w,b
 11977  000888  0100               	movlb	0	; () banked
 11978  00088A  0100               	movlb	0	; () banked
 11979  00088C  5DE4               	subwf	sprintf@exp& (0+255),w,b
 11980  00088E  0100               	movlb	0	; () banked
 11981  000890  0100               	movlb	0	; () banked
 11982  000892  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 11983  000894  0A80               	xorlw	128
 11984  000896  0100               	movlb	0	; () banked
 11985  000898  59C7               	subwfb	??_sprintf& (0+255),w,b
 11986  00089A  A0D8               	btfss	status,0,c
 11987  00089C  D3E5               	goto	i2l707
 11988  00089E                     i2l6743:
 11989                           
 11990                           ; BSR set to: 0
 11991                           ;doprnt.c: 879: if(prec && flag & 0x200)
 11992  00089E  0100               	movlb	0	; () banked
 11993  0008A0  0100               	movlb	0	; () banked
 11994  0008A2  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 11995  0008A4  11E9               	iorwf	sprintf@prec& (0+255),w,b
 11996  0008A6  B4D8               	btfsc	status,2,c
 11997  0008A8  D009               	goto	i2l6749
 11998                           
 11999                           ; BSR set to: 0
 12000  0008AA  0100               	movlb	0	; () banked
 12001  0008AC  0100               	movlb	0	; () banked
 12002  0008AE  A3E3               	btfss	(sprintf@flag+1)& (0+255),1,b
 12003  0008B0  D005               	goto	i2l6749
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;doprnt.c: 880: prec--;
 12007  0008B2  0100               	movlb	0	; () banked
 12008  0008B4  0100               	movlb	0	; () banked
 12009  0008B6  07E9               	decf	sprintf@prec& (0+255),f,b
 12010  0008B8  A0D8               	btfss	status,0,c
 12011  0008BA  07EA               	decf	(sprintf@prec+1)& (0+255),f,b
 12012  0008BC                     i2l6749:
 12013                           
 12014                           ; BSR set to: 0
 12015                           ;doprnt.c: 882: if((unsigned)prec > (sizeof dpowers/sizeof dpowers[0]) - 2)
 12016  0008BC  0E09               	movlw	9
 12017  0008BE  0100               	movlb	0	; () banked
 12018  0008C0  0100               	movlb	0	; () banked
 12019  0008C2  5DE9               	subwf	sprintf@prec& (0+255),w,b
 12020  0008C4  0E00               	movlw	0
 12021  0008C6  0100               	movlb	0	; () banked
 12022  0008C8  59EA               	subwfb	(sprintf@prec+1)& (0+255),w,b
 12023  0008CA  A0D8               	btfss	status,0,c
 12024  0008CC  D009               	goto	i2l711
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;doprnt.c: 883: c = (sizeof dpowers/sizeof dpowers[0]) - 2;
 12028  0008CE  0100               	movlb	0	; () banked
 12029  0008D0  6FC7               	movwf	??_sprintf& (0+255),b
 12030  0008D2  0E08               	movlw	8
 12031  0008D4  0100               	movlb	0	; () banked
 12032  0008D6  0100               	movlb	0	; () banked
 12033  0008D8  6FEF               	movwf	sprintf@c& (0+255),b
 12034  0008DA  0100               	movlb	0	; () banked
 12035  0008DC  51C7               	movf	??_sprintf& (0+255),w,b
 12036  0008DE  D002               	goto	i2l6753
 12037  0008E0                     i2l711:
 12038                           
 12039                           ; BSR set to: 0
 12040                           ;doprnt.c: 884: else
 12041                           ;doprnt.c: 885: c = prec;
 12042  0008E0  C0E9  F0EF         	movff	sprintf@prec,sprintf@c
 12043  0008E4                     i2l6753:
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;doprnt.c: 886: if( fval!=0) {
 12047  0008E4  0E7F               	movlw	127
 12048  0008E6  0100               	movlb	0	; () banked
 12049  0008E8  0100               	movlb	0	; () banked
 12050  0008EA  15E8               	andwf	(sprintf@fval+2)& (0+255),w,b
 12051  0008EC  0100               	movlb	0	; () banked
 12052  0008EE  11E7               	iorwf	(sprintf@fval+1)& (0+255),w,b
 12053  0008F0  0100               	movlb	0	; () banked
 12054  0008F2  11E6               	iorwf	sprintf@fval& (0+255),w,b
 12055  0008F4  B4D8               	btfsc	status,2,c
 12056  0008F6  D105               	goto	i2l6773
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;doprnt.c: 887: fval /= scale(exp-c);
 12060  0008F8  0100               	movlb	0	; () banked
 12061  0008FA  0E00               	movlw	high sprintf@fval
 12062  0008FC  0100               	movlb	0	; () banked
 12063  0008FE  0100               	movlb	0	; () banked
 12064  000900  6FAB               	movwf	(?___asftdiv+1)& (0+255),b
 12065  000902  0100               	movlb	0	; () banked
 12066  000904  0EE6               	movlw	low sprintf@fval
 12067  000906  0100               	movlb	0	; () banked
 12068  000908  6FAA               	movwf	?___asftdiv& (0+255),b
 12069  00090A  0100               	movlb	0	; () banked
 12070  00090C  0100               	movlb	0	; () banked
 12071  00090E  51EF               	movf	sprintf@c& (0+255),w,b
 12072  000910  0800               	sublw	0
 12073  000912  0100               	movlb	0	; () banked
 12074  000914  0100               	movlb	0	; () banked
 12075  000916  25E4               	addwf	sprintf@exp& (0+255),w,b
 12076  000918  0100               	movlb	0	; () banked
 12077  00091A  0100               	movlb	0	; () banked
 12078  00091C  6F9E               	movwf	?_scale& (0+255),b
 12079  00091E  EC54  F012         	call	_scale	;wreg free
 12080  000922  C0A0  F0AE         	movff	?_scale+2,?___asftdiv+4
 12081  000926  C09F  F0AD         	movff	?_scale+1,?___asftdiv+3
 12082  00092A  C09E  F0AC         	movff	?_scale,?___asftdiv+2
 12083  00092E  EC00  F037         	call	___asftdiv	;wreg free
 12084                           
 12085                           ;doprnt.c: 902: if(fval - (double)(unsigned long)fval >= 0.5)
 12086  000932  C0E6  F0A5         	movff	sprintf@fval,?___ftadd+3
 12087  000936  C0E7  F0A6         	movff	sprintf@fval+1,?___ftadd+4
 12088  00093A  C0E8  F0A7         	movff	sprintf@fval+2,?___ftadd+5
 12089  00093E  C0E6  F07E         	movff	sprintf@fval,?___fttol
 12090  000942  C0E7  F07F         	movff	sprintf@fval+1,?___fttol+1
 12091  000946  C0E8  F080         	movff	sprintf@fval+2,?___fttol+2
 12092  00094A  EC05  F02A         	call	___fttol	;wreg free
 12093  00094E  C081  F09C         	movff	?___fttol+3,?___lltoft+3
 12094  000952  C080  F09B         	movff	?___fttol+2,?___lltoft+2
 12095  000956  C07F  F09A         	movff	?___fttol+1,?___lltoft+1
 12096  00095A  C07E  F099         	movff	?___fttol,?___lltoft
 12097  00095E  EC65  F031         	call	___lltoft	;wreg free
 12098  000962  C09B  F08F         	movff	?___lltoft+2,?___ftneg+2
 12099  000966  C09A  F08E         	movff	?___lltoft+1,?___ftneg+1
 12100  00096A  C099  F08D         	movff	?___lltoft,?___ftneg
 12101  00096E  EC7F  F037         	call	___ftneg	;wreg free
 12102  000972  C08F  F0A4         	movff	?___ftneg+2,?___ftadd+2
 12103  000976  C08E  F0A3         	movff	?___ftneg+1,?___ftadd+1
 12104  00097A  C08D  F0A2         	movff	?___ftneg,?___ftadd
 12105  00097E  ECFC  F01F         	call	___ftadd	;wreg free
 12106  000982  C0A4  F092         	movff	?___ftadd+2,?___ftge+2
 12107  000986  C0A3  F091         	movff	?___ftadd+1,?___ftge+1
 12108  00098A  C0A2  F090         	movff	?___ftadd,?___ftge
 12109  00098E  0E00               	movlw	0
 12110  000990  0100               	movlb	0	; () banked
 12111  000992  0100               	movlb	0	; () banked
 12112  000994  6F93               	movwf	(?___ftge+3)& (0+255),b
 12113  000996  0E00               	movlw	0
 12114  000998  0100               	movlb	0	; () banked
 12115  00099A  0100               	movlb	0	; () banked
 12116  00099C  6F94               	movwf	(?___ftge+4)& (0+255),b
 12117  00099E  0E3F               	movlw	63
 12118  0009A0  0100               	movlb	0	; () banked
 12119  0009A2  0100               	movlb	0	; () banked
 12120  0009A4  6F95               	movwf	(?___ftge+5)& (0+255),b
 12121  0009A6  EC2F  F02E         	call	___ftge	;wreg free
 12122  0009AA  A0D8               	btfss	status,0,c
 12123  0009AC  D017               	goto	i2l6761
 12124                           
 12125                           ;doprnt.c: 903: fval += 0.5;
 12126  0009AE  0100               	movlb	0	; () banked
 12127  0009B0  0E00               	movlw	high sprintf@fval
 12128  0009B2  0100               	movlb	0	; () banked
 12129  0009B4  0100               	movlb	0	; () banked
 12130  0009B6  6FB1               	movwf	(?___asftadd+1)& (0+255),b
 12131  0009B8  0100               	movlb	0	; () banked
 12132  0009BA  0EE6               	movlw	low sprintf@fval
 12133  0009BC  0100               	movlb	0	; () banked
 12134  0009BE  6FB0               	movwf	?___asftadd& (0+255),b
 12135  0009C0  0E00               	movlw	0
 12136  0009C2  0100               	movlb	0	; () banked
 12137  0009C4  0100               	movlb	0	; () banked
 12138  0009C6  6FB2               	movwf	(?___asftadd+2)& (0+255),b
 12139  0009C8  0E00               	movlw	0
 12140  0009CA  0100               	movlb	0	; () banked
 12141  0009CC  0100               	movlb	0	; () banked
 12142  0009CE  6FB3               	movwf	(?___asftadd+3)& (0+255),b
 12143  0009D0  0E3F               	movlw	63
 12144  0009D2  0100               	movlb	0	; () banked
 12145  0009D4  0100               	movlb	0	; () banked
 12146  0009D6  6FB4               	movwf	(?___asftadd+4)& (0+255),b
 12147  0009D8  EC21  F037         	call	___asftadd	;wreg free
 12148  0009DC                     i2l6761:
 12149                           
 12150                           ;doprnt.c: 904: if((unsigned long)fval >= dpowers[c+1]) {
 12151  0009DC  0100               	movlb	0	; () banked
 12152  0009DE  C0EF  F0C7         	movff	sprintf@c,??_sprintf
 12153  0009E2  0100               	movlb	0	; () banked
 12154  0009E4  6BC8               	clrf	(??_sprintf+1)& (0+255),b
 12155  0009E6  BFC7               	btfsc	??_sprintf& (0+255),7,b
 12156  0009E8  07C8               	decf	(??_sprintf+1)& (0+255),f,b
 12157  0009EA  0100               	movlb	0	; () banked
 12158  0009EC  90D8               	bcf	status,0,c
 12159  0009EE  37C7               	rlcf	??_sprintf& (0+255),f,b
 12160  0009F0  37C8               	rlcf	(??_sprintf+1)& (0+255),f,b
 12161  0009F2  0100               	movlb	0	; () banked
 12162  0009F4  90D8               	bcf	status,0,c
 12163  0009F6  37C7               	rlcf	??_sprintf& (0+255),f,b
 12164  0009F8  37C8               	rlcf	(??_sprintf+1)& (0+255),f,b
 12165  0009FA  0E04               	movlw	4
 12166  0009FC  0100               	movlb	0	; () banked
 12167  0009FE  27C7               	addwf	??_sprintf& (0+255),f,b
 12168  000A00  0E00               	movlw	0
 12169  000A02  23C8               	addwfc	(??_sprintf+1)& (0+255),f,b
 12170  000A04  0ED9               	movlw	low _dpowers
 12171  000A06  0100               	movlb	0	; () banked
 12172  000A08  25C7               	addwf	??_sprintf& (0+255),w,b
 12173  000A0A  6EF6               	movwf	tblptrl,c
 12174  000A0C  0E7E               	movlw	high _dpowers
 12175  000A0E  21C8               	addwfc	(??_sprintf+1)& (0+255),w,b
 12176  000A10  6EF7               	movwf	tblptrh,c
 12177  000A12  C0E6  F07E         	movff	sprintf@fval,?___fttol
 12178  000A16  C0E7  F07F         	movff	sprintf@fval+1,?___fttol+1
 12179  000A1A  C0E8  F080         	movff	sprintf@fval+2,?___fttol+2
 12180  000A1E  EC05  F02A         	call	___fttol	;wreg free
 12181  000A22  0009               	tblrd		*+
 12182  000A24  50F5               	movf	tablat,w,c
 12183  000A26  0100               	movlb	0	; () banked
 12184  000A28  0100               	movlb	0	; () banked
 12185  000A2A  5D7E               	subwf	?___fttol& (0+255),w,b
 12186  000A2C  0009               	tblrd		*+
 12187  000A2E  50F5               	movf	tablat,w,c
 12188  000A30  0100               	movlb	0	; () banked
 12189  000A32  597F               	subwfb	(?___fttol+1)& (0+255),w,b
 12190  000A34  0009               	tblrd		*+
 12191  000A36  50F5               	movf	tablat,w,c
 12192  000A38  0100               	movlb	0	; () banked
 12193  000A3A  5980               	subwfb	(?___fttol+2)& (0+255),w,b
 12194  000A3C  0009               	tblrd		*+
 12195  000A3E  50F5               	movf	tablat,w,c
 12196  000A40  0100               	movlb	0	; () banked
 12197  000A42  5981               	subwfb	(?___fttol+3)& (0+255),w,b
 12198  000A44  A0D8               	btfss	status,0,c
 12199  000A46  D01C               	goto	i2l6767
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;doprnt.c: 905: fval *= 1e-1;
 12203  000A48  0100               	movlb	0	; () banked
 12204  000A4A  0E00               	movlw	high sprintf@fval
 12205  000A4C  0100               	movlb	0	; () banked
 12206  000A4E  0100               	movlb	0	; () banked
 12207  000A50  6FB1               	movwf	(?___asftmul+1)& (0+255),b
 12208  000A52  0100               	movlb	0	; () banked
 12209  000A54  0EE6               	movlw	low sprintf@fval
 12210  000A56  0100               	movlb	0	; () banked
 12211  000A58  6FB0               	movwf	?___asftmul& (0+255),b
 12212  000A5A  0ECD               	movlw	205
 12213  000A5C  0100               	movlb	0	; () banked
 12214  000A5E  0100               	movlb	0	; () banked
 12215  000A60  6FB2               	movwf	(?___asftmul+2)& (0+255),b
 12216  000A62  0ECC               	movlw	204
 12217  000A64  0100               	movlb	0	; () banked
 12218  000A66  0100               	movlb	0	; () banked
 12219  000A68  6FB3               	movwf	(?___asftmul+3)& (0+255),b
 12220  000A6A  0E3D               	movlw	61
 12221  000A6C  0100               	movlb	0	; () banked
 12222  000A6E  0100               	movlb	0	; () banked
 12223  000A70  6FB4               	movwf	(?___asftmul+4)& (0+255),b
 12224  000A72  ECDF  F036         	call	___asftmul	;wreg free
 12225                           
 12226                           ;doprnt.c: 906: exp++;
 12227  000A76  0100               	movlb	0	; () banked
 12228  000A78  0100               	movlb	0	; () banked
 12229  000A7A  4BE4               	infsnz	sprintf@exp& (0+255),f,b
 12230  000A7C  2BE5               	incf	(sprintf@exp+1)& (0+255),f,b
 12231                           
 12232                           ;doprnt.c: 907: } else if((unsigned long)fval < dpowers[c]) {
 12233  000A7E  D041               	goto	i2l6773
 12234  000A80                     i2l6767:
 12235                           
 12236                           ; BSR set to: 0
 12237  000A80  0100               	movlb	0	; () banked
 12238  000A82  0100               	movlb	0	; () banked
 12239  000A84  51EF               	movf	sprintf@c& (0+255),w,b
 12240  000A86  0D04               	mullw	4
 12241  000A88  0ED9               	movlw	low _dpowers
 12242  000A8A  24F3               	addwf	prodl,w,c
 12243  000A8C  6EF6               	movwf	tblptrl,c
 12244  000A8E  0E7E               	movlw	high _dpowers
 12245  000A90  20F4               	addwfc	prodh,w,c
 12246  000A92  6EF7               	movwf	tblptrh,c
 12247  000A94  C0E6  F07E         	movff	sprintf@fval,?___fttol
 12248  000A98  C0E7  F07F         	movff	sprintf@fval+1,?___fttol+1
 12249  000A9C  C0E8  F080         	movff	sprintf@fval+2,?___fttol+2
 12250  000AA0  EC05  F02A         	call	___fttol	;wreg free
 12251  000AA4  0009               	tblrd		*+
 12252  000AA6  50F5               	movf	tablat,w,c
 12253  000AA8  0100               	movlb	0	; () banked
 12254  000AAA  0100               	movlb	0	; () banked
 12255  000AAC  5D7E               	subwf	?___fttol& (0+255),w,b
 12256  000AAE  0009               	tblrd		*+
 12257  000AB0  50F5               	movf	tablat,w,c
 12258  000AB2  0100               	movlb	0	; () banked
 12259  000AB4  597F               	subwfb	(?___fttol+1)& (0+255),w,b
 12260  000AB6  0009               	tblrd		*+
 12261  000AB8  50F5               	movf	tablat,w,c
 12262  000ABA  0100               	movlb	0	; () banked
 12263  000ABC  5980               	subwfb	(?___fttol+2)& (0+255),w,b
 12264  000ABE  0009               	tblrd		*+
 12265  000AC0  50F5               	movf	tablat,w,c
 12266  000AC2  0100               	movlb	0	; () banked
 12267  000AC4  5981               	subwfb	(?___fttol+3)& (0+255),w,b
 12268  000AC6  B0D8               	btfsc	status,0,c
 12269  000AC8  D01C               	goto	i2l6773
 12270                           
 12271                           ; BSR set to: 0
 12272                           ;doprnt.c: 908: fval *= 10.0;
 12273  000ACA  0100               	movlb	0	; () banked
 12274  000ACC  0E00               	movlw	high sprintf@fval
 12275  000ACE  0100               	movlb	0	; () banked
 12276  000AD0  0100               	movlb	0	; () banked
 12277  000AD2  6FB1               	movwf	(?___asftmul+1)& (0+255),b
 12278  000AD4  0100               	movlb	0	; () banked
 12279  000AD6  0EE6               	movlw	low sprintf@fval
 12280  000AD8  0100               	movlb	0	; () banked
 12281  000ADA  6FB0               	movwf	?___asftmul& (0+255),b
 12282  000ADC  0E00               	movlw	0
 12283  000ADE  0100               	movlb	0	; () banked
 12284  000AE0  0100               	movlb	0	; () banked
 12285  000AE2  6FB2               	movwf	(?___asftmul+2)& (0+255),b
 12286  000AE4  0E20               	movlw	32
 12287  000AE6  0100               	movlb	0	; () banked
 12288  000AE8  0100               	movlb	0	; () banked
 12289  000AEA  6FB3               	movwf	(?___asftmul+3)& (0+255),b
 12290  000AEC  0E41               	movlw	65
 12291  000AEE  0100               	movlb	0	; () banked
 12292  000AF0  0100               	movlb	0	; () banked
 12293  000AF2  6FB4               	movwf	(?___asftmul+4)& (0+255),b
 12294  000AF4  ECDF  F036         	call	___asftmul	;wreg free
 12295                           
 12296                           ;doprnt.c: 909: exp--;
 12297  000AF8  0100               	movlb	0	; () banked
 12298  000AFA  0100               	movlb	0	; () banked
 12299  000AFC  07E4               	decf	sprintf@exp& (0+255),f,b
 12300  000AFE  A0D8               	btfss	status,0,c
 12301  000B00  07E5               	decf	(sprintf@exp+1)& (0+255),f,b
 12302  000B02                     i2l6773:
 12303                           
 12304                           ; BSR set to: 0
 12305                           ;doprnt.c: 910: }
 12306                           ;doprnt.c: 912: }
 12307                           ;doprnt.c: 938: width -= prec + 5;
 12308  000B02  0E05               	movlw	5
 12309  000B04  0100               	movlb	0	; () banked
 12310  000B06  0100               	movlb	0	; () banked
 12311  000B08  25E9               	addwf	sprintf@prec& (0+255),w,b
 12312  000B0A  0100               	movlb	0	; () banked
 12313  000B0C  6FC7               	movwf	??_sprintf& (0+255),b
 12314  000B0E  0E00               	movlw	0
 12315  000B10  0100               	movlb	0	; () banked
 12316  000B12  0100               	movlb	0	; () banked
 12317  000B14  21EA               	addwfc	(sprintf@prec+1)& (0+255),w,b
 12318  000B16  0100               	movlb	0	; () banked
 12319  000B18  6FC8               	movwf	(??_sprintf+1)& (0+255),b
 12320  000B1A  0100               	movlb	0	; () banked
 12321  000B1C  51C7               	movf	??_sprintf& (0+255),w,b
 12322  000B1E  0100               	movlb	0	; () banked
 12323  000B20  0100               	movlb	0	; () banked
 12324  000B22  5FE0               	subwf	sprintf@width& (0+255),f,b
 12325  000B24  0100               	movlb	0	; () banked
 12326  000B26  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 12327  000B28  0100               	movlb	0	; () banked
 12328  000B2A  0100               	movlb	0	; () banked
 12329  000B2C  5BE1               	subwfb	(sprintf@width+1)& (0+255),f,b
 12330                           
 12331                           ; BSR set to: 0
 12332                           ;doprnt.c: 943: if(flag & 0x03)
 12333  000B2E  0E03               	movlw	3
 12334  000B30  0100               	movlb	0	; () banked
 12335  000B32  0100               	movlb	0	; () banked
 12336  000B34  15E2               	andwf	sprintf@flag& (0+255),w,b
 12337  000B36  0100               	movlb	0	; () banked
 12338  000B38  6FC7               	movwf	??_sprintf& (0+255),b
 12339  000B3A  0E00               	movlw	0
 12340  000B3C  0100               	movlb	0	; () banked
 12341  000B3E  0100               	movlb	0	; () banked
 12342  000B40  15E3               	andwf	(sprintf@flag+1)& (0+255),w,b
 12343  000B42  0100               	movlb	0	; () banked
 12344  000B44  6FC8               	movwf	(??_sprintf+1)& (0+255),b
 12345  000B46  0100               	movlb	0	; () banked
 12346  000B48  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 12347  000B4A  11C7               	iorwf	??_sprintf& (0+255),w,b
 12348  000B4C  B4D8               	btfsc	status,2,c
 12349  000B4E  D005               	goto	i2l6779
 12350                           
 12351                           ; BSR set to: 0
 12352                           ;doprnt.c: 944: width--;
 12353  000B50  0100               	movlb	0	; () banked
 12354  000B52  0100               	movlb	0	; () banked
 12355  000B54  07E0               	decf	sprintf@width& (0+255),f,b
 12356  000B56  A0D8               	btfss	status,0,c
 12357  000B58  07E1               	decf	(sprintf@width+1)& (0+255),f,b
 12358  000B5A                     i2l6779:
 12359                           
 12360                           ; BSR set to: 0
 12361                           ;doprnt.c: 955: if(flag & 0x04) {
 12362  000B5A  0100               	movlb	0	; () banked
 12363  000B5C  0100               	movlb	0	; () banked
 12364  000B5E  B5E2               	btfsc	sprintf@flag& (0+255),2,b
 12365  000B60  D01E               	goto	i2l6789
 12366  000B62  D045               	goto	i2l6797
 12367  000B64                     i2l6783:
 12368                           
 12369                           ; BSR set to: 0
 12370                           ;doprnt.c: 963: ((*sp++ = ('0')));
 12371  000B64  0100               	movlb	0	; () banked
 12372  000B66  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 12373  000B6A  0100               	movlb	0	; () banked
 12374  000B6C  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 12375  000B70  6AF8               	clrf	tblptru,c
 12376  000B72  0E07               	movlw	(high __ramtop+-1)
 12377  000B74  64F7               	cpfsgt	tblptrh,c
 12378  000B76  D004               	bra	i2u447_47
 12379  000B78  0E30               	movlw	48
 12380  000B7A  6EF5               	movwf	tablat,c
 12381  000B7C  000C               	tblwt		*
 12382  000B7E  D006               	bra	i2u447_40
 12383  000B80                     i2u447_47:
 12384  000B80  CFF6 FFE9          	movff	tblptrl,fsr0l
 12385  000B84  CFF7 FFEA          	movff	tblptrh,fsr0h
 12386  000B88  0E30               	movlw	48
 12387  000B8A  6EEF               	movwf	indf0,c
 12388  000B8C                     i2u447_40:
 12389  000B8C  0100               	movlb	0	; () banked
 12390  000B8E  0100               	movlb	0	; () banked
 12391  000B90  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 12392  000B92  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;doprnt.c: 964: width--;
 12396  000B94  0100               	movlb	0	; () banked
 12397  000B96  0100               	movlb	0	; () banked
 12398  000B98  07E0               	decf	sprintf@width& (0+255),f,b
 12399  000B9A  A0D8               	btfss	status,0,c
 12400  000B9C  07E1               	decf	(sprintf@width+1)& (0+255),f,b
 12401  000B9E                     i2l6789:
 12402                           
 12403                           ; BSR set to: 0
 12404  000B9E  0100               	movlb	0	; () banked
 12405  000BA0  0100               	movlb	0	; () banked
 12406  000BA2  51E1               	movf	(sprintf@width+1)& (0+255),w,b
 12407  000BA4  0A80               	xorlw	128
 12408  000BA6  0F80               	addlw	-128
 12409  000BA8  0E01               	movlw	1
 12410  000BAA  B4D8               	btfsc	status,2,c
 12411  000BAC  5DE0               	subwf	sprintf@width& (0+255),w,b
 12412  000BAE  A0D8               	btfss	status,0,c
 12413  000BB0  D051               	goto	i2l6805
 12414  000BB2  D7D8               	goto	i2l6783
 12415  000BB4                     i2l6791:
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;doprnt.c: 974: ((*sp++ = (' ')));
 12419  000BB4  0100               	movlb	0	; () banked
 12420  000BB6  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 12421  000BBA  0100               	movlb	0	; () banked
 12422  000BBC  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 12423  000BC0  6AF8               	clrf	tblptru,c
 12424  000BC2  0E07               	movlw	(high __ramtop+-1)
 12425  000BC4  64F7               	cpfsgt	tblptrh,c
 12426  000BC6  D004               	bra	i2u449_47
 12427  000BC8  0E20               	movlw	32
 12428  000BCA  6EF5               	movwf	tablat,c
 12429  000BCC  000C               	tblwt		*
 12430  000BCE  D006               	bra	i2u449_40
 12431  000BD0                     i2u449_47:
 12432  000BD0  CFF6 FFE9          	movff	tblptrl,fsr0l
 12433  000BD4  CFF7 FFEA          	movff	tblptrh,fsr0h
 12434  000BD8  0E20               	movlw	32
 12435  000BDA  6EEF               	movwf	indf0,c
 12436  000BDC                     i2u449_40:
 12437  000BDC  0100               	movlb	0	; () banked
 12438  000BDE  0100               	movlb	0	; () banked
 12439  000BE0  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 12440  000BE2  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 12441                           
 12442                           ; BSR set to: 0
 12443                           ;doprnt.c: 975: width--;
 12444  000BE4  0100               	movlb	0	; () banked
 12445  000BE6  0100               	movlb	0	; () banked
 12446  000BE8  07E0               	decf	sprintf@width& (0+255),f,b
 12447  000BEA  A0D8               	btfss	status,0,c
 12448  000BEC  07E1               	decf	(sprintf@width+1)& (0+255),f,b
 12449  000BEE                     i2l6797:
 12450                           
 12451                           ; BSR set to: 0
 12452  000BEE  0100               	movlb	0	; () banked
 12453  000BF0  0100               	movlb	0	; () banked
 12454  000BF2  51E1               	movf	(sprintf@width+1)& (0+255),w,b
 12455  000BF4  0A80               	xorlw	128
 12456  000BF6  0F80               	addlw	-128
 12457  000BF8  0E01               	movlw	1
 12458  000BFA  B4D8               	btfsc	status,2,c
 12459  000BFC  5DE0               	subwf	sprintf@width& (0+255),w,b
 12460  000BFE  B0D8               	btfsc	status,0,c
 12461  000C00  D7D9               	goto	i2l6791
 12462                           
 12463                           ; BSR set to: 0
 12464                           ;doprnt.c: 976: }
 12465                           ;doprnt.c: 982: if(flag & 0x03)
 12466                           
 12467                           ; BSR set to: 0
 12468  000C02  0E03               	movlw	3
 12469  000C04  0100               	movlb	0	; () banked
 12470  000C06  0100               	movlb	0	; () banked
 12471  000C08  15E2               	andwf	sprintf@flag& (0+255),w,b
 12472  000C0A  0100               	movlb	0	; () banked
 12473  000C0C  6FC7               	movwf	??_sprintf& (0+255),b
 12474  000C0E  0E00               	movlw	0
 12475  000C10  0100               	movlb	0	; () banked
 12476  000C12  0100               	movlb	0	; () banked
 12477  000C14  15E3               	andwf	(sprintf@flag+1)& (0+255),w,b
 12478  000C16  0100               	movlb	0	; () banked
 12479  000C18  6FC8               	movwf	(??_sprintf+1)& (0+255),b
 12480  000C1A  0100               	movlb	0	; () banked
 12481  000C1C  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 12482  000C1E  11C7               	iorwf	??_sprintf& (0+255),w,b
 12483  000C20  B4D8               	btfsc	status,2,c
 12484  000C22  D018               	goto	i2l6805
 12485                           
 12486                           ; BSR set to: 0
 12487                           ;doprnt.c: 983: ((*sp++ = ('-')));
 12488  000C24  0100               	movlb	0	; () banked
 12489  000C26  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 12490  000C2A  0100               	movlb	0	; () banked
 12491  000C2C  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 12492  000C30  6AF8               	clrf	tblptru,c
 12493  000C32  0E07               	movlw	(high __ramtop+-1)
 12494  000C34  64F7               	cpfsgt	tblptrh,c
 12495  000C36  D004               	bra	i2u452_47
 12496  000C38  0E2D               	movlw	45
 12497  000C3A  6EF5               	movwf	tablat,c
 12498  000C3C  000C               	tblwt		*
 12499  000C3E  D006               	bra	i2u452_40
 12500  000C40                     i2u452_47:
 12501  000C40  CFF6 FFE9          	movff	tblptrl,fsr0l
 12502  000C44  CFF7 FFEA          	movff	tblptrh,fsr0h
 12503  000C48  0E2D               	movlw	45
 12504  000C4A  6EEF               	movwf	indf0,c
 12505  000C4C                     i2u452_40:
 12506  000C4C  0100               	movlb	0	; () banked
 12507  000C4E  0100               	movlb	0	; () banked
 12508  000C50  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 12509  000C52  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 12510  000C54                     i2l6805:
 12511                           
 12512                           ; BSR set to: 0
 12513                           ;doprnt.c: 989: }
 12514                           ;doprnt.c: 994: _val._val = (unsigned long)fval;
 12515  000C54  C0E6  F07E         	movff	sprintf@fval,?___fttol
 12516  000C58  C0E7  F07F         	movff	sprintf@fval+1,?___fttol+1
 12517  000C5C  C0E8  F080         	movff	sprintf@fval+2,?___fttol+2
 12518  000C60  EC05  F02A         	call	___fttol	;wreg free
 12519  000C64  C081  F0EE         	movff	?___fttol+3,sprintf@_val+3
 12520  000C68  C080  F0ED         	movff	?___fttol+2,sprintf@_val+2
 12521  000C6C  C07F  F0EC         	movff	?___fttol+1,sprintf@_val+1
 12522  000C70  C07E  F0EB         	movff	?___fttol,sprintf@_val
 12523                           
 12524                           ;doprnt.c: 995: ((*sp++ = (_val._val/dpowers[c] + '0')));
 12525  000C74  C0EB  F060         	movff	sprintf@_val,?___lldiv
 12526  000C78  C0EC  F061         	movff	sprintf@_val+1,?___lldiv+1
 12527  000C7C  C0ED  F062         	movff	sprintf@_val+2,?___lldiv+2
 12528  000C80  C0EE  F063         	movff	sprintf@_val+3,?___lldiv+3
 12529  000C84  0100               	movlb	0	; () banked
 12530  000C86  0100               	movlb	0	; () banked
 12531  000C88  51EF               	movf	sprintf@c& (0+255),w,b
 12532  000C8A  0D04               	mullw	4
 12533  000C8C  0ED9               	movlw	low _dpowers
 12534  000C8E  24F3               	addwf	prodl,w,c
 12535  000C90  6EF6               	movwf	tblptrl,c
 12536  000C92  0E7E               	movlw	high _dpowers
 12537  000C94  20F4               	addwfc	prodh,w,c
 12538  000C96  6EF7               	movwf	tblptrh,c
 12539  000C98  0009               	tblrd		*+
 12540  000C9A  0100               	movlb	0	; () banked
 12541  000C9C  CFF5 F064          	movff	tablat,?___lldiv+4
 12542  000CA0  0009               	tblrd		*+
 12543  000CA2  0100               	movlb	0	; () banked
 12544  000CA4  CFF5 F065          	movff	tablat,?___lldiv+5
 12545  000CA8  0009               	tblrd		*+
 12546  000CAA  0100               	movlb	0	; () banked
 12547  000CAC  CFF5 F066          	movff	tablat,?___lldiv+6
 12548  000CB0  000A               	tblrd		*-
 12549  000CB2  0100               	movlb	0	; () banked
 12550  000CB4  CFF5 F067          	movff	tablat,?___lldiv+7
 12551  000CB8  EC2C  F02D         	call	___lldiv	;wreg free
 12552  000CBC  0100               	movlb	0	; () banked
 12553  000CBE  0100               	movlb	0	; () banked
 12554  000CC0  5160               	movf	?___lldiv& (0+255),w,b
 12555  000CC2  0F30               	addlw	48
 12556  000CC4  0100               	movlb	0	; () banked
 12557  000CC6  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 12558  000CCA  0100               	movlb	0	; () banked
 12559  000CCC  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 12560  000CD0  6AF8               	clrf	tblptru,c
 12561  000CD2  0100               	movlb	0	; () banked
 12562  000CD4  6FC7               	movwf	??_sprintf& (0+255),b
 12563  000CD6  0E07               	movlw	(high __ramtop+-1)
 12564  000CD8  64F7               	cpfsgt	tblptrh,c
 12565  000CDA  D004               	bra	i2u453_47
 12566  000CDC  C0C7  FFF5         	movff	??_sprintf,tablat
 12567  000CE0  000C               	tblwt		*
 12568  000CE2  D006               	bra	i2u453_40
 12569  000CE4                     i2u453_47:
 12570  000CE4  CFF6 FFE9          	movff	tblptrl,fsr0l
 12571  000CE8  CFF7 FFEA          	movff	tblptrh,fsr0h
 12572  000CEC  C0C7  FFEF         	movff	??_sprintf,indf0
 12573  000CF0                     i2u453_40:
 12574  000CF0  0100               	movlb	0	; () banked
 12575  000CF2  0100               	movlb	0	; () banked
 12576  000CF4  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 12577  000CF6  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 12578                           
 12579                           ; BSR set to: 0
 12580                           ;doprnt.c: 996: _val._val %= dpowers[c];
 12581  000CF8  C0EB  F073         	movff	sprintf@_val,?___llmod
 12582  000CFC  C0EC  F074         	movff	sprintf@_val+1,?___llmod+1
 12583  000D00  C0ED  F075         	movff	sprintf@_val+2,?___llmod+2
 12584  000D04  C0EE  F076         	movff	sprintf@_val+3,?___llmod+3
 12585  000D08  0100               	movlb	0	; () banked
 12586  000D0A  0100               	movlb	0	; () banked
 12587  000D0C  51EF               	movf	sprintf@c& (0+255),w,b
 12588  000D0E  0D04               	mullw	4
 12589  000D10  0ED9               	movlw	low _dpowers
 12590  000D12  24F3               	addwf	prodl,w,c
 12591  000D14  6EF6               	movwf	tblptrl,c
 12592  000D16  0E7E               	movlw	high _dpowers
 12593  000D18  20F4               	addwfc	prodh,w,c
 12594  000D1A  6EF7               	movwf	tblptrh,c
 12595  000D1C  0009               	tblrd		*+
 12596  000D1E  0100               	movlb	0	; () banked
 12597  000D20  CFF5 F077          	movff	tablat,?___llmod+4
 12598  000D24  0009               	tblrd		*+
 12599  000D26  0100               	movlb	0	; () banked
 12600  000D28  CFF5 F078          	movff	tablat,?___llmod+5
 12601  000D2C  0009               	tblrd		*+
 12602  000D2E  0100               	movlb	0	; () banked
 12603  000D30  CFF5 F079          	movff	tablat,?___llmod+6
 12604  000D34  000A               	tblrd		*-
 12605  000D36  0100               	movlb	0	; () banked
 12606  000D38  CFF5 F07A          	movff	tablat,?___llmod+7
 12607  000D3C  EC98  F02F         	call	___llmod	;wreg free
 12608  000D40  C076  F0EE         	movff	?___llmod+3,sprintf@_val+3
 12609  000D44  C075  F0ED         	movff	?___llmod+2,sprintf@_val+2
 12610  000D48  C074  F0EC         	movff	?___llmod+1,sprintf@_val+1
 12611  000D4C  C073  F0EB         	movff	?___llmod,sprintf@_val
 12612                           
 12613                           ;doprnt.c: 1001: if(prec)
 12614  000D50  0100               	movlb	0	; () banked
 12615  000D52  0100               	movlb	0	; () banked
 12616  000D54  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 12617  000D56  11E9               	iorwf	sprintf@prec& (0+255),w,b
 12618  000D58  B4D8               	btfsc	status,2,c
 12619  000D5A  D0DE               	goto	i2l6841
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;doprnt.c: 1003: {
 12623                           ;doprnt.c: 1004: ((*sp++ = ('.')));
 12624  000D5C  0100               	movlb	0	; () banked
 12625  000D5E  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 12626  000D62  0100               	movlb	0	; () banked
 12627  000D64  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 12628  000D68  6AF8               	clrf	tblptru,c
 12629  000D6A  0E07               	movlw	(high __ramtop+-1)
 12630  000D6C  64F7               	cpfsgt	tblptrh,c
 12631  000D6E  D004               	bra	i2u455_47
 12632  000D70  0E2E               	movlw	46
 12633  000D72  6EF5               	movwf	tablat,c
 12634  000D74  000C               	tblwt		*
 12635  000D76  D006               	bra	i2u455_40
 12636  000D78                     i2u455_47:
 12637  000D78  CFF6 FFE9          	movff	tblptrl,fsr0l
 12638  000D7C  CFF7 FFEA          	movff	tblptrh,fsr0h
 12639  000D80  0E2E               	movlw	46
 12640  000D82  6EEF               	movwf	indf0,c
 12641  000D84                     i2u455_40:
 12642  000D84  0100               	movlb	0	; () banked
 12643  000D86  0100               	movlb	0	; () banked
 12644  000D88  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 12645  000D8A  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;doprnt.c: 1005: prec -= c;
 12649  000D8C  0100               	movlb	0	; () banked
 12650  000D8E  0100               	movlb	0	; () banked
 12651  000D90  51EF               	movf	sprintf@c& (0+255),w,b
 12652  000D92  0100               	movlb	0	; () banked
 12653  000D94  0100               	movlb	0	; () banked
 12654  000D96  5FE9               	subwf	sprintf@prec& (0+255),f,b
 12655  000D98  0E00               	movlw	0
 12656  000D9A  0100               	movlb	0	; () banked
 12657  000D9C  BFEF               	btfsc	sprintf@c& (0+255),7,b
 12658  000D9E  0EFF               	movlw	255
 12659  000DA0  0100               	movlb	0	; () banked
 12660  000DA2  0100               	movlb	0	; () banked
 12661  000DA4  5BEA               	subwfb	(sprintf@prec+1)& (0+255),f,b
 12662                           
 12663                           ;doprnt.c: 1006: while(c--) {
 12664  000DA6  D08D               	goto	i2l6831
 12665  000DA8                     i2l730:
 12666                           
 12667                           ; BSR set to: 0
 12668                           ;doprnt.c: 1011: if(flag & 0x200 && _val._val == 0) {
 12669  000DA8  0100               	movlb	0	; () banked
 12670  000DAA  0100               	movlb	0	; () banked
 12671  000DAC  A3E3               	btfss	(sprintf@flag+1)& (0+255),1,b
 12672  000DAE  D01B               	goto	i2l6825
 12673                           
 12674                           ; BSR set to: 0
 12675  000DB0  0100               	movlb	0	; () banked
 12676  000DB2  0100               	movlb	0	; () banked
 12677  000DB4  51EE               	movf	(sprintf@_val+3)& (0+255),w,b
 12678  000DB6  11EB               	iorwf	sprintf@_val& (0+255),w,b
 12679  000DB8  11EC               	iorwf	(sprintf@_val+1)& (0+255),w,b
 12680  000DBA  11ED               	iorwf	(sprintf@_val+2)& (0+255),w,b
 12681  000DBC  A4D8               	btfss	status,2,c
 12682  000DBE  D013               	goto	i2l6825
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;doprnt.c: 1012: prec = c = 0;
 12686  000DC0  0100               	movlb	0	; () banked
 12687  000DC2  6FC7               	movwf	??_sprintf& (0+255),b
 12688  000DC4  0E00               	movlw	0
 12689  000DC6  0100               	movlb	0	; () banked
 12690  000DC8  0100               	movlb	0	; () banked
 12691  000DCA  6FEF               	movwf	sprintf@c& (0+255),b
 12692  000DCC  0100               	movlb	0	; () banked
 12693  000DCE  51C7               	movf	??_sprintf& (0+255),w,b
 12694  000DD0  0100               	movlb	0	; () banked
 12695  000DD2  51EF               	movf	sprintf@c& (0+255),w,b
 12696  000DD4  0100               	movlb	0	; () banked
 12697  000DD6  0100               	movlb	0	; () banked
 12698  000DD8  6FE9               	movwf	sprintf@prec& (0+255),b
 12699  000DDA  0100               	movlb	0	; () banked
 12700  000DDC  6BEA               	clrf	(sprintf@prec+1)& (0+255),b
 12701  000DDE  0100               	movlb	0	; () banked
 12702  000DE0  BFE9               	btfsc	sprintf@prec& (0+255),7,b
 12703  000DE2  07EA               	decf	(sprintf@prec+1)& (0+255),f,b
 12704                           
 12705                           ;doprnt.c: 1013: break;
 12706  000DE4  D093               	goto	i2l6839
 12707  000DE6                     i2l6825:
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;doprnt.c: 1014: }
 12711                           ;doprnt.c: 1016: ((*sp++ = ('0' + (_val._val/dpowers[c]))));
 12712  000DE6  C0EB  F060         	movff	sprintf@_val,?___lldiv
 12713  000DEA  C0EC  F061         	movff	sprintf@_val+1,?___lldiv+1
 12714  000DEE  C0ED  F062         	movff	sprintf@_val+2,?___lldiv+2
 12715  000DF2  C0EE  F063         	movff	sprintf@_val+3,?___lldiv+3
 12716  000DF6  0100               	movlb	0	; () banked
 12717  000DF8  0100               	movlb	0	; () banked
 12718  000DFA  51EF               	movf	sprintf@c& (0+255),w,b
 12719  000DFC  0D04               	mullw	4
 12720  000DFE  0ED9               	movlw	low _dpowers
 12721  000E00  24F3               	addwf	prodl,w,c
 12722  000E02  6EF6               	movwf	tblptrl,c
 12723  000E04  0E7E               	movlw	high _dpowers
 12724  000E06  20F4               	addwfc	prodh,w,c
 12725  000E08  6EF7               	movwf	tblptrh,c
 12726  000E0A  0009               	tblrd		*+
 12727  000E0C  0100               	movlb	0	; () banked
 12728  000E0E  CFF5 F064          	movff	tablat,?___lldiv+4
 12729  000E12  0009               	tblrd		*+
 12730  000E14  0100               	movlb	0	; () banked
 12731  000E16  CFF5 F065          	movff	tablat,?___lldiv+5
 12732  000E1A  0009               	tblrd		*+
 12733  000E1C  0100               	movlb	0	; () banked
 12734  000E1E  CFF5 F066          	movff	tablat,?___lldiv+6
 12735  000E22  000A               	tblrd		*-
 12736  000E24  0100               	movlb	0	; () banked
 12737  000E26  CFF5 F067          	movff	tablat,?___lldiv+7
 12738  000E2A  EC2C  F02D         	call	___lldiv	;wreg free
 12739  000E2E  0100               	movlb	0	; () banked
 12740  000E30  0100               	movlb	0	; () banked
 12741  000E32  5160               	movf	?___lldiv& (0+255),w,b
 12742  000E34  0F30               	addlw	48
 12743  000E36  0100               	movlb	0	; () banked
 12744  000E38  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 12745  000E3C  0100               	movlb	0	; () banked
 12746  000E3E  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 12747  000E42  6AF8               	clrf	tblptru,c
 12748  000E44  0100               	movlb	0	; () banked
 12749  000E46  6FC7               	movwf	??_sprintf& (0+255),b
 12750  000E48  0E07               	movlw	(high __ramtop+-1)
 12751  000E4A  64F7               	cpfsgt	tblptrh,c
 12752  000E4C  D004               	bra	i2u458_47
 12753  000E4E  C0C7  FFF5         	movff	??_sprintf,tablat
 12754  000E52  000C               	tblwt		*
 12755  000E54  D006               	bra	i2u458_40
 12756  000E56                     i2u458_47:
 12757  000E56  CFF6 FFE9          	movff	tblptrl,fsr0l
 12758  000E5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 12759  000E5E  C0C7  FFEF         	movff	??_sprintf,indf0
 12760  000E62                     i2u458_40:
 12761  000E62  0100               	movlb	0	; () banked
 12762  000E64  0100               	movlb	0	; () banked
 12763  000E66  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 12764  000E68  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;doprnt.c: 1017: _val._val %= dpowers[c];
 12768  000E6A  C0EB  F073         	movff	sprintf@_val,?___llmod
 12769  000E6E  C0EC  F074         	movff	sprintf@_val+1,?___llmod+1
 12770  000E72  C0ED  F075         	movff	sprintf@_val+2,?___llmod+2
 12771  000E76  C0EE  F076         	movff	sprintf@_val+3,?___llmod+3
 12772  000E7A  0100               	movlb	0	; () banked
 12773  000E7C  0100               	movlb	0	; () banked
 12774  000E7E  51EF               	movf	sprintf@c& (0+255),w,b
 12775  000E80  0D04               	mullw	4
 12776  000E82  0ED9               	movlw	low _dpowers
 12777  000E84  24F3               	addwf	prodl,w,c
 12778  000E86  6EF6               	movwf	tblptrl,c
 12779  000E88  0E7E               	movlw	high _dpowers
 12780  000E8A  20F4               	addwfc	prodh,w,c
 12781  000E8C  6EF7               	movwf	tblptrh,c
 12782  000E8E  0009               	tblrd		*+
 12783  000E90  0100               	movlb	0	; () banked
 12784  000E92  CFF5 F077          	movff	tablat,?___llmod+4
 12785  000E96  0009               	tblrd		*+
 12786  000E98  0100               	movlb	0	; () banked
 12787  000E9A  CFF5 F078          	movff	tablat,?___llmod+5
 12788  000E9E  0009               	tblrd		*+
 12789  000EA0  0100               	movlb	0	; () banked
 12790  000EA2  CFF5 F079          	movff	tablat,?___llmod+6
 12791  000EA6  000A               	tblrd		*-
 12792  000EA8  0100               	movlb	0	; () banked
 12793  000EAA  CFF5 F07A          	movff	tablat,?___llmod+7
 12794  000EAE  EC98  F02F         	call	___llmod	;wreg free
 12795  000EB2  C076  F0EE         	movff	?___llmod+3,sprintf@_val+3
 12796  000EB6  C075  F0ED         	movff	?___llmod+2,sprintf@_val+2
 12797  000EBA  C074  F0EC         	movff	?___llmod+1,sprintf@_val+1
 12798  000EBE  C073  F0EB         	movff	?___llmod,sprintf@_val
 12799  000EC2                     i2l6831:
 12800  000EC2  0100               	movlb	0	; () banked
 12801  000EC4  0100               	movlb	0	; () banked
 12802  000EC6  07EF               	decf	sprintf@c& (0+255),f,b
 12803  000EC8  0100               	movlb	0	; () banked
 12804  000ECA  29EF               	incf	sprintf@c& (0+255),w,b
 12805  000ECC  B4D8               	btfsc	status,2,c
 12806  000ECE  D01E               	goto	i2l6839
 12807  000ED0  D76B               	goto	i2l730
 12808  000ED2                     i2l6833:
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;doprnt.c: 1021: ((*sp++ = ('0')));
 12812  000ED2  0100               	movlb	0	; () banked
 12813  000ED4  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 12814  000ED8  0100               	movlb	0	; () banked
 12815  000EDA  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 12816  000EDE  6AF8               	clrf	tblptru,c
 12817  000EE0  0E07               	movlw	(high __ramtop+-1)
 12818  000EE2  64F7               	cpfsgt	tblptrh,c
 12819  000EE4  D004               	bra	i2u460_47
 12820  000EE6  0E30               	movlw	48
 12821  000EE8  6EF5               	movwf	tablat,c
 12822  000EEA  000C               	tblwt		*
 12823  000EEC  D006               	bra	i2u460_40
 12824  000EEE                     i2u460_47:
 12825  000EEE  CFF6 FFE9          	movff	tblptrl,fsr0l
 12826  000EF2  CFF7 FFEA          	movff	tblptrh,fsr0h
 12827  000EF6  0E30               	movlw	48
 12828  000EF8  6EEF               	movwf	indf0,c
 12829  000EFA                     i2u460_40:
 12830  000EFA  0100               	movlb	0	; () banked
 12831  000EFC  0100               	movlb	0	; () banked
 12832  000EFE  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 12833  000F00  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;doprnt.c: 1022: prec--;
 12837  000F02  0100               	movlb	0	; () banked
 12838  000F04  0100               	movlb	0	; () banked
 12839  000F06  07E9               	decf	sprintf@prec& (0+255),f,b
 12840  000F08  A0D8               	btfss	status,0,c
 12841  000F0A  07EA               	decf	(sprintf@prec+1)& (0+255),f,b
 12842  000F0C                     i2l6839:
 12843                           
 12844                           ; BSR set to: 0
 12845  000F0C  0100               	movlb	0	; () banked
 12846  000F0E  0100               	movlb	0	; () banked
 12847  000F10  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 12848  000F12  11E9               	iorwf	sprintf@prec& (0+255),w,b
 12849  000F14  A4D8               	btfss	status,2,c
 12850  000F16  D7DD               	goto	i2l6833
 12851  000F18                     i2l6841:
 12852                           
 12853                           ; BSR set to: 0
 12854                           ;doprnt.c: 1023: }
 12855                           ;doprnt.c: 1024: }
 12856                           ;doprnt.c: 1030: ((*sp++ = ('e')));
 12857  000F18  0100               	movlb	0	; () banked
 12858  000F1A  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 12859  000F1E  0100               	movlb	0	; () banked
 12860  000F20  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 12861  000F24  6AF8               	clrf	tblptru,c
 12862  000F26  0E07               	movlw	(high __ramtop+-1)
 12863  000F28  64F7               	cpfsgt	tblptrh,c
 12864  000F2A  D004               	bra	i2u462_47
 12865  000F2C  0E65               	movlw	101
 12866  000F2E  6EF5               	movwf	tablat,c
 12867  000F30  000C               	tblwt		*
 12868  000F32  D006               	bra	i2u462_40
 12869  000F34                     i2u462_47:
 12870  000F34  CFF6 FFE9          	movff	tblptrl,fsr0l
 12871  000F38  CFF7 FFEA          	movff	tblptrh,fsr0h
 12872  000F3C  0E65               	movlw	101
 12873  000F3E  6EEF               	movwf	indf0,c
 12874  000F40                     i2u462_40:
 12875  000F40  0100               	movlb	0	; () banked
 12876  000F42  0100               	movlb	0	; () banked
 12877  000F44  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 12878  000F46  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;doprnt.c: 1031: if(exp < 0) {
 12882  000F48  0100               	movlb	0	; () banked
 12883  000F4A  0100               	movlb	0	; () banked
 12884  000F4C  AFE5               	btfss	(sprintf@exp+1)& (0+255),7,b
 12885  000F4E  D01C               	goto	i2l6853
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;doprnt.c: 1032: exp = -exp;
 12889  000F50  0100               	movlb	0	; () banked
 12890  000F52  0100               	movlb	0	; () banked
 12891  000F54  6DE4               	negf	sprintf@exp& (0+255),b
 12892  000F56  0100               	movlb	0	; () banked
 12893  000F58  1FE5               	comf	(sprintf@exp+1)& (0+255),f,b
 12894  000F5A  B0D8               	btfsc	status,0,c
 12895  000F5C  2BE5               	incf	(sprintf@exp+1)& (0+255),f,b
 12896                           
 12897                           ; BSR set to: 0
 12898                           ;doprnt.c: 1033: ((*sp++ = ('-')));
 12899  000F5E  0100               	movlb	0	; () banked
 12900  000F60  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 12901  000F64  0100               	movlb	0	; () banked
 12902  000F66  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 12903  000F6A  6AF8               	clrf	tblptru,c
 12904  000F6C  0E07               	movlw	(high __ramtop+-1)
 12905  000F6E  64F7               	cpfsgt	tblptrh,c
 12906  000F70  D004               	bra	i2u464_47
 12907  000F72  0E2D               	movlw	45
 12908  000F74  6EF5               	movwf	tablat,c
 12909  000F76  000C               	tblwt		*
 12910  000F78  D006               	bra	i2u464_40
 12911  000F7A                     i2u464_47:
 12912  000F7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 12913  000F7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 12914  000F82  0E2D               	movlw	45
 12915  000F84  D014               	goto	L16
 12916  000F86                     i2u464_40:
 12917  000F86  D014               	goto	i2u465_40
 12918  000F88                     i2l6853:
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;doprnt.c: 1035: ((*sp++ = ('+')));
 12922  000F88  0100               	movlb	0	; () banked
 12923  000F8A  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 12924  000F8E  0100               	movlb	0	; () banked
 12925  000F90  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 12926  000F94  6AF8               	clrf	tblptru,c
 12927  000F96  0E07               	movlw	(high __ramtop+-1)
 12928  000F98  64F7               	cpfsgt	tblptrh,c
 12929  000F9A  D004               	bra	i2u465_47
 12930  000F9C  0E2B               	movlw	43
 12931  000F9E  6EF5               	movwf	tablat,c
 12932  000FA0  000C               	tblwt		*
 12933  000FA2  D006               	bra	i2u465_40
 12934  000FA4                     i2u465_47:
 12935  000FA4  CFF6 FFE9          	movff	tblptrl,fsr0l
 12936  000FA8  CFF7 FFEA          	movff	tblptrh,fsr0h
 12937  000FAC  0E2B               	movlw	43
 12938  000FAE                     L16:
 12939  000FAE  6EEF               	movwf	indf0,c
 12940  000FB0                     i2u465_40:
 12941  000FB0  0100               	movlb	0	; () banked
 12942  000FB2  0100               	movlb	0	; () banked
 12943  000FB4  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 12944  000FB6  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;doprnt.c: 1048: ((*sp++ = (exp / 10 + '0')));
 12948                           
 12949                           ; BSR set to: 0
 12950  000FB8  C0E4  F069         	movff	sprintf@exp,?___awdiv
 12951  000FBC  C0E5  F06A         	movff	sprintf@exp+1,?___awdiv+1
 12952  000FC0  0E00               	movlw	0
 12953  000FC2  0100               	movlb	0	; () banked
 12954  000FC4  0100               	movlb	0	; () banked
 12955  000FC6  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 12956  000FC8  0E0A               	movlw	10
 12957  000FCA  0100               	movlb	0	; () banked
 12958  000FCC  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 12959  000FCE  EC1A  F02C         	call	___awdiv	;wreg free
 12960  000FD2  0100               	movlb	0	; () banked
 12961  000FD4  0100               	movlb	0	; () banked
 12962  000FD6  5169               	movf	?___awdiv& (0+255),w,b
 12963  000FD8  0F30               	addlw	48
 12964  000FDA  0100               	movlb	0	; () banked
 12965  000FDC  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 12966  000FE0  0100               	movlb	0	; () banked
 12967  000FE2  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 12968  000FE6  6AF8               	clrf	tblptru,c
 12969  000FE8  0100               	movlb	0	; () banked
 12970  000FEA  6FC7               	movwf	??_sprintf& (0+255),b
 12971  000FEC  0E07               	movlw	(high __ramtop+-1)
 12972  000FEE  64F7               	cpfsgt	tblptrh,c
 12973  000FF0  D004               	bra	i2u466_47
 12974  000FF2  C0C7  FFF5         	movff	??_sprintf,tablat
 12975  000FF6  000C               	tblwt		*
 12976  000FF8  D006               	bra	i2u466_40
 12977  000FFA                     i2u466_47:
 12978  000FFA  CFF6 FFE9          	movff	tblptrl,fsr0l
 12979  000FFE  CFF7 FFEA          	movff	tblptrh,fsr0h
 12980  001002  C0C7  FFEF         	movff	??_sprintf,indf0
 12981  001006                     i2u466_40:
 12982  001006  0100               	movlb	0	; () banked
 12983  001008  0100               	movlb	0	; () banked
 12984  00100A  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 12985  00100C  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;doprnt.c: 1049: ((*sp++ = (exp % 10 + '0')));
 12989  00100E  C0E4  F060         	movff	sprintf@exp,?i2___awmod
 12990  001012  C0E5  F061         	movff	sprintf@exp+1,?i2___awmod+1
 12991  001016  0E00               	movlw	0
 12992  001018  0100               	movlb	0	; () banked
 12993  00101A  0100               	movlb	0	; () banked
 12994  00101C  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 12995  00101E  0E0A               	movlw	10
 12996  001020  0100               	movlb	0	; () banked
 12997  001022  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 12998  001024  EC21  F02F         	call	i2___awmod	;wreg free
 12999  001028  0100               	movlb	0	; () banked
 13000  00102A  0100               	movlb	0	; () banked
 13001  00102C  5160               	movf	?i2___awmod& (0+255),w,b
 13002  00102E  0F30               	addlw	48
 13003  001030  0100               	movlb	0	; () banked
 13004  001032  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 13005  001036  0100               	movlb	0	; () banked
 13006  001038  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 13007  00103C  6AF8               	clrf	tblptru,c
 13008  00103E  0100               	movlb	0	; () banked
 13009  001040  6FC7               	movwf	??_sprintf& (0+255),b
 13010  001042  0E07               	movlw	(high __ramtop+-1)
 13011  001044  64F7               	cpfsgt	tblptrh,c
 13012  001046  D004               	bra	i2u467_47
 13013  001048  C0C7  FFF5         	movff	??_sprintf,tablat
 13014  00104C  000C               	tblwt		*
 13015  00104E  D006               	bra	i2u467_40
 13016  001050                     i2u467_47:
 13017  001050  CFF6 FFE9          	movff	tblptrl,fsr0l
 13018  001054  CFF7 FFEA          	movff	tblptrh,fsr0h
 13019  001058  C0C7  FFEF         	movff	??_sprintf,indf0
 13020  00105C                     i2u467_40:
 13021  00105C  0100               	movlb	0	; () banked
 13022  00105E  0100               	movlb	0	; () banked
 13023  001060  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 13024  001062  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 13025                           
 13026                           ;doprnt.c: 1056: continue;
 13027  001064  EFF9  F00E         	goto	i2l7135
 13028  001068                     i2l707:
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;doprnt.c: 1057: }
 13032                           ;doprnt.c: 1096: if(flag & 0x200) {
 13033  001068  0100               	movlb	0	; () banked
 13034  00106A  0100               	movlb	0	; () banked
 13035  00106C  A3E3               	btfss	(sprintf@flag+1)& (0+255),1,b
 13036  00106E  D11B               	goto	i2l6899
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;doprnt.c: 1097: if(exp < 0)
 13040  001070  0100               	movlb	0	; () banked
 13041  001072  0100               	movlb	0	; () banked
 13042  001074  AFE5               	btfss	(sprintf@exp+1)& (0+255),7,b
 13043  001076  D016               	goto	i2l6869
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;doprnt.c: 1098: prec -= (exp+1);
 13047  001078  0E01               	movlw	1
 13048  00107A  0100               	movlb	0	; () banked
 13049  00107C  0100               	movlb	0	; () banked
 13050  00107E  25E4               	addwf	sprintf@exp& (0+255),w,b
 13051  001080  0100               	movlb	0	; () banked
 13052  001082  6FC7               	movwf	??_sprintf& (0+255),b
 13053  001084  0E00               	movlw	0
 13054  001086  0100               	movlb	0	; () banked
 13055  001088  0100               	movlb	0	; () banked
 13056  00108A  21E5               	addwfc	(sprintf@exp+1)& (0+255),w,b
 13057  00108C  0100               	movlb	0	; () banked
 13058  00108E  6FC8               	movwf	(??_sprintf+1)& (0+255),b
 13059  001090  0100               	movlb	0	; () banked
 13060  001092  51C7               	movf	??_sprintf& (0+255),w,b
 13061  001094  0100               	movlb	0	; () banked
 13062  001096  0100               	movlb	0	; () banked
 13063  001098  5FE9               	subwf	sprintf@prec& (0+255),f,b
 13064  00109A  0100               	movlb	0	; () banked
 13065  00109C  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 13066  00109E  0100               	movlb	0	; () banked
 13067  0010A0  0100               	movlb	0	; () banked
 13068  0010A2  5BEA               	subwfb	(sprintf@prec+1)& (0+255),f,b
 13069  0010A4                     i2l6869:
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;doprnt.c: 1100: _val._val = (unsigned long)fval;
 13073  0010A4  C0E6  F07E         	movff	sprintf@fval,?___fttol
 13074  0010A8  C0E7  F07F         	movff	sprintf@fval+1,?___fttol+1
 13075  0010AC  C0E8  F080         	movff	sprintf@fval+2,?___fttol+2
 13076  0010B0  EC05  F02A         	call	___fttol	;wreg free
 13077  0010B4  C081  F0EE         	movff	?___fttol+3,sprintf@_val+3
 13078  0010B8  C080  F0ED         	movff	?___fttol+2,sprintf@_val+2
 13079  0010BC  C07F  F0EC         	movff	?___fttol+1,sprintf@_val+1
 13080  0010C0  C07E  F0EB         	movff	?___fttol,sprintf@_val
 13081                           
 13082                           ;doprnt.c: 1101: for(c = 0 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 13083  0010C4  0100               	movlb	0	; () banked
 13084  0010C6  6FC7               	movwf	??_sprintf& (0+255),b
 13085  0010C8  0E00               	movlw	0
 13086  0010CA  0100               	movlb	0	; () banked
 13087  0010CC  0100               	movlb	0	; () banked
 13088  0010CE  6FEF               	movwf	sprintf@c& (0+255),b
 13089  0010D0  0100               	movlb	0	; () banked
 13090  0010D2  51C7               	movf	??_sprintf& (0+255),w,b
 13091  0010D4                     
 13092                           ; BSR set to: 0
 13093  0010D4  0100               	movlb	0	; () banked
 13094  0010D6  0100               	movlb	0	; () banked
 13095  0010D8  51EF               	movf	sprintf@c& (0+255),w,b
 13096  0010DA  0A0A               	xorlw	10
 13097  0010DC  B4D8               	btfsc	status,2,c
 13098  0010DE  D021               	goto	i2l6885
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;doprnt.c: 1102: if(_val._val < dpowers[c])
 13102                           
 13103                           ; BSR set to: 0
 13104                           
 13105                           ; BSR set to: 0
 13106  0010E0  0100               	movlb	0	; () banked
 13107  0010E2  0100               	movlb	0	; () banked
 13108  0010E4  51EF               	movf	sprintf@c& (0+255),w,b
 13109  0010E6  0D04               	mullw	4
 13110  0010E8  0ED9               	movlw	low _dpowers
 13111  0010EA  24F3               	addwf	prodl,w,c
 13112  0010EC  6EF6               	movwf	tblptrl,c
 13113  0010EE  0E7E               	movlw	high _dpowers
 13114  0010F0  20F4               	addwfc	prodh,w,c
 13115  0010F2  6EF7               	movwf	tblptrh,c
 13116  0010F4  0009               	tblrd		*+
 13117  0010F6  50F5               	movf	tablat,w,c
 13118  0010F8  0100               	movlb	0	; () banked
 13119  0010FA  0100               	movlb	0	; () banked
 13120  0010FC  5DEB               	subwf	sprintf@_val& (0+255),w,b
 13121  0010FE  0009               	tblrd		*+
 13122  001100  50F5               	movf	tablat,w,c
 13123  001102  0100               	movlb	0	; () banked
 13124  001104  59EC               	subwfb	(sprintf@_val+1)& (0+255),w,b
 13125  001106  0009               	tblrd		*+
 13126  001108  50F5               	movf	tablat,w,c
 13127  00110A  0100               	movlb	0	; () banked
 13128  00110C  59ED               	subwfb	(sprintf@_val+2)& (0+255),w,b
 13129  00110E  0009               	tblrd		*+
 13130  001110  50F5               	movf	tablat,w,c
 13131  001112  0100               	movlb	0	; () banked
 13132  001114  59EE               	subwfb	(sprintf@_val+3)& (0+255),w,b
 13133  001116  A0D8               	btfss	status,0,c
 13134  001118  D004               	goto	i2l6885
 13135                           
 13136                           ; BSR set to: 0
 13137                           
 13138                           ; BSR set to: 0
 13139                           
 13140                           ; BSR set to: 0
 13141                           ;doprnt.c: 1103: break;
 13142  00111A  0100               	movlb	0	; () banked
 13143  00111C  0100               	movlb	0	; () banked
 13144  00111E  2BEF               	incf	sprintf@c& (0+255),f,b
 13145  001120  D7D9               	goto	L17
 13146  001122                     i2l6885:
 13147                           
 13148                           ; BSR set to: 0
 13149                           ;doprnt.c: 1104: prec -= c;
 13150  001122  0100               	movlb	0	; () banked
 13151  001124  0100               	movlb	0	; () banked
 13152  001126  51EF               	movf	sprintf@c& (0+255),w,b
 13153  001128  0100               	movlb	0	; () banked
 13154  00112A  0100               	movlb	0	; () banked
 13155  00112C  5FE9               	subwf	sprintf@prec& (0+255),f,b
 13156  00112E  0E00               	movlw	0
 13157  001130  0100               	movlb	0	; () banked
 13158  001132  BFEF               	btfsc	sprintf@c& (0+255),7,b
 13159  001134  0EFF               	movlw	255
 13160  001136  0100               	movlb	0	; () banked
 13161  001138  0100               	movlb	0	; () banked
 13162  00113A  5BEA               	subwfb	(sprintf@prec+1)& (0+255),f,b
 13163                           
 13164                           ;doprnt.c: 1105: if(prec <= 12)
 13165  00113C  0100               	movlb	0	; () banked
 13166  00113E  0100               	movlb	0	; () banked
 13167  001140  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 13168  001142  0A80               	xorlw	128
 13169  001144  0F80               	addlw	-128
 13170  001146  0E0D               	movlw	13
 13171  001148  B4D8               	btfsc	status,2,c
 13172  00114A  5DE9               	subwf	sprintf@prec& (0+255),w,b
 13173  00114C  B0D8               	btfsc	status,0,c
 13174  00114E  D015               	goto	i2l743
 13175                           
 13176                           ; BSR set to: 0
 13177                           ;doprnt.c: 1106: fval += fround(prec);
 13178  001150  0100               	movlb	0	; () banked
 13179  001152  0E00               	movlw	high sprintf@fval
 13180  001154  0100               	movlb	0	; () banked
 13181  001156  0100               	movlb	0	; () banked
 13182  001158  6FB1               	movwf	(?___asftadd+1)& (0+255),b
 13183  00115A  0100               	movlb	0	; () banked
 13184  00115C  0EE6               	movlw	low sprintf@fval
 13185  00115E  0100               	movlb	0	; () banked
 13186  001160  6FB0               	movwf	?___asftadd& (0+255),b
 13187  001162  C0E9  F09E         	movff	sprintf@prec,?_fround
 13188  001166  EC45  F01E         	call	_fround	;wreg free
 13189  00116A  C0A0  F0B4         	movff	?_fround+2,?___asftadd+4
 13190  00116E  C09F  F0B3         	movff	?_fround+1,?___asftadd+3
 13191  001172  C09E  F0B2         	movff	?_fround,?___asftadd+2
 13192  001176  EC21  F037         	call	___asftadd	;wreg free
 13193  00117A                     i2l743:
 13194                           
 13195                           ;doprnt.c: 1109: {
 13196                           ;doprnt.c: 1110: double temp;
 13197                           ;doprnt.c: 1111: temp = scale(prec);
 13198  00117A  C0E9  F09E         	movff	sprintf@prec,?_scale
 13199  00117E  EC54  F012         	call	_scale	;wreg free
 13200  001182  C0A0  F0DA         	movff	?_scale+2,sprintf@temp+2
 13201  001186  C09F  F0D9         	movff	?_scale+1,sprintf@temp+1
 13202  00118A  C09E  F0D8         	movff	?_scale,sprintf@temp
 13203                           
 13204                           ;doprnt.c: 1112: temp *= fval - (double)_val._val;
 13205  00118E  0100               	movlb	0	; () banked
 13206  001190  0E00               	movlw	high sprintf@temp
 13207  001192  0100               	movlb	0	; () banked
 13208  001194  0100               	movlb	0	; () banked
 13209  001196  6FB1               	movwf	(?___asftmul+1)& (0+255),b
 13210  001198  0100               	movlb	0	; () banked
 13211  00119A  0ED8               	movlw	low sprintf@temp
 13212  00119C  0100               	movlb	0	; () banked
 13213  00119E  6FB0               	movwf	?___asftmul& (0+255),b
 13214  0011A0  C0E6  F0A5         	movff	sprintf@fval,?___ftadd+3
 13215  0011A4  C0E7  F0A6         	movff	sprintf@fval+1,?___ftadd+4
 13216  0011A8  C0E8  F0A7         	movff	sprintf@fval+2,?___ftadd+5
 13217  0011AC  C0EB  F099         	movff	sprintf@_val,?___lltoft
 13218  0011B0  C0EC  F09A         	movff	sprintf@_val+1,?___lltoft+1
 13219  0011B4  C0ED  F09B         	movff	sprintf@_val+2,?___lltoft+2
 13220  0011B8  C0EE  F09C         	movff	sprintf@_val+3,?___lltoft+3
 13221  0011BC  EC65  F031         	call	___lltoft	;wreg free
 13222  0011C0  C09B  F08F         	movff	?___lltoft+2,?___ftneg+2
 13223  0011C4  C09A  F08E         	movff	?___lltoft+1,?___ftneg+1
 13224  0011C8  C099  F08D         	movff	?___lltoft,?___ftneg
 13225  0011CC  EC7F  F037         	call	___ftneg	;wreg free
 13226  0011D0  C08F  F0A4         	movff	?___ftneg+2,?___ftadd+2
 13227  0011D4  C08E  F0A3         	movff	?___ftneg+1,?___ftadd+1
 13228  0011D8  C08D  F0A2         	movff	?___ftneg,?___ftadd
 13229  0011DC  ECFC  F01F         	call	___ftadd	;wreg free
 13230  0011E0  C0A4  F0B4         	movff	?___ftadd+2,?___asftmul+4
 13231  0011E4  C0A3  F0B3         	movff	?___ftadd+1,?___asftmul+3
 13232  0011E8  C0A2  F0B2         	movff	?___ftadd,?___asftmul+2
 13233  0011EC  ECDF  F036         	call	___asftmul	;wreg free
 13234                           
 13235                           ;doprnt.c: 1113: _val._val = (unsigned long)temp;
 13236  0011F0  C0D8  F07E         	movff	sprintf@temp,?___fttol
 13237  0011F4  C0D9  F07F         	movff	sprintf@temp+1,?___fttol+1
 13238  0011F8  C0DA  F080         	movff	sprintf@temp+2,?___fttol+2
 13239  0011FC  EC05  F02A         	call	___fttol	;wreg free
 13240  001200  C081  F0EE         	movff	?___fttol+3,sprintf@_val+3
 13241  001204  C080  F0ED         	movff	?___fttol+2,sprintf@_val+2
 13242  001208  C07F  F0EC         	movff	?___fttol+1,sprintf@_val+1
 13243  00120C  C07E  F0EB         	movff	?___fttol,sprintf@_val
 13244                           
 13245                           ;doprnt.c: 1114: }
 13246                           ;doprnt.c: 1115: while(prec && _val._val % 10 == 0) {
 13247  001210  D024               	goto	i2l6895
 13248  001212                     i2l6891:
 13249                           
 13250                           ;doprnt.c: 1116: _val._val /= 10;
 13251  001212  C0EB  F060         	movff	sprintf@_val,?___lldiv
 13252  001216  C0EC  F061         	movff	sprintf@_val+1,?___lldiv+1
 13253  00121A  C0ED  F062         	movff	sprintf@_val+2,?___lldiv+2
 13254  00121E  C0EE  F063         	movff	sprintf@_val+3,?___lldiv+3
 13255  001222  0E0A               	movlw	10
 13256  001224  0100               	movlb	0	; () banked
 13257  001226  0100               	movlb	0	; () banked
 13258  001228  6F64               	movwf	(?___lldiv+4)& (0+255),b
 13259  00122A  0E00               	movlw	0
 13260  00122C  0100               	movlb	0	; () banked
 13261  00122E  6F65               	movwf	(?___lldiv+5)& (0+255),b
 13262  001230  0E00               	movlw	0
 13263  001232  0100               	movlb	0	; () banked
 13264  001234  6F66               	movwf	(?___lldiv+6)& (0+255),b
 13265  001236  0E00               	movlw	0
 13266  001238  0100               	movlb	0	; () banked
 13267  00123A  6F67               	movwf	(?___lldiv+7)& (0+255),b
 13268  00123C  EC2C  F02D         	call	___lldiv	;wreg free
 13269  001240  C063  F0EE         	movff	?___lldiv+3,sprintf@_val+3
 13270  001244  C062  F0ED         	movff	?___lldiv+2,sprintf@_val+2
 13271  001248  C061  F0EC         	movff	?___lldiv+1,sprintf@_val+1
 13272  00124C  C060  F0EB         	movff	?___lldiv,sprintf@_val
 13273                           
 13274                           ;doprnt.c: 1117: prec--;
 13275  001250  0100               	movlb	0	; () banked
 13276  001252  0100               	movlb	0	; () banked
 13277  001254  07E9               	decf	sprintf@prec& (0+255),f,b
 13278  001256  A0D8               	btfss	status,0,c
 13279  001258  07EA               	decf	(sprintf@prec+1)& (0+255),f,b
 13280  00125A                     i2l6895:
 13281  00125A  0100               	movlb	0	; () banked
 13282  00125C  0100               	movlb	0	; () banked
 13283  00125E  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 13284  001260  11E9               	iorwf	sprintf@prec& (0+255),w,b
 13285  001262  B4D8               	btfsc	status,2,c
 13286  001264  D03F               	goto	i2l6903
 13287                           
 13288                           ; BSR set to: 0
 13289  001266  C0EB  F073         	movff	sprintf@_val,?___llmod
 13290  00126A  C0EC  F074         	movff	sprintf@_val+1,?___llmod+1
 13291  00126E  C0ED  F075         	movff	sprintf@_val+2,?___llmod+2
 13292  001272  C0EE  F076         	movff	sprintf@_val+3,?___llmod+3
 13293  001276  0E0A               	movlw	10
 13294  001278  0100               	movlb	0	; () banked
 13295  00127A  0100               	movlb	0	; () banked
 13296  00127C  6F77               	movwf	(?___llmod+4)& (0+255),b
 13297  00127E  0E00               	movlw	0
 13298  001280  0100               	movlb	0	; () banked
 13299  001282  6F78               	movwf	(?___llmod+5)& (0+255),b
 13300  001284  0E00               	movlw	0
 13301  001286  0100               	movlb	0	; () banked
 13302  001288  6F79               	movwf	(?___llmod+6)& (0+255),b
 13303  00128A  0E00               	movlw	0
 13304  00128C  0100               	movlb	0	; () banked
 13305  00128E  6F7A               	movwf	(?___llmod+7)& (0+255),b
 13306  001290  EC98  F02F         	call	___llmod	;wreg free
 13307  001294  0100               	movlb	0	; () banked
 13308  001296  0100               	movlb	0	; () banked
 13309  001298  5176               	movf	(?___llmod+3)& (0+255),w,b
 13310  00129A  1173               	iorwf	?___llmod& (0+255),w,b
 13311  00129C  1174               	iorwf	(?___llmod+1)& (0+255),w,b
 13312  00129E  1175               	iorwf	(?___llmod+2)& (0+255),w,b
 13313  0012A0  A4D8               	btfss	status,2,c
 13314  0012A2  D020               	goto	i2l6903
 13315  0012A4  D7B6               	goto	i2l6891
 13316  0012A6                     i2l6899:
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;doprnt.c: 1121: if(prec <= 12)
 13320  0012A6  0100               	movlb	0	; () banked
 13321  0012A8  0100               	movlb	0	; () banked
 13322  0012AA  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 13323  0012AC  0A80               	xorlw	128
 13324  0012AE  0F80               	addlw	-128
 13325  0012B0  0E0D               	movlw	13
 13326  0012B2  B4D8               	btfsc	status,2,c
 13327  0012B4  5DE9               	subwf	sprintf@prec& (0+255),w,b
 13328  0012B6  B0D8               	btfsc	status,0,c
 13329  0012B8  D015               	goto	i2l6903
 13330                           
 13331                           ; BSR set to: 0
 13332                           ;doprnt.c: 1122: fval += fround(prec);
 13333  0012BA  0100               	movlb	0	; () banked
 13334  0012BC  0E00               	movlw	high sprintf@fval
 13335  0012BE  0100               	movlb	0	; () banked
 13336  0012C0  0100               	movlb	0	; () banked
 13337  0012C2  6FB1               	movwf	(?___asftadd+1)& (0+255),b
 13338  0012C4  0100               	movlb	0	; () banked
 13339  0012C6  0EE6               	movlw	low sprintf@fval
 13340  0012C8  0100               	movlb	0	; () banked
 13341  0012CA  6FB0               	movwf	?___asftadd& (0+255),b
 13342  0012CC  C0E9  F09E         	movff	sprintf@prec,?_fround
 13343  0012D0  EC45  F01E         	call	_fround	;wreg free
 13344  0012D4  C0A0  F0B4         	movff	?_fround+2,?___asftadd+4
 13345  0012D8  C09F  F0B3         	movff	?_fround+1,?___asftadd+3
 13346  0012DC  C09E  F0B2         	movff	?_fround,?___asftadd+2
 13347  0012E0  EC21  F037         	call	___asftadd	;wreg free
 13348  0012E4                     i2l6903:
 13349                           
 13350                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 13351  0012E4  0100               	movlb	0	; () banked
 13352  0012E6  0100               	movlb	0	; () banked
 13353  0012E8  51E5               	movf	(sprintf@exp+1)& (0+255),w,b
 13354  0012EA  0A80               	xorlw	128
 13355  0012EC  0F80               	addlw	-128
 13356  0012EE  0E0A               	movlw	10
 13357  0012F0  B4D8               	btfsc	status,2,c
 13358  0012F2  5DE4               	subwf	sprintf@exp& (0+255),w,b
 13359  0012F4  B0D8               	btfsc	status,0,c
 13360  0012F6  D024               	goto	i2l6911
 13361                           
 13362                           ; BSR set to: 0
 13363  0012F8  0E7F               	movlw	127
 13364  0012FA  0100               	movlb	0	; () banked
 13365  0012FC  0100               	movlb	0	; () banked
 13366  0012FE  15E8               	andwf	(sprintf@fval+2)& (0+255),w,b
 13367  001300  0100               	movlb	0	; () banked
 13368  001302  11E7               	iorwf	(sprintf@fval+1)& (0+255),w,b
 13369  001304  0100               	movlb	0	; () banked
 13370  001306  11E6               	iorwf	sprintf@fval& (0+255),w,b
 13371  001308  B4D8               	btfsc	status,2,c
 13372  00130A  D06F               	goto	i2l6927
 13373                           
 13374                           ; BSR set to: 0
 13375  00130C  C0E6  F07E         	movff	sprintf@fval,?___fttol
 13376  001310  C0E7  F07F         	movff	sprintf@fval+1,?___fttol+1
 13377  001314  C0E8  F080         	movff	sprintf@fval+2,?___fttol+2
 13378  001318  EC05  F02A         	call	___fttol	;wreg free
 13379  00131C  0100               	movlb	0	; () banked
 13380  00131E  0100               	movlb	0	; () banked
 13381  001320  5181               	movf	(?___fttol+3)& (0+255),w,b
 13382  001322  117E               	iorwf	?___fttol& (0+255),w,b
 13383  001324  117F               	iorwf	(?___fttol+1)& (0+255),w,b
 13384  001326  1180               	iorwf	(?___fttol+2)& (0+255),w,b
 13385  001328  A4D8               	btfss	status,2,c
 13386  00132A  D05F               	goto	i2l6927
 13387                           
 13388                           ; BSR set to: 0
 13389  00132C  0100               	movlb	0	; () banked
 13390  00132E  0100               	movlb	0	; () banked
 13391  001330  51E5               	movf	(sprintf@exp+1)& (0+255),w,b
 13392  001332  0A80               	xorlw	128
 13393  001334  0F80               	addlw	-128
 13394  001336  0E02               	movlw	2
 13395  001338  B4D8               	btfsc	status,2,c
 13396  00133A  5DE4               	subwf	sprintf@exp& (0+255),w,b
 13397  00133C  A0D8               	btfss	status,0,c
 13398  00133E  D055               	goto	i2l6927
 13399  001340                     i2l6911:
 13400                           
 13401                           ; BSR set to: 0
 13402                           ;doprnt.c: 1129: if(integ < 4.294967296){
 13403  001340  C0DB  F090         	movff	sprintf@integ,?___ftge
 13404  001344  C0DC  F091         	movff	sprintf@integ+1,?___ftge+1
 13405  001348  C0DD  F092         	movff	sprintf@integ+2,?___ftge+2
 13406  00134C  0E70               	movlw	112
 13407  00134E  0100               	movlb	0	; () banked
 13408  001350  0100               	movlb	0	; () banked
 13409  001352  6F93               	movwf	(?___ftge+3)& (0+255),b
 13410  001354  0E89               	movlw	137
 13411  001356  0100               	movlb	0	; () banked
 13412  001358  0100               	movlb	0	; () banked
 13413  00135A  6F94               	movwf	(?___ftge+4)& (0+255),b
 13414  00135C  0E40               	movlw	64
 13415  00135E  0100               	movlb	0	; () banked
 13416  001360  0100               	movlb	0	; () banked
 13417  001362  6F95               	movwf	(?___ftge+5)& (0+255),b
 13418  001364  EC2F  F02E         	call	___ftge	;wreg free
 13419  001368  B0D8               	btfsc	status,0,c
 13420  00136A  D003               	goto	i2l6915
 13421                           
 13422                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 13423  00136C  0100               	movlb	0	; () banked
 13424  00136E  0EF7               	movlw	247
 13425  001370  D002               	goto	L18
 13426  001372                     i2l6915:
 13427                           
 13428                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 13429  001372  0100               	movlb	0	; () banked
 13430  001374  0EF8               	movlw	248
 13431  001376                     L18:
 13432  001376  0100               	movlb	0	; () banked
 13433  001378  27E4               	addwf	sprintf@exp& (0+255),f,b
 13434  00137A  0EFF               	movlw	255
 13435  00137C  0100               	movlb	0	; () banked
 13436  00137E  23E5               	addwfc	(sprintf@exp+1)& (0+255),f,b
 13437                           
 13438                           ; BSR set to: 0
 13439                           ;doprnt.c: 1133: }
 13440                           ;doprnt.c: 1134: integ = scale(exp);
 13441                           
 13442                           ; BSR set to: 0
 13443  001380  C0E4  F09E         	movff	sprintf@exp,?_scale
 13444  001384  EC54  F012         	call	_scale	;wreg free
 13445  001388  C0A0  F0DD         	movff	?_scale+2,sprintf@integ+2
 13446  00138C  C09F  F0DC         	movff	?_scale+1,sprintf@integ+1
 13447  001390  C09E  F0DB         	movff	?_scale,sprintf@integ
 13448                           
 13449                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 13450  001394  C0E6  F060         	movff	sprintf@fval,?__tdiv_to_l_
 13451  001398  C0E7  F061         	movff	sprintf@fval+1,?__tdiv_to_l_+1
 13452  00139C  C0E8  F062         	movff	sprintf@fval+2,?__tdiv_to_l_+2
 13453  0013A0  C0DB  F063         	movff	sprintf@integ,?__tdiv_to_l_+3
 13454  0013A4  C0DC  F064         	movff	sprintf@integ+1,?__tdiv_to_l_+4
 13455  0013A8  C0DD  F065         	movff	sprintf@integ+2,?__tdiv_to_l_+5
 13456  0013AC  EC71  F025         	call	__tdiv_to_l_	;wreg free
 13457  0013B0  C063  F0D3         	movff	?__tdiv_to_l_+3,_sprintf$741+3
 13458  0013B4  C062  F0D2         	movff	?__tdiv_to_l_+2,_sprintf$741+2
 13459  0013B8  C061  F0D1         	movff	?__tdiv_to_l_+1,_sprintf$741+1
 13460  0013BC  C060  F0D0         	movff	?__tdiv_to_l_,_sprintf$741
 13461  0013C0  C0D0  F0EB         	movff	_sprintf$741,sprintf@_val
 13462  0013C4  C0D1  F0EC         	movff	_sprintf$741+1,sprintf@_val+1
 13463  0013C8  C0D2  F0ED         	movff	_sprintf$741+2,sprintf@_val+2
 13464  0013CC  C0D3  F0EE         	movff	_sprintf$741+3,sprintf@_val+3
 13465                           
 13466                           ;doprnt.c: 1138: fval = 0.0;
 13467  0013D0  0E00               	movlw	0
 13468  0013D2  0100               	movlb	0	; () banked
 13469  0013D4  0100               	movlb	0	; () banked
 13470  0013D6  6FE6               	movwf	sprintf@fval& (0+255),b
 13471  0013D8  0E00               	movlw	0
 13472  0013DA  0100               	movlb	0	; () banked
 13473  0013DC  0100               	movlb	0	; () banked
 13474  0013DE  6FE7               	movwf	(sprintf@fval+1)& (0+255),b
 13475  0013E0  0E00               	movlw	0
 13476  0013E2  0100               	movlb	0	; () banked
 13477  0013E4  0100               	movlb	0	; () banked
 13478  0013E6  6FE8               	movwf	(sprintf@fval+2)& (0+255),b
 13479                           
 13480                           ;doprnt.c: 1139: } else {
 13481  0013E8  D032               	goto	i2l6933
 13482  0013EA                     i2l6927:
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 13486  0013EA  C0E6  F07E         	movff	sprintf@fval,?___fttol
 13487  0013EE  C0E7  F07F         	movff	sprintf@fval+1,?___fttol+1
 13488  0013F2  C0E8  F080         	movff	sprintf@fval+2,?___fttol+2
 13489  0013F6  EC05  F02A         	call	___fttol	;wreg free
 13490  0013FA  C081  F0EE         	movff	?___fttol+3,sprintf@_val+3
 13491  0013FE  C080  F0ED         	movff	?___fttol+2,sprintf@_val+2
 13492  001402  C07F  F0EC         	movff	?___fttol+1,sprintf@_val+1
 13493  001406  C07E  F0EB         	movff	?___fttol,sprintf@_val
 13494                           
 13495                           ;doprnt.c: 1141: fval -= (double)_val._val;
 13496  00140A  0100               	movlb	0	; () banked
 13497  00140C  0E00               	movlw	high sprintf@fval
 13498  00140E  0100               	movlb	0	; () banked
 13499  001410  0100               	movlb	0	; () banked
 13500  001412  6FB7               	movwf	(?___asftsub+1)& (0+255),b
 13501  001414  0100               	movlb	0	; () banked
 13502  001416  0EE6               	movlw	low sprintf@fval
 13503  001418  0100               	movlb	0	; () banked
 13504  00141A  6FB6               	movwf	?___asftsub& (0+255),b
 13505  00141C  C0EB  F099         	movff	sprintf@_val,?___lltoft
 13506  001420  C0EC  F09A         	movff	sprintf@_val+1,?___lltoft+1
 13507  001424  C0ED  F09B         	movff	sprintf@_val+2,?___lltoft+2
 13508  001428  C0EE  F09C         	movff	sprintf@_val+3,?___lltoft+3
 13509  00142C  EC65  F031         	call	___lltoft	;wreg free
 13510  001430  C09B  F0BA         	movff	?___lltoft+2,?___asftsub+4
 13511  001434  C09A  F0B9         	movff	?___lltoft+1,?___asftsub+3
 13512  001438  C099  F0B8         	movff	?___lltoft,?___asftsub+2
 13513  00143C  EC9D  F036         	call	___asftsub	;wreg free
 13514                           
 13515                           ;doprnt.c: 1142: exp = 0;
 13516  001440  0E00               	movlw	0
 13517  001442  0100               	movlb	0	; () banked
 13518  001444  0100               	movlb	0	; () banked
 13519  001446  6FE5               	movwf	(sprintf@exp+1)& (0+255),b
 13520  001448  0E00               	movlw	0
 13521  00144A  0100               	movlb	0	; () banked
 13522  00144C  6FE4               	movwf	sprintf@exp& (0+255),b
 13523  00144E                     i2l6933:
 13524                           
 13525                           ; BSR set to: 0
 13526                           ;doprnt.c: 1143: }
 13527                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 13528  00144E  0100               	movlb	0	; () banked
 13529  001450  6FC7               	movwf	??_sprintf& (0+255),b
 13530  001452  0E01               	movlw	1
 13531  001454  0100               	movlb	0	; () banked
 13532  001456  0100               	movlb	0	; () banked
 13533  001458  6FEF               	movwf	sprintf@c& (0+255),b
 13534  00145A  0100               	movlb	0	; () banked
 13535  00145C  51C7               	movf	??_sprintf& (0+255),w,b
 13536  00145E                     
 13537                           ; BSR set to: 0
 13538  00145E  0100               	movlb	0	; () banked
 13539  001460  0100               	movlb	0	; () banked
 13540  001462  51EF               	movf	sprintf@c& (0+255),w,b
 13541  001464  0A0A               	xorlw	10
 13542  001466  B4D8               	btfsc	status,2,c
 13543  001468  D021               	goto	i2l6947
 13544                           
 13545                           ; BSR set to: 0
 13546                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 13547                           
 13548                           ; BSR set to: 0
 13549                           
 13550                           ; BSR set to: 0
 13551  00146A  0100               	movlb	0	; () banked
 13552  00146C  0100               	movlb	0	; () banked
 13553  00146E  51EF               	movf	sprintf@c& (0+255),w,b
 13554  001470  0D04               	mullw	4
 13555  001472  0ED9               	movlw	low _dpowers
 13556  001474  24F3               	addwf	prodl,w,c
 13557  001476  6EF6               	movwf	tblptrl,c
 13558  001478  0E7E               	movlw	high _dpowers
 13559  00147A  20F4               	addwfc	prodh,w,c
 13560  00147C  6EF7               	movwf	tblptrh,c
 13561  00147E  0009               	tblrd		*+
 13562  001480  50F5               	movf	tablat,w,c
 13563  001482  0100               	movlb	0	; () banked
 13564  001484  0100               	movlb	0	; () banked
 13565  001486  5DEB               	subwf	sprintf@_val& (0+255),w,b
 13566  001488  0009               	tblrd		*+
 13567  00148A  50F5               	movf	tablat,w,c
 13568  00148C  0100               	movlb	0	; () banked
 13569  00148E  59EC               	subwfb	(sprintf@_val+1)& (0+255),w,b
 13570  001490  0009               	tblrd		*+
 13571  001492  50F5               	movf	tablat,w,c
 13572  001494  0100               	movlb	0	; () banked
 13573  001496  59ED               	subwfb	(sprintf@_val+2)& (0+255),w,b
 13574  001498  0009               	tblrd		*+
 13575  00149A  50F5               	movf	tablat,w,c
 13576  00149C  0100               	movlb	0	; () banked
 13577  00149E  59EE               	subwfb	(sprintf@_val+3)& (0+255),w,b
 13578  0014A0  A0D8               	btfss	status,0,c
 13579  0014A2  D004               	goto	i2l6947
 13580                           
 13581                           ; BSR set to: 0
 13582                           
 13583                           ; BSR set to: 0
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;doprnt.c: 1147: break;
 13587  0014A4  0100               	movlb	0	; () banked
 13588  0014A6  0100               	movlb	0	; () banked
 13589  0014A8  2BEF               	incf	sprintf@c& (0+255),f,b
 13590  0014AA  D7D9               	goto	L19
 13591  0014AC                     i2l6947:
 13592                           
 13593                           ; BSR set to: 0
 13594                           ;doprnt.c: 1151: width -= prec + c + exp;
 13595  0014AC  0100               	movlb	0	; () banked
 13596  0014AE  C0EF  F0C7         	movff	sprintf@c,??_sprintf
 13597  0014B2  0100               	movlb	0	; () banked
 13598  0014B4  6BC8               	clrf	(??_sprintf+1)& (0+255),b
 13599  0014B6  BFC7               	btfsc	??_sprintf& (0+255),7,b
 13600  0014B8  07C8               	decf	(??_sprintf+1)& (0+255),f,b
 13601  0014BA  0100               	movlb	0	; () banked
 13602  0014BC  0100               	movlb	0	; () banked
 13603  0014BE  51E9               	movf	sprintf@prec& (0+255),w,b
 13604  0014C0  0100               	movlb	0	; () banked
 13605  0014C2  27C7               	addwf	??_sprintf& (0+255),f,b
 13606  0014C4  0100               	movlb	0	; () banked
 13607  0014C6  0100               	movlb	0	; () banked
 13608  0014C8  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 13609  0014CA  0100               	movlb	0	; () banked
 13610  0014CC  23C8               	addwfc	(??_sprintf+1)& (0+255),f,b
 13611  0014CE  0100               	movlb	0	; () banked
 13612  0014D0  0100               	movlb	0	; () banked
 13613  0014D2  51E4               	movf	sprintf@exp& (0+255),w,b
 13614  0014D4  0100               	movlb	0	; () banked
 13615  0014D6  27C7               	addwf	??_sprintf& (0+255),f,b
 13616  0014D8  0100               	movlb	0	; () banked
 13617  0014DA  0100               	movlb	0	; () banked
 13618  0014DC  51E5               	movf	(sprintf@exp+1)& (0+255),w,b
 13619  0014DE  0100               	movlb	0	; () banked
 13620  0014E0  23C8               	addwfc	(??_sprintf+1)& (0+255),f,b
 13621  0014E2  0100               	movlb	0	; () banked
 13622  0014E4  51C7               	movf	??_sprintf& (0+255),w,b
 13623  0014E6  0100               	movlb	0	; () banked
 13624  0014E8  0100               	movlb	0	; () banked
 13625  0014EA  5FE0               	subwf	sprintf@width& (0+255),f,b
 13626  0014EC  0100               	movlb	0	; () banked
 13627  0014EE  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 13628  0014F0  0100               	movlb	0	; () banked
 13629  0014F2  0100               	movlb	0	; () banked
 13630  0014F4  5BE1               	subwfb	(sprintf@width+1)& (0+255),f,b
 13631                           
 13632                           ;doprnt.c: 1152: if(
 13633                           ;doprnt.c: 1156: prec)
 13634  0014F6  0100               	movlb	0	; () banked
 13635  0014F8  0100               	movlb	0	; () banked
 13636  0014FA  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 13637  0014FC  11E9               	iorwf	sprintf@prec& (0+255),w,b
 13638  0014FE  B4D8               	btfsc	status,2,c
 13639  001500  D005               	goto	i2l6951
 13640                           
 13641                           ; BSR set to: 0
 13642                           ;doprnt.c: 1157: width--;
 13643  001502  0100               	movlb	0	; () banked
 13644  001504  0100               	movlb	0	; () banked
 13645  001506  07E0               	decf	sprintf@width& (0+255),f,b
 13646  001508  A0D8               	btfss	status,0,c
 13647  00150A  07E1               	decf	(sprintf@width+1)& (0+255),f,b
 13648  00150C                     i2l6951:
 13649                           
 13650                           ; BSR set to: 0
 13651                           ;doprnt.c: 1158: if(flag & 0x03)
 13652  00150C  0E03               	movlw	3
 13653  00150E  0100               	movlb	0	; () banked
 13654  001510  0100               	movlb	0	; () banked
 13655  001512  15E2               	andwf	sprintf@flag& (0+255),w,b
 13656  001514  0100               	movlb	0	; () banked
 13657  001516  6FC7               	movwf	??_sprintf& (0+255),b
 13658  001518  0E00               	movlw	0
 13659  00151A  0100               	movlb	0	; () banked
 13660  00151C  0100               	movlb	0	; () banked
 13661  00151E  15E3               	andwf	(sprintf@flag+1)& (0+255),w,b
 13662  001520  0100               	movlb	0	; () banked
 13663  001522  6FC8               	movwf	(??_sprintf+1)& (0+255),b
 13664  001524  0100               	movlb	0	; () banked
 13665  001526  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 13666  001528  11C7               	iorwf	??_sprintf& (0+255),w,b
 13667  00152A  B4D8               	btfsc	status,2,c
 13668  00152C  D005               	goto	i2l6955
 13669                           
 13670                           ; BSR set to: 0
 13671                           ;doprnt.c: 1159: width--;
 13672  00152E  0100               	movlb	0	; () banked
 13673  001530  0100               	movlb	0	; () banked
 13674  001532  07E0               	decf	sprintf@width& (0+255),f,b
 13675  001534  A0D8               	btfss	status,0,c
 13676  001536  07E1               	decf	(sprintf@width+1)& (0+255),f,b
 13677  001538                     i2l6955:
 13678                           
 13679                           ; BSR set to: 0
 13680                           ;doprnt.c: 1162: if(flag & 0x04) {
 13681  001538  0100               	movlb	0	; () banked
 13682  00153A  0100               	movlb	0	; () banked
 13683  00153C  B5E2               	btfsc	sprintf@flag& (0+255),2,b
 13684  00153E  D01E               	goto	i2l6965
 13685  001540  D045               	goto	i2l6973
 13686  001542                     i2l6959:
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;doprnt.c: 1176: ((*sp++ = ('0')));
 13690  001542  0100               	movlb	0	; () banked
 13691  001544  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 13692  001548  0100               	movlb	0	; () banked
 13693  00154A  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 13694  00154E  6AF8               	clrf	tblptru,c
 13695  001550  0E07               	movlw	(high __ramtop+-1)
 13696  001552  64F7               	cpfsgt	tblptrh,c
 13697  001554  D004               	bra	i2u488_47
 13698  001556  0E30               	movlw	48
 13699  001558  6EF5               	movwf	tablat,c
 13700  00155A  000C               	tblwt		*
 13701  00155C  D006               	bra	i2u488_40
 13702  00155E                     i2u488_47:
 13703  00155E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13704  001562  CFF7 FFEA          	movff	tblptrh,fsr0h
 13705  001566  0E30               	movlw	48
 13706  001568  6EEF               	movwf	indf0,c
 13707  00156A                     i2u488_40:
 13708  00156A  0100               	movlb	0	; () banked
 13709  00156C  0100               	movlb	0	; () banked
 13710  00156E  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 13711  001570  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 13712                           
 13713                           ; BSR set to: 0
 13714                           ;doprnt.c: 1177: width--;
 13715  001572  0100               	movlb	0	; () banked
 13716  001574  0100               	movlb	0	; () banked
 13717  001576  07E0               	decf	sprintf@width& (0+255),f,b
 13718  001578  A0D8               	btfss	status,0,c
 13719  00157A  07E1               	decf	(sprintf@width+1)& (0+255),f,b
 13720  00157C                     i2l6965:
 13721                           
 13722                           ; BSR set to: 0
 13723  00157C  0100               	movlb	0	; () banked
 13724  00157E  0100               	movlb	0	; () banked
 13725  001580  51E1               	movf	(sprintf@width+1)& (0+255),w,b
 13726  001582  0A80               	xorlw	128
 13727  001584  0F80               	addlw	-128
 13728  001586  0E01               	movlw	1
 13729  001588  B4D8               	btfsc	status,2,c
 13730  00158A  5DE0               	subwf	sprintf@width& (0+255),w,b
 13731  00158C  A0D8               	btfss	status,0,c
 13732  00158E  D0A7               	goto	i2l6989
 13733  001590  D7D8               	goto	i2l6959
 13734  001592                     i2l6967:
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;doprnt.c: 1188: ((*sp++ = (' ')));
 13738  001592  0100               	movlb	0	; () banked
 13739  001594  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 13740  001598  0100               	movlb	0	; () banked
 13741  00159A  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 13742  00159E  6AF8               	clrf	tblptru,c
 13743  0015A0  0E07               	movlw	(high __ramtop+-1)
 13744  0015A2  64F7               	cpfsgt	tblptrh,c
 13745  0015A4  D004               	bra	i2u490_47
 13746  0015A6  0E20               	movlw	32
 13747  0015A8  6EF5               	movwf	tablat,c
 13748  0015AA  000C               	tblwt		*
 13749  0015AC  D006               	bra	i2u490_40
 13750  0015AE                     i2u490_47:
 13751  0015AE  CFF6 FFE9          	movff	tblptrl,fsr0l
 13752  0015B2  CFF7 FFEA          	movff	tblptrh,fsr0h
 13753  0015B6  0E20               	movlw	32
 13754  0015B8  6EEF               	movwf	indf0,c
 13755  0015BA                     i2u490_40:
 13756  0015BA  0100               	movlb	0	; () banked
 13757  0015BC  0100               	movlb	0	; () banked
 13758  0015BE  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 13759  0015C0  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 13760                           
 13761                           ; BSR set to: 0
 13762                           ;doprnt.c: 1189: width--;
 13763  0015C2  0100               	movlb	0	; () banked
 13764  0015C4  0100               	movlb	0	; () banked
 13765  0015C6  07E0               	decf	sprintf@width& (0+255),f,b
 13766  0015C8  A0D8               	btfss	status,0,c
 13767  0015CA  07E1               	decf	(sprintf@width+1)& (0+255),f,b
 13768  0015CC                     i2l6973:
 13769                           
 13770                           ; BSR set to: 0
 13771  0015CC  0100               	movlb	0	; () banked
 13772  0015CE  0100               	movlb	0	; () banked
 13773  0015D0  51E1               	movf	(sprintf@width+1)& (0+255),w,b
 13774  0015D2  0A80               	xorlw	128
 13775  0015D4  0F80               	addlw	-128
 13776  0015D6  0E01               	movlw	1
 13777  0015D8  B4D8               	btfsc	status,2,c
 13778  0015DA  5DE0               	subwf	sprintf@width& (0+255),w,b
 13779  0015DC  B0D8               	btfsc	status,0,c
 13780  0015DE  D7D9               	goto	i2l6967
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;doprnt.c: 1190: }
 13784                           ;doprnt.c: 1195: if(flag & 0x03)
 13785                           
 13786                           ; BSR set to: 0
 13787  0015E0  0E03               	movlw	3
 13788  0015E2  0100               	movlb	0	; () banked
 13789  0015E4  0100               	movlb	0	; () banked
 13790  0015E6  15E2               	andwf	sprintf@flag& (0+255),w,b
 13791  0015E8  0100               	movlb	0	; () banked
 13792  0015EA  6FC7               	movwf	??_sprintf& (0+255),b
 13793  0015EC  0E00               	movlw	0
 13794  0015EE  0100               	movlb	0	; () banked
 13795  0015F0  0100               	movlb	0	; () banked
 13796  0015F2  15E3               	andwf	(sprintf@flag+1)& (0+255),w,b
 13797  0015F4  0100               	movlb	0	; () banked
 13798  0015F6  6FC8               	movwf	(??_sprintf+1)& (0+255),b
 13799  0015F8  0100               	movlb	0	; () banked
 13800  0015FA  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 13801  0015FC  11C7               	iorwf	??_sprintf& (0+255),w,b
 13802  0015FE  B4D8               	btfsc	status,2,c
 13803  001600  D06E               	goto	i2l6989
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;doprnt.c: 1197: ((*sp++ = ('-')));
 13807  001602  0100               	movlb	0	; () banked
 13808  001604  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 13809  001608  0100               	movlb	0	; () banked
 13810  00160A  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 13811  00160E  6AF8               	clrf	tblptru,c
 13812  001610  0E07               	movlw	(high __ramtop+-1)
 13813  001612  64F7               	cpfsgt	tblptrh,c
 13814  001614  D004               	bra	i2u493_47
 13815  001616  0E2D               	movlw	45
 13816  001618  6EF5               	movwf	tablat,c
 13817  00161A  000C               	tblwt		*
 13818  00161C  D006               	bra	i2u493_40
 13819  00161E                     i2u493_47:
 13820  00161E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13821  001622  CFF7 FFEA          	movff	tblptrh,fsr0h
 13822  001626  0E2D               	movlw	45
 13823  001628  6EEF               	movwf	indf0,c
 13824  00162A                     i2u493_40:
 13825  00162A  D055               	goto	i2u494_40
 13826  00162C                     i2l6981:
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;doprnt.c: 1207: {
 13830                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
 13831  00162C  C0EB  F060         	movff	sprintf@_val,?___lldiv
 13832  001630  C0EC  F061         	movff	sprintf@_val+1,?___lldiv+1
 13833  001634  C0ED  F062         	movff	sprintf@_val+2,?___lldiv+2
 13834  001638  C0EE  F063         	movff	sprintf@_val+3,?___lldiv+3
 13835  00163C  0100               	movlb	0	; () banked
 13836  00163E  0100               	movlb	0	; () banked
 13837  001640  51EF               	movf	sprintf@c& (0+255),w,b
 13838  001642  0D04               	mullw	4
 13839  001644  0ED9               	movlw	low _dpowers
 13840  001646  24F3               	addwf	prodl,w,c
 13841  001648  6EF6               	movwf	tblptrl,c
 13842  00164A  0E7E               	movlw	high _dpowers
 13843  00164C  20F4               	addwfc	prodh,w,c
 13844  00164E  6EF7               	movwf	tblptrh,c
 13845  001650  0009               	tblrd		*+
 13846  001652  0100               	movlb	0	; () banked
 13847  001654  CFF5 F064          	movff	tablat,?___lldiv+4
 13848  001658  0009               	tblrd		*+
 13849  00165A  0100               	movlb	0	; () banked
 13850  00165C  CFF5 F065          	movff	tablat,?___lldiv+5
 13851  001660  0009               	tblrd		*+
 13852  001662  0100               	movlb	0	; () banked
 13853  001664  CFF5 F066          	movff	tablat,?___lldiv+6
 13854  001668  000A               	tblrd		*-
 13855  00166A  0100               	movlb	0	; () banked
 13856  00166C  CFF5 F067          	movff	tablat,?___lldiv+7
 13857  001670  EC2C  F02D         	call	___lldiv	;wreg free
 13858  001674  C060  F0D4         	movff	?___lldiv,sprintf@vd
 13859  001678  C061  F0D5         	movff	?___lldiv+1,sprintf@vd+1
 13860                           
 13861                           ;doprnt.c: 1209: vd %= 10;
 13862  00167C  C0D4  F060         	movff	sprintf@vd,?___lwmod
 13863  001680  C0D5  F061         	movff	sprintf@vd+1,?___lwmod+1
 13864  001684  0E00               	movlw	0
 13865  001686  0100               	movlb	0	; () banked
 13866  001688  0100               	movlb	0	; () banked
 13867  00168A  6F63               	movwf	(?___lwmod+3)& (0+255),b
 13868  00168C  0E0A               	movlw	10
 13869  00168E  0100               	movlb	0	; () banked
 13870  001690  6F62               	movwf	(?___lwmod+2)& (0+255),b
 13871  001692  ECDC  F032         	call	___lwmod	;wreg free
 13872  001696  0100               	movlb	0	; () banked
 13873  001698  C060  F0D4         	movff	?___lwmod,sprintf@vd
 13874  00169C  0100               	movlb	0	; () banked
 13875  00169E  C061  F0D5         	movff	?___lwmod+1,sprintf@vd+1
 13876                           
 13877                           ; BSR set to: 0
 13878                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
 13879  0016A2  0100               	movlb	0	; () banked
 13880  0016A4  0100               	movlb	0	; () banked
 13881  0016A6  51D4               	movf	sprintf@vd& (0+255),w,b
 13882  0016A8  0F30               	addlw	48
 13883  0016AA  0100               	movlb	0	; () banked
 13884  0016AC  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 13885  0016B0  0100               	movlb	0	; () banked
 13886  0016B2  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 13887  0016B6  6AF8               	clrf	tblptru,c
 13888  0016B8  0100               	movlb	0	; () banked
 13889  0016BA  6FC7               	movwf	??_sprintf& (0+255),b
 13890  0016BC  0E07               	movlw	(high __ramtop+-1)
 13891  0016BE  64F7               	cpfsgt	tblptrh,c
 13892  0016C0  D004               	bra	i2u494_47
 13893  0016C2  C0C7  FFF5         	movff	??_sprintf,tablat
 13894  0016C6  000C               	tblwt		*
 13895  0016C8  D006               	bra	i2u494_40
 13896  0016CA                     i2u494_47:
 13897  0016CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13898  0016CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13899  0016D2  C0C7  FFEF         	movff	??_sprintf,indf0
 13900  0016D6                     i2u494_40:
 13901  0016D6  0100               	movlb	0	; () banked
 13902  0016D8  0100               	movlb	0	; () banked
 13903  0016DA  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 13904  0016DC  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 13905  0016DE                     i2l6989:
 13906                           
 13907                           ; BSR set to: 0
 13908  0016DE  0100               	movlb	0	; () banked
 13909  0016E0  0100               	movlb	0	; () banked
 13910  0016E2  07EF               	decf	sprintf@c& (0+255),f,b
 13911  0016E4  0100               	movlb	0	; () banked
 13912  0016E6  29EF               	incf	sprintf@c& (0+255),w,b
 13913  0016E8  B4D8               	btfsc	status,2,c
 13914  0016EA  D01E               	goto	i2l6997
 13915  0016EC  D79F               	goto	i2l6981
 13916  0016EE                     i2l6991:
 13917                           
 13918                           ; BSR set to: 0
 13919                           ;doprnt.c: 1215: ((*sp++ = ('0')));
 13920  0016EE  0100               	movlb	0	; () banked
 13921  0016F0  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 13922  0016F4  0100               	movlb	0	; () banked
 13923  0016F6  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 13924  0016FA  6AF8               	clrf	tblptru,c
 13925  0016FC  0E07               	movlw	(high __ramtop+-1)
 13926  0016FE  64F7               	cpfsgt	tblptrh,c
 13927  001700  D004               	bra	i2u496_47
 13928  001702  0E30               	movlw	48
 13929  001704  6EF5               	movwf	tablat,c
 13930  001706  000C               	tblwt		*
 13931  001708  D006               	bra	i2u496_40
 13932  00170A                     i2u496_47:
 13933  00170A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13934  00170E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13935  001712  0E30               	movlw	48
 13936  001714  6EEF               	movwf	indf0,c
 13937  001716                     i2u496_40:
 13938  001716  0100               	movlb	0	; () banked
 13939  001718  0100               	movlb	0	; () banked
 13940  00171A  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 13941  00171C  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 13942                           
 13943                           ; BSR set to: 0
 13944                           ;doprnt.c: 1216: exp--;
 13945  00171E  0100               	movlb	0	; () banked
 13946  001720  0100               	movlb	0	; () banked
 13947  001722  07E4               	decf	sprintf@exp& (0+255),f,b
 13948  001724  A0D8               	btfss	status,0,c
 13949  001726  07E5               	decf	(sprintf@exp+1)& (0+255),f,b
 13950  001728                     i2l6997:
 13951                           
 13952                           ; BSR set to: 0
 13953  001728  0100               	movlb	0	; () banked
 13954  00172A  0100               	movlb	0	; () banked
 13955  00172C  51E5               	movf	(sprintf@exp+1)& (0+255),w,b
 13956  00172E  0A80               	xorlw	128
 13957  001730  0F80               	addlw	-128
 13958  001732  0E01               	movlw	1
 13959  001734  B4D8               	btfsc	status,2,c
 13960  001736  5DE4               	subwf	sprintf@exp& (0+255),w,b
 13961  001738  B0D8               	btfsc	status,0,c
 13962  00173A  D7D9               	goto	i2l6991
 13963                           
 13964                           ; BSR set to: 0
 13965                           ;doprnt.c: 1217: }
 13966                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13967                           
 13968                           ; BSR set to: 0
 13969  00173C  0100               	movlb	0	; () banked
 13970  00173E  0100               	movlb	0	; () banked
 13971  001740  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 13972  001742  0A80               	xorlw	128
 13973  001744  0F80               	addlw	-128
 13974  001746  0E09               	movlw	9
 13975  001748  B4D8               	btfsc	status,2,c
 13976  00174A  5DE9               	subwf	sprintf@prec& (0+255),w,b
 13977  00174C  A0D8               	btfss	status,0,c
 13978  00174E  D009               	goto	i2l781
 13979                           
 13980                           ; BSR set to: 0
 13981                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13982  001750  0100               	movlb	0	; () banked
 13983  001752  6FC7               	movwf	??_sprintf& (0+255),b
 13984  001754  0E08               	movlw	8
 13985  001756  0100               	movlb	0	; () banked
 13986  001758  0100               	movlb	0	; () banked
 13987  00175A  6FEF               	movwf	sprintf@c& (0+255),b
 13988  00175C  0100               	movlb	0	; () banked
 13989  00175E  51C7               	movf	??_sprintf& (0+255),w,b
 13990  001760  D002               	goto	i2l7003
 13991  001762                     i2l781:
 13992                           
 13993                           ; BSR set to: 0
 13994                           ;doprnt.c: 1220: else
 13995                           ;doprnt.c: 1221: c = prec;
 13996  001762  C0E9  F0EF         	movff	sprintf@prec,sprintf@c
 13997  001766                     i2l7003:
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;doprnt.c: 1222: prec -= c;
 14001  001766  0100               	movlb	0	; () banked
 14002  001768  0100               	movlb	0	; () banked
 14003  00176A  51EF               	movf	sprintf@c& (0+255),w,b
 14004  00176C  0100               	movlb	0	; () banked
 14005  00176E  0100               	movlb	0	; () banked
 14006  001770  5FE9               	subwf	sprintf@prec& (0+255),f,b
 14007  001772  0E00               	movlw	0
 14008  001774  0100               	movlb	0	; () banked
 14009  001776  BFEF               	btfsc	sprintf@c& (0+255),7,b
 14010  001778  0EFF               	movlw	255
 14011  00177A  0100               	movlb	0	; () banked
 14012  00177C  0100               	movlb	0	; () banked
 14013  00177E  5BEA               	subwfb	(sprintf@prec+1)& (0+255),f,b
 14014                           
 14015                           ; BSR set to: 0
 14016                           ;doprnt.c: 1226: if(c)
 14017  001780  0100               	movlb	0	; () banked
 14018  001782  0100               	movlb	0	; () banked
 14019  001784  51EF               	movf	sprintf@c& (0+255),w,b
 14020  001786  B4D8               	btfsc	status,2,c
 14021  001788  D018               	goto	i2l7011
 14022                           
 14023                           ; BSR set to: 0
 14024                           ;doprnt.c: 1228: ((*sp++ = ('.')));
 14025  00178A  0100               	movlb	0	; () banked
 14026  00178C  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 14027  001790  0100               	movlb	0	; () banked
 14028  001792  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 14029  001796  6AF8               	clrf	tblptru,c
 14030  001798  0E07               	movlw	(high __ramtop+-1)
 14031  00179A  64F7               	cpfsgt	tblptrh,c
 14032  00179C  D004               	bra	i2u500_47
 14033  00179E  0E2E               	movlw	46
 14034  0017A0  6EF5               	movwf	tablat,c
 14035  0017A2  000C               	tblwt		*
 14036  0017A4  D006               	bra	i2u500_40
 14037  0017A6                     i2u500_47:
 14038  0017A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14039  0017AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14040  0017AE  0E2E               	movlw	46
 14041  0017B0  6EEF               	movwf	indf0,c
 14042  0017B2                     i2u500_40:
 14043  0017B2  0100               	movlb	0	; () banked
 14044  0017B4  0100               	movlb	0	; () banked
 14045  0017B6  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 14046  0017B8  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 14047  0017BA                     i2l7011:
 14048                           
 14049                           ; BSR set to: 0
 14050                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 14051  0017BA  C0EF  F09E         	movff	sprintf@c,?_scale
 14052  0017BE  EC54  F012         	call	_scale	;wreg free
 14053  0017C2  C0A0  F0CF         	movff	?_scale+2,_sprintf$1435+2
 14054  0017C6  C09F  F0CE         	movff	?_scale+1,_sprintf$1435+1
 14055  0017CA  C09E  F0CD         	movff	?_scale,_sprintf$1435
 14056                           
 14057                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 14058  0017CE  C0E6  F090         	movff	sprintf@fval,?___ftmul+3
 14059  0017D2  C0E7  F091         	movff	sprintf@fval+1,?___ftmul+4
 14060  0017D6  C0E8  F092         	movff	sprintf@fval+2,?___ftmul+5
 14061  0017DA  C0CD  F08D         	movff	_sprintf$1435,?___ftmul
 14062  0017DE  C0CE  F08E         	movff	_sprintf$1435+1,?___ftmul+1
 14063  0017E2  C0CF  F08F         	movff	_sprintf$1435+2,?___ftmul+2
 14064  0017E6  EC79  F026         	call	___ftmul	;wreg free
 14065  0017EA  C08F  F080         	movff	?___ftmul+2,?___fttol+2
 14066  0017EE  C08E  F07F         	movff	?___ftmul+1,?___fttol+1
 14067  0017F2  C08D  F07E         	movff	?___ftmul,?___fttol
 14068  0017F6  EC05  F02A         	call	___fttol	;wreg free
 14069  0017FA  C081  F0EE         	movff	?___fttol+3,sprintf@_val+3
 14070  0017FE  C080  F0ED         	movff	?___fttol+2,sprintf@_val+2
 14071  001802  C07F  F0EC         	movff	?___fttol+1,sprintf@_val+1
 14072  001806  C07E  F0EB         	movff	?___fttol,sprintf@_val
 14073                           
 14074                           ;doprnt.c: 1235: while(c--) {
 14075  00180A  D085               	goto	i2l7025
 14076  00180C                     i2l7015:
 14077                           
 14078                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
 14079  00180C  C0EB  F060         	movff	sprintf@_val,?___lldiv
 14080  001810  C0EC  F061         	movff	sprintf@_val+1,?___lldiv+1
 14081  001814  C0ED  F062         	movff	sprintf@_val+2,?___lldiv+2
 14082  001818  C0EE  F063         	movff	sprintf@_val+3,?___lldiv+3
 14083  00181C  0100               	movlb	0	; () banked
 14084  00181E  0100               	movlb	0	; () banked
 14085  001820  51EF               	movf	sprintf@c& (0+255),w,b
 14086  001822  0D04               	mullw	4
 14087  001824  0ED9               	movlw	low _dpowers
 14088  001826  24F3               	addwf	prodl,w,c
 14089  001828  6EF6               	movwf	tblptrl,c
 14090  00182A  0E7E               	movlw	high _dpowers
 14091  00182C  20F4               	addwfc	prodh,w,c
 14092  00182E  6EF7               	movwf	tblptrh,c
 14093  001830  0009               	tblrd		*+
 14094  001832  0100               	movlb	0	; () banked
 14095  001834  CFF5 F064          	movff	tablat,?___lldiv+4
 14096  001838  0009               	tblrd		*+
 14097  00183A  0100               	movlb	0	; () banked
 14098  00183C  CFF5 F065          	movff	tablat,?___lldiv+5
 14099  001840  0009               	tblrd		*+
 14100  001842  0100               	movlb	0	; () banked
 14101  001844  CFF5 F066          	movff	tablat,?___lldiv+6
 14102  001848  000A               	tblrd		*-
 14103  00184A  0100               	movlb	0	; () banked
 14104  00184C  CFF5 F067          	movff	tablat,?___lldiv+7
 14105  001850  EC2C  F02D         	call	___lldiv	;wreg free
 14106  001854  C060  F0D6         	movff	?___lldiv,sprintf@vd_743
 14107  001858  C061  F0D7         	movff	?___lldiv+1,sprintf@vd_743+1
 14108                           
 14109                           ;doprnt.c: 1237: vd %= 10;
 14110  00185C  C0D6  F060         	movff	sprintf@vd_743,?___lwmod
 14111  001860  C0D7  F061         	movff	sprintf@vd_743+1,?___lwmod+1
 14112  001864  0E00               	movlw	0
 14113  001866  0100               	movlb	0	; () banked
 14114  001868  0100               	movlb	0	; () banked
 14115  00186A  6F63               	movwf	(?___lwmod+3)& (0+255),b
 14116  00186C  0E0A               	movlw	10
 14117  00186E  0100               	movlb	0	; () banked
 14118  001870  6F62               	movwf	(?___lwmod+2)& (0+255),b
 14119  001872  ECDC  F032         	call	___lwmod	;wreg free
 14120  001876  0100               	movlb	0	; () banked
 14121  001878  C060  F0D6         	movff	?___lwmod,sprintf@vd_743
 14122  00187C  0100               	movlb	0	; () banked
 14123  00187E  C061  F0D7         	movff	?___lwmod+1,sprintf@vd_743+1
 14124                           
 14125                           ; BSR set to: 0
 14126                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
 14127  001882  0100               	movlb	0	; () banked
 14128  001884  0100               	movlb	0	; () banked
 14129  001886  51D6               	movf	sprintf@vd_743& (0+255),w,b
 14130  001888  0F30               	addlw	48
 14131  00188A  0100               	movlb	0	; () banked
 14132  00188C  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 14133  001890  0100               	movlb	0	; () banked
 14134  001892  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 14135  001896  6AF8               	clrf	tblptru,c
 14136  001898  0100               	movlb	0	; () banked
 14137  00189A  6FC7               	movwf	??_sprintf& (0+255),b
 14138  00189C  0E07               	movlw	(high __ramtop+-1)
 14139  00189E  64F7               	cpfsgt	tblptrh,c
 14140  0018A0  D004               	bra	i2u501_47
 14141  0018A2  C0C7  FFF5         	movff	??_sprintf,tablat
 14142  0018A6  000C               	tblwt		*
 14143  0018A8  D006               	bra	i2u501_40
 14144  0018AA                     i2u501_47:
 14145  0018AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 14146  0018AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 14147  0018B2  C0C7  FFEF         	movff	??_sprintf,indf0
 14148  0018B6                     i2u501_40:
 14149  0018B6  0100               	movlb	0	; () banked
 14150  0018B8  0100               	movlb	0	; () banked
 14151  0018BA  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 14152  0018BC  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 14153                           
 14154                           ; BSR set to: 0
 14155                           ;doprnt.c: 1239: _val._val %= dpowers[c];
 14156  0018BE  C0EB  F073         	movff	sprintf@_val,?___llmod
 14157  0018C2  C0EC  F074         	movff	sprintf@_val+1,?___llmod+1
 14158  0018C6  C0ED  F075         	movff	sprintf@_val+2,?___llmod+2
 14159  0018CA  C0EE  F076         	movff	sprintf@_val+3,?___llmod+3
 14160  0018CE  0100               	movlb	0	; () banked
 14161  0018D0  0100               	movlb	0	; () banked
 14162  0018D2  51EF               	movf	sprintf@c& (0+255),w,b
 14163  0018D4  0D04               	mullw	4
 14164  0018D6  0ED9               	movlw	low _dpowers
 14165  0018D8  24F3               	addwf	prodl,w,c
 14166  0018DA  6EF6               	movwf	tblptrl,c
 14167  0018DC  0E7E               	movlw	high _dpowers
 14168  0018DE  20F4               	addwfc	prodh,w,c
 14169  0018E0  6EF7               	movwf	tblptrh,c
 14170  0018E2  0009               	tblrd		*+
 14171  0018E4  0100               	movlb	0	; () banked
 14172  0018E6  CFF5 F077          	movff	tablat,?___llmod+4
 14173  0018EA  0009               	tblrd		*+
 14174  0018EC  0100               	movlb	0	; () banked
 14175  0018EE  CFF5 F078          	movff	tablat,?___llmod+5
 14176  0018F2  0009               	tblrd		*+
 14177  0018F4  0100               	movlb	0	; () banked
 14178  0018F6  CFF5 F079          	movff	tablat,?___llmod+6
 14179  0018FA  000A               	tblrd		*-
 14180  0018FC  0100               	movlb	0	; () banked
 14181  0018FE  CFF5 F07A          	movff	tablat,?___llmod+7
 14182  001902  EC98  F02F         	call	___llmod	;wreg free
 14183  001906  C076  F0EE         	movff	?___llmod+3,sprintf@_val+3
 14184  00190A  C075  F0ED         	movff	?___llmod+2,sprintf@_val+2
 14185  00190E  C074  F0EC         	movff	?___llmod+1,sprintf@_val+1
 14186  001912  C073  F0EB         	movff	?___llmod,sprintf@_val
 14187  001916                     i2l7025:
 14188  001916  0100               	movlb	0	; () banked
 14189  001918  0100               	movlb	0	; () banked
 14190  00191A  07EF               	decf	sprintf@c& (0+255),f,b
 14191  00191C  0100               	movlb	0	; () banked
 14192  00191E  29EF               	incf	sprintf@c& (0+255),w,b
 14193  001920  B4D8               	btfsc	status,2,c
 14194  001922  D01E               	goto	i2l7033
 14195  001924  D773               	goto	i2l7015
 14196  001926                     i2l7027:
 14197                           
 14198                           ; BSR set to: 0
 14199                           ;doprnt.c: 1243: ((*sp++ = ('0')));
 14200  001926  0100               	movlb	0	; () banked
 14201  001928  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 14202  00192C  0100               	movlb	0	; () banked
 14203  00192E  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 14204  001932  6AF8               	clrf	tblptru,c
 14205  001934  0E07               	movlw	(high __ramtop+-1)
 14206  001936  64F7               	cpfsgt	tblptrh,c
 14207  001938  D004               	bra	i2u503_47
 14208  00193A  0E30               	movlw	48
 14209  00193C  6EF5               	movwf	tablat,c
 14210  00193E  000C               	tblwt		*
 14211  001940  D006               	bra	i2u503_40
 14212  001942                     i2u503_47:
 14213  001942  CFF6 FFE9          	movff	tblptrl,fsr0l
 14214  001946  CFF7 FFEA          	movff	tblptrh,fsr0h
 14215  00194A  0E30               	movlw	48
 14216  00194C  6EEF               	movwf	indf0,c
 14217  00194E                     i2u503_40:
 14218  00194E  0100               	movlb	0	; () banked
 14219  001950  0100               	movlb	0	; () banked
 14220  001952  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 14221  001954  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;doprnt.c: 1244: prec--;
 14225  001956  0100               	movlb	0	; () banked
 14226  001958  0100               	movlb	0	; () banked
 14227  00195A  07E9               	decf	sprintf@prec& (0+255),f,b
 14228  00195C  A0D8               	btfss	status,0,c
 14229  00195E  07EA               	decf	(sprintf@prec+1)& (0+255),f,b
 14230  001960                     i2l7033:
 14231                           
 14232                           ; BSR set to: 0
 14233  001960  0100               	movlb	0	; () banked
 14234  001962  0100               	movlb	0	; () banked
 14235  001964  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 14236  001966  11E9               	iorwf	sprintf@prec& (0+255),w,b
 14237  001968  B4D8               	btfsc	status,2,c
 14238  00196A  D243               	goto	i2l7135
 14239  00196C  D7DC               	goto	i2l7027
 14240  00196E                     i2l697:
 14241                           
 14242                           ; BSR set to: 0
 14243                           ;doprnt.c: 1253: }
 14244                           ;doprnt.c: 1260: {
 14245                           ;doprnt.c: 1262: if(flag & 0x10)
 14246  00196E  0100               	movlb	0	; () banked
 14247  001970  0100               	movlb	0	; () banked
 14248  001972  A9E2               	btfss	sprintf@flag& (0+255),4,b
 14249  001974  D012               	goto	i2l7039
 14250                           
 14251                           ; BSR set to: 0
 14252                           ;doprnt.c: 1263: _val._val = (*(long *)__va_arg((*(long **)ap), (long)0));
 14253  001976  C0DE  FFD9         	movff	sprintf@ap,fsr2l
 14254  00197A  C0DF  FFDA         	movff	sprintf@ap+1,fsr2h
 14255  00197E  0100               	movlb	0	; () banked
 14256  001980  CFDE F0EB          	movff	postinc2,sprintf@_val
 14257  001984  0100               	movlb	0	; () banked
 14258  001986  CFDE F0EC          	movff	postinc2,sprintf@_val+1
 14259  00198A  0100               	movlb	0	; () banked
 14260  00198C  CFDE F0ED          	movff	postinc2,sprintf@_val+2
 14261  001990  0100               	movlb	0	; () banked
 14262  001992  CFDE F0EE          	movff	postinc2,sprintf@_val+3
 14263                           
 14264                           ; BSR set to: 0
 14265  001996  0E04               	movlw	4
 14266  001998  D014               	goto	L20
 14267  00199A                     i2l7039:
 14268                           
 14269                           ; BSR set to: 0
 14270                           ;doprnt.c: 1264: else
 14271                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14272  00199A  C0DE  FFD9         	movff	sprintf@ap,fsr2l
 14273  00199E  C0DF  FFDA         	movff	sprintf@ap+1,fsr2h
 14274  0019A2  0100               	movlb	0	; () banked
 14275  0019A4  CFDE F0EB          	movff	postinc2,sprintf@_val
 14276  0019A8  0100               	movlb	0	; () banked
 14277  0019AA  CFDD F0EC          	movff	postdec2,sprintf@_val+1
 14278  0019AE  0100               	movlb	0	; () banked
 14279  0019B0  0E00               	movlw	0
 14280  0019B2  0100               	movlb	0	; () banked
 14281  0019B4  BFEC               	btfsc	(sprintf@_val+1)& (0+255),7,b
 14282  0019B6  0EFF               	movlw	-1
 14283  0019B8  0100               	movlb	0	; () banked
 14284  0019BA  6FED               	movwf	(sprintf@_val+2)& (0+255),b
 14285  0019BC  0100               	movlb	0	; () banked
 14286  0019BE  6FEE               	movwf	(sprintf@_val+3)& (0+255),b
 14287                           
 14288                           ; BSR set to: 0
 14289  0019C0  0E02               	movlw	2
 14290  0019C2                     L20:
 14291  0019C2  0100               	movlb	0	; () banked
 14292  0019C4  0100               	movlb	0	; () banked
 14293  0019C6  27DE               	addwf	sprintf@ap& (0+255),f,b
 14294  0019C8  0E00               	movlw	0
 14295  0019CA  0100               	movlb	0	; () banked
 14296  0019CC  23DF               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14297                           
 14298                           ; BSR set to: 0
 14299                           ;doprnt.c: 1268: if((long)_val._val < 0) {
 14300                           
 14301                           ; BSR set to: 0
 14302  0019CE  0100               	movlb	0	; () banked
 14303  0019D0  0100               	movlb	0	; () banked
 14304  0019D2  AFEE               	btfss	(sprintf@_val+3)& (0+255),7,b
 14305  0019D4  D014               	goto	i2l7049
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;doprnt.c: 1269: flag |= 0x03;
 14309  0019D6  0E03               	movlw	3
 14310  0019D8  0100               	movlb	0	; () banked
 14311  0019DA  0100               	movlb	0	; () banked
 14312  0019DC  13E2               	iorwf	sprintf@flag& (0+255),f,b
 14313                           
 14314                           ; BSR set to: 0
 14315                           ;doprnt.c: 1270: _val._val = -_val._val;
 14316  0019DE  0100               	movlb	0	; () banked
 14317  0019E0  0100               	movlb	0	; () banked
 14318  0019E2  1FEE               	comf	(sprintf@_val+3)& (0+255),f,b
 14319  0019E4  0100               	movlb	0	; () banked
 14320  0019E6  1FED               	comf	(sprintf@_val+2)& (0+255),f,b
 14321  0019E8  0100               	movlb	0	; () banked
 14322  0019EA  1FEC               	comf	(sprintf@_val+1)& (0+255),f,b
 14323  0019EC  0100               	movlb	0	; () banked
 14324  0019EE  6DEB               	negf	sprintf@_val& (0+255),b
 14325  0019F0  0E00               	movlw	0
 14326  0019F2  0100               	movlb	0	; () banked
 14327  0019F4  23EC               	addwfc	(sprintf@_val+1)& (0+255),f,b
 14328  0019F6  0100               	movlb	0	; () banked
 14329  0019F8  23ED               	addwfc	(sprintf@_val+2)& (0+255),f,b
 14330  0019FA  0100               	movlb	0	; () banked
 14331  0019FC  23EE               	addwfc	(sprintf@_val+3)& (0+255),f,b
 14332  0019FE                     i2l7049:
 14333                           
 14334                           ; BSR set to: 0
 14335                           ;doprnt.c: 1271: }
 14336                           ;doprnt.c: 1273: }
 14337                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
 14338  0019FE  0100               	movlb	0	; () banked
 14339  001A00  0100               	movlb	0	; () banked
 14340  001A02  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 14341  001A04  11E9               	iorwf	sprintf@prec& (0+255),w,b
 14342  001A06  A4D8               	btfss	status,2,c
 14343  001A08  D00C               	goto	i2l7055
 14344                           
 14345                           ; BSR set to: 0
 14346  001A0A  0100               	movlb	0	; () banked
 14347  001A0C  0100               	movlb	0	; () banked
 14348  001A0E  51EE               	movf	(sprintf@_val+3)& (0+255),w,b
 14349  001A10  11EB               	iorwf	sprintf@_val& (0+255),w,b
 14350  001A12  11EC               	iorwf	(sprintf@_val+1)& (0+255),w,b
 14351  001A14  11ED               	iorwf	(sprintf@_val+2)& (0+255),w,b
 14352  001A16  A4D8               	btfss	status,2,c
 14353  001A18  D004               	goto	i2l7055
 14354                           
 14355                           ; BSR set to: 0
 14356                           ;doprnt.c: 1298: prec++;
 14357  001A1A  0100               	movlb	0	; () banked
 14358  001A1C  0100               	movlb	0	; () banked
 14359  001A1E  4BE9               	infsnz	sprintf@prec& (0+255),f,b
 14360  001A20  2BEA               	incf	(sprintf@prec+1)& (0+255),f,b
 14361  001A22                     i2l7055:
 14362                           
 14363                           ; BSR set to: 0
 14364                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14365  001A22  0100               	movlb	0	; () banked
 14366  001A24  6FC7               	movwf	??_sprintf& (0+255),b
 14367  001A26  0E01               	movlw	1
 14368  001A28  0100               	movlb	0	; () banked
 14369  001A2A  0100               	movlb	0	; () banked
 14370  001A2C  6FEF               	movwf	sprintf@c& (0+255),b
 14371  001A2E  0100               	movlb	0	; () banked
 14372  001A30  51C7               	movf	??_sprintf& (0+255),w,b
 14373  001A32                     
 14374                           ; BSR set to: 0
 14375  001A32  0100               	movlb	0	; () banked
 14376  001A34  0100               	movlb	0	; () banked
 14377  001A36  51EF               	movf	sprintf@c& (0+255),w,b
 14378  001A38  0A0A               	xorlw	10
 14379  001A3A  B4D8               	btfsc	status,2,c
 14380  001A3C  D021               	goto	i2l7069
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
 14384                           
 14385                           ; BSR set to: 0
 14386                           
 14387                           ; BSR set to: 0
 14388  001A3E  0100               	movlb	0	; () banked
 14389  001A40  0100               	movlb	0	; () banked
 14390  001A42  51EF               	movf	sprintf@c& (0+255),w,b
 14391  001A44  0D04               	mullw	4
 14392  001A46  0ED9               	movlw	low _dpowers
 14393  001A48  24F3               	addwf	prodl,w,c
 14394  001A4A  6EF6               	movwf	tblptrl,c
 14395  001A4C  0E7E               	movlw	high _dpowers
 14396  001A4E  20F4               	addwfc	prodh,w,c
 14397  001A50  6EF7               	movwf	tblptrh,c
 14398  001A52  0009               	tblrd		*+
 14399  001A54  50F5               	movf	tablat,w,c
 14400  001A56  0100               	movlb	0	; () banked
 14401  001A58  0100               	movlb	0	; () banked
 14402  001A5A  5DEB               	subwf	sprintf@_val& (0+255),w,b
 14403  001A5C  0009               	tblrd		*+
 14404  001A5E  50F5               	movf	tablat,w,c
 14405  001A60  0100               	movlb	0	; () banked
 14406  001A62  59EC               	subwfb	(sprintf@_val+1)& (0+255),w,b
 14407  001A64  0009               	tblrd		*+
 14408  001A66  50F5               	movf	tablat,w,c
 14409  001A68  0100               	movlb	0	; () banked
 14410  001A6A  59ED               	subwfb	(sprintf@_val+2)& (0+255),w,b
 14411  001A6C  0009               	tblrd		*+
 14412  001A6E  50F5               	movf	tablat,w,c
 14413  001A70  0100               	movlb	0	; () banked
 14414  001A72  59EE               	subwfb	(sprintf@_val+3)& (0+255),w,b
 14415  001A74  A0D8               	btfss	status,0,c
 14416  001A76  D004               	goto	i2l7069
 14417                           
 14418                           ; BSR set to: 0
 14419                           
 14420                           ; BSR set to: 0
 14421                           
 14422                           ; BSR set to: 0
 14423                           ;doprnt.c: 1314: break;
 14424  001A78  0100               	movlb	0	; () banked
 14425  001A7A  0100               	movlb	0	; () banked
 14426  001A7C  2BEF               	incf	sprintf@c& (0+255),f,b
 14427  001A7E  D7D9               	goto	L21
 14428  001A80                     i2l7069:
 14429                           
 14430                           ; BSR set to: 0
 14431                           ;doprnt.c: 1346: if(c < prec)
 14432  001A80  0E80               	movlw	128
 14433  001A82  0100               	movlb	0	; () banked
 14434  001A84  0100               	movlb	0	; () banked
 14435  001A86  BFEF               	btfsc	sprintf@c& (0+255),7,b
 14436  001A88  0E7F               	movlw	127
 14437  001A8A  6FC7               	movwf	??_sprintf& (0+255),b
 14438  001A8C  0100               	movlb	0	; () banked
 14439  001A8E  0100               	movlb	0	; () banked
 14440  001A90  51E9               	movf	sprintf@prec& (0+255),w,b
 14441  001A92  0100               	movlb	0	; () banked
 14442  001A94  0100               	movlb	0	; () banked
 14443  001A96  5DEF               	subwf	sprintf@c& (0+255),w,b
 14444  001A98  0100               	movlb	0	; () banked
 14445  001A9A  0100               	movlb	0	; () banked
 14446  001A9C  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 14447  001A9E  0A80               	xorlw	128
 14448  001AA0  0100               	movlb	0	; () banked
 14449  001AA2  59C7               	subwfb	??_sprintf& (0+255),w,b
 14450  001AA4  B0D8               	btfsc	status,0,c
 14451  001AA6  D003               	goto	i2l7073
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;doprnt.c: 1347: c = prec;
 14455  001AA8  C0E9  F0EF         	movff	sprintf@prec,sprintf@c
 14456  001AAC  D020               	goto	i2l7077
 14457  001AAE                     i2l7073:
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;doprnt.c: 1348: else if(prec < c)
 14461  001AAE  0100               	movlb	0	; () banked
 14462  001AB0  0100               	movlb	0	; () banked
 14463  001AB2  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 14464  001AB4  0A80               	xorlw	128
 14465  001AB6  0100               	movlb	0	; () banked
 14466  001AB8  6FC7               	movwf	??_sprintf& (0+255),b
 14467  001ABA  0100               	movlb	0	; () banked
 14468  001ABC  0100               	movlb	0	; () banked
 14469  001ABE  51EF               	movf	sprintf@c& (0+255),w,b
 14470  001AC0  0100               	movlb	0	; () banked
 14471  001AC2  0100               	movlb	0	; () banked
 14472  001AC4  5DE9               	subwf	sprintf@prec& (0+255),w,b
 14473  001AC6  0E80               	movlw	128
 14474  001AC8  0100               	movlb	0	; () banked
 14475  001ACA  0100               	movlb	0	; () banked
 14476  001ACC  BFEF               	btfsc	sprintf@c& (0+255),7,b
 14477  001ACE  0E7F               	movlw	127
 14478  001AD0  0100               	movlb	0	; () banked
 14479  001AD2  59C7               	subwfb	??_sprintf& (0+255),w,b
 14480  001AD4  B0D8               	btfsc	status,0,c
 14481  001AD6  D00B               	goto	i2l7077
 14482                           
 14483                           ; BSR set to: 0
 14484                           ;doprnt.c: 1349: prec = c;
 14485  001AD8  0100               	movlb	0	; () banked
 14486  001ADA  0100               	movlb	0	; () banked
 14487  001ADC  51EF               	movf	sprintf@c& (0+255),w,b
 14488  001ADE  0100               	movlb	0	; () banked
 14489  001AE0  0100               	movlb	0	; () banked
 14490  001AE2  6FE9               	movwf	sprintf@prec& (0+255),b
 14491  001AE4  0100               	movlb	0	; () banked
 14492  001AE6  6BEA               	clrf	(sprintf@prec+1)& (0+255),b
 14493  001AE8  0100               	movlb	0	; () banked
 14494  001AEA  BFE9               	btfsc	sprintf@prec& (0+255),7,b
 14495  001AEC  07EA               	decf	(sprintf@prec+1)& (0+255),f,b
 14496  001AEE                     i2l7077:
 14497                           
 14498                           ; BSR set to: 0
 14499                           ;doprnt.c: 1352: if(width && flag & 0x03)
 14500  001AEE  0100               	movlb	0	; () banked
 14501  001AF0  0100               	movlb	0	; () banked
 14502  001AF2  51E1               	movf	(sprintf@width+1)& (0+255),w,b
 14503  001AF4  11E0               	iorwf	sprintf@width& (0+255),w,b
 14504  001AF6  B4D8               	btfsc	status,2,c
 14505  001AF8  D016               	goto	i2l7083
 14506                           
 14507                           ; BSR set to: 0
 14508  001AFA  0E03               	movlw	3
 14509  001AFC  0100               	movlb	0	; () banked
 14510  001AFE  0100               	movlb	0	; () banked
 14511  001B00  15E2               	andwf	sprintf@flag& (0+255),w,b
 14512  001B02  0100               	movlb	0	; () banked
 14513  001B04  6FC7               	movwf	??_sprintf& (0+255),b
 14514  001B06  0E00               	movlw	0
 14515  001B08  0100               	movlb	0	; () banked
 14516  001B0A  0100               	movlb	0	; () banked
 14517  001B0C  15E3               	andwf	(sprintf@flag+1)& (0+255),w,b
 14518  001B0E  0100               	movlb	0	; () banked
 14519  001B10  6FC8               	movwf	(??_sprintf+1)& (0+255),b
 14520  001B12  0100               	movlb	0	; () banked
 14521  001B14  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 14522  001B16  11C7               	iorwf	??_sprintf& (0+255),w,b
 14523  001B18  B4D8               	btfsc	status,2,c
 14524  001B1A  D005               	goto	i2l7083
 14525                           
 14526                           ; BSR set to: 0
 14527                           ;doprnt.c: 1353: width--;
 14528  001B1C  0100               	movlb	0	; () banked
 14529  001B1E  0100               	movlb	0	; () banked
 14530  001B20  07E0               	decf	sprintf@width& (0+255),f,b
 14531  001B22  A0D8               	btfss	status,0,c
 14532  001B24  07E1               	decf	(sprintf@width+1)& (0+255),f,b
 14533  001B26                     i2l7083:
 14534                           
 14535                           ; BSR set to: 0
 14536                           ;doprnt.c: 1355: if(flag & 0x4000) {
 14537  001B26  0100               	movlb	0	; () banked
 14538  001B28  0100               	movlb	0	; () banked
 14539  001B2A  ADE3               	btfss	(sprintf@flag+1)& (0+255),6,b
 14540  001B2C  D028               	goto	i2l7091
 14541                           
 14542                           ; BSR set to: 0
 14543                           ;doprnt.c: 1356: if(width > prec)
 14544  001B2E  0100               	movlb	0	; () banked
 14545  001B30  0100               	movlb	0	; () banked
 14546  001B32  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 14547  001B34  0A80               	xorlw	128
 14548  001B36  0100               	movlb	0	; () banked
 14549  001B38  6FC7               	movwf	??_sprintf& (0+255),b
 14550  001B3A  0100               	movlb	0	; () banked
 14551  001B3C  0100               	movlb	0	; () banked
 14552  001B3E  51E0               	movf	sprintf@width& (0+255),w,b
 14553  001B40  0100               	movlb	0	; () banked
 14554  001B42  0100               	movlb	0	; () banked
 14555  001B44  5DE9               	subwf	sprintf@prec& (0+255),w,b
 14556  001B46  0100               	movlb	0	; () banked
 14557  001B48  0100               	movlb	0	; () banked
 14558  001B4A  51E1               	movf	(sprintf@width+1)& (0+255),w,b
 14559  001B4C  0A80               	xorlw	128
 14560  001B4E  0100               	movlb	0	; () banked
 14561  001B50  59C7               	subwfb	??_sprintf& (0+255),w,b
 14562  001B52  B0D8               	btfsc	status,0,c
 14563  001B54  D00D               	goto	i2l7089
 14564                           
 14565                           ; BSR set to: 0
 14566                           ;doprnt.c: 1357: width -= prec;
 14567  001B56  0100               	movlb	0	; () banked
 14568  001B58  0100               	movlb	0	; () banked
 14569  001B5A  51E9               	movf	sprintf@prec& (0+255),w,b
 14570  001B5C  0100               	movlb	0	; () banked
 14571  001B5E  0100               	movlb	0	; () banked
 14572  001B60  5FE0               	subwf	sprintf@width& (0+255),f,b
 14573  001B62  0100               	movlb	0	; () banked
 14574  001B64  0100               	movlb	0	; () banked
 14575  001B66  51EA               	movf	(sprintf@prec+1)& (0+255),w,b
 14576  001B68  0100               	movlb	0	; () banked
 14577  001B6A  0100               	movlb	0	; () banked
 14578  001B6C  5BE1               	subwfb	(sprintf@width+1)& (0+255),f,b
 14579  001B6E  D007               	goto	i2l7091
 14580  001B70                     i2l7089:
 14581                           
 14582                           ; BSR set to: 0
 14583                           ;doprnt.c: 1358: else
 14584                           ;doprnt.c: 1359: width = 0;
 14585  001B70  0E00               	movlw	0
 14586  001B72  0100               	movlb	0	; () banked
 14587  001B74  0100               	movlb	0	; () banked
 14588  001B76  6FE1               	movwf	(sprintf@width+1)& (0+255),b
 14589  001B78  0E00               	movlw	0
 14590  001B7A  0100               	movlb	0	; () banked
 14591  001B7C  6FE0               	movwf	sprintf@width& (0+255),b
 14592  001B7E                     i2l7091:
 14593                           
 14594                           ; BSR set to: 0
 14595                           ;doprnt.c: 1360: }
 14596                           ;doprnt.c: 1388: if(width > c)
 14597  001B7E  0E80               	movlw	128
 14598  001B80  0100               	movlb	0	; () banked
 14599  001B82  0100               	movlb	0	; () banked
 14600  001B84  BFEF               	btfsc	sprintf@c& (0+255),7,b
 14601  001B86  0E7F               	movlw	127
 14602  001B88  6FC7               	movwf	??_sprintf& (0+255),b
 14603  001B8A  0100               	movlb	0	; () banked
 14604  001B8C  0100               	movlb	0	; () banked
 14605  001B8E  51E0               	movf	sprintf@width& (0+255),w,b
 14606  001B90  0100               	movlb	0	; () banked
 14607  001B92  0100               	movlb	0	; () banked
 14608  001B94  5DEF               	subwf	sprintf@c& (0+255),w,b
 14609  001B96  0100               	movlb	0	; () banked
 14610  001B98  0100               	movlb	0	; () banked
 14611  001B9A  51E1               	movf	(sprintf@width+1)& (0+255),w,b
 14612  001B9C  0A80               	xorlw	128
 14613  001B9E  0100               	movlb	0	; () banked
 14614  001BA0  59C7               	subwfb	??_sprintf& (0+255),w,b
 14615  001BA2  B0D8               	btfsc	status,0,c
 14616  001BA4  D00E               	goto	i2l7095
 14617                           
 14618                           ; BSR set to: 0
 14619                           ;doprnt.c: 1389: width -= c;
 14620  001BA6  0100               	movlb	0	; () banked
 14621  001BA8  0100               	movlb	0	; () banked
 14622  001BAA  51EF               	movf	sprintf@c& (0+255),w,b
 14623  001BAC  0100               	movlb	0	; () banked
 14624  001BAE  0100               	movlb	0	; () banked
 14625  001BB0  5FE0               	subwf	sprintf@width& (0+255),f,b
 14626  001BB2  0E00               	movlw	0
 14627  001BB4  0100               	movlb	0	; () banked
 14628  001BB6  BFEF               	btfsc	sprintf@c& (0+255),7,b
 14629  001BB8  0EFF               	movlw	255
 14630  001BBA  0100               	movlb	0	; () banked
 14631  001BBC  0100               	movlb	0	; () banked
 14632  001BBE  5BE1               	subwfb	(sprintf@width+1)& (0+255),f,b
 14633  001BC0  D007               	goto	i2l7097
 14634  001BC2                     i2l7095:
 14635                           
 14636                           ; BSR set to: 0
 14637                           ;doprnt.c: 1390: else
 14638                           ;doprnt.c: 1391: width = 0;
 14639  001BC2  0E00               	movlw	0
 14640  001BC4  0100               	movlb	0	; () banked
 14641  001BC6  0100               	movlb	0	; () banked
 14642  001BC8  6FE1               	movwf	(sprintf@width+1)& (0+255),b
 14643  001BCA  0E00               	movlw	0
 14644  001BCC  0100               	movlb	0	; () banked
 14645  001BCE  6FE0               	movwf	sprintf@width& (0+255),b
 14646  001BD0                     i2l7097:
 14647                           
 14648                           ; BSR set to: 0
 14649                           ;doprnt.c: 1394: if(flag & 0x04) {
 14650  001BD0  0100               	movlb	0	; () banked
 14651  001BD2  0100               	movlb	0	; () banked
 14652  001BD4  A5E2               	btfss	sprintf@flag& (0+255),2,b
 14653  001BD6  D04D               	goto	i2l7113
 14654                           
 14655                           ; BSR set to: 0
 14656                           ;doprnt.c: 1399: if(flag & 0x03)
 14657  001BD8  0E03               	movlw	3
 14658  001BDA  0100               	movlb	0	; () banked
 14659  001BDC  0100               	movlb	0	; () banked
 14660  001BDE  15E2               	andwf	sprintf@flag& (0+255),w,b
 14661  001BE0  0100               	movlb	0	; () banked
 14662  001BE2  6FC7               	movwf	??_sprintf& (0+255),b
 14663  001BE4  0E00               	movlw	0
 14664  001BE6  0100               	movlb	0	; () banked
 14665  001BE8  0100               	movlb	0	; () banked
 14666  001BEA  15E3               	andwf	(sprintf@flag+1)& (0+255),w,b
 14667  001BEC  0100               	movlb	0	; () banked
 14668  001BEE  6FC8               	movwf	(??_sprintf+1)& (0+255),b
 14669  001BF0  0100               	movlb	0	; () banked
 14670  001BF2  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 14671  001BF4  11C7               	iorwf	??_sprintf& (0+255),w,b
 14672  001BF6  B4D8               	btfsc	status,2,c
 14673  001BF8  D018               	goto	i2l7105
 14674                           
 14675                           ; BSR set to: 0
 14676                           ;doprnt.c: 1400: ((*sp++ = ('-')));
 14677  001BFA  0100               	movlb	0	; () banked
 14678  001BFC  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 14679  001C00  0100               	movlb	0	; () banked
 14680  001C02  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 14681  001C06  6AF8               	clrf	tblptru,c
 14682  001C08  0E07               	movlw	(high __ramtop+-1)
 14683  001C0A  64F7               	cpfsgt	tblptrh,c
 14684  001C0C  D004               	bra	i2u521_47
 14685  001C0E  0E2D               	movlw	45
 14686  001C10  6EF5               	movwf	tablat,c
 14687  001C12  000C               	tblwt		*
 14688  001C14  D006               	bra	i2u521_40
 14689  001C16                     i2u521_47:
 14690  001C16  CFF6 FFE9          	movff	tblptrl,fsr0l
 14691  001C1A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14692  001C1E  0E2D               	movlw	45
 14693  001C20  6EEF               	movwf	indf0,c
 14694  001C22                     i2u521_40:
 14695  001C22  0100               	movlb	0	; () banked
 14696  001C24  0100               	movlb	0	; () banked
 14697  001C26  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 14698  001C28  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 14699  001C2A                     i2l7105:
 14700                           
 14701                           ; BSR set to: 0
 14702                           ;doprnt.c: 1422: if(width)
 14703  001C2A  0100               	movlb	0	; () banked
 14704  001C2C  0100               	movlb	0	; () banked
 14705  001C2E  51E1               	movf	(sprintf@width+1)& (0+255),w,b
 14706  001C30  11E0               	iorwf	sprintf@width& (0+255),w,b
 14707  001C32  B4D8               	btfsc	status,2,c
 14708  001C34  D0D3               	goto	i2l7133
 14709                           
 14710                           ; BSR set to: 0
 14711                           ;doprnt.c: 1424: ((*sp++ = ('0')));
 14712                           
 14713                           ; BSR set to: 0
 14714                           
 14715                           ;doprnt.c: 1423: do
 14716  001C36  0100               	movlb	0	; () banked
 14717  001C38  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 14718  001C3C  0100               	movlb	0	; () banked
 14719  001C3E  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 14720  001C42  6AF8               	clrf	tblptru,c
 14721  001C44  0E07               	movlw	(high __ramtop+-1)
 14722  001C46  64F7               	cpfsgt	tblptrh,c
 14723  001C48  D004               	bra	i2u523_47
 14724  001C4A  0E30               	movlw	48
 14725  001C4C  6EF5               	movwf	tablat,c
 14726  001C4E  000C               	tblwt		*
 14727  001C50  D006               	bra	i2u523_40
 14728  001C52                     i2u523_47:
 14729  001C52  CFF6 FFE9          	movff	tblptrl,fsr0l
 14730  001C56  CFF7 FFEA          	movff	tblptrh,fsr0h
 14731  001C5A  0E30               	movlw	48
 14732  001C5C  6EEF               	movwf	indf0,c
 14733  001C5E                     i2u523_40:
 14734  001C5E  0100               	movlb	0	; () banked
 14735  001C60  0100               	movlb	0	; () banked
 14736  001C62  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 14737  001C64  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 14738                           
 14739                           ; BSR set to: 0
 14740                           ;doprnt.c: 1425: while(--width);
 14741  001C66  0100               	movlb	0	; () banked
 14742  001C68  0100               	movlb	0	; () banked
 14743  001C6A  07E0               	decf	sprintf@width& (0+255),f,b
 14744  001C6C  A0D8               	btfss	status,0,c
 14745  001C6E  07E1               	decf	(sprintf@width+1)& (0+255),f,b
 14746  001C70  D7DD               	goto	L22
 14747  001C72                     i2l7113:
 14748                           
 14749                           ; BSR set to: 0
 14750                           ;doprnt.c: 1429: {
 14751                           ;doprnt.c: 1431: if(width
 14752                           ;doprnt.c: 1435: )
 14753  001C72  0100               	movlb	0	; () banked
 14754  001C74  0100               	movlb	0	; () banked
 14755  001C76  51E1               	movf	(sprintf@width+1)& (0+255),w,b
 14756  001C78  11E0               	iorwf	sprintf@width& (0+255),w,b
 14757  001C7A  B4D8               	btfsc	status,2,c
 14758  001C7C  D022               	goto	i2l7121
 14759  001C7E                     i2l7115:
 14760                           
 14761                           ; BSR set to: 0
 14762                           ;doprnt.c: 1437: ((*sp++ = (' ')));
 14763  001C7E  0100               	movlb	0	; () banked
 14764  001C80  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 14765  001C84  0100               	movlb	0	; () banked
 14766  001C86  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 14767  001C8A  6AF8               	clrf	tblptru,c
 14768  001C8C  0E07               	movlw	(high __ramtop+-1)
 14769  001C8E  64F7               	cpfsgt	tblptrh,c
 14770  001C90  D004               	bra	i2u526_47
 14771  001C92  0E20               	movlw	32
 14772  001C94  6EF5               	movwf	tablat,c
 14773  001C96  000C               	tblwt		*
 14774  001C98  D006               	bra	i2u526_40
 14775  001C9A                     i2u526_47:
 14776  001C9A  CFF6 FFE9          	movff	tblptrl,fsr0l
 14777  001C9E  CFF7 FFEA          	movff	tblptrh,fsr0h
 14778  001CA2  0E20               	movlw	32
 14779  001CA4  6EEF               	movwf	indf0,c
 14780  001CA6                     i2u526_40:
 14781  001CA6  0100               	movlb	0	; () banked
 14782  001CA8  0100               	movlb	0	; () banked
 14783  001CAA  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 14784  001CAC  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 14785                           
 14786                           ; BSR set to: 0
 14787                           ;doprnt.c: 1438: while(--width);
 14788  001CAE  0100               	movlb	0	; () banked
 14789  001CB0  0100               	movlb	0	; () banked
 14790  001CB2  07E0               	decf	sprintf@width& (0+255),f,b
 14791  001CB4  A0D8               	btfss	status,0,c
 14792  001CB6  07E1               	decf	(sprintf@width+1)& (0+255),f,b
 14793  001CB8  0100               	movlb	0	; () banked
 14794  001CBA  51E1               	movf	(sprintf@width+1)& (0+255),w,b
 14795  001CBC  11E0               	iorwf	sprintf@width& (0+255),w,b
 14796  001CBE  A4D8               	btfss	status,2,c
 14797  001CC0  D7DE               	goto	i2l7115
 14798  001CC2                     i2l7121:
 14799                           
 14800                           ; BSR set to: 0
 14801                           ;doprnt.c: 1445: if(flag & 0x03)
 14802  001CC2  0E03               	movlw	3
 14803  001CC4  0100               	movlb	0	; () banked
 14804  001CC6  0100               	movlb	0	; () banked
 14805  001CC8  15E2               	andwf	sprintf@flag& (0+255),w,b
 14806  001CCA  0100               	movlb	0	; () banked
 14807  001CCC  6FC7               	movwf	??_sprintf& (0+255),b
 14808  001CCE  0E00               	movlw	0
 14809  001CD0  0100               	movlb	0	; () banked
 14810  001CD2  0100               	movlb	0	; () banked
 14811  001CD4  15E3               	andwf	(sprintf@flag+1)& (0+255),w,b
 14812  001CD6  0100               	movlb	0	; () banked
 14813  001CD8  6FC8               	movwf	(??_sprintf+1)& (0+255),b
 14814  001CDA  0100               	movlb	0	; () banked
 14815  001CDC  51C8               	movf	(??_sprintf+1)& (0+255),w,b
 14816  001CDE  11C7               	iorwf	??_sprintf& (0+255),w,b
 14817  001CE0  B4D8               	btfsc	status,2,c
 14818  001CE2  D07C               	goto	i2l7133
 14819                           
 14820                           ; BSR set to: 0
 14821                           ;doprnt.c: 1446: ((*sp++ = ('-')));
 14822  001CE4  0100               	movlb	0	; () banked
 14823  001CE6  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 14824  001CEA  0100               	movlb	0	; () banked
 14825  001CEC  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 14826  001CF0  6AF8               	clrf	tblptru,c
 14827  001CF2  0E07               	movlw	(high __ramtop+-1)
 14828  001CF4  64F7               	cpfsgt	tblptrh,c
 14829  001CF6  D004               	bra	i2u529_47
 14830  001CF8  0E2D               	movlw	45
 14831  001CFA  6EF5               	movwf	tablat,c
 14832  001CFC  000C               	tblwt		*
 14833  001CFE  D006               	bra	i2u529_40
 14834  001D00                     i2u529_47:
 14835  001D00  CFF6 FFE9          	movff	tblptrl,fsr0l
 14836  001D04  CFF7 FFEA          	movff	tblptrh,fsr0h
 14837  001D08  0E2D               	movlw	45
 14838  001D0A  6EEF               	movwf	indf0,c
 14839  001D0C                     i2u529_40:
 14840  001D0C  D063               	goto	i2u530_40
 14841  001D0E                     i2l7127:
 14842                           
 14843                           ; BSR set to: 0
 14844                           ;doprnt.c: 1485: {
 14845                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
 14846  001D0E  0100               	movlb	0	; () banked
 14847  001D10  C0E9  F0C7         	movff	sprintf@prec,??_sprintf
 14848  001D14  0100               	movlb	0	; () banked
 14849  001D16  C0EA  F0C8         	movff	sprintf@prec+1,??_sprintf+1
 14850  001D1A  0100               	movlb	0	; () banked
 14851  001D1C  90D8               	bcf	status,0,c
 14852  001D1E  37C7               	rlcf	??_sprintf& (0+255),f,b
 14853  001D20  37C8               	rlcf	(??_sprintf+1)& (0+255),f,b
 14854  001D22  0100               	movlb	0	; () banked
 14855  001D24  90D8               	bcf	status,0,c
 14856  001D26  37C7               	rlcf	??_sprintf& (0+255),f,b
 14857  001D28  37C8               	rlcf	(??_sprintf+1)& (0+255),f,b
 14858  001D2A  0ED9               	movlw	low _dpowers
 14859  001D2C  0100               	movlb	0	; () banked
 14860  001D2E  25C7               	addwf	??_sprintf& (0+255),w,b
 14861  001D30  6EF6               	movwf	tblptrl,c
 14862  001D32  0E7E               	movlw	high _dpowers
 14863  001D34  21C8               	addwfc	(??_sprintf+1)& (0+255),w,b
 14864  001D36  6EF7               	movwf	tblptrh,c
 14865  001D38  0009               	tblrd		*+
 14866  001D3A  0100               	movlb	0	; () banked
 14867  001D3C  CFF5 F064          	movff	tablat,?___lldiv+4
 14868  001D40  0009               	tblrd		*+
 14869  001D42  0100               	movlb	0	; () banked
 14870  001D44  CFF5 F065          	movff	tablat,?___lldiv+5
 14871  001D48  0009               	tblrd		*+
 14872  001D4A  0100               	movlb	0	; () banked
 14873  001D4C  CFF5 F066          	movff	tablat,?___lldiv+6
 14874  001D50  000A               	tblrd		*-
 14875  001D52  0100               	movlb	0	; () banked
 14876  001D54  CFF5 F067          	movff	tablat,?___lldiv+7
 14877  001D58  C0EB  F060         	movff	sprintf@_val,?___lldiv
 14878  001D5C  C0EC  F061         	movff	sprintf@_val+1,?___lldiv+1
 14879  001D60  C0ED  F062         	movff	sprintf@_val+2,?___lldiv+2
 14880  001D64  C0EE  F063         	movff	sprintf@_val+3,?___lldiv+3
 14881  001D68  EC2C  F02D         	call	___lldiv	;wreg free
 14882  001D6C  C063  F076         	movff	?___lldiv+3,?___llmod+3
 14883  001D70  C062  F075         	movff	?___lldiv+2,?___llmod+2
 14884  001D74  C061  F074         	movff	?___lldiv+1,?___llmod+1
 14885  001D78  C060  F073         	movff	?___lldiv,?___llmod
 14886  001D7C  0E0A               	movlw	10
 14887  001D7E  0100               	movlb	0	; () banked
 14888  001D80  0100               	movlb	0	; () banked
 14889  001D82  6F77               	movwf	(?___llmod+4)& (0+255),b
 14890  001D84  0E00               	movlw	0
 14891  001D86  0100               	movlb	0	; () banked
 14892  001D88  6F78               	movwf	(?___llmod+5)& (0+255),b
 14893  001D8A  0E00               	movlw	0
 14894  001D8C  0100               	movlb	0	; () banked
 14895  001D8E  6F79               	movwf	(?___llmod+6)& (0+255),b
 14896  001D90  0E00               	movlw	0
 14897  001D92  0100               	movlb	0	; () banked
 14898  001D94  6F7A               	movwf	(?___llmod+7)& (0+255),b
 14899  001D96  EC98  F02F         	call	___llmod	;wreg free
 14900  001D9A  0100               	movlb	0	; () banked
 14901  001D9C  0100               	movlb	0	; () banked
 14902  001D9E  5173               	movf	?___llmod& (0+255),w,b
 14903  001DA0  0F30               	addlw	48
 14904  001DA2  0100               	movlb	0	; () banked
 14905  001DA4  0100               	movlb	0	; () banked
 14906  001DA6  6FEF               	movwf	sprintf@c& (0+255),b
 14907                           
 14908                           ; BSR set to: 0
 14909                           ;doprnt.c: 1530: }
 14910                           ;doprnt.c: 1531: ((*sp++ = (c)));
 14911  001DA8  0100               	movlb	0	; () banked
 14912  001DAA  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 14913  001DAE  0100               	movlb	0	; () banked
 14914  001DB0  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 14915  001DB4  6AF8               	clrf	tblptru,c
 14916  001DB6  0E07               	movlw	(high __ramtop+-1)
 14917  001DB8  64F7               	cpfsgt	tblptrh,c
 14918  001DBA  D005               	bra	i2u530_47
 14919  001DBC  0100               	movlb	0	; () banked
 14920  001DBE  C0EF  FFF5         	movff	sprintf@c,tablat
 14921  001DC2  000C               	tblwt		*
 14922  001DC4  D007               	bra	i2u530_40
 14923  001DC6                     i2u530_47:
 14924  001DC6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14925  001DCA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14926  001DCE  0100               	movlb	0	; () banked
 14927  001DD0  C0EF  FFEF         	movff	sprintf@c,indf0
 14928  001DD4                     i2u530_40:
 14929  001DD4  0100               	movlb	0	; () banked
 14930  001DD6  0100               	movlb	0	; () banked
 14931  001DD8  4BBB               	infsnz	sprintf@sp& (0+255),f,b
 14932  001DDA  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
 14933  001DDC                     i2l7133:
 14934                           
 14935                           ; BSR set to: 0
 14936  001DDC  0100               	movlb	0	; () banked
 14937  001DDE  0100               	movlb	0	; () banked
 14938  001DE0  07E9               	decf	sprintf@prec& (0+255),f,b
 14939  001DE2  A0D8               	btfss	status,0,c
 14940  001DE4  07EA               	decf	(sprintf@prec+1)& (0+255),f,b
 14941  001DE6  0100               	movlb	0	; () banked
 14942  001DE8  29E9               	incf	sprintf@prec& (0+255),w,b
 14943  001DEA  B4D8               	btfsc	status,2,c
 14944  001DEC  29EA               	incf	(sprintf@prec+1)& (0+255),w,b
 14945  001DEE  A4D8               	btfss	status,2,c
 14946  001DF0  D78E               	goto	i2l7127
 14947  001DF2                     i2l7135:
 14948                           
 14949                           ; BSR set to: 0
 14950  001DF2  0100               	movlb	0	; () banked
 14951  001DF4  C0BD  FFF6         	movff	sprintf@f,tblptrl
 14952  001DF8  0100               	movlb	0	; () banked
 14953  001DFA  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
 14954  001DFE  0100               	movlb	0	; () banked
 14955  001E00  0100               	movlb	0	; () banked
 14956  001E02  4BBD               	infsnz	sprintf@f& (0+255),f,b
 14957  001E04  2BBE               	incf	(sprintf@f+1)& (0+255),f,b
 14958  001E06  0008               	tblrd		*
 14959  001E08  0100               	movlb	0	; () banked
 14960  001E0A  CFF5 F0EF          	movff	tablat,sprintf@c
 14961  001E0E  0100               	movlb	0	; () banked
 14962  001E10  67EF               	tstfsz	sprintf@c& (0+255),b
 14963  001E12  EF99  F000         	goto	i2l6577
 14964  001E16                     i2l7137:
 14965                           
 14966                           ; BSR set to: 0
 14967                           ;doprnt.c: 1545: *sp = 0;
 14968  001E16  0100               	movlb	0	; () banked
 14969  001E18  C0BB  FFF6         	movff	sprintf@sp,tblptrl
 14970  001E1C  0100               	movlb	0	; () banked
 14971  001E1E  C0BC  FFF7         	movff	sprintf@sp+1,tblptrh
 14972  001E22  6AF8               	clrf	tblptru,c
 14973  001E24  0E07               	movlw	(high __ramtop+-1)
 14974  001E26  64F7               	cpfsgt	tblptrh,c
 14975  001E28  D004               	bra	i2u533_47
 14976  001E2A  0E00               	movlw	0
 14977  001E2C  6EF5               	movwf	tablat,c
 14978  001E2E  000C               	tblwt		*
 14979  001E30  D006               	bra	i2u533_40
 14980  001E32                     i2u533_47:
 14981  001E32  CFF6 FFE9          	movff	tblptrl,fsr0l
 14982  001E36  CFF7 FFEA          	movff	tblptrh,fsr0h
 14983  001E3A  0E00               	movlw	0
 14984  001E3C  6EEF               	movwf	indf0,c
 14985  001E3E                     i2u533_40:
 14986                           
 14987                           ;doprnt.c: 1547: return 0;
 14988                           ;	Return value of _sprintf is never used
 14989  001E3E  0012               	return	
 14990  001E40                     __end_of_sprintf:
 14991                           	opt stack 0
 14992                           tosu	equ	0xFFF
 14993                           tosh	equ	0xFFE
 14994                           tosl	equ	0xFFD
 14995                           pclatu	equ	0xFFB
 14996                           pclath	equ	0xFFA
 14997                           tblptru	equ	0xFF8
 14998                           tblptrh	equ	0xFF7
 14999                           tblptrl	equ	0xFF6
 15000                           tablat	equ	0xFF5
 15001                           prodh	equ	0xFF4
 15002                           prodl	equ	0xFF3
 15003                           intcon	equ	0xFF2
 15004                           intcon2	equ	0xFF1
 15005                           indf0	equ	0xFEF
 15006                           postinc0	equ	0xFEE
 15007                           fsr0h	equ	0xFEA
 15008                           fsr0l	equ	0xFE9
 15009                           wreg	equ	0xFE8
 15010                           postinc1	equ	0xFE6
 15011                           postdec1	equ	0xFE5
 15012                           fsr1h	equ	0xFE2
 15013                           fsr1l	equ	0xFE1
 15014                           bsr	equ	0xFE0
 15015                           indf2	equ	0xFDF
 15016                           postinc2	equ	0xFDE
 15017                           postdec2	equ	0xFDD
 15018                           plusw2	equ	0xFDB
 15019                           fsr2h	equ	0xFDA
 15020                           fsr2l	equ	0xFD9
 15021                           status	equ	0xFD8
 15022                           
 15023 ;; *************** function ___lltoft *****************
 15024 ;; Defined at:
 15025 ;;		line 36 in file "/usr/opt/microchip/xc8/v1.20/sources/common/lltoft.c"
 15026 ;; Parameters:    Size  Location     Type
 15027 ;;  c               4   57[BANK0 ] unsigned long 
 15028 ;; Auto vars:     Size  Location     Type
 15029 ;;  exp             1   65[BANK0 ] unsigned char 
 15030 ;; Return value:  Size  Location     Type
 15031 ;;                  3   57[BANK0 ] float 
 15032 ;; Registers used:
 15033 ;;		wreg, status,2, status,0, cstack
 15034 ;; Tracked objects:
 15035 ;;		On entry : 0/0
 15036 ;;		On exit  : 0/0
 15037 ;;		Unchanged: 0/0
 15038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15039 ;;      Params:         0       4       0       0       0       0       0       0       0
 15040 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15041 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15042 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15043 ;;Total ram usage:        9 bytes
 15044 ;; Hardware stack levels used:    1
 15045 ;; Hardware stack levels required when called:    1
 15046 ;; This function calls:
 15047 ;;		___ftpack
 15048 ;; This function is called by:
 15049 ;;		_sprintf
 15050 ;; This function uses a non-reentrant model
 15051 ;;
 15052                           
 15053                           	psect	text39
 15054  0062CA                     __ptext39:
 15055                           	opt stack 0
 15056  0062CA                     ___lltoft:
 15057                           	opt stack 16
 15058                           
 15059                           ;incstack = 0
 15060                           ;incstack = 0
 15061  0062CA  0100               	movlb	0	; () banked
 15062  0062CC  6F9D               	movwf	??___lltoft& (0+255),b
 15063  0062CE  0E8E               	movlw	142
 15064  0062D0  0100               	movlb	0	; () banked
 15065  0062D2  0100               	movlb	0	; () banked
 15066  0062D4  6FA1               	movwf	___lltoft@exp& (0+255),b
 15067  0062D6  0100               	movlb	0	; () banked
 15068  0062D8  519D               	movf	??___lltoft& (0+255),w,b
 15069  0062DA  D00D               	goto	i2l8209
 15070  0062DC                     i2l8207:
 15071                           
 15072                           ; BSR set to: 0
 15073  0062DC  0100               	movlb	0	; () banked
 15074  0062DE  90D8               	bcf	status,0,c
 15075  0062E0  0100               	movlb	0	; () banked
 15076  0062E2  339C               	rrcf	(___lltoft@c+3)& (0+255),f,b
 15077  0062E4  0100               	movlb	0	; () banked
 15078  0062E6  339B               	rrcf	(___lltoft@c+2)& (0+255),f,b
 15079  0062E8  0100               	movlb	0	; () banked
 15080  0062EA  339A               	rrcf	(___lltoft@c+1)& (0+255),f,b
 15081  0062EC  0100               	movlb	0	; () banked
 15082  0062EE  3399               	rrcf	___lltoft@c& (0+255),f,b
 15083  0062F0  0100               	movlb	0	; () banked
 15084  0062F2  0100               	movlb	0	; () banked
 15085  0062F4  2BA1               	incf	___lltoft@exp& (0+255),f,b
 15086  0062F6                     i2l8209:
 15087                           
 15088                           ; BSR set to: 0
 15089  0062F6  0E00               	movlw	0
 15090  0062F8  0100               	movlb	0	; () banked
 15091  0062FA  0100               	movlb	0	; () banked
 15092  0062FC  1599               	andwf	___lltoft@c& (0+255),w,b
 15093  0062FE  0100               	movlb	0	; () banked
 15094  006300  6F9D               	movwf	??___lltoft& (0+255),b
 15095  006302  0E00               	movlw	0
 15096  006304  0100               	movlb	0	; () banked
 15097  006306  0100               	movlb	0	; () banked
 15098  006308  159A               	andwf	(___lltoft@c+1)& (0+255),w,b
 15099  00630A  0100               	movlb	0	; () banked
 15100  00630C  6F9E               	movwf	(??___lltoft+1)& (0+255),b
 15101  00630E  0E00               	movlw	0
 15102  006310  0100               	movlb	0	; () banked
 15103  006312  0100               	movlb	0	; () banked
 15104  006314  159B               	andwf	(___lltoft@c+2)& (0+255),w,b
 15105  006316  0100               	movlb	0	; () banked
 15106  006318  6F9F               	movwf	(??___lltoft+2)& (0+255),b
 15107  00631A  0EFF               	movlw	255
 15108  00631C  0100               	movlb	0	; () banked
 15109  00631E  0100               	movlb	0	; () banked
 15110  006320  159C               	andwf	(___lltoft@c+3)& (0+255),w,b
 15111  006322  0100               	movlb	0	; () banked
 15112  006324  6FA0               	movwf	(??___lltoft+3)& (0+255),b
 15113  006326  0100               	movlb	0	; () banked
 15114  006328  51A0               	movf	(??___lltoft+3)& (0+255),w,b
 15115  00632A  119D               	iorwf	??___lltoft& (0+255),w,b
 15116  00632C  119E               	iorwf	(??___lltoft+1)& (0+255),w,b
 15117  00632E  119F               	iorwf	(??___lltoft+2)& (0+255),w,b
 15118  006330  A4D8               	btfss	status,2,c
 15119  006332  D7D4               	goto	i2l8207
 15120                           
 15121                           ; BSR set to: 0
 15122                           
 15123                           ; BSR set to: 0
 15124  006334  C099  F060         	movff	___lltoft@c,?___ftpack
 15125  006338  C09A  F061         	movff	___lltoft@c+1,?___ftpack+1
 15126  00633C  C09B  F062         	movff	___lltoft@c+2,?___ftpack+2
 15127  006340  C0A1  F063         	movff	___lltoft@exp,?___ftpack+3
 15128  006344  0100               	movlb	0	; () banked
 15129  006346  6F9D               	movwf	??___lltoft& (0+255),b
 15130  006348  0E00               	movlw	0
 15131  00634A  0100               	movlb	0	; () banked
 15132  00634C  0100               	movlb	0	; () banked
 15133  00634E  6F64               	movwf	(?___ftpack+4)& (0+255),b
 15134  006350  0100               	movlb	0	; () banked
 15135  006352  519D               	movf	??___lltoft& (0+255),w,b
 15136  006354  ECC5  F02A         	call	___ftpack	;wreg free
 15137  006358  C062  F09B         	movff	?___ftpack+2,?___lltoft+2
 15138  00635C  C061  F09A         	movff	?___ftpack+1,?___lltoft+1
 15139  006360  C060  F099         	movff	?___ftpack,?___lltoft
 15140  006364  0012               	return	
 15141  006366                     __end_of___lltoft:
 15142                           	opt stack 0
 15143                           tosu	equ	0xFFF
 15144                           tosh	equ	0xFFE
 15145                           tosl	equ	0xFFD
 15146                           pclatu	equ	0xFFB
 15147                           pclath	equ	0xFFA
 15148                           tblptru	equ	0xFF8
 15149                           tblptrh	equ	0xFF7
 15150                           tblptrl	equ	0xFF6
 15151                           tablat	equ	0xFF5
 15152                           prodh	equ	0xFF4
 15153                           prodl	equ	0xFF3
 15154                           intcon	equ	0xFF2
 15155                           intcon2	equ	0xFF1
 15156                           indf0	equ	0xFEF
 15157                           postinc0	equ	0xFEE
 15158                           fsr0h	equ	0xFEA
 15159                           fsr0l	equ	0xFE9
 15160                           wreg	equ	0xFE8
 15161                           postinc1	equ	0xFE6
 15162                           postdec1	equ	0xFE5
 15163                           fsr1h	equ	0xFE2
 15164                           fsr1l	equ	0xFE1
 15165                           bsr	equ	0xFE0
 15166                           indf2	equ	0xFDF
 15167                           postinc2	equ	0xFDE
 15168                           postdec2	equ	0xFDD
 15169                           plusw2	equ	0xFDB
 15170                           fsr2h	equ	0xFDA
 15171                           fsr2l	equ	0xFD9
 15172                           status	equ	0xFD8
 15173                           
 15174 ;; *************** function ___lldiv *****************
 15175 ;; Defined at:
 15176 ;;		line 10 in file "/usr/opt/microchip/xc8/v1.20/sources/common/lldiv.c"
 15177 ;; Parameters:    Size  Location     Type
 15178 ;;  dividend        4    0[BANK0 ] unsigned long 
 15179 ;;  divisor         4    4[BANK0 ] unsigned long 
 15180 ;; Auto vars:     Size  Location     Type
 15181 ;;  quotient        4   14[BANK0 ] unsigned long 
 15182 ;;  counter         1   18[BANK0 ] unsigned char 
 15183 ;; Return value:  Size  Location     Type
 15184 ;;                  4    0[BANK0 ] unsigned long 
 15185 ;; Registers used:
 15186 ;;		wreg, status,2, status,0
 15187 ;; Tracked objects:
 15188 ;;		On entry : 0/0
 15189 ;;		On exit  : 0/0
 15190 ;;		Unchanged: 0/0
 15191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15192 ;;      Params:         0       8       0       0       0       0       0       0       0
 15193 ;;      Locals:         0      10       0       0       0       0       0       0       0
 15194 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15195 ;;      Totals:         0      19       0       0       0       0       0       0       0
 15196 ;;Total ram usage:       19 bytes
 15197 ;; Hardware stack levels used:    1
 15198 ;; This function calls:
 15199 ;;		Nothing
 15200 ;; This function is called by:
 15201 ;;		_sprintf
 15202 ;; This function uses a non-reentrant model
 15203 ;;
 15204                           
 15205                           	psect	text40
 15206  005A58                     __ptext40:
 15207                           	opt stack 0
 15208  005A58                     ___lldiv:
 15209                           	opt stack 17
 15210                           
 15211                           ;incstack = 0
 15212                           ;incstack = 0
 15213  005A58  0E00               	movlw	0
 15214  005A5A  0100               	movlb	0	; () banked
 15215  005A5C  0100               	movlb	0	; () banked
 15216  005A5E  6F6E               	movwf	___lldiv@quotient& (0+255),b
 15217  005A60  0E00               	movlw	0
 15218  005A62  0100               	movlb	0	; () banked
 15219  005A64  6F6F               	movwf	(___lldiv@quotient+1)& (0+255),b
 15220  005A66  0E00               	movlw	0
 15221  005A68  0100               	movlb	0	; () banked
 15222  005A6A  6F70               	movwf	(___lldiv@quotient+2)& (0+255),b
 15223  005A6C  0E00               	movlw	0
 15224  005A6E  0100               	movlb	0	; () banked
 15225  005A70  6F71               	movwf	(___lldiv@quotient+3)& (0+255),b
 15226                           
 15227                           ; BSR set to: 0
 15228  005A72  0100               	movlb	0	; () banked
 15229  005A74  0100               	movlb	0	; () banked
 15230  005A76  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15231  005A78  1164               	iorwf	___lldiv@divisor& (0+255),w,b
 15232  005A7A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15233  005A7C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15234  005A7E  B4D8               	btfsc	status,2,c
 15235  005A80  D067               	goto	i2l1296
 15236                           
 15237                           ; BSR set to: 0
 15238  005A82  0100               	movlb	0	; () banked
 15239  005A84  6F68               	movwf	??___lldiv& (0+255),b
 15240  005A86  0E01               	movlw	1
 15241  005A88  0100               	movlb	0	; () banked
 15242  005A8A  0100               	movlb	0	; () banked
 15243  005A8C  6F72               	movwf	___lldiv@counter& (0+255),b
 15244  005A8E  0100               	movlb	0	; () banked
 15245  005A90  5168               	movf	??___lldiv& (0+255),w,b
 15246  005A92  D00D               	goto	i2l8175
 15247  005A94                     i2l8173:
 15248                           
 15249                           ; BSR set to: 0
 15250  005A94  0100               	movlb	0	; () banked
 15251  005A96  90D8               	bcf	status,0,c
 15252  005A98  0100               	movlb	0	; () banked
 15253  005A9A  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15254  005A9C  0100               	movlb	0	; () banked
 15255  005A9E  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15256  005AA0  0100               	movlb	0	; () banked
 15257  005AA2  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15258  005AA4  0100               	movlb	0	; () banked
 15259  005AA6  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15260  005AA8  0100               	movlb	0	; () banked
 15261  005AAA  0100               	movlb	0	; () banked
 15262  005AAC  2B72               	incf	___lldiv@counter& (0+255),f,b
 15263  005AAE                     i2l8175:
 15264                           
 15265                           ; BSR set to: 0
 15266  005AAE  0100               	movlb	0	; () banked
 15267  005AB0  0100               	movlb	0	; () banked
 15268  005AB2  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15269  005AB4  D7EF               	goto	i2l8173
 15270  005AB6                     i2l8177:
 15271                           
 15272                           ; BSR set to: 0
 15273  005AB6  0100               	movlb	0	; () banked
 15274  005AB8  90D8               	bcf	status,0,c
 15275  005ABA  0100               	movlb	0	; () banked
 15276  005ABC  376E               	rlcf	___lldiv@quotient& (0+255),f,b
 15277  005ABE  0100               	movlb	0	; () banked
 15278  005AC0  376F               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15279  005AC2  0100               	movlb	0	; () banked
 15280  005AC4  3770               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15281  005AC6  0100               	movlb	0	; () banked
 15282  005AC8  3771               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15283                           
 15284                           ; BSR set to: 0
 15285  005ACA  0100               	movlb	0	; () banked
 15286  005ACC  0100               	movlb	0	; () banked
 15287  005ACE  5164               	movf	___lldiv@divisor& (0+255),w,b
 15288  005AD0  0100               	movlb	0	; () banked
 15289  005AD2  0100               	movlb	0	; () banked
 15290  005AD4  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15291  005AD6  0100               	movlb	0	; () banked
 15292  005AD8  0100               	movlb	0	; () banked
 15293  005ADA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15294  005ADC  0100               	movlb	0	; () banked
 15295  005ADE  0100               	movlb	0	; () banked
 15296  005AE0  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15297  005AE2  0100               	movlb	0	; () banked
 15298  005AE4  0100               	movlb	0	; () banked
 15299  005AE6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15300  005AE8  0100               	movlb	0	; () banked
 15301  005AEA  0100               	movlb	0	; () banked
 15302  005AEC  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15303  005AEE  0100               	movlb	0	; () banked
 15304  005AF0  0100               	movlb	0	; () banked
 15305  005AF2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15306  005AF4  0100               	movlb	0	; () banked
 15307  005AF6  0100               	movlb	0	; () banked
 15308  005AF8  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15309  005AFA  A0D8               	btfss	status,0,c
 15310  005AFC  D01B               	goto	i2l8185
 15311                           
 15312                           ; BSR set to: 0
 15313  005AFE  0100               	movlb	0	; () banked
 15314  005B00  0100               	movlb	0	; () banked
 15315  005B02  5164               	movf	___lldiv@divisor& (0+255),w,b
 15316  005B04  0100               	movlb	0	; () banked
 15317  005B06  0100               	movlb	0	; () banked
 15318  005B08  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15319  005B0A  0100               	movlb	0	; () banked
 15320  005B0C  0100               	movlb	0	; () banked
 15321  005B0E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15322  005B10  0100               	movlb	0	; () banked
 15323  005B12  0100               	movlb	0	; () banked
 15324  005B14  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15325  005B16  0100               	movlb	0	; () banked
 15326  005B18  0100               	movlb	0	; () banked
 15327  005B1A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15328  005B1C  0100               	movlb	0	; () banked
 15329  005B1E  0100               	movlb	0	; () banked
 15330  005B20  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15331  005B22  0100               	movlb	0	; () banked
 15332  005B24  0100               	movlb	0	; () banked
 15333  005B26  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15334  005B28  0100               	movlb	0	; () banked
 15335  005B2A  0100               	movlb	0	; () banked
 15336  005B2C  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15337                           
 15338                           ; BSR set to: 0
 15339  005B2E  0100               	movlb	0	; () banked
 15340  005B30  0100               	movlb	0	; () banked
 15341  005B32  816E               	bsf	___lldiv@quotient& (0+255),0,b
 15342  005B34                     i2l8185:
 15343                           
 15344                           ; BSR set to: 0
 15345  005B34  0100               	movlb	0	; () banked
 15346  005B36  90D8               	bcf	status,0,c
 15347  005B38  0100               	movlb	0	; () banked
 15348  005B3A  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15349  005B3C  0100               	movlb	0	; () banked
 15350  005B3E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15351  005B40  0100               	movlb	0	; () banked
 15352  005B42  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15353  005B44  0100               	movlb	0	; () banked
 15354  005B46  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15355                           
 15356                           ; BSR set to: 0
 15357  005B48  0100               	movlb	0	; () banked
 15358  005B4A  0100               	movlb	0	; () banked
 15359  005B4C  2F72               	decfsz	___lldiv@counter& (0+255),f,b
 15360  005B4E  D7B3               	goto	i2l8177
 15361  005B50                     i2l1296:
 15362                           
 15363                           ; BSR set to: 0
 15364  005B50  C06E  F060         	movff	___lldiv@quotient,?___lldiv
 15365  005B54  C06F  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15366  005B58  C070  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15367  005B5C  C071  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15368                           
 15369                           ; BSR set to: 0
 15370  005B60  0012               	return	
 15371  005B62                     __end_of___lldiv:
 15372                           	opt stack 0
 15373                           tosu	equ	0xFFF
 15374                           tosh	equ	0xFFE
 15375                           tosl	equ	0xFFD
 15376                           pclatu	equ	0xFFB
 15377                           pclath	equ	0xFFA
 15378                           tblptru	equ	0xFF8
 15379                           tblptrh	equ	0xFF7
 15380                           tblptrl	equ	0xFF6
 15381                           tablat	equ	0xFF5
 15382                           prodh	equ	0xFF4
 15383                           prodl	equ	0xFF3
 15384                           intcon	equ	0xFF2
 15385                           intcon2	equ	0xFF1
 15386                           indf0	equ	0xFEF
 15387                           postinc0	equ	0xFEE
 15388                           fsr0h	equ	0xFEA
 15389                           fsr0l	equ	0xFE9
 15390                           wreg	equ	0xFE8
 15391                           postinc1	equ	0xFE6
 15392                           postdec1	equ	0xFE5
 15393                           fsr1h	equ	0xFE2
 15394                           fsr1l	equ	0xFE1
 15395                           bsr	equ	0xFE0
 15396                           indf2	equ	0xFDF
 15397                           postinc2	equ	0xFDE
 15398                           postdec2	equ	0xFDD
 15399                           plusw2	equ	0xFDB
 15400                           fsr2h	equ	0xFDA
 15401                           fsr2l	equ	0xFD9
 15402                           status	equ	0xFD8
 15403                           
 15404 ;; *************** function ___fttol *****************
 15405 ;; Defined at:
 15406 ;;		line 45 in file "/usr/opt/microchip/xc8/v1.20/sources/common/fttol.c"
 15407 ;; Parameters:    Size  Location     Type
 15408 ;;  f1              3   30[BANK0 ] float 
 15409 ;; Auto vars:     Size  Location     Type
 15410 ;;  lval            4   40[BANK0 ] unsigned long 
 15411 ;;  exp1            1   44[BANK0 ] unsigned char 
 15412 ;;  sign1           1   39[BANK0 ] unsigned char 
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  4   30[BANK0 ] long 
 15415 ;; Registers used:
 15416 ;;		wreg, status,2, status,0
 15417 ;; Tracked objects:
 15418 ;;		On entry : 0/0
 15419 ;;		On exit  : 0/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15422 ;;      Params:         0       4       0       0       0       0       0       0       0
 15423 ;;      Locals:         0       6       0       0       0       0       0       0       0
 15424 ;;      Temps:          0       5       0       0       0       0       0       0       0
 15425 ;;      Totals:         0      15       0       0       0       0       0       0       0
 15426 ;;Total ram usage:       15 bytes
 15427 ;; Hardware stack levels used:    1
 15428 ;; This function calls:
 15429 ;;		Nothing
 15430 ;; This function is called by:
 15431 ;;		_sprintf
 15432 ;; This function uses a non-reentrant model
 15433 ;;
 15434                           
 15435                           	psect	text41
 15436  00540A                     __ptext41:
 15437                           	opt stack 0
 15438  00540A                     ___fttol:
 15439                           	opt stack 17
 15440                           
 15441                           ; BSR set to: 0
 15442                           ;incstack = 0
 15443                           ;incstack = 0
 15444  00540A  0E0F               	movlw	15
 15445  00540C  0100               	movlb	0	; () banked
 15446  00540E  6F82               	movwf	??___fttol& (0+255),b
 15447  005410  0100               	movlb	0	; () banked
 15448  005412  C07E  F083         	movff	___fttol@f1,??___fttol+1
 15449  005416  0100               	movlb	0	; () banked
 15450  005418  C07F  F084         	movff	___fttol@f1+1,??___fttol+2
 15451  00541C  0100               	movlb	0	; () banked
 15452  00541E  C080  F085         	movff	___fttol@f1+2,??___fttol+3
 15453  005422  0100               	movlb	0	; () banked
 15454  005424  2982               	incf	??___fttol& (0+255),w,b
 15455  005426  0100               	movlb	0	; () banked
 15456  005428  6F86               	movwf	(??___fttol+4)& (0+255),b
 15457  00542A  D005               	goto	i2u677_40
 15458  00542C                     i2u677_45:
 15459  00542C  0100               	movlb	0	; () banked
 15460  00542E  90D8               	bcf	status,0,c
 15461  005430  3385               	rrcf	(??___fttol+3)& (0+255),f,b
 15462  005432  3384               	rrcf	(??___fttol+2)& (0+255),f,b
 15463  005434  3383               	rrcf	(??___fttol+1)& (0+255),f,b
 15464  005436                     i2u677_40:
 15465  005436  0100               	movlb	0	; () banked
 15466  005438  2F86               	decfsz	(??___fttol+4)& (0+255),f,b
 15467  00543A  D7F8               	goto	i2u677_45
 15468  00543C  0100               	movlb	0	; () banked
 15469  00543E  5183               	movf	(??___fttol+1)& (0+255),w,b
 15470  005440  0100               	movlb	0	; () banked
 15471  005442  0100               	movlb	0	; () banked
 15472  005444  6F8C               	movwf	___fttol@exp1& (0+255),b
 15473  005446  0100               	movlb	0	; () banked
 15474  005448  678C               	tstfsz	___fttol@exp1& (0+255),b
 15475  00544A  D001               	goto	i2l8127
 15476  00544C  D061               	goto	i2u682_40
 15477  00544E                     i2l8127:
 15478                           
 15479                           ; BSR set to: 0
 15480  00544E  0E17               	movlw	23
 15481  005450  0100               	movlb	0	; () banked
 15482  005452  6F82               	movwf	??___fttol& (0+255),b
 15483  005454  0100               	movlb	0	; () banked
 15484  005456  C07E  F083         	movff	___fttol@f1,??___fttol+1
 15485  00545A  0100               	movlb	0	; () banked
 15486  00545C  C07F  F084         	movff	___fttol@f1+1,??___fttol+2
 15487  005460  0100               	movlb	0	; () banked
 15488  005462  C080  F085         	movff	___fttol@f1+2,??___fttol+3
 15489  005466  0100               	movlb	0	; () banked
 15490  005468  2982               	incf	??___fttol& (0+255),w,b
 15491  00546A  0100               	movlb	0	; () banked
 15492  00546C  6F86               	movwf	(??___fttol+4)& (0+255),b
 15493  00546E  D005               	goto	i2u679_40
 15494  005470                     i2u679_45:
 15495  005470  0100               	movlb	0	; () banked
 15496  005472  90D8               	bcf	status,0,c
 15497  005474  3385               	rrcf	(??___fttol+3)& (0+255),f,b
 15498  005476  3384               	rrcf	(??___fttol+2)& (0+255),f,b
 15499  005478  3383               	rrcf	(??___fttol+1)& (0+255),f,b
 15500  00547A                     i2u679_40:
 15501  00547A  0100               	movlb	0	; () banked
 15502  00547C  2F86               	decfsz	(??___fttol+4)& (0+255),f,b
 15503  00547E  D7F8               	goto	i2u679_45
 15504  005480  0100               	movlb	0	; () banked
 15505  005482  5183               	movf	(??___fttol+1)& (0+255),w,b
 15506  005484  0100               	movlb	0	; () banked
 15507  005486  0100               	movlb	0	; () banked
 15508  005488  6F87               	movwf	___fttol@sign1& (0+255),b
 15509                           
 15510                           ; BSR set to: 0
 15511  00548A  0100               	movlb	0	; () banked
 15512  00548C  0100               	movlb	0	; () banked
 15513  00548E  8F7F               	bsf	(___fttol@f1+1)& (0+255),7,b
 15514                           
 15515                           ; BSR set to: 0
 15516  005490  0EFF               	movlw	255
 15517  005492  0100               	movlb	0	; () banked
 15518  005494  0100               	movlb	0	; () banked
 15519  005496  177E               	andwf	___fttol@f1& (0+255),f,b
 15520  005498  0EFF               	movlw	255
 15521  00549A  0100               	movlb	0	; () banked
 15522  00549C  0100               	movlb	0	; () banked
 15523  00549E  177F               	andwf	(___fttol@f1+1)& (0+255),f,b
 15524  0054A0  0E00               	movlw	0
 15525  0054A2  0100               	movlb	0	; () banked
 15526  0054A4  0100               	movlb	0	; () banked
 15527  0054A6  1780               	andwf	(___fttol@f1+2)& (0+255),f,b
 15528                           
 15529                           ; BSR set to: 0
 15530  0054A8  0100               	movlb	0	; () banked
 15531  0054AA  0100               	movlb	0	; () banked
 15532  0054AC  517E               	movf	___fttol@f1& (0+255),w,b
 15533  0054AE  0100               	movlb	0	; () banked
 15534  0054B0  0100               	movlb	0	; () banked
 15535  0054B2  6F88               	movwf	___fttol@lval& (0+255),b
 15536  0054B4  0100               	movlb	0	; () banked
 15537  0054B6  0100               	movlb	0	; () banked
 15538  0054B8  517F               	movf	(___fttol@f1+1)& (0+255),w,b
 15539  0054BA  0100               	movlb	0	; () banked
 15540  0054BC  6F89               	movwf	(___fttol@lval+1)& (0+255),b
 15541  0054BE  0100               	movlb	0	; () banked
 15542  0054C0  5180               	movf	(___fttol@f1+2)& (0+255),w,b
 15543  0054C2  0100               	movlb	0	; () banked
 15544  0054C4  6F8A               	movwf	(___fttol@lval+2)& (0+255),b
 15545  0054C6  0100               	movlb	0	; () banked
 15546  0054C8  6B8B               	clrf	(___fttol@lval+3)& (0+255),b
 15547                           
 15548                           ; BSR set to: 0
 15549  0054CA  0E8E               	movlw	142
 15550  0054CC  0100               	movlb	0	; () banked
 15551  0054CE  0100               	movlb	0	; () banked
 15552  0054D0  5F8C               	subwf	___fttol@exp1& (0+255),f,b
 15553                           
 15554                           ; BSR set to: 0
 15555  0054D2  0100               	movlb	0	; () banked
 15556  0054D4  0100               	movlb	0	; () banked
 15557  0054D6  AF8C               	btfss	___fttol@exp1& (0+255),7,b
 15558  0054D8  D016               	goto	i2l8149
 15559                           
 15560                           ; BSR set to: 0
 15561  0054DA  0100               	movlb	0	; () banked
 15562  0054DC  0100               	movlb	0	; () banked
 15563  0054DE  518C               	movf	___fttol@exp1& (0+255),w,b
 15564  0054E0  0A80               	xorlw	128
 15565  0054E2  0F8F               	addlw	143
 15566  0054E4  A0D8               	btfss	status,0,c
 15567  0054E6  D014               	goto	i2u682_40
 15568  0054E8                     i2l8145:
 15569                           
 15570                           ; BSR set to: 0
 15571  0054E8  0100               	movlb	0	; () banked
 15572  0054EA  90D8               	bcf	status,0,c
 15573  0054EC  0100               	movlb	0	; () banked
 15574  0054EE  338B               	rrcf	(___fttol@lval+3)& (0+255),f,b
 15575  0054F0  0100               	movlb	0	; () banked
 15576  0054F2  338A               	rrcf	(___fttol@lval+2)& (0+255),f,b
 15577  0054F4  0100               	movlb	0	; () banked
 15578  0054F6  3389               	rrcf	(___fttol@lval+1)& (0+255),f,b
 15579  0054F8  0100               	movlb	0	; () banked
 15580  0054FA  3388               	rrcf	___fttol@lval& (0+255),f,b
 15581                           
 15582                           ; BSR set to: 0
 15583  0054FC  0100               	movlb	0	; () banked
 15584  0054FE  0100               	movlb	0	; () banked
 15585  005500  3F8C               	incfsz	___fttol@exp1& (0+255),f,b
 15586  005502  D7F2               	goto	i2l8145
 15587  005504  D024               	goto	i2l8159
 15588  005506                     i2l8149:
 15589                           
 15590                           ; BSR set to: 0
 15591  005506  0E17               	movlw	23
 15592  005508  0100               	movlb	0	; () banked
 15593  00550A  0100               	movlb	0	; () banked
 15594  00550C  658C               	cpfsgt	___fttol@exp1& (0+255),b
 15595  00550E  D01B               	goto	i2l8157
 15596  005510                     i2u682_40:
 15597                           
 15598                           ; BSR set to: 0
 15599  005510  0E00               	movlw	0
 15600  005512  0100               	movlb	0	; () banked
 15601  005514  0100               	movlb	0	; () banked
 15602  005516  6F7E               	movwf	?___fttol& (0+255),b
 15603  005518  0E00               	movlw	0
 15604  00551A  0100               	movlb	0	; () banked
 15605  00551C  6F7F               	movwf	(?___fttol+1)& (0+255),b
 15606  00551E  0E00               	movlw	0
 15607  005520  0100               	movlb	0	; () banked
 15608  005522  6F80               	movwf	(?___fttol+2)& (0+255),b
 15609  005524  0E00               	movlw	0
 15610  005526  0100               	movlb	0	; () banked
 15611  005528  6F81               	movwf	(?___fttol+3)& (0+255),b
 15612  00552A  D02E               	goto	i2l1252
 15613  00552C                     i2l8155:
 15614                           
 15615                           ; BSR set to: 0
 15616  00552C  0100               	movlb	0	; () banked
 15617  00552E  90D8               	bcf	status,0,c
 15618  005530  0100               	movlb	0	; () banked
 15619  005532  3788               	rlcf	___fttol@lval& (0+255),f,b
 15620  005534  0100               	movlb	0	; () banked
 15621  005536  3789               	rlcf	(___fttol@lval+1)& (0+255),f,b
 15622  005538  0100               	movlb	0	; () banked
 15623  00553A  378A               	rlcf	(___fttol@lval+2)& (0+255),f,b
 15624  00553C  0100               	movlb	0	; () banked
 15625  00553E  378B               	rlcf	(___fttol@lval+3)& (0+255),f,b
 15626  005540  0100               	movlb	0	; () banked
 15627  005542  0100               	movlb	0	; () banked
 15628  005544  078C               	decf	___fttol@exp1& (0+255),f,b
 15629  005546                     i2l8157:
 15630                           
 15631                           ; BSR set to: 0
 15632  005546  0100               	movlb	0	; () banked
 15633  005548  0100               	movlb	0	; () banked
 15634  00554A  678C               	tstfsz	___fttol@exp1& (0+255),b
 15635  00554C  D7EF               	goto	i2l8155
 15636  00554E                     i2l8159:
 15637                           
 15638                           ; BSR set to: 0
 15639  00554E  0100               	movlb	0	; () banked
 15640  005550  0100               	movlb	0	; () banked
 15641  005552  5187               	movf	___fttol@sign1& (0+255),w,b
 15642  005554  B4D8               	btfsc	status,2,c
 15643  005556  D010               	goto	i2l8163
 15644                           
 15645                           ; BSR set to: 0
 15646  005558  0100               	movlb	0	; () banked
 15647  00555A  0100               	movlb	0	; () banked
 15648  00555C  1F8B               	comf	(___fttol@lval+3)& (0+255),f,b
 15649  00555E  0100               	movlb	0	; () banked
 15650  005560  1F8A               	comf	(___fttol@lval+2)& (0+255),f,b
 15651  005562  0100               	movlb	0	; () banked
 15652  005564  1F89               	comf	(___fttol@lval+1)& (0+255),f,b
 15653  005566  0100               	movlb	0	; () banked
 15654  005568  6D88               	negf	___fttol@lval& (0+255),b
 15655  00556A  0E00               	movlw	0
 15656  00556C  0100               	movlb	0	; () banked
 15657  00556E  2389               	addwfc	(___fttol@lval+1)& (0+255),f,b
 15658  005570  0100               	movlb	0	; () banked
 15659  005572  238A               	addwfc	(___fttol@lval+2)& (0+255),f,b
 15660  005574  0100               	movlb	0	; () banked
 15661  005576  238B               	addwfc	(___fttol@lval+3)& (0+255),f,b
 15662  005578                     i2l8163:
 15663                           
 15664                           ; BSR set to: 0
 15665  005578  C088  F07E         	movff	___fttol@lval,?___fttol
 15666  00557C  C089  F07F         	movff	___fttol@lval+1,?___fttol+1
 15667  005580  C08A  F080         	movff	___fttol@lval+2,?___fttol+2
 15668  005584  C08B  F081         	movff	___fttol@lval+3,?___fttol+3
 15669  005588                     i2l1252:
 15670                           
 15671                           ; BSR set to: 0
 15672  005588  0012               	return	
 15673  00558A                     __end_of___fttol:
 15674                           	opt stack 0
 15675                           tosu	equ	0xFFF
 15676                           tosh	equ	0xFFE
 15677                           tosl	equ	0xFFD
 15678                           pclatu	equ	0xFFB
 15679                           pclath	equ	0xFFA
 15680                           tblptru	equ	0xFF8
 15681                           tblptrh	equ	0xFF7
 15682                           tblptrl	equ	0xFF6
 15683                           tablat	equ	0xFF5
 15684                           prodh	equ	0xFF4
 15685                           prodl	equ	0xFF3
 15686                           intcon	equ	0xFF2
 15687                           intcon2	equ	0xFF1
 15688                           indf0	equ	0xFEF
 15689                           postinc0	equ	0xFEE
 15690                           fsr0h	equ	0xFEA
 15691                           fsr0l	equ	0xFE9
 15692                           wreg	equ	0xFE8
 15693                           postinc1	equ	0xFE6
 15694                           postdec1	equ	0xFE5
 15695                           fsr1h	equ	0xFE2
 15696                           fsr1l	equ	0xFE1
 15697                           bsr	equ	0xFE0
 15698                           indf2	equ	0xFDF
 15699                           postinc2	equ	0xFDE
 15700                           postdec2	equ	0xFDD
 15701                           plusw2	equ	0xFDB
 15702                           fsr2h	equ	0xFDA
 15703                           fsr2l	equ	0xFD9
 15704                           status	equ	0xFD8
 15705                           
 15706 ;; *************** function ___ftneg *****************
 15707 ;; Defined at:
 15708 ;;		line 16 in file "/usr/opt/microchip/xc8/v1.20/sources/common/ftneg.c"
 15709 ;; Parameters:    Size  Location     Type
 15710 ;;  f1              3   45[BANK0 ] float 
 15711 ;; Auto vars:     Size  Location     Type
 15712 ;;		None
 15713 ;; Return value:  Size  Location     Type
 15714 ;;                  3   45[BANK0 ] float 
 15715 ;; Registers used:
 15716 ;;		wreg, status,2, status,0
 15717 ;; Tracked objects:
 15718 ;;		On entry : 0/0
 15719 ;;		On exit  : 0/0
 15720 ;;		Unchanged: 0/0
 15721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15722 ;;      Params:         0       3       0       0       0       0       0       0       0
 15723 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15724 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15725 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15726 ;;Total ram usage:        3 bytes
 15727 ;; Hardware stack levels used:    1
 15728 ;; This function calls:
 15729 ;;		Nothing
 15730 ;; This function is called by:
 15731 ;;		_sprintf
 15732 ;; This function uses a non-reentrant model
 15733 ;;
 15734                           
 15735                           	psect	text42
 15736  006EFE                     __ptext42:
 15737                           	opt stack 0
 15738  006EFE                     ___ftneg:
 15739                           	opt stack 17
 15740                           
 15741                           ; BSR set to: 0
 15742                           ;incstack = 0
 15743                           ;incstack = 0
 15744  006EFE  0E7F               	movlw	127
 15745  006F00  0100               	movlb	0	; () banked
 15746  006F02  0100               	movlb	0	; () banked
 15747  006F04  158F               	andwf	(___ftneg@f1+2)& (0+255),w,b
 15748  006F06  0100               	movlb	0	; () banked
 15749  006F08  118E               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 15750  006F0A  0100               	movlb	0	; () banked
 15751  006F0C  118D               	iorwf	___ftneg@f1& (0+255),w,b
 15752  006F0E  B4D8               	btfsc	status,2,c
 15753  006F10  D00C               	goto	i2l1242
 15754                           
 15755                           ; BSR set to: 0
 15756  006F12  0E00               	movlw	0
 15757  006F14  0100               	movlb	0	; () banked
 15758  006F16  0100               	movlb	0	; () banked
 15759  006F18  1B8D               	xorwf	___ftneg@f1& (0+255),f,b
 15760  006F1A  0E00               	movlw	0
 15761  006F1C  0100               	movlb	0	; () banked
 15762  006F1E  0100               	movlb	0	; () banked
 15763  006F20  1B8E               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 15764  006F22  0E80               	movlw	128
 15765  006F24  0100               	movlb	0	; () banked
 15766  006F26  0100               	movlb	0	; () banked
 15767  006F28  1B8F               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 15768  006F2A                     i2l1242:
 15769                           
 15770                           ; BSR set to: 0
 15771  006F2A  C08D  F08D         	movff	___ftneg@f1,?___ftneg
 15772  006F2E  C08E  F08E         	movff	___ftneg@f1+1,?___ftneg+1
 15773  006F32  C08F  F08F         	movff	___ftneg@f1+2,?___ftneg+2
 15774                           
 15775                           ; BSR set to: 0
 15776  006F36  0012               	return	
 15777  006F38                     __end_of___ftneg:
 15778                           	opt stack 0
 15779                           tosu	equ	0xFFF
 15780                           tosh	equ	0xFFE
 15781                           tosl	equ	0xFFD
 15782                           pclatu	equ	0xFFB
 15783                           pclath	equ	0xFFA
 15784                           tblptru	equ	0xFF8
 15785                           tblptrh	equ	0xFF7
 15786                           tblptrl	equ	0xFF6
 15787                           tablat	equ	0xFF5
 15788                           prodh	equ	0xFF4
 15789                           prodl	equ	0xFF3
 15790                           intcon	equ	0xFF2
 15791                           intcon2	equ	0xFF1
 15792                           indf0	equ	0xFEF
 15793                           postinc0	equ	0xFEE
 15794                           fsr0h	equ	0xFEA
 15795                           fsr0l	equ	0xFE9
 15796                           wreg	equ	0xFE8
 15797                           postinc1	equ	0xFE6
 15798                           postdec1	equ	0xFE5
 15799                           fsr1h	equ	0xFE2
 15800                           fsr1l	equ	0xFE1
 15801                           bsr	equ	0xFE0
 15802                           indf2	equ	0xFDF
 15803                           postinc2	equ	0xFDE
 15804                           postdec2	equ	0xFDD
 15805                           plusw2	equ	0xFDB
 15806                           fsr2h	equ	0xFDA
 15807                           fsr2l	equ	0xFD9
 15808                           status	equ	0xFD8
 15809                           
 15810 ;; *************** function ___ftge *****************
 15811 ;; Defined at:
 15812 ;;		line 5 in file "/usr/opt/microchip/xc8/v1.20/sources/common/ftge.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;  ff1             3   48[BANK0 ] float 
 15815 ;;  ff2             3   51[BANK0 ] float 
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;		None
 15818 ;; Return value:  Size  Location     Type
 15819 ;;		None               void
 15820 ;; Registers used:
 15821 ;;		wreg, status,2, status,0
 15822 ;; Tracked objects:
 15823 ;;		On entry : 0/0
 15824 ;;		On exit  : 0/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15827 ;;      Params:         0       6       0       0       0       0       0       0       0
 15828 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15829 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15830 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15831 ;;Total ram usage:        9 bytes
 15832 ;; Hardware stack levels used:    1
 15833 ;; This function calls:
 15834 ;;		Nothing
 15835 ;; This function is called by:
 15836 ;;		_sprintf
 15837 ;; This function uses a non-reentrant model
 15838 ;;
 15839                           
 15840                           	psect	text43
 15841  005C5E                     __ptext43:
 15842                           	opt stack 0
 15843  005C5E                     ___ftge:
 15844                           	opt stack 17
 15845                           
 15846                           ; BSR set to: 0
 15847                           ;incstack = 0
 15848                           ;incstack = 0
 15849  005C5E  0100               	movlb	0	; () banked
 15850  005C60  0100               	movlb	0	; () banked
 15851  005C62  AF92               	btfss	(___ftge@ff1+2)& (0+255),7,b
 15852  005C64  D021               	goto	i2l8103
 15853                           
 15854                           ; BSR set to: 0
 15855  005C66  0100               	movlb	0	; () banked
 15856  005C68  C090  F096         	movff	___ftge@ff1,??___ftge
 15857  005C6C  0100               	movlb	0	; () banked
 15858  005C6E  C091  F097         	movff	___ftge@ff1+1,??___ftge+1
 15859  005C72  0100               	movlb	0	; () banked
 15860  005C74  C092  F098         	movff	___ftge@ff1+2,??___ftge+2
 15861  005C78  0100               	movlb	0	; () banked
 15862  005C7A  1F96               	comf	??___ftge& (0+255),f,b
 15863  005C7C  1F97               	comf	(??___ftge+1)& (0+255),f,b
 15864  005C7E  1F98               	comf	(??___ftge+2)& (0+255),f,b
 15865  005C80  2B96               	incf	??___ftge& (0+255),f,b
 15866  005C82  0E00               	movlw	0
 15867  005C84  2397               	addwfc	(??___ftge+1)& (0+255),f,b
 15868  005C86  2398               	addwfc	(??___ftge+2)& (0+255),f,b
 15869  005C88  0E00               	movlw	0
 15870  005C8A  0100               	movlb	0	; () banked
 15871  005C8C  2596               	addwf	??___ftge& (0+255),w,b
 15872  005C8E  0100               	movlb	0	; () banked
 15873  005C90  0100               	movlb	0	; () banked
 15874  005C92  6F90               	movwf	___ftge@ff1& (0+255),b
 15875  005C94  0E00               	movlw	0
 15876  005C96  0100               	movlb	0	; () banked
 15877  005C98  2197               	addwfc	(??___ftge+1)& (0+255),w,b
 15878  005C9A  0100               	movlb	0	; () banked
 15879  005C9C  6F91               	movwf	(___ftge@ff1+1)& (0+255),b
 15880  005C9E  0E80               	movlw	128
 15881  005CA0  0100               	movlb	0	; () banked
 15882  005CA2  2198               	addwfc	(??___ftge+2)& (0+255),w,b
 15883  005CA4  0100               	movlb	0	; () banked
 15884  005CA6  6F92               	movwf	(___ftge@ff1+2)& (0+255),b
 15885  005CA8                     i2l8103:
 15886                           
 15887                           ; BSR set to: 0
 15888  005CA8  0100               	movlb	0	; () banked
 15889  005CAA  0100               	movlb	0	; () banked
 15890  005CAC  AF95               	btfss	(___ftge@ff2+2)& (0+255),7,b
 15891  005CAE  D021               	goto	i2l8107
 15892                           
 15893                           ; BSR set to: 0
 15894  005CB0  0100               	movlb	0	; () banked
 15895  005CB2  C093  F096         	movff	___ftge@ff2,??___ftge
 15896  005CB6  0100               	movlb	0	; () banked
 15897  005CB8  C094  F097         	movff	___ftge@ff2+1,??___ftge+1
 15898  005CBC  0100               	movlb	0	; () banked
 15899  005CBE  C095  F098         	movff	___ftge@ff2+2,??___ftge+2
 15900  005CC2  0100               	movlb	0	; () banked
 15901  005CC4  1F96               	comf	??___ftge& (0+255),f,b
 15902  005CC6  1F97               	comf	(??___ftge+1)& (0+255),f,b
 15903  005CC8  1F98               	comf	(??___ftge+2)& (0+255),f,b
 15904  005CCA  2B96               	incf	??___ftge& (0+255),f,b
 15905  005CCC  0E00               	movlw	0
 15906  005CCE  2397               	addwfc	(??___ftge+1)& (0+255),f,b
 15907  005CD0  2398               	addwfc	(??___ftge+2)& (0+255),f,b
 15908  005CD2  0E00               	movlw	0
 15909  005CD4  0100               	movlb	0	; () banked
 15910  005CD6  2596               	addwf	??___ftge& (0+255),w,b
 15911  005CD8  0100               	movlb	0	; () banked
 15912  005CDA  0100               	movlb	0	; () banked
 15913  005CDC  6F93               	movwf	___ftge@ff2& (0+255),b
 15914  005CDE  0E00               	movlw	0
 15915  005CE0  0100               	movlb	0	; () banked
 15916  005CE2  2197               	addwfc	(??___ftge+1)& (0+255),w,b
 15917  005CE4  0100               	movlb	0	; () banked
 15918  005CE6  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
 15919  005CE8  0E80               	movlw	128
 15920  005CEA  0100               	movlb	0	; () banked
 15921  005CEC  2198               	addwfc	(??___ftge+2)& (0+255),w,b
 15922  005CEE  0100               	movlb	0	; () banked
 15923  005CF0  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
 15924  005CF2                     i2l8107:
 15925                           
 15926                           ; BSR set to: 0
 15927  005CF2  0E00               	movlw	0
 15928  005CF4  0100               	movlb	0	; () banked
 15929  005CF6  0100               	movlb	0	; () banked
 15930  005CF8  1B90               	xorwf	___ftge@ff1& (0+255),f,b
 15931  005CFA  0E00               	movlw	0
 15932  005CFC  0100               	movlb	0	; () banked
 15933  005CFE  0100               	movlb	0	; () banked
 15934  005D00  1B91               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 15935  005D02  0E80               	movlw	128
 15936  005D04  0100               	movlb	0	; () banked
 15937  005D06  0100               	movlb	0	; () banked
 15938  005D08  1B92               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 15939                           
 15940                           ; BSR set to: 0
 15941  005D0A  0E00               	movlw	0
 15942  005D0C  0100               	movlb	0	; () banked
 15943  005D0E  0100               	movlb	0	; () banked
 15944  005D10  1B93               	xorwf	___ftge@ff2& (0+255),f,b
 15945  005D12  0E00               	movlw	0
 15946  005D14  0100               	movlb	0	; () banked
 15947  005D16  0100               	movlb	0	; () banked
 15948  005D18  1B94               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 15949  005D1A  0E80               	movlw	128
 15950  005D1C  0100               	movlb	0	; () banked
 15951  005D1E  0100               	movlb	0	; () banked
 15952  005D20  1B95               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 15953  005D22  0100               	movlb	0	; () banked
 15954  005D24  0100               	movlb	0	; () banked
 15955  005D26  5193               	movf	___ftge@ff2& (0+255),w,b
 15956  005D28  0100               	movlb	0	; () banked
 15957  005D2A  0100               	movlb	0	; () banked
 15958  005D2C  5D90               	subwf	___ftge@ff1& (0+255),w,b
 15959  005D2E  0100               	movlb	0	; () banked
 15960  005D30  0100               	movlb	0	; () banked
 15961  005D32  5194               	movf	(___ftge@ff2+1)& (0+255),w,b
 15962  005D34  0100               	movlb	0	; () banked
 15963  005D36  0100               	movlb	0	; () banked
 15964  005D38  5991               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 15965  005D3A  0100               	movlb	0	; () banked
 15966  005D3C  0100               	movlb	0	; () banked
 15967  005D3E  5195               	movf	(___ftge@ff2+2)& (0+255),w,b
 15968  005D40  0100               	movlb	0	; () banked
 15969  005D42  0100               	movlb	0	; () banked
 15970  005D44  5992               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 15971  005D46  B0D8               	btfsc	status,0,c
 15972  005D48  D002               	goto	i2l8113
 15973                           
 15974                           ; BSR set to: 0
 15975  005D4A  90D8               	bcf	status,0,c
 15976  005D4C  D001               	goto	i2l1226
 15977  005D4E                     i2l8113:
 15978                           
 15979                           ; BSR set to: 0
 15980  005D4E  80D8               	bsf	status,0,c
 15981  005D50                     i2l1226:
 15982                           
 15983                           ; BSR set to: 0
 15984  005D50  0012               	return	
 15985  005D52                     __end_of___ftge:
 15986                           	opt stack 0
 15987                           tosu	equ	0xFFF
 15988                           tosh	equ	0xFFE
 15989                           tosl	equ	0xFFD
 15990                           pclatu	equ	0xFFB
 15991                           pclath	equ	0xFFA
 15992                           tblptru	equ	0xFF8
 15993                           tblptrh	equ	0xFF7
 15994                           tblptrl	equ	0xFF6
 15995                           tablat	equ	0xFF5
 15996                           prodh	equ	0xFF4
 15997                           prodl	equ	0xFF3
 15998                           intcon	equ	0xFF2
 15999                           intcon2	equ	0xFF1
 16000                           indf0	equ	0xFEF
 16001                           postinc0	equ	0xFEE
 16002                           fsr0h	equ	0xFEA
 16003                           fsr0l	equ	0xFE9
 16004                           wreg	equ	0xFE8
 16005                           postinc1	equ	0xFE6
 16006                           postdec1	equ	0xFE5
 16007                           fsr1h	equ	0xFE2
 16008                           fsr1l	equ	0xFE1
 16009                           bsr	equ	0xFE0
 16010                           indf2	equ	0xFDF
 16011                           postinc2	equ	0xFDE
 16012                           postdec2	equ	0xFDD
 16013                           plusw2	equ	0xFDB
 16014                           fsr2h	equ	0xFDA
 16015                           fsr2l	equ	0xFD9
 16016                           status	equ	0xFD8
 16017                           
 16018 ;; *************** function ___asftsub *****************
 16019 ;; Defined at:
 16020 ;;		line 5 in file "/usr/opt/microchip/xc8/v1.20/sources/pic18/asftsub.c"
 16021 ;; Parameters:    Size  Location     Type
 16022 ;;  f1p             2   86[BANK0 ] PTR float 
 16023 ;;		 -> sprintf@fval(3), 
 16024 ;;  f2              3   88[BANK0 ] float 
 16025 ;; Auto vars:     Size  Location     Type
 16026 ;;		None
 16027 ;; Return value:  Size  Location     Type
 16028 ;;                  3   86[BANK0 ] float 
 16029 ;; Registers used:
 16030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16031 ;; Tracked objects:
 16032 ;;		On entry : 0/0
 16033 ;;		On exit  : 0/0
 16034 ;;		Unchanged: 0/0
 16035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16036 ;;      Params:         0       5       0       0       0       0       0       0       0
 16037 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16038 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16039 ;;      Totals:         0       5       0       0       0       0       0       0       0
 16040 ;;Total ram usage:        5 bytes
 16041 ;; Hardware stack levels used:    1
 16042 ;; Hardware stack levels required when called:    3
 16043 ;; This function calls:
 16044 ;;		___ftsub
 16045 ;; This function is called by:
 16046 ;;		_sprintf
 16047 ;; This function uses a non-reentrant model
 16048 ;;
 16049                           
 16050                           	psect	text44
 16051  006D3A                     __ptext44:
 16052                           	opt stack 0
 16053  006D3A                     ___asftsub:
 16054                           	opt stack 14
 16055                           
 16056                           ;	Return value of ___asftsub is never used
 16057                           
 16058                           ; BSR set to: 0
 16059                           ;incstack = 0
 16060                           ;incstack = 0
 16061  006D3A  C0B6  FFD9         	movff	___asftsub@f1p,fsr2l
 16062  006D3E  C0B7  FFDA         	movff	___asftsub@f1p+1,fsr2h
 16063  006D42  0100               	movlb	0	; () banked
 16064  006D44  CFDE F0B0          	movff	postinc2,?___ftsub
 16065  006D48  0100               	movlb	0	; () banked
 16066  006D4A  CFDE F0B1          	movff	postinc2,?___ftsub+1
 16067  006D4E  0100               	movlb	0	; () banked
 16068  006D50  CFDD F0B2          	movff	postdec2,?___ftsub+2
 16069  006D54  C0B8  F0B3         	movff	___asftsub@f2,?___ftsub+3
 16070  006D58  C0B9  F0B4         	movff	___asftsub@f2+1,?___ftsub+4
 16071  006D5C  C0BA  F0B5         	movff	___asftsub@f2+2,?___ftsub+5
 16072  006D60  ECBE  F036         	call	___ftsub	;wreg free
 16073  006D64  C0B6  FFD9         	movff	___asftsub@f1p,fsr2l
 16074  006D68  C0B7  FFDA         	movff	___asftsub@f1p+1,fsr2h
 16075  006D6C  C0B0  FFDE         	movff	?___ftsub,postinc2
 16076  006D70  C0B1  FFDE         	movff	?___ftsub+1,postinc2
 16077  006D74  C0B2  FFDD         	movff	?___ftsub+2,postdec2
 16078  006D78  52DD               	movf	postdec2,f,c
 16079  006D7A  0012               	return	
 16080  006D7C                     __end_of___asftsub:
 16081                           	opt stack 0
 16082                           tosu	equ	0xFFF
 16083                           tosh	equ	0xFFE
 16084                           tosl	equ	0xFFD
 16085                           pclatu	equ	0xFFB
 16086                           pclath	equ	0xFFA
 16087                           tblptru	equ	0xFF8
 16088                           tblptrh	equ	0xFF7
 16089                           tblptrl	equ	0xFF6
 16090                           tablat	equ	0xFF5
 16091                           prodh	equ	0xFF4
 16092                           prodl	equ	0xFF3
 16093                           intcon	equ	0xFF2
 16094                           intcon2	equ	0xFF1
 16095                           indf0	equ	0xFEF
 16096                           postinc0	equ	0xFEE
 16097                           fsr0h	equ	0xFEA
 16098                           fsr0l	equ	0xFE9
 16099                           wreg	equ	0xFE8
 16100                           postinc1	equ	0xFE6
 16101                           postdec1	equ	0xFE5
 16102                           fsr1h	equ	0xFE2
 16103                           fsr1l	equ	0xFE1
 16104                           bsr	equ	0xFE0
 16105                           indf2	equ	0xFDF
 16106                           postinc2	equ	0xFDE
 16107                           postdec2	equ	0xFDD
 16108                           plusw2	equ	0xFDB
 16109                           fsr2h	equ	0xFDA
 16110                           fsr2l	equ	0xFD9
 16111                           status	equ	0xFD8
 16112                           
 16113 ;; *************** function ___ftsub *****************
 16114 ;; Defined at:
 16115 ;;		line 22 in file "/usr/opt/microchip/xc8/v1.20/sources/common/ftsub.c"
 16116 ;; Parameters:    Size  Location     Type
 16117 ;;  f1              3   80[BANK0 ] float 
 16118 ;;  f2              3   83[BANK0 ] float 
 16119 ;; Auto vars:     Size  Location     Type
 16120 ;;		None
 16121 ;; Return value:  Size  Location     Type
 16122 ;;                  3   80[BANK0 ] float 
 16123 ;; Registers used:
 16124 ;;		wreg, status,2, status,0, cstack
 16125 ;; Tracked objects:
 16126 ;;		On entry : 0/0
 16127 ;;		On exit  : 0/0
 16128 ;;		Unchanged: 0/0
 16129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16130 ;;      Params:         0       6       0       0       0       0       0       0       0
 16131 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16132 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16133 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16134 ;;Total ram usage:        6 bytes
 16135 ;; Hardware stack levels used:    1
 16136 ;; Hardware stack levels required when called:    2
 16137 ;; This function calls:
 16138 ;;		___ftadd
 16139 ;; This function is called by:
 16140 ;;		___asftsub
 16141 ;; This function uses a non-reentrant model
 16142 ;;
 16143                           
 16144                           	psect	text45
 16145  006D7C                     __ptext45:
 16146                           	opt stack 0
 16147  006D7C                     ___ftsub:
 16148                           	opt stack 14
 16149                           
 16150                           ;incstack = 0
 16151                           ;incstack = 0
 16152  006D7C  0E00               	movlw	0
 16153  006D7E  0100               	movlb	0	; () banked
 16154  006D80  0100               	movlb	0	; () banked
 16155  006D82  1BB3               	xorwf	___ftsub@f2& (0+255),f,b
 16156  006D84  0E00               	movlw	0
 16157  006D86  0100               	movlb	0	; () banked
 16158  006D88  0100               	movlb	0	; () banked
 16159  006D8A  1BB4               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 16160  006D8C  0E80               	movlw	128
 16161  006D8E  0100               	movlb	0	; () banked
 16162  006D90  0100               	movlb	0	; () banked
 16163  006D92  1BB5               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 16164                           
 16165                           ; BSR set to: 0
 16166  006D94  C0B0  F0A2         	movff	___ftsub@f1,?___ftadd
 16167  006D98  C0B1  F0A3         	movff	___ftsub@f1+1,?___ftadd+1
 16168  006D9C  C0B2  F0A4         	movff	___ftsub@f1+2,?___ftadd+2
 16169  006DA0  C0B3  F0A5         	movff	___ftsub@f2,?___ftadd+3
 16170  006DA4  C0B4  F0A6         	movff	___ftsub@f2+1,?___ftadd+4
 16171  006DA8  C0B5  F0A7         	movff	___ftsub@f2+2,?___ftadd+5
 16172  006DAC  ECFC  F01F         	call	___ftadd	;wreg free
 16173  006DB0  C0A4  F0B2         	movff	?___ftadd+2,?___ftsub+2
 16174  006DB4  C0A3  F0B1         	movff	?___ftadd+1,?___ftsub+1
 16175  006DB8  C0A2  F0B0         	movff	?___ftadd,?___ftsub
 16176  006DBC  0012               	return	
 16177  006DBE                     __end_of___ftsub:
 16178                           	opt stack 0
 16179                           tosu	equ	0xFFF
 16180                           tosh	equ	0xFFE
 16181                           tosl	equ	0xFFD
 16182                           pclatu	equ	0xFFB
 16183                           pclath	equ	0xFFA
 16184                           tblptru	equ	0xFF8
 16185                           tblptrh	equ	0xFF7
 16186                           tblptrl	equ	0xFF6
 16187                           tablat	equ	0xFF5
 16188                           prodh	equ	0xFF4
 16189                           prodl	equ	0xFF3
 16190                           intcon	equ	0xFF2
 16191                           intcon2	equ	0xFF1
 16192                           indf0	equ	0xFEF
 16193                           postinc0	equ	0xFEE
 16194                           fsr0h	equ	0xFEA
 16195                           fsr0l	equ	0xFE9
 16196                           wreg	equ	0xFE8
 16197                           postinc1	equ	0xFE6
 16198                           postdec1	equ	0xFE5
 16199                           fsr1h	equ	0xFE2
 16200                           fsr1l	equ	0xFE1
 16201                           bsr	equ	0xFE0
 16202                           indf2	equ	0xFDF
 16203                           postinc2	equ	0xFDE
 16204                           postdec2	equ	0xFDD
 16205                           plusw2	equ	0xFDB
 16206                           fsr2h	equ	0xFDA
 16207                           fsr2l	equ	0xFD9
 16208                           status	equ	0xFD8
 16209                           
 16210 ;; *************** function ___asftmul *****************
 16211 ;; Defined at:
 16212 ;;		line 5 in file "/usr/opt/microchip/xc8/v1.20/sources/pic18/asftmul.c"
 16213 ;; Parameters:    Size  Location     Type
 16214 ;;  f1p             2   80[BANK0 ] PTR float 
 16215 ;;		 -> sprintf@temp(3), sprintf@integ(3), sprintf@fval(3), 
 16216 ;;  f2              3   82[BANK0 ] float 
 16217 ;; Auto vars:     Size  Location     Type
 16218 ;;		None
 16219 ;; Return value:  Size  Location     Type
 16220 ;;                  3   80[BANK0 ] float 
 16221 ;; Registers used:
 16222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16223 ;; Tracked objects:
 16224 ;;		On entry : 0/0
 16225 ;;		On exit  : 0/0
 16226 ;;		Unchanged: 0/0
 16227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16228 ;;      Params:         0       5       0       0       0       0       0       0       0
 16229 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16230 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16231 ;;      Totals:         0       5       0       0       0       0       0       0       0
 16232 ;;Total ram usage:        5 bytes
 16233 ;; Hardware stack levels used:    1
 16234 ;; Hardware stack levels required when called:    2
 16235 ;; This function calls:
 16236 ;;		___ftmul
 16237 ;; This function is called by:
 16238 ;;		_sprintf
 16239 ;; This function uses a non-reentrant model
 16240 ;;
 16241                           
 16242                           	psect	text46
 16243  006DBE                     __ptext46:
 16244                           	opt stack 0
 16245  006DBE                     ___asftmul:
 16246                           	opt stack 15
 16247                           
 16248                           ;	Return value of ___asftmul is never used
 16249                           
 16250                           ;incstack = 0
 16251                           ;incstack = 0
 16252  006DBE  C0B0  FFD9         	movff	___asftmul@f1p,fsr2l
 16253  006DC2  C0B1  FFDA         	movff	___asftmul@f1p+1,fsr2h
 16254  006DC6  0100               	movlb	0	; () banked
 16255  006DC8  CFDE F08D          	movff	postinc2,?___ftmul
 16256  006DCC  0100               	movlb	0	; () banked
 16257  006DCE  CFDE F08E          	movff	postinc2,?___ftmul+1
 16258  006DD2  0100               	movlb	0	; () banked
 16259  006DD4  CFDD F08F          	movff	postdec2,?___ftmul+2
 16260  006DD8  C0B2  F090         	movff	___asftmul@f2,?___ftmul+3
 16261  006DDC  C0B3  F091         	movff	___asftmul@f2+1,?___ftmul+4
 16262  006DE0  C0B4  F092         	movff	___asftmul@f2+2,?___ftmul+5
 16263  006DE4  EC79  F026         	call	___ftmul	;wreg free
 16264  006DE8  C0B0  FFD9         	movff	___asftmul@f1p,fsr2l
 16265  006DEC  C0B1  FFDA         	movff	___asftmul@f1p+1,fsr2h
 16266  006DF0  C08D  FFDE         	movff	?___ftmul,postinc2
 16267  006DF4  C08E  FFDE         	movff	?___ftmul+1,postinc2
 16268  006DF8  C08F  FFDD         	movff	?___ftmul+2,postdec2
 16269  006DFC  52DD               	movf	postdec2,f,c
 16270  006DFE  0012               	return	
 16271  006E00                     __end_of___asftmul:
 16272                           	opt stack 0
 16273                           tosu	equ	0xFFF
 16274                           tosh	equ	0xFFE
 16275                           tosl	equ	0xFFD
 16276                           pclatu	equ	0xFFB
 16277                           pclath	equ	0xFFA
 16278                           tblptru	equ	0xFF8
 16279                           tblptrh	equ	0xFF7
 16280                           tblptrl	equ	0xFF6
 16281                           tablat	equ	0xFF5
 16282                           prodh	equ	0xFF4
 16283                           prodl	equ	0xFF3
 16284                           intcon	equ	0xFF2
 16285                           intcon2	equ	0xFF1
 16286                           indf0	equ	0xFEF
 16287                           postinc0	equ	0xFEE
 16288                           fsr0h	equ	0xFEA
 16289                           fsr0l	equ	0xFE9
 16290                           wreg	equ	0xFE8
 16291                           postinc1	equ	0xFE6
 16292                           postdec1	equ	0xFE5
 16293                           fsr1h	equ	0xFE2
 16294                           fsr1l	equ	0xFE1
 16295                           bsr	equ	0xFE0
 16296                           indf2	equ	0xFDF
 16297                           postinc2	equ	0xFDE
 16298                           postdec2	equ	0xFDD
 16299                           plusw2	equ	0xFDB
 16300                           fsr2h	equ	0xFDA
 16301                           fsr2l	equ	0xFD9
 16302                           status	equ	0xFD8
 16303                           
 16304 ;; *************** function ___asftdiv *****************
 16305 ;; Defined at:
 16306 ;;		line 5 in file "/usr/opt/microchip/xc8/v1.20/sources/pic18/asftdiv.c"
 16307 ;; Parameters:    Size  Location     Type
 16308 ;;  f1p             2   74[BANK0 ] PTR float 
 16309 ;;		 -> sprintf@fval(3), 
 16310 ;;  f2              3   76[BANK0 ] float 
 16311 ;; Auto vars:     Size  Location     Type
 16312 ;;		None
 16313 ;; Return value:  Size  Location     Type
 16314 ;;                  3   74[BANK0 ] float 
 16315 ;; Registers used:
 16316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16317 ;; Tracked objects:
 16318 ;;		On entry : 0/0
 16319 ;;		On exit  : 0/0
 16320 ;;		Unchanged: 0/0
 16321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16322 ;;      Params:         0       5       0       0       0       0       0       0       0
 16323 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16324 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16325 ;;      Totals:         0       5       0       0       0       0       0       0       0
 16326 ;;Total ram usage:        5 bytes
 16327 ;; Hardware stack levels used:    1
 16328 ;; Hardware stack levels required when called:    2
 16329 ;; This function calls:
 16330 ;;		___ftdiv
 16331 ;; This function is called by:
 16332 ;;		_sprintf
 16333 ;; This function uses a non-reentrant model
 16334 ;;
 16335                           
 16336                           	psect	text47
 16337  006E00                     __ptext47:
 16338                           	opt stack 0
 16339  006E00                     ___asftdiv:
 16340                           	opt stack 15
 16341                           
 16342                           ;	Return value of ___asftdiv is never used
 16343                           
 16344                           ;incstack = 0
 16345                           ;incstack = 0
 16346  006E00  C0AA  FFD9         	movff	___asftdiv@f1p,fsr2l
 16347  006E04  C0AB  FFDA         	movff	___asftdiv@f1p+1,fsr2h
 16348  006E08  0100               	movlb	0	; () banked
 16349  006E0A  CFDE F068          	movff	postinc2,?___ftdiv
 16350  006E0E  0100               	movlb	0	; () banked
 16351  006E10  CFDE F069          	movff	postinc2,?___ftdiv+1
 16352  006E14  0100               	movlb	0	; () banked
 16353  006E16  CFDD F06A          	movff	postdec2,?___ftdiv+2
 16354  006E1A  C0AC  F06B         	movff	___asftdiv@f2,?___ftdiv+3
 16355  006E1E  C0AD  F06C         	movff	___asftdiv@f2+1,?___ftdiv+4
 16356  006E22  C0AE  F06D         	movff	___asftdiv@f2+2,?___ftdiv+5
 16357  006E26  EC5A  F028         	call	___ftdiv	;wreg free
 16358  006E2A  C0AA  FFD9         	movff	___asftdiv@f1p,fsr2l
 16359  006E2E  C0AB  FFDA         	movff	___asftdiv@f1p+1,fsr2h
 16360  006E32  C068  FFDE         	movff	?___ftdiv,postinc2
 16361  006E36  C069  FFDE         	movff	?___ftdiv+1,postinc2
 16362  006E3A  C06A  FFDD         	movff	?___ftdiv+2,postdec2
 16363  006E3E  52DD               	movf	postdec2,f,c
 16364  006E40  0012               	return	
 16365  006E42                     __end_of___asftdiv:
 16366                           	opt stack 0
 16367                           tosu	equ	0xFFF
 16368                           tosh	equ	0xFFE
 16369                           tosl	equ	0xFFD
 16370                           pclatu	equ	0xFFB
 16371                           pclath	equ	0xFFA
 16372                           tblptru	equ	0xFF8
 16373                           tblptrh	equ	0xFF7
 16374                           tblptrl	equ	0xFF6
 16375                           tablat	equ	0xFF5
 16376                           prodh	equ	0xFF4
 16377                           prodl	equ	0xFF3
 16378                           intcon	equ	0xFF2
 16379                           intcon2	equ	0xFF1
 16380                           indf0	equ	0xFEF
 16381                           postinc0	equ	0xFEE
 16382                           fsr0h	equ	0xFEA
 16383                           fsr0l	equ	0xFE9
 16384                           wreg	equ	0xFE8
 16385                           postinc1	equ	0xFE6
 16386                           postdec1	equ	0xFE5
 16387                           fsr1h	equ	0xFE2
 16388                           fsr1l	equ	0xFE1
 16389                           bsr	equ	0xFE0
 16390                           indf2	equ	0xFDF
 16391                           postinc2	equ	0xFDE
 16392                           postdec2	equ	0xFDD
 16393                           plusw2	equ	0xFDB
 16394                           fsr2h	equ	0xFDA
 16395                           fsr2l	equ	0xFD9
 16396                           status	equ	0xFD8
 16397                           
 16398 ;; *************** function ___ftdiv *****************
 16399 ;; Defined at:
 16400 ;;		line 50 in file "/usr/opt/microchip/xc8/v1.20/sources/common/ftdiv.c"
 16401 ;; Parameters:    Size  Location     Type
 16402 ;;  f1              3    8[BANK0 ] float 
 16403 ;;  f2              3   11[BANK0 ] float 
 16404 ;; Auto vars:     Size  Location     Type
 16405 ;;  f3              3   20[BANK0 ] float 
 16406 ;;  sign            1   24[BANK0 ] unsigned char 
 16407 ;;  exp             1   23[BANK0 ] unsigned char 
 16408 ;;  cntr            1   19[BANK0 ] unsigned char 
 16409 ;; Return value:  Size  Location     Type
 16410 ;;                  3    8[BANK0 ] float 
 16411 ;; Registers used:
 16412 ;;		wreg, status,2, status,0, cstack
 16413 ;; Tracked objects:
 16414 ;;		On entry : 0/0
 16415 ;;		On exit  : 0/0
 16416 ;;		Unchanged: 0/0
 16417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16418 ;;      Params:         0       6       0       0       0       0       0       0       0
 16419 ;;      Locals:         0       6       0       0       0       0       0       0       0
 16420 ;;      Temps:          0       5       0       0       0       0       0       0       0
 16421 ;;      Totals:         0      17       0       0       0       0       0       0       0
 16422 ;;Total ram usage:       17 bytes
 16423 ;; Hardware stack levels used:    1
 16424 ;; Hardware stack levels required when called:    1
 16425 ;; This function calls:
 16426 ;;		___ftpack
 16427 ;; This function is called by:
 16428 ;;		_getTemp
 16429 ;;		___asftdiv
 16430 ;; This function uses a non-reentrant model
 16431 ;;
 16432                           
 16433                           	psect	text48
 16434  0050B4                     __ptext48:
 16435                           	opt stack 0
 16436  0050B4                     ___ftdiv:
 16437                           	opt stack 15
 16438                           
 16439                           ;incstack = 0
 16440                           ;incstack = 0
 16441  0050B4  0E0F               	movlw	15
 16442  0050B6  0100               	movlb	0	; () banked
 16443  0050B8  6F6E               	movwf	??___ftdiv& (0+255),b
 16444  0050BA  0100               	movlb	0	; () banked
 16445  0050BC  C068  F06F         	movff	___ftdiv@f1,??___ftdiv+1
 16446  0050C0  0100               	movlb	0	; () banked
 16447  0050C2  C069  F070         	movff	___ftdiv@f1+1,??___ftdiv+2
 16448  0050C6  0100               	movlb	0	; () banked
 16449  0050C8  C06A  F071         	movff	___ftdiv@f1+2,??___ftdiv+3
 16450  0050CC  0100               	movlb	0	; () banked
 16451  0050CE  296E               	incf	??___ftdiv& (0+255),w,b
 16452  0050D0  0100               	movlb	0	; () banked
 16453  0050D2  6F72               	movwf	(??___ftdiv+4)& (0+255),b
 16454  0050D4  D005               	goto	i2u650_40
 16455  0050D6                     i2u650_45:
 16456  0050D6  0100               	movlb	0	; () banked
 16457  0050D8  90D8               	bcf	status,0,c
 16458  0050DA  3371               	rrcf	(??___ftdiv+3)& (0+255),f,b
 16459  0050DC  3370               	rrcf	(??___ftdiv+2)& (0+255),f,b
 16460  0050DE  336F               	rrcf	(??___ftdiv+1)& (0+255),f,b
 16461  0050E0                     i2u650_40:
 16462  0050E0  0100               	movlb	0	; () banked
 16463  0050E2  2F72               	decfsz	(??___ftdiv+4)& (0+255),f,b
 16464  0050E4  D7F8               	goto	i2u650_45
 16465  0050E6  0100               	movlb	0	; () banked
 16466  0050E8  516F               	movf	(??___ftdiv+1)& (0+255),w,b
 16467  0050EA  0100               	movlb	0	; () banked
 16468  0050EC  0100               	movlb	0	; () banked
 16469  0050EE  6F77               	movwf	___ftdiv@exp& (0+255),b
 16470  0050F0  0100               	movlb	0	; () banked
 16471  0050F2  6777               	tstfsz	___ftdiv@exp& (0+255),b
 16472  0050F4  D001               	goto	i2l7919
 16473  0050F6  D021               	goto	i2u653_40
 16474  0050F8                     i2l7919:
 16475                           
 16476                           ; BSR set to: 0
 16477  0050F8  0E0F               	movlw	15
 16478  0050FA  0100               	movlb	0	; () banked
 16479  0050FC  6F6E               	movwf	??___ftdiv& (0+255),b
 16480  0050FE  0100               	movlb	0	; () banked
 16481  005100  C06B  F06F         	movff	___ftdiv@f2,??___ftdiv+1
 16482  005104  0100               	movlb	0	; () banked
 16483  005106  C06C  F070         	movff	___ftdiv@f2+1,??___ftdiv+2
 16484  00510A  0100               	movlb	0	; () banked
 16485  00510C  C06D  F071         	movff	___ftdiv@f2+2,??___ftdiv+3
 16486  005110  0100               	movlb	0	; () banked
 16487  005112  296E               	incf	??___ftdiv& (0+255),w,b
 16488  005114  0100               	movlb	0	; () banked
 16489  005116  6F72               	movwf	(??___ftdiv+4)& (0+255),b
 16490  005118  D005               	goto	i2u652_40
 16491  00511A                     i2u652_45:
 16492  00511A  0100               	movlb	0	; () banked
 16493  00511C  90D8               	bcf	status,0,c
 16494  00511E  3371               	rrcf	(??___ftdiv+3)& (0+255),f,b
 16495  005120  3370               	rrcf	(??___ftdiv+2)& (0+255),f,b
 16496  005122  336F               	rrcf	(??___ftdiv+1)& (0+255),f,b
 16497  005124                     i2u652_40:
 16498  005124  0100               	movlb	0	; () banked
 16499  005126  2F72               	decfsz	(??___ftdiv+4)& (0+255),f,b
 16500  005128  D7F8               	goto	i2u652_45
 16501  00512A  0100               	movlb	0	; () banked
 16502  00512C  516F               	movf	(??___ftdiv+1)& (0+255),w,b
 16503  00512E  0100               	movlb	0	; () banked
 16504  005130  0100               	movlb	0	; () banked
 16505  005132  6F78               	movwf	___ftdiv@sign& (0+255),b
 16506  005134  0100               	movlb	0	; () banked
 16507  005136  6778               	tstfsz	___ftdiv@sign& (0+255),b
 16508  005138  D00D               	goto	i2l7925
 16509  00513A                     i2u653_40:
 16510                           
 16511                           ; BSR set to: 0
 16512  00513A  0E00               	movlw	0
 16513  00513C  0100               	movlb	0	; () banked
 16514  00513E  0100               	movlb	0	; () banked
 16515  005140  6F68               	movwf	?___ftdiv& (0+255),b
 16516  005142  0E00               	movlw	0
 16517  005144  0100               	movlb	0	; () banked
 16518  005146  0100               	movlb	0	; () banked
 16519  005148  6F69               	movwf	(?___ftdiv+1)& (0+255),b
 16520  00514A  0E00               	movlw	0
 16521  00514C  0100               	movlb	0	; () banked
 16522  00514E  0100               	movlb	0	; () banked
 16523  005150  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
 16524  005152  D093               	goto	i2l1200
 16525  005154                     i2l7925:
 16526                           
 16527                           ; BSR set to: 0
 16528  005154  0E00               	movlw	0
 16529  005156  0100               	movlb	0	; () banked
 16530  005158  0100               	movlb	0	; () banked
 16531  00515A  6F74               	movwf	___ftdiv@f3& (0+255),b
 16532  00515C  0E00               	movlw	0
 16533  00515E  0100               	movlb	0	; () banked
 16534  005160  0100               	movlb	0	; () banked
 16535  005162  6F75               	movwf	(___ftdiv@f3+1)& (0+255),b
 16536  005164  0E00               	movlw	0
 16537  005166  0100               	movlb	0	; () banked
 16538  005168  0100               	movlb	0	; () banked
 16539  00516A  6F76               	movwf	(___ftdiv@f3+2)& (0+255),b
 16540                           
 16541                           ; BSR set to: 0
 16542  00516C  0100               	movlb	0	; () banked
 16543  00516E  0100               	movlb	0	; () banked
 16544  005170  5178               	movf	___ftdiv@sign& (0+255),w,b
 16545  005172  0F89               	addlw	137
 16546  005174  0100               	movlb	0	; () banked
 16547  005176  0100               	movlb	0	; () banked
 16548  005178  5F77               	subwf	___ftdiv@exp& (0+255),f,b
 16549                           
 16550                           ; BSR set to: 0
 16551  00517A  C06A  F078         	movff	___ftdiv@f1+2,___ftdiv@sign
 16552                           
 16553                           ; BSR set to: 0
 16554  00517E  0100               	movlb	0	; () banked
 16555  005180  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 16556  005182  0100               	movlb	0	; () banked
 16557  005184  0100               	movlb	0	; () banked
 16558  005186  1B78               	xorwf	___ftdiv@sign& (0+255),f,b
 16559                           
 16560                           ; BSR set to: 0
 16561  005188  0E80               	movlw	128
 16562  00518A  0100               	movlb	0	; () banked
 16563  00518C  0100               	movlb	0	; () banked
 16564  00518E  1778               	andwf	___ftdiv@sign& (0+255),f,b
 16565                           
 16566                           ; BSR set to: 0
 16567  005190  0100               	movlb	0	; () banked
 16568  005192  0100               	movlb	0	; () banked
 16569  005194  8F69               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 16570                           
 16571                           ; BSR set to: 0
 16572  005196  0EFF               	movlw	255
 16573  005198  0100               	movlb	0	; () banked
 16574  00519A  0100               	movlb	0	; () banked
 16575  00519C  1768               	andwf	___ftdiv@f1& (0+255),f,b
 16576  00519E  0EFF               	movlw	255
 16577  0051A0  0100               	movlb	0	; () banked
 16578  0051A2  0100               	movlb	0	; () banked
 16579  0051A4  1769               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 16580  0051A6  0E00               	movlw	0
 16581  0051A8  0100               	movlb	0	; () banked
 16582  0051AA  0100               	movlb	0	; () banked
 16583  0051AC  176A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 16584                           
 16585                           ; BSR set to: 0
 16586  0051AE  0100               	movlb	0	; () banked
 16587  0051B0  0100               	movlb	0	; () banked
 16588  0051B2  8F6C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 16589                           
 16590                           ; BSR set to: 0
 16591  0051B4  0EFF               	movlw	255
 16592  0051B6  0100               	movlb	0	; () banked
 16593  0051B8  0100               	movlb	0	; () banked
 16594  0051BA  176B               	andwf	___ftdiv@f2& (0+255),f,b
 16595  0051BC  0EFF               	movlw	255
 16596  0051BE  0100               	movlb	0	; () banked
 16597  0051C0  0100               	movlb	0	; () banked
 16598  0051C2  176C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 16599  0051C4  0E00               	movlw	0
 16600  0051C6  0100               	movlb	0	; () banked
 16601  0051C8  0100               	movlb	0	; () banked
 16602  0051CA  176D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 16603                           
 16604                           ; BSR set to: 0
 16605  0051CC  0100               	movlb	0	; () banked
 16606  0051CE  6F6E               	movwf	??___ftdiv& (0+255),b
 16607  0051D0  0E18               	movlw	24
 16608  0051D2  0100               	movlb	0	; () banked
 16609  0051D4  0100               	movlb	0	; () banked
 16610  0051D6  6F73               	movwf	___ftdiv@cntr& (0+255),b
 16611  0051D8  0100               	movlb	0	; () banked
 16612  0051DA  516E               	movf	??___ftdiv& (0+255),w,b
 16613  0051DC                     i2l1202:
 16614                           
 16615                           ; BSR set to: 0
 16616  0051DC  0100               	movlb	0	; () banked
 16617  0051DE  90D8               	bcf	status,0,c
 16618  0051E0  0100               	movlb	0	; () banked
 16619  0051E2  3774               	rlcf	___ftdiv@f3& (0+255),f,b
 16620  0051E4  0100               	movlb	0	; () banked
 16621  0051E6  3775               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 16622  0051E8  0100               	movlb	0	; () banked
 16623  0051EA  3776               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 16624                           
 16625                           ; BSR set to: 0
 16626  0051EC  0100               	movlb	0	; () banked
 16627  0051EE  0100               	movlb	0	; () banked
 16628  0051F0  516B               	movf	___ftdiv@f2& (0+255),w,b
 16629  0051F2  0100               	movlb	0	; () banked
 16630  0051F4  0100               	movlb	0	; () banked
 16631  0051F6  5D68               	subwf	___ftdiv@f1& (0+255),w,b
 16632  0051F8  0100               	movlb	0	; () banked
 16633  0051FA  0100               	movlb	0	; () banked
 16634  0051FC  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 16635  0051FE  0100               	movlb	0	; () banked
 16636  005200  0100               	movlb	0	; () banked
 16637  005202  5969               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 16638  005204  0100               	movlb	0	; () banked
 16639  005206  0100               	movlb	0	; () banked
 16640  005208  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 16641  00520A  0100               	movlb	0	; () banked
 16642  00520C  0100               	movlb	0	; () banked
 16643  00520E  596A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 16644  005210  A0D8               	btfss	status,0,c
 16645  005212  D015               	goto	i2l1203
 16646                           
 16647                           ; BSR set to: 0
 16648  005214  0100               	movlb	0	; () banked
 16649  005216  0100               	movlb	0	; () banked
 16650  005218  516B               	movf	___ftdiv@f2& (0+255),w,b
 16651  00521A  0100               	movlb	0	; () banked
 16652  00521C  0100               	movlb	0	; () banked
 16653  00521E  5F68               	subwf	___ftdiv@f1& (0+255),f,b
 16654  005220  0100               	movlb	0	; () banked
 16655  005222  0100               	movlb	0	; () banked
 16656  005224  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 16657  005226  0100               	movlb	0	; () banked
 16658  005228  0100               	movlb	0	; () banked
 16659  00522A  5B69               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 16660  00522C  0100               	movlb	0	; () banked
 16661  00522E  0100               	movlb	0	; () banked
 16662  005230  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 16663  005232  0100               	movlb	0	; () banked
 16664  005234  0100               	movlb	0	; () banked
 16665  005236  5B6A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 16666                           
 16667                           ; BSR set to: 0
 16668  005238  0100               	movlb	0	; () banked
 16669  00523A  0100               	movlb	0	; () banked
 16670  00523C  8174               	bsf	___ftdiv@f3& (0+255),0,b
 16671  00523E                     i2l1203:
 16672                           
 16673                           ; BSR set to: 0
 16674  00523E  0100               	movlb	0	; () banked
 16675  005240  90D8               	bcf	status,0,c
 16676  005242  0100               	movlb	0	; () banked
 16677  005244  3768               	rlcf	___ftdiv@f1& (0+255),f,b
 16678  005246  0100               	movlb	0	; () banked
 16679  005248  3769               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 16680  00524A  0100               	movlb	0	; () banked
 16681  00524C  376A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 16682                           
 16683                           ; BSR set to: 0
 16684  00524E  0100               	movlb	0	; () banked
 16685  005250  0100               	movlb	0	; () banked
 16686  005252  2F73               	decfsz	___ftdiv@cntr& (0+255),f,b
 16687  005254  D7C3               	goto	i2l1202
 16688                           
 16689                           ; BSR set to: 0
 16690                           
 16691                           ; BSR set to: 0
 16692  005256  C074  F060         	movff	___ftdiv@f3,?___ftpack
 16693  00525A  C075  F061         	movff	___ftdiv@f3+1,?___ftpack+1
 16694  00525E  C076  F062         	movff	___ftdiv@f3+2,?___ftpack+2
 16695  005262  C077  F063         	movff	___ftdiv@exp,?___ftpack+3
 16696  005266  C078  F064         	movff	___ftdiv@sign,?___ftpack+4
 16697  00526A  ECC5  F02A         	call	___ftpack	;wreg free
 16698  00526E  C062  F06A         	movff	?___ftpack+2,?___ftdiv+2
 16699  005272  C061  F069         	movff	?___ftpack+1,?___ftdiv+1
 16700  005276  C060  F068         	movff	?___ftpack,?___ftdiv
 16701  00527A                     i2l1200:
 16702  00527A  0012               	return	
 16703  00527C                     __end_of___ftdiv:
 16704                           	opt stack 0
 16705                           tosu	equ	0xFFF
 16706                           tosh	equ	0xFFE
 16707                           tosl	equ	0xFFD
 16708                           pclatu	equ	0xFFB
 16709                           pclath	equ	0xFFA
 16710                           tblptru	equ	0xFF8
 16711                           tblptrh	equ	0xFF7
 16712                           tblptrl	equ	0xFF6
 16713                           tablat	equ	0xFF5
 16714                           prodh	equ	0xFF4
 16715                           prodl	equ	0xFF3
 16716                           intcon	equ	0xFF2
 16717                           intcon2	equ	0xFF1
 16718                           indf0	equ	0xFEF
 16719                           postinc0	equ	0xFEE
 16720                           fsr0h	equ	0xFEA
 16721                           fsr0l	equ	0xFE9
 16722                           wreg	equ	0xFE8
 16723                           postinc1	equ	0xFE6
 16724                           postdec1	equ	0xFE5
 16725                           fsr1h	equ	0xFE2
 16726                           fsr1l	equ	0xFE1
 16727                           bsr	equ	0xFE0
 16728                           indf2	equ	0xFDF
 16729                           postinc2	equ	0xFDE
 16730                           postdec2	equ	0xFDD
 16731                           plusw2	equ	0xFDB
 16732                           fsr2h	equ	0xFDA
 16733                           fsr2l	equ	0xFD9
 16734                           status	equ	0xFD8
 16735                           
 16736 ;; *************** function ___asftadd *****************
 16737 ;; Defined at:
 16738 ;;		line 5 in file "/usr/opt/microchip/xc8/v1.20/sources/pic18/asftadd.c"
 16739 ;; Parameters:    Size  Location     Type
 16740 ;;  f1p             2   80[BANK0 ] PTR float 
 16741 ;;		 -> sprintf@fval(3), getTemp@total(3), 
 16742 ;;  f2              3   82[BANK0 ] float 
 16743 ;; Auto vars:     Size  Location     Type
 16744 ;;		None
 16745 ;; Return value:  Size  Location     Type
 16746 ;;                  3   80[BANK0 ] float 
 16747 ;; Registers used:
 16748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16749 ;; Tracked objects:
 16750 ;;		On entry : 0/0
 16751 ;;		On exit  : 0/0
 16752 ;;		Unchanged: 0/0
 16753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16754 ;;      Params:         0       5       0       0       0       0       0       0       0
 16755 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16756 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16757 ;;      Totals:         0       5       0       0       0       0       0       0       0
 16758 ;;Total ram usage:        5 bytes
 16759 ;; Hardware stack levels used:    1
 16760 ;; Hardware stack levels required when called:    2
 16761 ;; This function calls:
 16762 ;;		___ftadd
 16763 ;; This function is called by:
 16764 ;;		_getTemp
 16765 ;;		_sprintf
 16766 ;; This function uses a non-reentrant model
 16767 ;;
 16768                           
 16769                           	psect	text49
 16770  006E42                     __ptext49:
 16771                           	opt stack 0
 16772  006E42                     ___asftadd:
 16773                           	opt stack 15
 16774                           
 16775                           ;	Return value of ___asftadd is never used
 16776                           
 16777                           ;incstack = 0
 16778                           ;incstack = 0
 16779  006E42  C0B0  FFD9         	movff	___asftadd@f1p,fsr2l
 16780  006E46  C0B1  FFDA         	movff	___asftadd@f1p+1,fsr2h
 16781  006E4A  0100               	movlb	0	; () banked
 16782  006E4C  CFDE F0A2          	movff	postinc2,?___ftadd
 16783  006E50  0100               	movlb	0	; () banked
 16784  006E52  CFDE F0A3          	movff	postinc2,?___ftadd+1
 16785  006E56  0100               	movlb	0	; () banked
 16786  006E58  CFDD F0A4          	movff	postdec2,?___ftadd+2
 16787  006E5C  C0B2  F0A5         	movff	___asftadd@f2,?___ftadd+3
 16788  006E60  C0B3  F0A6         	movff	___asftadd@f2+1,?___ftadd+4
 16789  006E64  C0B4  F0A7         	movff	___asftadd@f2+2,?___ftadd+5
 16790  006E68  ECFC  F01F         	call	___ftadd	;wreg free
 16791  006E6C  C0B0  FFD9         	movff	___asftadd@f1p,fsr2l
 16792  006E70  C0B1  FFDA         	movff	___asftadd@f1p+1,fsr2h
 16793  006E74  C0A2  FFDE         	movff	?___ftadd,postinc2
 16794  006E78  C0A3  FFDE         	movff	?___ftadd+1,postinc2
 16795  006E7C  C0A4  FFDD         	movff	?___ftadd+2,postdec2
 16796  006E80  52DD               	movf	postdec2,f,c
 16797  006E82  0012               	return	
 16798  006E84                     __end_of___asftadd:
 16799                           	opt stack 0
 16800                           tosu	equ	0xFFF
 16801                           tosh	equ	0xFFE
 16802                           tosl	equ	0xFFD
 16803                           pclatu	equ	0xFFB
 16804                           pclath	equ	0xFFA
 16805                           tblptru	equ	0xFF8
 16806                           tblptrh	equ	0xFF7
 16807                           tblptrl	equ	0xFF6
 16808                           tablat	equ	0xFF5
 16809                           prodh	equ	0xFF4
 16810                           prodl	equ	0xFF3
 16811                           intcon	equ	0xFF2
 16812                           intcon2	equ	0xFF1
 16813                           indf0	equ	0xFEF
 16814                           postinc0	equ	0xFEE
 16815                           fsr0h	equ	0xFEA
 16816                           fsr0l	equ	0xFE9
 16817                           wreg	equ	0xFE8
 16818                           postinc1	equ	0xFE6
 16819                           postdec1	equ	0xFE5
 16820                           fsr1h	equ	0xFE2
 16821                           fsr1l	equ	0xFE1
 16822                           bsr	equ	0xFE0
 16823                           indf2	equ	0xFDF
 16824                           postinc2	equ	0xFDE
 16825                           postdec2	equ	0xFDD
 16826                           plusw2	equ	0xFDB
 16827                           fsr2h	equ	0xFDA
 16828                           fsr2l	equ	0xFD9
 16829                           status	equ	0xFD8
 16830                           
 16831 ;; *************** function __div_to_l_ *****************
 16832 ;; Defined at:
 16833 ;;		line 61 in file "/usr/opt/microchip/xc8/v1.20/sources/common/fldivl.c"
 16834 ;; Parameters:    Size  Location     Type
 16835 ;;  f1              3    0[BANK0 ] float 
 16836 ;;  f2              3    3[BANK0 ] float 
 16837 ;; Auto vars:     Size  Location     Type
 16838 ;;  quot            4    7[BANK0 ] unsigned long 
 16839 ;;  exp1            1   12[BANK0 ] unsigned char 
 16840 ;;  cntr            1   11[BANK0 ] unsigned char 
 16841 ;; Return value:  Size  Location     Type
 16842 ;;                  4    0[BANK0 ] unsigned long 
 16843 ;; Registers used:
 16844 ;;		wreg, status,2, status,0
 16845 ;; Tracked objects:
 16846 ;;		On entry : 0/0
 16847 ;;		On exit  : 0/0
 16848 ;;		Unchanged: 0/0
 16849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16850 ;;      Params:         0       6       0       0       0       0       0       0       0
 16851 ;;      Locals:         0       6       0       0       0       0       0       0       0
 16852 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16853 ;;      Totals:         0      13       0       0       0       0       0       0       0
 16854 ;;Total ram usage:       13 bytes
 16855 ;; Hardware stack levels used:    1
 16856 ;; This function calls:
 16857 ;;		Nothing
 16858 ;; This function is called by:
 16859 ;;		_sprintf
 16860 ;; This function uses a non-reentrant model
 16861 ;;
 16862                           
 16863                           	psect	text50
 16864  004EE0                     __ptext50:
 16865                           	opt stack 0
 16866  004EE0                     __div_to_l_:
 16867                           	opt stack 17
 16868                           
 16869                           ;incstack = 0
 16870                           ;incstack = 0
 16871  004EE0  0100               	movlb	0	; () banked
 16872  004EE2  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 16873  004EE4  0100               	movlb	0	; () banked
 16874  004EE6  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 16875  004EE8  0100               	movlb	0	; () banked
 16876  004EEA  0100               	movlb	0	; () banked
 16877  004EEC  6F6C               	movwf	__div_to_l_@exp1& (0+255),b
 16878  004EEE  0100               	movlb	0	; () banked
 16879  004EF0  676C               	tstfsz	__div_to_l_@exp1& (0+255),b
 16880  004EF2  D001               	goto	i2l7751
 16881  004EF4  D0B7               	goto	i2u620_40
 16882  004EF6                     i2l7751:
 16883                           
 16884                           ; BSR set to: 0
 16885  004EF6  0100               	movlb	0	; () banked
 16886  004EF8  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 16887  004EFA  0100               	movlb	0	; () banked
 16888  004EFC  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 16889  004EFE  0100               	movlb	0	; () banked
 16890  004F00  0100               	movlb	0	; () banked
 16891  004F02  6F6B               	movwf	__div_to_l_@cntr& (0+255),b
 16892  004F04  0100               	movlb	0	; () banked
 16893  004F06  676B               	tstfsz	__div_to_l_@cntr& (0+255),b
 16894  004F08  D001               	goto	i2l7757
 16895  004F0A  D0AC               	goto	i2u620_40
 16896  004F0C                     i2l7757:
 16897                           
 16898                           ; BSR set to: 0
 16899  004F0C  0100               	movlb	0	; () banked
 16900  004F0E  0100               	movlb	0	; () banked
 16901  004F10  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 16902                           
 16903                           ; BSR set to: 0
 16904  004F12  0EFF               	movlw	255
 16905  004F14  0100               	movlb	0	; () banked
 16906  004F16  0100               	movlb	0	; () banked
 16907  004F18  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 16908  004F1A  0EFF               	movlw	255
 16909  004F1C  0100               	movlb	0	; () banked
 16910  004F1E  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 16911  004F20  0EFF               	movlw	255
 16912  004F22  0100               	movlb	0	; () banked
 16913  004F24  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 16914  004F26  0E00               	movlw	0
 16915  004F28  0100               	movlb	0	; () banked
 16916  004F2A  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 16917                           
 16918                           ; BSR set to: 0
 16919  004F2C  0100               	movlb	0	; () banked
 16920  004F2E  0100               	movlb	0	; () banked
 16921  004F30  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 16922  004F32  0EFF               	movlw	255
 16923  004F34  0100               	movlb	0	; () banked
 16924  004F36  0100               	movlb	0	; () banked
 16925  004F38  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 16926  004F3A  0EFF               	movlw	255
 16927  004F3C  0100               	movlb	0	; () banked
 16928  004F3E  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 16929  004F40  0EFF               	movlw	255
 16930  004F42  0100               	movlb	0	; () banked
 16931  004F44  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 16932  004F46  0E00               	movlw	0
 16933  004F48  0100               	movlb	0	; () banked
 16934  004F4A  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 16935                           
 16936                           ; BSR set to: 0
 16937  004F4C  0E00               	movlw	0
 16938  004F4E  0100               	movlb	0	; () banked
 16939  004F50  0100               	movlb	0	; () banked
 16940  004F52  6F67               	movwf	__div_to_l_@quot& (0+255),b
 16941  004F54  0E00               	movlw	0
 16942  004F56  0100               	movlb	0	; () banked
 16943  004F58  6F68               	movwf	(__div_to_l_@quot+1)& (0+255),b
 16944  004F5A  0E00               	movlw	0
 16945  004F5C  0100               	movlb	0	; () banked
 16946  004F5E  6F69               	movwf	(__div_to_l_@quot+2)& (0+255),b
 16947  004F60  0E00               	movlw	0
 16948  004F62  0100               	movlb	0	; () banked
 16949  004F64  6F6A               	movwf	(__div_to_l_@quot+3)& (0+255),b
 16950                           
 16951                           ; BSR set to: 0
 16952  004F66  0E7F               	movlw	127
 16953  004F68  0100               	movlb	0	; () banked
 16954  004F6A  0100               	movlb	0	; () banked
 16955  004F6C  5F6C               	subwf	__div_to_l_@exp1& (0+255),f,b
 16956                           
 16957                           ; BSR set to: 0
 16958  004F6E  0100               	movlb	0	; () banked
 16959  004F70  0100               	movlb	0	; () banked
 16960  004F72  516B               	movf	__div_to_l_@cntr& (0+255),w,b
 16961  004F74  0FA0               	addlw	160
 16962  004F76  0100               	movlb	0	; () banked
 16963  004F78  0100               	movlb	0	; () banked
 16964  004F7A  5F6C               	subwf	__div_to_l_@exp1& (0+255),f,b
 16965                           
 16966                           ; BSR set to: 0
 16967  004F7C  0100               	movlb	0	; () banked
 16968  004F7E  6F66               	movwf	??__div_to_l_& (0+255),b
 16969  004F80  0E20               	movlw	32
 16970  004F82  0100               	movlb	0	; () banked
 16971  004F84  0100               	movlb	0	; () banked
 16972  004F86  6F6B               	movwf	__div_to_l_@cntr& (0+255),b
 16973  004F88  0100               	movlb	0	; () banked
 16974  004F8A  5166               	movf	??__div_to_l_& (0+255),w,b
 16975  004F8C                     i2l1092:
 16976                           
 16977                           ; BSR set to: 0
 16978  004F8C  0100               	movlb	0	; () banked
 16979  004F8E  90D8               	bcf	status,0,c
 16980  004F90  0100               	movlb	0	; () banked
 16981  004F92  3767               	rlcf	__div_to_l_@quot& (0+255),f,b
 16982  004F94  0100               	movlb	0	; () banked
 16983  004F96  3768               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 16984  004F98  0100               	movlb	0	; () banked
 16985  004F9A  3769               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 16986  004F9C  0100               	movlb	0	; () banked
 16987  004F9E  376A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 16988                           
 16989                           ; BSR set to: 0
 16990  004FA0  0100               	movlb	0	; () banked
 16991  004FA2  0100               	movlb	0	; () banked
 16992  004FA4  5163               	movf	__div_to_l_@f2& (0+255),w,b
 16993  004FA6  0100               	movlb	0	; () banked
 16994  004FA8  0100               	movlb	0	; () banked
 16995  004FAA  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 16996  004FAC  0100               	movlb	0	; () banked
 16997  004FAE  0100               	movlb	0	; () banked
 16998  004FB0  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 16999  004FB2  0100               	movlb	0	; () banked
 17000  004FB4  0100               	movlb	0	; () banked
 17001  004FB6  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 17002  004FB8  0100               	movlb	0	; () banked
 17003  004FBA  0100               	movlb	0	; () banked
 17004  004FBC  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 17005  004FBE  0100               	movlb	0	; () banked
 17006  004FC0  0100               	movlb	0	; () banked
 17007  004FC2  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 17008  004FC4  0100               	movlb	0	; () banked
 17009  004FC6  0100               	movlb	0	; () banked
 17010  004FC8  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 17011  004FCA  0100               	movlb	0	; () banked
 17012  004FCC  0100               	movlb	0	; () banked
 17013  004FCE  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 17014  004FD0  A0D8               	btfss	status,0,c
 17015  004FD2  D01B               	goto	i2l7777
 17016                           
 17017                           ; BSR set to: 0
 17018  004FD4  0100               	movlb	0	; () banked
 17019  004FD6  0100               	movlb	0	; () banked
 17020  004FD8  5163               	movf	__div_to_l_@f2& (0+255),w,b
 17021  004FDA  0100               	movlb	0	; () banked
 17022  004FDC  0100               	movlb	0	; () banked
 17023  004FDE  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 17024  004FE0  0100               	movlb	0	; () banked
 17025  004FE2  0100               	movlb	0	; () banked
 17026  004FE4  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 17027  004FE6  0100               	movlb	0	; () banked
 17028  004FE8  0100               	movlb	0	; () banked
 17029  004FEA  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 17030  004FEC  0100               	movlb	0	; () banked
 17031  004FEE  0100               	movlb	0	; () banked
 17032  004FF0  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 17033  004FF2  0100               	movlb	0	; () banked
 17034  004FF4  0100               	movlb	0	; () banked
 17035  004FF6  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 17036  004FF8  0100               	movlb	0	; () banked
 17037  004FFA  0100               	movlb	0	; () banked
 17038  004FFC  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 17039  004FFE  0100               	movlb	0	; () banked
 17040  005000  0100               	movlb	0	; () banked
 17041  005002  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 17042                           
 17043                           ; BSR set to: 0
 17044  005004  0100               	movlb	0	; () banked
 17045  005006  0100               	movlb	0	; () banked
 17046  005008  8167               	bsf	__div_to_l_@quot& (0+255),0,b
 17047  00500A                     i2l7777:
 17048                           
 17049                           ; BSR set to: 0
 17050  00500A  0100               	movlb	0	; () banked
 17051  00500C  90D8               	bcf	status,0,c
 17052  00500E  0100               	movlb	0	; () banked
 17053  005010  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 17054  005012  0100               	movlb	0	; () banked
 17055  005014  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 17056  005016  0100               	movlb	0	; () banked
 17057  005018  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 17058  00501A  0100               	movlb	0	; () banked
 17059  00501C  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 17060                           
 17061                           ; BSR set to: 0
 17062  00501E  0100               	movlb	0	; () banked
 17063  005020  0100               	movlb	0	; () banked
 17064  005022  2F6B               	decfsz	__div_to_l_@cntr& (0+255),f,b
 17065  005024  D7B3               	goto	i2l1092
 17066                           
 17067                           ; BSR set to: 0
 17068  005026  0100               	movlb	0	; () banked
 17069  005028  0100               	movlb	0	; () banked
 17070  00502A  AF6C               	btfss	__div_to_l_@exp1& (0+255),7,b
 17071  00502C  D016               	goto	i2l7791
 17072                           
 17073                           ; BSR set to: 0
 17074  00502E  0100               	movlb	0	; () banked
 17075  005030  0100               	movlb	0	; () banked
 17076  005032  516C               	movf	__div_to_l_@exp1& (0+255),w,b
 17077  005034  0A80               	xorlw	128
 17078  005036  0F9F               	addlw	159
 17079  005038  A0D8               	btfss	status,0,c
 17080  00503A  D014               	goto	i2u620_40
 17081  00503C                     i2l7787:
 17082                           
 17083                           ; BSR set to: 0
 17084  00503C  0100               	movlb	0	; () banked
 17085  00503E  90D8               	bcf	status,0,c
 17086  005040  0100               	movlb	0	; () banked
 17087  005042  336A               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 17088  005044  0100               	movlb	0	; () banked
 17089  005046  3369               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 17090  005048  0100               	movlb	0	; () banked
 17091  00504A  3368               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 17092  00504C  0100               	movlb	0	; () banked
 17093  00504E  3367               	rrcf	__div_to_l_@quot& (0+255),f,b
 17094                           
 17095                           ; BSR set to: 0
 17096  005050  0100               	movlb	0	; () banked
 17097  005052  0100               	movlb	0	; () banked
 17098  005054  3F6C               	incfsz	__div_to_l_@exp1& (0+255),f,b
 17099  005056  D7F2               	goto	i2l7787
 17100  005058  D024               	goto	i2l1099
 17101  00505A                     i2l7791:
 17102                           
 17103                           ; BSR set to: 0
 17104  00505A  0E1F               	movlw	31
 17105  00505C  0100               	movlb	0	; () banked
 17106  00505E  0100               	movlb	0	; () banked
 17107  005060  656C               	cpfsgt	__div_to_l_@exp1& (0+255),b
 17108  005062  D01B               	goto	i2l7799
 17109  005064                     i2u620_40:
 17110                           
 17111                           ; BSR set to: 0
 17112  005064  0E00               	movlw	0
 17113  005066  0100               	movlb	0	; () banked
 17114  005068  0100               	movlb	0	; () banked
 17115  00506A  6F60               	movwf	?__div_to_l_& (0+255),b
 17116  00506C  0E00               	movlw	0
 17117  00506E  0100               	movlb	0	; () banked
 17118  005070  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 17119  005072  0E00               	movlw	0
 17120  005074  0100               	movlb	0	; () banked
 17121  005076  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 17122  005078  0E00               	movlw	0
 17123  00507A  0100               	movlb	0	; () banked
 17124  00507C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 17125  00507E  D019               	goto	i2l1090
 17126  005080                     i2l7797:
 17127                           
 17128                           ; BSR set to: 0
 17129  005080  0100               	movlb	0	; () banked
 17130  005082  90D8               	bcf	status,0,c
 17131  005084  0100               	movlb	0	; () banked
 17132  005086  3767               	rlcf	__div_to_l_@quot& (0+255),f,b
 17133  005088  0100               	movlb	0	; () banked
 17134  00508A  3768               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 17135  00508C  0100               	movlb	0	; () banked
 17136  00508E  3769               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 17137  005090  0100               	movlb	0	; () banked
 17138  005092  376A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 17139  005094  0100               	movlb	0	; () banked
 17140  005096  0100               	movlb	0	; () banked
 17141  005098  076C               	decf	__div_to_l_@exp1& (0+255),f,b
 17142  00509A                     i2l7799:
 17143                           
 17144                           ; BSR set to: 0
 17145  00509A  0100               	movlb	0	; () banked
 17146  00509C  0100               	movlb	0	; () banked
 17147  00509E  676C               	tstfsz	__div_to_l_@exp1& (0+255),b
 17148  0050A0  D7EF               	goto	i2l7797
 17149  0050A2                     i2l1099:
 17150                           
 17151                           ; BSR set to: 0
 17152  0050A2  C067  F060         	movff	__div_to_l_@quot,?__div_to_l_
 17153  0050A6  C068  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 17154  0050AA  C069  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 17155  0050AE  C06A  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 17156  0050B2                     i2l1090:
 17157                           
 17158                           ; BSR set to: 0
 17159  0050B2  0012               	return	
 17160  0050B4                     __end_of__div_to_l_:
 17161                           	opt stack 0
 17162                           tosu	equ	0xFFF
 17163                           tosh	equ	0xFFE
 17164                           tosl	equ	0xFFD
 17165                           pclatu	equ	0xFFB
 17166                           pclath	equ	0xFFA
 17167                           tblptru	equ	0xFF8
 17168                           tblptrh	equ	0xFF7
 17169                           tblptrl	equ	0xFF6
 17170                           tablat	equ	0xFF5
 17171                           prodh	equ	0xFF4
 17172                           prodl	equ	0xFF3
 17173                           intcon	equ	0xFF2
 17174                           intcon2	equ	0xFF1
 17175                           indf0	equ	0xFEF
 17176                           postinc0	equ	0xFEE
 17177                           fsr0h	equ	0xFEA
 17178                           fsr0l	equ	0xFE9
 17179                           wreg	equ	0xFE8
 17180                           postinc1	equ	0xFE6
 17181                           postdec1	equ	0xFE5
 17182                           fsr1h	equ	0xFE2
 17183                           fsr1l	equ	0xFE1
 17184                           bsr	equ	0xFE0
 17185                           indf2	equ	0xFDF
 17186                           postinc2	equ	0xFDE
 17187                           postdec2	equ	0xFDD
 17188                           plusw2	equ	0xFDB
 17189                           fsr2h	equ	0xFDA
 17190                           fsr2l	equ	0xFD9
 17191                           status	equ	0xFD8
 17192                           
 17193 ;; *************** function __tdiv_to_l_ *****************
 17194 ;; Defined at:
 17195 ;;		line 61 in file "/usr/opt/microchip/xc8/v1.20/sources/common/ftdivl.c"
 17196 ;; Parameters:    Size  Location     Type
 17197 ;;  f1              3    0[BANK0 ] float 
 17198 ;;  f2              3    3[BANK0 ] float 
 17199 ;; Auto vars:     Size  Location     Type
 17200 ;;  quot            4   11[BANK0 ] unsigned long 
 17201 ;;  exp1            1   16[BANK0 ] unsigned char 
 17202 ;;  cntr            1   15[BANK0 ] unsigned char 
 17203 ;; Return value:  Size  Location     Type
 17204 ;;                  4    0[BANK0 ] unsigned long 
 17205 ;; Registers used:
 17206 ;;		wreg, status,2, status,0
 17207 ;; Tracked objects:
 17208 ;;		On entry : 0/0
 17209 ;;		On exit  : 0/0
 17210 ;;		Unchanged: 0/0
 17211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17212 ;;      Params:         0       6       0       0       0       0       0       0       0
 17213 ;;      Locals:         0       6       0       0       0       0       0       0       0
 17214 ;;      Temps:          0       5       0       0       0       0       0       0       0
 17215 ;;      Totals:         0      17       0       0       0       0       0       0       0
 17216 ;;Total ram usage:       17 bytes
 17217 ;; Hardware stack levels used:    1
 17218 ;; This function calls:
 17219 ;;		Nothing
 17220 ;; This function is called by:
 17221 ;;		_sprintf
 17222 ;; This function uses a non-reentrant model
 17223 ;;
 17224                           
 17225                           	psect	text51
 17226  004AE2                     __ptext51:
 17227                           	opt stack 0
 17228  004AE2                     __tdiv_to_l_:
 17229                           	opt stack 17
 17230                           
 17231                           ; BSR set to: 0
 17232                           ;incstack = 0
 17233                           ;incstack = 0
 17234  004AE2  0E0F               	movlw	15
 17235  004AE4  0100               	movlb	0	; () banked
 17236  004AE6  6F66               	movwf	??__tdiv_to_l_& (0+255),b
 17237  004AE8  0100               	movlb	0	; () banked
 17238  004AEA  C060  F067         	movff	__tdiv_to_l_@f1,??__tdiv_to_l_+1
 17239  004AEE  0100               	movlb	0	; () banked
 17240  004AF0  C061  F068         	movff	__tdiv_to_l_@f1+1,??__tdiv_to_l_+2
 17241  004AF4  0100               	movlb	0	; () banked
 17242  004AF6  C062  F069         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_+3
 17243  004AFA  0100               	movlb	0	; () banked
 17244  004AFC  2966               	incf	??__tdiv_to_l_& (0+255),w,b
 17245  004AFE  0100               	movlb	0	; () banked
 17246  004B00  6F6A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
 17247  004B02  D005               	goto	i2u606_40
 17248  004B04                     i2u606_45:
 17249  004B04  0100               	movlb	0	; () banked
 17250  004B06  90D8               	bcf	status,0,c
 17251  004B08  3369               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
 17252  004B0A  3368               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
 17253  004B0C  3367               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
 17254  004B0E                     i2u606_40:
 17255  004B0E  0100               	movlb	0	; () banked
 17256  004B10  2F6A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
 17257  004B12  D7F8               	goto	i2u606_45
 17258  004B14  0100               	movlb	0	; () banked
 17259  004B16  5167               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
 17260  004B18  0100               	movlb	0	; () banked
 17261  004B1A  0100               	movlb	0	; () banked
 17262  004B1C  6F70               	movwf	__tdiv_to_l_@exp1& (0+255),b
 17263  004B1E  0100               	movlb	0	; () banked
 17264  004B20  6770               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
 17265  004B22  D001               	goto	i2l7695
 17266  004B24  D0BE               	goto	i2u613_40
 17267  004B26                     i2l7695:
 17268                           
 17269                           ; BSR set to: 0
 17270  004B26  0E0F               	movlw	15
 17271  004B28  0100               	movlb	0	; () banked
 17272  004B2A  6F66               	movwf	??__tdiv_to_l_& (0+255),b
 17273  004B2C  0100               	movlb	0	; () banked
 17274  004B2E  C063  F067         	movff	__tdiv_to_l_@f2,??__tdiv_to_l_+1
 17275  004B32  0100               	movlb	0	; () banked
 17276  004B34  C064  F068         	movff	__tdiv_to_l_@f2+1,??__tdiv_to_l_+2
 17277  004B38  0100               	movlb	0	; () banked
 17278  004B3A  C065  F069         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_+3
 17279  004B3E  0100               	movlb	0	; () banked
 17280  004B40  2966               	incf	??__tdiv_to_l_& (0+255),w,b
 17281  004B42  0100               	movlb	0	; () banked
 17282  004B44  6F6A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
 17283  004B46  D005               	goto	i2u608_40
 17284  004B48                     i2u608_45:
 17285  004B48  0100               	movlb	0	; () banked
 17286  004B4A  90D8               	bcf	status,0,c
 17287  004B4C  3369               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
 17288  004B4E  3368               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
 17289  004B50  3367               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
 17290  004B52                     i2u608_40:
 17291  004B52  0100               	movlb	0	; () banked
 17292  004B54  2F6A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
 17293  004B56  D7F8               	goto	i2u608_45
 17294  004B58  0100               	movlb	0	; () banked
 17295  004B5A  5167               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
 17296  004B5C  0100               	movlb	0	; () banked
 17297  004B5E  0100               	movlb	0	; () banked
 17298  004B60  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17299  004B62  0100               	movlb	0	; () banked
 17300  004B64  676F               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
 17301  004B66  D001               	goto	i2l7701
 17302  004B68  D09C               	goto	i2u613_40
 17303  004B6A                     i2l7701:
 17304                           
 17305                           ; BSR set to: 0
 17306  004B6A  0100               	movlb	0	; () banked
 17307  004B6C  0100               	movlb	0	; () banked
 17308  004B6E  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 17309                           
 17310                           ; BSR set to: 0
 17311  004B70  0EFF               	movlw	255
 17312  004B72  0100               	movlb	0	; () banked
 17313  004B74  0100               	movlb	0	; () banked
 17314  004B76  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 17315  004B78  0EFF               	movlw	255
 17316  004B7A  0100               	movlb	0	; () banked
 17317  004B7C  0100               	movlb	0	; () banked
 17318  004B7E  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17319  004B80  0E00               	movlw	0
 17320  004B82  0100               	movlb	0	; () banked
 17321  004B84  0100               	movlb	0	; () banked
 17322  004B86  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17323  004B88  0100               	movlb	0	; () banked
 17324  004B8A  0100               	movlb	0	; () banked
 17325  004B8C  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 17326                           
 17327                           ; BSR set to: 0
 17328  004B8E  0EFF               	movlw	255
 17329  004B90  0100               	movlb	0	; () banked
 17330  004B92  0100               	movlb	0	; () banked
 17331  004B94  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 17332  004B96  0EFF               	movlw	255
 17333  004B98  0100               	movlb	0	; () banked
 17334  004B9A  0100               	movlb	0	; () banked
 17335  004B9C  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 17336  004B9E  0E00               	movlw	0
 17337  004BA0  0100               	movlb	0	; () banked
 17338  004BA2  0100               	movlb	0	; () banked
 17339  004BA4  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 17340                           
 17341                           ; BSR set to: 0
 17342  004BA6  0E00               	movlw	0
 17343  004BA8  0100               	movlb	0	; () banked
 17344  004BAA  0100               	movlb	0	; () banked
 17345  004BAC  6F6B               	movwf	__tdiv_to_l_@quot& (0+255),b
 17346  004BAE  0E00               	movlw	0
 17347  004BB0  0100               	movlb	0	; () banked
 17348  004BB2  6F6C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 17349  004BB4  0E00               	movlw	0
 17350  004BB6  0100               	movlb	0	; () banked
 17351  004BB8  6F6D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 17352  004BBA  0E00               	movlw	0
 17353  004BBC  0100               	movlb	0	; () banked
 17354  004BBE  6F6E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 17355                           
 17356                           ; BSR set to: 0
 17357  004BC0  0E7F               	movlw	127
 17358  004BC2  0100               	movlb	0	; () banked
 17359  004BC4  0100               	movlb	0	; () banked
 17360  004BC6  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17361                           
 17362                           ; BSR set to: 0
 17363  004BC8  0100               	movlb	0	; () banked
 17364  004BCA  0100               	movlb	0	; () banked
 17365  004BCC  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 17366  004BCE  0F98               	addlw	152
 17367  004BD0  0100               	movlb	0	; () banked
 17368  004BD2  0100               	movlb	0	; () banked
 17369  004BD4  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17370                           
 17371                           ; BSR set to: 0
 17372  004BD6  0100               	movlb	0	; () banked
 17373  004BD8  6F66               	movwf	??__tdiv_to_l_& (0+255),b
 17374  004BDA  0E18               	movlw	24
 17375  004BDC  0100               	movlb	0	; () banked
 17376  004BDE  0100               	movlb	0	; () banked
 17377  004BE0  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17378  004BE2  0100               	movlb	0	; () banked
 17379  004BE4  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 17380  004BE6                     i2l7715:
 17381                           
 17382                           ; BSR set to: 0
 17383  004BE6  0100               	movlb	0	; () banked
 17384  004BE8  90D8               	bcf	status,0,c
 17385  004BEA  0100               	movlb	0	; () banked
 17386  004BEC  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 17387  004BEE  0100               	movlb	0	; () banked
 17388  004BF0  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17389  004BF2  0100               	movlb	0	; () banked
 17390  004BF4  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17391  004BF6  0100               	movlb	0	; () banked
 17392  004BF8  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17393                           
 17394                           ; BSR set to: 0
 17395  004BFA  0100               	movlb	0	; () banked
 17396  004BFC  0100               	movlb	0	; () banked
 17397  004BFE  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17398  004C00  0100               	movlb	0	; () banked
 17399  004C02  0100               	movlb	0	; () banked
 17400  004C04  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 17401  004C06  0100               	movlb	0	; () banked
 17402  004C08  0100               	movlb	0	; () banked
 17403  004C0A  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17404  004C0C  0100               	movlb	0	; () banked
 17405  004C0E  0100               	movlb	0	; () banked
 17406  004C10  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 17407  004C12  0100               	movlb	0	; () banked
 17408  004C14  0100               	movlb	0	; () banked
 17409  004C16  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17410  004C18  0100               	movlb	0	; () banked
 17411  004C1A  0100               	movlb	0	; () banked
 17412  004C1C  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 17413  004C1E  A0D8               	btfss	status,0,c
 17414  004C20  D015               	goto	i2l1211
 17415                           
 17416                           ; BSR set to: 0
 17417  004C22  0100               	movlb	0	; () banked
 17418  004C24  0100               	movlb	0	; () banked
 17419  004C26  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17420  004C28  0100               	movlb	0	; () banked
 17421  004C2A  0100               	movlb	0	; () banked
 17422  004C2C  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 17423  004C2E  0100               	movlb	0	; () banked
 17424  004C30  0100               	movlb	0	; () banked
 17425  004C32  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17426  004C34  0100               	movlb	0	; () banked
 17427  004C36  0100               	movlb	0	; () banked
 17428  004C38  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17429  004C3A  0100               	movlb	0	; () banked
 17430  004C3C  0100               	movlb	0	; () banked
 17431  004C3E  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17432  004C40  0100               	movlb	0	; () banked
 17433  004C42  0100               	movlb	0	; () banked
 17434  004C44  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17435                           
 17436                           ; BSR set to: 0
 17437  004C46  0100               	movlb	0	; () banked
 17438  004C48  0100               	movlb	0	; () banked
 17439  004C4A  816B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 17440  004C4C                     i2l1211:
 17441                           
 17442                           ; BSR set to: 0
 17443  004C4C  0100               	movlb	0	; () banked
 17444  004C4E  90D8               	bcf	status,0,c
 17445  004C50  0100               	movlb	0	; () banked
 17446  004C52  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 17447  004C54  0100               	movlb	0	; () banked
 17448  004C56  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17449  004C58  0100               	movlb	0	; () banked
 17450  004C5A  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17451                           
 17452                           ; BSR set to: 0
 17453  004C5C  0100               	movlb	0	; () banked
 17454  004C5E  0100               	movlb	0	; () banked
 17455  004C60  2F6F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 17456  004C62  D7C1               	goto	i2l7715
 17457                           
 17458                           ; BSR set to: 0
 17459  004C64  0100               	movlb	0	; () banked
 17460  004C66  0100               	movlb	0	; () banked
 17461  004C68  AF70               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 17462  004C6A  D016               	goto	i2l7735
 17463                           
 17464                           ; BSR set to: 0
 17465  004C6C  0100               	movlb	0	; () banked
 17466  004C6E  0100               	movlb	0	; () banked
 17467  004C70  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17468  004C72  0A80               	xorlw	128
 17469  004C74  0F97               	addlw	151
 17470  004C76  A0D8               	btfss	status,0,c
 17471  004C78  D014               	goto	i2u613_40
 17472  004C7A                     i2l7731:
 17473                           
 17474                           ; BSR set to: 0
 17475  004C7A  0100               	movlb	0	; () banked
 17476  004C7C  90D8               	bcf	status,0,c
 17477  004C7E  0100               	movlb	0	; () banked
 17478  004C80  336E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17479  004C82  0100               	movlb	0	; () banked
 17480  004C84  336D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17481  004C86  0100               	movlb	0	; () banked
 17482  004C88  336C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17483  004C8A  0100               	movlb	0	; () banked
 17484  004C8C  336B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 17485                           
 17486                           ; BSR set to: 0
 17487  004C8E  0100               	movlb	0	; () banked
 17488  004C90  0100               	movlb	0	; () banked
 17489  004C92  3F70               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 17490  004C94  D7F2               	goto	i2l7731
 17491  004C96  D024               	goto	i2l1217
 17492  004C98                     i2l7735:
 17493                           
 17494                           ; BSR set to: 0
 17495  004C98  0E17               	movlw	23
 17496  004C9A  0100               	movlb	0	; () banked
 17497  004C9C  0100               	movlb	0	; () banked
 17498  004C9E  6570               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 17499  004CA0  D01B               	goto	i2l7743
 17500  004CA2                     i2u613_40:
 17501                           
 17502                           ; BSR set to: 0
 17503  004CA2  0E00               	movlw	0
 17504  004CA4  0100               	movlb	0	; () banked
 17505  004CA6  0100               	movlb	0	; () banked
 17506  004CA8  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 17507  004CAA  0E00               	movlw	0
 17508  004CAC  0100               	movlb	0	; () banked
 17509  004CAE  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17510  004CB0  0E00               	movlw	0
 17511  004CB2  0100               	movlb	0	; () banked
 17512  004CB4  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17513  004CB6  0E00               	movlw	0
 17514  004CB8  0100               	movlb	0	; () banked
 17515  004CBA  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17516  004CBC  D019               	goto	i2l1208
 17517  004CBE                     i2l7741:
 17518                           
 17519                           ; BSR set to: 0
 17520  004CBE  0100               	movlb	0	; () banked
 17521  004CC0  90D8               	bcf	status,0,c
 17522  004CC2  0100               	movlb	0	; () banked
 17523  004CC4  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 17524  004CC6  0100               	movlb	0	; () banked
 17525  004CC8  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17526  004CCA  0100               	movlb	0	; () banked
 17527  004CCC  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17528  004CCE  0100               	movlb	0	; () banked
 17529  004CD0  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17530  004CD2  0100               	movlb	0	; () banked
 17531  004CD4  0100               	movlb	0	; () banked
 17532  004CD6  0770               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 17533  004CD8                     i2l7743:
 17534                           
 17535                           ; BSR set to: 0
 17536  004CD8  0100               	movlb	0	; () banked
 17537  004CDA  0100               	movlb	0	; () banked
 17538  004CDC  6770               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
 17539  004CDE  D7EF               	goto	i2l7741
 17540  004CE0                     i2l1217:
 17541                           
 17542                           ; BSR set to: 0
 17543  004CE0  C06B  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 17544  004CE4  C06C  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 17545  004CE8  C06D  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 17546  004CEC  C06E  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 17547  004CF0                     i2l1208:
 17548                           
 17549                           ; BSR set to: 0
 17550  004CF0  0012               	return	
 17551  004CF2                     __end_of__tdiv_to_l_:
 17552                           	opt stack 0
 17553                           tosu	equ	0xFFF
 17554                           tosh	equ	0xFFE
 17555                           tosl	equ	0xFFD
 17556                           pclatu	equ	0xFFB
 17557                           pclath	equ	0xFFA
 17558                           tblptru	equ	0xFF8
 17559                           tblptrh	equ	0xFF7
 17560                           tblptrl	equ	0xFF6
 17561                           tablat	equ	0xFF5
 17562                           prodh	equ	0xFF4
 17563                           prodl	equ	0xFF3
 17564                           intcon	equ	0xFF2
 17565                           intcon2	equ	0xFF1
 17566                           indf0	equ	0xFEF
 17567                           postinc0	equ	0xFEE
 17568                           fsr0h	equ	0xFEA
 17569                           fsr0l	equ	0xFE9
 17570                           wreg	equ	0xFE8
 17571                           postinc1	equ	0xFE6
 17572                           postdec1	equ	0xFE5
 17573                           fsr1h	equ	0xFE2
 17574                           fsr1l	equ	0xFE1
 17575                           bsr	equ	0xFE0
 17576                           indf2	equ	0xFDF
 17577                           postinc2	equ	0xFDE
 17578                           postdec2	equ	0xFDD
 17579                           plusw2	equ	0xFDB
 17580                           fsr2h	equ	0xFDA
 17581                           fsr2l	equ	0xFD9
 17582                           status	equ	0xFD8
 17583                           
 17584 ;; *************** function _isdigit *****************
 17585 ;; Defined at:
 17586 ;;		line 13 in file "/usr/opt/microchip/xc8/v1.20/sources/common/isdigit.c"
 17587 ;; Parameters:    Size  Location     Type
 17588 ;;  c               1    0[BANK0 ] unsigned char 
 17589 ;; Auto vars:     Size  Location     Type
 17590 ;;		None
 17591 ;; Return value:  Size  Location     Type
 17592 ;;		None               void
 17593 ;; Registers used:
 17594 ;;		wreg, status,2, status,0
 17595 ;; Tracked objects:
 17596 ;;		On entry : 0/0
 17597 ;;		On exit  : 0/0
 17598 ;;		Unchanged: 0/0
 17599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17600 ;;      Params:         0       1       0       0       0       0       0       0       0
 17601 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17602 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17603 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17604 ;;Total ram usage:        3 bytes
 17605 ;; Hardware stack levels used:    1
 17606 ;; This function calls:
 17607 ;;		Nothing
 17608 ;; This function is called by:
 17609 ;;		_sprintf
 17610 ;; This function uses a non-reentrant model
 17611 ;;
 17612                           
 17613                           	psect	text52
 17614  006E84                     __ptext52:
 17615                           	opt stack 0
 17616  006E84                     _isdigit:
 17617                           	opt stack 17
 17618                           
 17619                           ; BSR set to: 0
 17620                           ;incstack = 0
 17621                           ;incstack = 0
 17622  006E84  0100               	movlb	0	; () banked
 17623  006E86  6F61               	movwf	??_isdigit& (0+255),b
 17624  006E88  0E00               	movlw	0
 17625  006E8A  0100               	movlb	0	; () banked
 17626  006E8C  0100               	movlb	0	; () banked
 17627  006E8E  6F62               	movwf	_isdigit$1016& (0+255),b
 17628  006E90  0100               	movlb	0	; () banked
 17629  006E92  5161               	movf	??_isdigit& (0+255),w,b
 17630                           
 17631                           ; BSR set to: 0
 17632  006E94  0E3A               	movlw	58
 17633  006E96  0100               	movlb	0	; () banked
 17634  006E98  0100               	movlb	0	; () banked
 17635  006E9A  6160               	cpfslt	isdigit@c& (0+255),b
 17636  006E9C  D00D               	goto	i2l7685
 17637                           
 17638                           ; BSR set to: 0
 17639  006E9E  0E2F               	movlw	47
 17640  006EA0  0100               	movlb	0	; () banked
 17641  006EA2  0100               	movlb	0	; () banked
 17642  006EA4  6560               	cpfsgt	isdigit@c& (0+255),b
 17643  006EA6  D008               	goto	i2l7685
 17644                           
 17645                           ; BSR set to: 0
 17646  006EA8  0100               	movlb	0	; () banked
 17647  006EAA  6F61               	movwf	??_isdigit& (0+255),b
 17648  006EAC  0E01               	movlw	1
 17649  006EAE  0100               	movlb	0	; () banked
 17650  006EB0  0100               	movlb	0	; () banked
 17651  006EB2  6F62               	movwf	_isdigit$1016& (0+255),b
 17652  006EB4  0100               	movlb	0	; () banked
 17653  006EB6  5161               	movf	??_isdigit& (0+255),w,b
 17654  006EB8                     i2l7685:
 17655                           
 17656                           ; BSR set to: 0
 17657  006EB8  C062  F061         	movff	_isdigit$1016,??_isdigit
 17658  006EBC  0100               	movlb	0	; () banked
 17659  006EBE  3161               	rrcf	??_isdigit& (0+255),w,b
 17660                           
 17661                           ; BSR set to: 0
 17662                           
 17663                           ; BSR set to: 0
 17664  006EC0  0012               	return	
 17665  006EC2                     __end_of_isdigit:
 17666                           	opt stack 0
 17667                           tosu	equ	0xFFF
 17668                           tosh	equ	0xFFE
 17669                           tosl	equ	0xFFD
 17670                           pclatu	equ	0xFFB
 17671                           pclath	equ	0xFFA
 17672                           tblptru	equ	0xFF8
 17673                           tblptrh	equ	0xFF7
 17674                           tblptrl	equ	0xFF6
 17675                           tablat	equ	0xFF5
 17676                           prodh	equ	0xFF4
 17677                           prodl	equ	0xFF3
 17678                           intcon	equ	0xFF2
 17679                           intcon2	equ	0xFF1
 17680                           indf0	equ	0xFEF
 17681                           postinc0	equ	0xFEE
 17682                           fsr0h	equ	0xFEA
 17683                           fsr0l	equ	0xFE9
 17684                           wreg	equ	0xFE8
 17685                           postinc1	equ	0xFE6
 17686                           postdec1	equ	0xFE5
 17687                           fsr1h	equ	0xFE2
 17688                           fsr1l	equ	0xFE1
 17689                           bsr	equ	0xFE0
 17690                           indf2	equ	0xFDF
 17691                           postinc2	equ	0xFDE
 17692                           postdec2	equ	0xFDD
 17693                           plusw2	equ	0xFDB
 17694                           fsr2h	equ	0xFDA
 17695                           fsr2l	equ	0xFD9
 17696                           status	equ	0xFD8
 17697                           
 17698 ;; *************** function _scale *****************
 17699 ;; Defined at:
 17700 ;;		line 426 in file "/usr/opt/microchip/xc8/v1.20/sources/common/doprnt.c"
 17701 ;; Parameters:    Size  Location     Type
 17702 ;;  scl             1   62[BANK0 ] char 
 17703 ;; Auto vars:     Size  Location     Type
 17704 ;;		None
 17705 ;; Return value:  Size  Location     Type
 17706 ;;                  3   62[BANK0 ] char 
 17707 ;; Registers used:
 17708 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17709 ;; Tracked objects:
 17710 ;;		On entry : 0/0
 17711 ;;		On exit  : 0/0
 17712 ;;		Unchanged: 0/0
 17713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17714 ;;      Params:         0       3       0       0       0       0       0       0       0
 17715 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17716 ;;      Temps:          0       6       0       0       0       0       0       0       0
 17717 ;;      Totals:         0      12       0       0       0       0       0       0       0
 17718 ;;Total ram usage:       12 bytes
 17719 ;; Hardware stack levels used:    1
 17720 ;; Hardware stack levels required when called:    2
 17721 ;; This function calls:
 17722 ;;		___ftmul
 17723 ;;		___awdiv
 17724 ;;		___wmul
 17725 ;;		i2___awmod
 17726 ;; This function is called by:
 17727 ;;		_sprintf
 17728 ;; This function uses a non-reentrant model
 17729 ;;
 17730                           
 17731                           	psect	text53
 17732  0024A8                     __ptext53:
 17733                           	opt stack 0
 17734  0024A8                     _scale:
 17735                           	opt stack 15
 17736                           
 17737                           ;doprnt.c: 428: if(scl < 0) {
 17738                           
 17739                           ; BSR set to: 0
 17740                           ;incstack = 0
 17741                           ;incstack = 0
 17742  0024A8  0100               	movlb	0	; () banked
 17743  0024AA  0100               	movlb	0	; () banked
 17744  0024AC  AF9E               	btfss	scale@scl& (0+255),7,b
 17745  0024AE  D179               	goto	i2l7659
 17746                           
 17747                           ; BSR set to: 0
 17748                           ;doprnt.c: 429: scl = -scl;
 17749  0024B0  0100               	movlb	0	; () banked
 17750  0024B2  0100               	movlb	0	; () banked
 17751  0024B4  6D9E               	negf	scale@scl& (0+255),b
 17752                           
 17753                           ; BSR set to: 0
 17754                           ;doprnt.c: 430: if(scl>=110)
 17755  0024B6  0100               	movlb	0	; () banked
 17756  0024B8  0100               	movlb	0	; () banked
 17757  0024BA  519E               	movf	scale@scl& (0+255),w,b
 17758  0024BC  0A80               	xorlw	128
 17759  0024BE  0F12               	addlw	-238
 17760  0024C0  A0D8               	btfss	status,0,c
 17761  0024C2  D0DF               	goto	i2l7649
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17765  0024C4  0E00               	movlw	0
 17766  0024C6  0100               	movlb	0	; () banked
 17767  0024C8  0100               	movlb	0	; () banked
 17768  0024CA  6F79               	movwf	(?___wmul+3)& (0+255),b
 17769  0024CC  0E03               	movlw	3
 17770  0024CE  0100               	movlb	0	; () banked
 17771  0024D0  6F78               	movwf	(?___wmul+2)& (0+255),b
 17772  0024D2  0E00               	movlw	0
 17773  0024D4  0100               	movlb	0	; () banked
 17774  0024D6  0100               	movlb	0	; () banked
 17775  0024D8  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 17776  0024DA  0E0A               	movlw	10
 17777  0024DC  0100               	movlb	0	; () banked
 17778  0024DE  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 17779  0024E0  0E00               	movlw	0
 17780  0024E2  0100               	movlb	0	; () banked
 17781  0024E4  0100               	movlb	0	; () banked
 17782  0024E6  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 17783  0024E8  0E64               	movlw	100
 17784  0024EA  0100               	movlb	0	; () banked
 17785  0024EC  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 17786  0024EE  0100               	movlb	0	; () banked
 17787  0024F0  0100               	movlb	0	; () banked
 17788  0024F2  519E               	movf	scale@scl& (0+255),w,b
 17789  0024F4  0100               	movlb	0	; () banked
 17790  0024F6  0100               	movlb	0	; () banked
 17791  0024F8  6F60               	movwf	?i2___awmod& (0+255),b
 17792  0024FA  0100               	movlb	0	; () banked
 17793  0024FC  6B61               	clrf	(?i2___awmod+1)& (0+255),b
 17794  0024FE  0100               	movlb	0	; () banked
 17795  002500  BF60               	btfsc	?i2___awmod& (0+255),7,b
 17796  002502  0761               	decf	(?i2___awmod+1)& (0+255),f,b
 17797  002504  EC21  F02F         	call	i2___awmod	;wreg free
 17798  002508  0100               	movlb	0	; () banked
 17799  00250A  C060  F069         	movff	?i2___awmod,?___awdiv
 17800  00250E  0100               	movlb	0	; () banked
 17801  002510  C061  F06A         	movff	?i2___awmod+1,?___awdiv+1
 17802  002514  EC1A  F02C         	call	___awdiv	;wreg free
 17803  002518  0E09               	movlw	9
 17804  00251A  0100               	movlb	0	; () banked
 17805  00251C  0100               	movlb	0	; () banked
 17806  00251E  2569               	addwf	?___awdiv& (0+255),w,b
 17807  002520  0100               	movlb	0	; () banked
 17808  002522  0100               	movlb	0	; () banked
 17809  002524  6F76               	movwf	?___wmul& (0+255),b
 17810  002526  0E00               	movlw	0
 17811  002528  0100               	movlb	0	; () banked
 17812  00252A  0100               	movlb	0	; () banked
 17813  00252C  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 17814  00252E  0100               	movlb	0	; () banked
 17815  002530  6F77               	movwf	(?___wmul+1)& (0+255),b
 17816  002532  EC31  F035         	call	___wmul	;wreg free
 17817  002536  0E29               	movlw	low __npowers_
 17818  002538  0100               	movlb	0	; () banked
 17819  00253A  0100               	movlb	0	; () banked
 17820  00253C  2576               	addwf	?___wmul& (0+255),w,b
 17821  00253E  6EF6               	movwf	tblptrl,c
 17822  002540  0E7F               	movlw	high __npowers_
 17823  002542  0100               	movlb	0	; () banked
 17824  002544  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 17825  002546  6EF7               	movwf	tblptrh,c
 17826  002548  0009               	tblrd		*+
 17827  00254A  CFF5 F0A1          	movff	tablat,??_scale
 17828  00254E  0009               	tblrd		*+
 17829  002550  CFF5 F0A2          	movff	tablat,??_scale+1
 17830  002554  0009               	tblrd		*+
 17831  002556  CFF5 F0A3          	movff	tablat,??_scale+2
 17832  00255A  C0A3  F092         	movff	??_scale+2,?___ftmul+5
 17833  00255E  C0A2  F091         	movff	??_scale+1,?___ftmul+4
 17834  002562  C0A1  F090         	movff	??_scale,?___ftmul+3
 17835  002566  0E00               	movlw	0
 17836  002568  0100               	movlb	0	; () banked
 17837  00256A  0100               	movlb	0	; () banked
 17838  00256C  6F79               	movwf	(?___wmul+3)& (0+255),b
 17839  00256E  0E03               	movlw	3
 17840  002570  0100               	movlb	0	; () banked
 17841  002572  6F78               	movwf	(?___wmul+2)& (0+255),b
 17842  002574  0E00               	movlw	0
 17843  002576  0100               	movlb	0	; () banked
 17844  002578  0100               	movlb	0	; () banked
 17845  00257A  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 17846  00257C  0E64               	movlw	100
 17847  00257E  0100               	movlb	0	; () banked
 17848  002580  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 17849  002582  0100               	movlb	0	; () banked
 17850  002584  0100               	movlb	0	; () banked
 17851  002586  519E               	movf	scale@scl& (0+255),w,b
 17852  002588  0100               	movlb	0	; () banked
 17853  00258A  0100               	movlb	0	; () banked
 17854  00258C  6F69               	movwf	?___awdiv& (0+255),b
 17855  00258E  0100               	movlb	0	; () banked
 17856  002590  6B6A               	clrf	(?___awdiv+1)& (0+255),b
 17857  002592  0100               	movlb	0	; () banked
 17858  002594  BF69               	btfsc	?___awdiv& (0+255),7,b
 17859  002596  076A               	decf	(?___awdiv+1)& (0+255),f,b
 17860  002598  EC1A  F02C         	call	___awdiv	;wreg free
 17861  00259C  0E12               	movlw	18
 17862  00259E  0100               	movlb	0	; () banked
 17863  0025A0  0100               	movlb	0	; () banked
 17864  0025A2  2569               	addwf	?___awdiv& (0+255),w,b
 17865  0025A4  0100               	movlb	0	; () banked
 17866  0025A6  0100               	movlb	0	; () banked
 17867  0025A8  6F76               	movwf	?___wmul& (0+255),b
 17868  0025AA  0E00               	movlw	0
 17869  0025AC  0100               	movlb	0	; () banked
 17870  0025AE  0100               	movlb	0	; () banked
 17871  0025B0  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 17872  0025B2  0100               	movlb	0	; () banked
 17873  0025B4  6F77               	movwf	(?___wmul+1)& (0+255),b
 17874  0025B6  EC31  F035         	call	___wmul	;wreg free
 17875  0025BA  0E29               	movlw	low __npowers_
 17876  0025BC  0100               	movlb	0	; () banked
 17877  0025BE  0100               	movlb	0	; () banked
 17878  0025C0  2576               	addwf	?___wmul& (0+255),w,b
 17879  0025C2  6EF6               	movwf	tblptrl,c
 17880  0025C4  0E7F               	movlw	high __npowers_
 17881  0025C6  0100               	movlb	0	; () banked
 17882  0025C8  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 17883  0025CA  6EF7               	movwf	tblptrh,c
 17884  0025CC  0009               	tblrd		*+
 17885  0025CE  CFF5 F0A4          	movff	tablat,??_scale+3
 17886  0025D2  0009               	tblrd		*+
 17887  0025D4  CFF5 F0A5          	movff	tablat,??_scale+4
 17888  0025D8  0009               	tblrd		*+
 17889  0025DA  CFF5 F0A6          	movff	tablat,??_scale+5
 17890  0025DE  C0A6  F08F         	movff	??_scale+5,?___ftmul+2
 17891  0025E2  C0A5  F08E         	movff	??_scale+4,?___ftmul+1
 17892  0025E6  C0A4  F08D         	movff	??_scale+3,?___ftmul
 17893  0025EA  EC79  F026         	call	___ftmul	;wreg free
 17894  0025EE  C08F  F0A9         	movff	?___ftmul+2,_scale$1434+2
 17895  0025F2  C08E  F0A8         	movff	?___ftmul+1,_scale$1434+1
 17896  0025F6  C08D  F0A7         	movff	?___ftmul,_scale$1434
 17897                           
 17898                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17899  0025FA  C0A7  F08D         	movff	_scale$1434,?___ftmul
 17900  0025FE  C0A8  F08E         	movff	_scale$1434+1,?___ftmul+1
 17901  002602  C0A9  F08F         	movff	_scale$1434+2,?___ftmul+2
 17902  002606  0E00               	movlw	0
 17903  002608  0100               	movlb	0	; () banked
 17904  00260A  0100               	movlb	0	; () banked
 17905  00260C  6F79               	movwf	(?___wmul+3)& (0+255),b
 17906  00260E  0E03               	movlw	3
 17907  002610  0100               	movlb	0	; () banked
 17908  002612  6F78               	movwf	(?___wmul+2)& (0+255),b
 17909  002614  0E00               	movlw	0
 17910  002616  0100               	movlb	0	; () banked
 17911  002618  0100               	movlb	0	; () banked
 17912  00261A  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 17913  00261C  0E0A               	movlw	10
 17914  00261E  0100               	movlb	0	; () banked
 17915  002620  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 17916  002622  0100               	movlb	0	; () banked
 17917  002624  0100               	movlb	0	; () banked
 17918  002626  519E               	movf	scale@scl& (0+255),w,b
 17919  002628  0100               	movlb	0	; () banked
 17920  00262A  0100               	movlb	0	; () banked
 17921  00262C  6F60               	movwf	?i2___awmod& (0+255),b
 17922  00262E  0100               	movlb	0	; () banked
 17923  002630  6B61               	clrf	(?i2___awmod+1)& (0+255),b
 17924  002632  0100               	movlb	0	; () banked
 17925  002634  BF60               	btfsc	?i2___awmod& (0+255),7,b
 17926  002636  0761               	decf	(?i2___awmod+1)& (0+255),f,b
 17927  002638  EC21  F02F         	call	i2___awmod	;wreg free
 17928  00263C  0100               	movlb	0	; () banked
 17929  00263E  C060  F076         	movff	?i2___awmod,?___wmul
 17930  002642  0100               	movlb	0	; () banked
 17931  002644  C061  F077         	movff	?i2___awmod+1,?___wmul+1
 17932  002648  EC31  F035         	call	___wmul	;wreg free
 17933  00264C  0E29               	movlw	low __npowers_
 17934  00264E  0100               	movlb	0	; () banked
 17935  002650  0100               	movlb	0	; () banked
 17936  002652  2576               	addwf	?___wmul& (0+255),w,b
 17937  002654  6EF6               	movwf	tblptrl,c
 17938  002656  0E7F               	movlw	high __npowers_
 17939  002658  0100               	movlb	0	; () banked
 17940  00265A  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 17941  00265C  6EF7               	movwf	tblptrh,c
 17942  00265E  0009               	tblrd		*+
 17943  002660  CFF5 F0A1          	movff	tablat,??_scale
 17944  002664  0009               	tblrd		*+
 17945  002666  CFF5 F0A2          	movff	tablat,??_scale+1
 17946  00266A  0009               	tblrd		*+
 17947  00266C  CFF5 F0A3          	movff	tablat,??_scale+2
 17948  002670  C0A3  F092         	movff	??_scale+2,?___ftmul+5
 17949  002674  C0A2  F091         	movff	??_scale+1,?___ftmul+4
 17950  002678  C0A1  F090         	movff	??_scale,?___ftmul+3
 17951  00267C  EC79  F026         	call	___ftmul	;wreg free
 17952  002680  D1FC               	goto	L26
 17953  002682                     i2l7649:
 17954                           
 17955                           ;doprnt.c: 432: else if(scl > 10)
 17956  002682  0100               	movlb	0	; () banked
 17957  002684  0100               	movlb	0	; () banked
 17958  002686  519E               	movf	scale@scl& (0+255),w,b
 17959  002688  0A80               	xorlw	128
 17960  00268A  0F75               	addlw	-139
 17961  00268C  A0D8               	btfss	status,0,c
 17962  00268E  D080               	goto	i2l7655
 17963                           
 17964                           ; BSR set to: 0
 17965                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 17966  002690  0E00               	movlw	0
 17967  002692  0100               	movlb	0	; () banked
 17968  002694  0100               	movlb	0	; () banked
 17969  002696  6F79               	movwf	(?___wmul+3)& (0+255),b
 17970  002698  0E03               	movlw	3
 17971  00269A  0100               	movlb	0	; () banked
 17972  00269C  6F78               	movwf	(?___wmul+2)& (0+255),b
 17973  00269E  0E00               	movlw	0
 17974  0026A0  0100               	movlb	0	; () banked
 17975  0026A2  0100               	movlb	0	; () banked
 17976  0026A4  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 17977  0026A6  0E0A               	movlw	10
 17978  0026A8  0100               	movlb	0	; () banked
 17979  0026AA  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 17980  0026AC  0100               	movlb	0	; () banked
 17981  0026AE  0100               	movlb	0	; () banked
 17982  0026B0  519E               	movf	scale@scl& (0+255),w,b
 17983  0026B2  0100               	movlb	0	; () banked
 17984  0026B4  0100               	movlb	0	; () banked
 17985  0026B6  6F69               	movwf	?___awdiv& (0+255),b
 17986  0026B8  0100               	movlb	0	; () banked
 17987  0026BA  6B6A               	clrf	(?___awdiv+1)& (0+255),b
 17988  0026BC  0100               	movlb	0	; () banked
 17989  0026BE  BF69               	btfsc	?___awdiv& (0+255),7,b
 17990  0026C0  076A               	decf	(?___awdiv+1)& (0+255),f,b
 17991  0026C2  EC1A  F02C         	call	___awdiv	;wreg free
 17992  0026C6  0E09               	movlw	9
 17993  0026C8  0100               	movlb	0	; () banked
 17994  0026CA  0100               	movlb	0	; () banked
 17995  0026CC  2569               	addwf	?___awdiv& (0+255),w,b
 17996  0026CE  0100               	movlb	0	; () banked
 17997  0026D0  0100               	movlb	0	; () banked
 17998  0026D2  6F76               	movwf	?___wmul& (0+255),b
 17999  0026D4  0E00               	movlw	0
 18000  0026D6  0100               	movlb	0	; () banked
 18001  0026D8  0100               	movlb	0	; () banked
 18002  0026DA  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 18003  0026DC  0100               	movlb	0	; () banked
 18004  0026DE  6F77               	movwf	(?___wmul+1)& (0+255),b
 18005  0026E0  EC31  F035         	call	___wmul	;wreg free
 18006  0026E4  0E29               	movlw	low __npowers_
 18007  0026E6  0100               	movlb	0	; () banked
 18008  0026E8  0100               	movlb	0	; () banked
 18009  0026EA  2576               	addwf	?___wmul& (0+255),w,b
 18010  0026EC  6EF6               	movwf	tblptrl,c
 18011  0026EE  0E7F               	movlw	high __npowers_
 18012  0026F0  0100               	movlb	0	; () banked
 18013  0026F2  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18014  0026F4  6EF7               	movwf	tblptrh,c
 18015  0026F6  0009               	tblrd		*+
 18016  0026F8  CFF5 F0A1          	movff	tablat,??_scale
 18017  0026FC  0009               	tblrd		*+
 18018  0026FE  CFF5 F0A2          	movff	tablat,??_scale+1
 18019  002702  0009               	tblrd		*+
 18020  002704  CFF5 F0A3          	movff	tablat,??_scale+2
 18021  002708  C0A3  F08F         	movff	??_scale+2,?___ftmul+2
 18022  00270C  C0A2  F08E         	movff	??_scale+1,?___ftmul+1
 18023  002710  C0A1  F08D         	movff	??_scale,?___ftmul
 18024  002714  0E00               	movlw	0
 18025  002716  0100               	movlb	0	; () banked
 18026  002718  0100               	movlb	0	; () banked
 18027  00271A  6F79               	movwf	(?___wmul+3)& (0+255),b
 18028  00271C  0E03               	movlw	3
 18029  00271E  0100               	movlb	0	; () banked
 18030  002720  6F78               	movwf	(?___wmul+2)& (0+255),b
 18031  002722  0E00               	movlw	0
 18032  002724  0100               	movlb	0	; () banked
 18033  002726  0100               	movlb	0	; () banked
 18034  002728  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 18035  00272A  0E0A               	movlw	10
 18036  00272C  0100               	movlb	0	; () banked
 18037  00272E  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 18038  002730  0100               	movlb	0	; () banked
 18039  002732  0100               	movlb	0	; () banked
 18040  002734  519E               	movf	scale@scl& (0+255),w,b
 18041  002736  0100               	movlb	0	; () banked
 18042  002738  0100               	movlb	0	; () banked
 18043  00273A  6F60               	movwf	?i2___awmod& (0+255),b
 18044  00273C  0100               	movlb	0	; () banked
 18045  00273E  6B61               	clrf	(?i2___awmod+1)& (0+255),b
 18046  002740  0100               	movlb	0	; () banked
 18047  002742  BF60               	btfsc	?i2___awmod& (0+255),7,b
 18048  002744  0761               	decf	(?i2___awmod+1)& (0+255),f,b
 18049  002746  EC21  F02F         	call	i2___awmod	;wreg free
 18050  00274A  0100               	movlb	0	; () banked
 18051  00274C  C060  F076         	movff	?i2___awmod,?___wmul
 18052  002750  0100               	movlb	0	; () banked
 18053  002752  C061  F077         	movff	?i2___awmod+1,?___wmul+1
 18054  002756  EC31  F035         	call	___wmul	;wreg free
 18055  00275A  0E29               	movlw	low __npowers_
 18056  00275C  0100               	movlb	0	; () banked
 18057  00275E  0100               	movlb	0	; () banked
 18058  002760  2576               	addwf	?___wmul& (0+255),w,b
 18059  002762  6EF6               	movwf	tblptrl,c
 18060  002764  0E7F               	movlw	high __npowers_
 18061  002766  0100               	movlb	0	; () banked
 18062  002768  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18063  00276A  6EF7               	movwf	tblptrh,c
 18064  00276C  0009               	tblrd		*+
 18065  00276E  CFF5 F0A4          	movff	tablat,??_scale+3
 18066  002772  0009               	tblrd		*+
 18067  002774  CFF5 F0A5          	movff	tablat,??_scale+4
 18068  002778  0009               	tblrd		*+
 18069  00277A  CFF5 F0A6          	movff	tablat,??_scale+5
 18070  00277E  C0A6  F092         	movff	??_scale+5,?___ftmul+5
 18071  002782  C0A5  F091         	movff	??_scale+4,?___ftmul+4
 18072  002786  C0A4  F090         	movff	??_scale+3,?___ftmul+3
 18073  00278A  EC79  F026         	call	___ftmul	;wreg free
 18074  00278E  D175               	goto	L26
 18075  002790                     i2l7655:
 18076                           
 18077                           ;doprnt.c: 434: return _npowers_[scl];
 18078  002790  0100               	movlb	0	; () banked
 18079  002792  0100               	movlb	0	; () banked
 18080  002794  519E               	movf	scale@scl& (0+255),w,b
 18081  002796  0D03               	mullw	3
 18082  002798  0E29               	movlw	low __npowers_
 18083  00279A  24F3               	addwf	prodl,w,c
 18084  00279C  6EF6               	movwf	tblptrl,c
 18085  00279E  0E7F               	movlw	high __npowers_
 18086  0027A0  D17B               	goto	L25
 18087  0027A2                     i2l7659:
 18088                           
 18089                           ; BSR set to: 0
 18090                           ;doprnt.c: 435: }
 18091                           ;doprnt.c: 436: if(scl>=110)
 18092  0027A2  0100               	movlb	0	; () banked
 18093  0027A4  0100               	movlb	0	; () banked
 18094  0027A6  519E               	movf	scale@scl& (0+255),w,b
 18095  0027A8  0A80               	xorlw	128
 18096  0027AA  0F12               	addlw	-238
 18097  0027AC  A0D8               	btfss	status,0,c
 18098  0027AE  D0DF               	goto	i2l7667
 18099                           
 18100                           ; BSR set to: 0
 18101                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 18102  0027B0  0E00               	movlw	0
 18103  0027B2  0100               	movlb	0	; () banked
 18104  0027B4  0100               	movlb	0	; () banked
 18105  0027B6  6F79               	movwf	(?___wmul+3)& (0+255),b
 18106  0027B8  0E03               	movlw	3
 18107  0027BA  0100               	movlb	0	; () banked
 18108  0027BC  6F78               	movwf	(?___wmul+2)& (0+255),b
 18109  0027BE  0E00               	movlw	0
 18110  0027C0  0100               	movlb	0	; () banked
 18111  0027C2  0100               	movlb	0	; () banked
 18112  0027C4  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 18113  0027C6  0E0A               	movlw	10
 18114  0027C8  0100               	movlb	0	; () banked
 18115  0027CA  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 18116  0027CC  0E00               	movlw	0
 18117  0027CE  0100               	movlb	0	; () banked
 18118  0027D0  0100               	movlb	0	; () banked
 18119  0027D2  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 18120  0027D4  0E64               	movlw	100
 18121  0027D6  0100               	movlb	0	; () banked
 18122  0027D8  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 18123  0027DA  0100               	movlb	0	; () banked
 18124  0027DC  0100               	movlb	0	; () banked
 18125  0027DE  519E               	movf	scale@scl& (0+255),w,b
 18126  0027E0  0100               	movlb	0	; () banked
 18127  0027E2  0100               	movlb	0	; () banked
 18128  0027E4  6F60               	movwf	?i2___awmod& (0+255),b
 18129  0027E6  0100               	movlb	0	; () banked
 18130  0027E8  6B61               	clrf	(?i2___awmod+1)& (0+255),b
 18131  0027EA  0100               	movlb	0	; () banked
 18132  0027EC  BF60               	btfsc	?i2___awmod& (0+255),7,b
 18133  0027EE  0761               	decf	(?i2___awmod+1)& (0+255),f,b
 18134  0027F0  EC21  F02F         	call	i2___awmod	;wreg free
 18135  0027F4  0100               	movlb	0	; () banked
 18136  0027F6  C060  F069         	movff	?i2___awmod,?___awdiv
 18137  0027FA  0100               	movlb	0	; () banked
 18138  0027FC  C061  F06A         	movff	?i2___awmod+1,?___awdiv+1
 18139  002800  EC1A  F02C         	call	___awdiv	;wreg free
 18140  002804  0E09               	movlw	9
 18141  002806  0100               	movlb	0	; () banked
 18142  002808  0100               	movlb	0	; () banked
 18143  00280A  2569               	addwf	?___awdiv& (0+255),w,b
 18144  00280C  0100               	movlb	0	; () banked
 18145  00280E  0100               	movlb	0	; () banked
 18146  002810  6F76               	movwf	?___wmul& (0+255),b
 18147  002812  0E00               	movlw	0
 18148  002814  0100               	movlb	0	; () banked
 18149  002816  0100               	movlb	0	; () banked
 18150  002818  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 18151  00281A  0100               	movlb	0	; () banked
 18152  00281C  6F77               	movwf	(?___wmul+1)& (0+255),b
 18153  00281E  EC31  F035         	call	___wmul	;wreg free
 18154  002822  0E50               	movlw	low __powers_
 18155  002824  0100               	movlb	0	; () banked
 18156  002826  0100               	movlb	0	; () banked
 18157  002828  2576               	addwf	?___wmul& (0+255),w,b
 18158  00282A  6EF6               	movwf	tblptrl,c
 18159  00282C  0E7F               	movlw	high __powers_
 18160  00282E  0100               	movlb	0	; () banked
 18161  002830  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18162  002832  6EF7               	movwf	tblptrh,c
 18163  002834  0009               	tblrd		*+
 18164  002836  CFF5 F0A1          	movff	tablat,??_scale
 18165  00283A  0009               	tblrd		*+
 18166  00283C  CFF5 F0A2          	movff	tablat,??_scale+1
 18167  002840  0009               	tblrd		*+
 18168  002842  CFF5 F0A3          	movff	tablat,??_scale+2
 18169  002846  C0A3  F092         	movff	??_scale+2,?___ftmul+5
 18170  00284A  C0A2  F091         	movff	??_scale+1,?___ftmul+4
 18171  00284E  C0A1  F090         	movff	??_scale,?___ftmul+3
 18172  002852  0E00               	movlw	0
 18173  002854  0100               	movlb	0	; () banked
 18174  002856  0100               	movlb	0	; () banked
 18175  002858  6F79               	movwf	(?___wmul+3)& (0+255),b
 18176  00285A  0E03               	movlw	3
 18177  00285C  0100               	movlb	0	; () banked
 18178  00285E  6F78               	movwf	(?___wmul+2)& (0+255),b
 18179  002860  0E00               	movlw	0
 18180  002862  0100               	movlb	0	; () banked
 18181  002864  0100               	movlb	0	; () banked
 18182  002866  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 18183  002868  0E64               	movlw	100
 18184  00286A  0100               	movlb	0	; () banked
 18185  00286C  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 18186  00286E  0100               	movlb	0	; () banked
 18187  002870  0100               	movlb	0	; () banked
 18188  002872  519E               	movf	scale@scl& (0+255),w,b
 18189  002874  0100               	movlb	0	; () banked
 18190  002876  0100               	movlb	0	; () banked
 18191  002878  6F69               	movwf	?___awdiv& (0+255),b
 18192  00287A  0100               	movlb	0	; () banked
 18193  00287C  6B6A               	clrf	(?___awdiv+1)& (0+255),b
 18194  00287E  0100               	movlb	0	; () banked
 18195  002880  BF69               	btfsc	?___awdiv& (0+255),7,b
 18196  002882  076A               	decf	(?___awdiv+1)& (0+255),f,b
 18197  002884  EC1A  F02C         	call	___awdiv	;wreg free
 18198  002888  0E12               	movlw	18
 18199  00288A  0100               	movlb	0	; () banked
 18200  00288C  0100               	movlb	0	; () banked
 18201  00288E  2569               	addwf	?___awdiv& (0+255),w,b
 18202  002890  0100               	movlb	0	; () banked
 18203  002892  0100               	movlb	0	; () banked
 18204  002894  6F76               	movwf	?___wmul& (0+255),b
 18205  002896  0E00               	movlw	0
 18206  002898  0100               	movlb	0	; () banked
 18207  00289A  0100               	movlb	0	; () banked
 18208  00289C  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 18209  00289E  0100               	movlb	0	; () banked
 18210  0028A0  6F77               	movwf	(?___wmul+1)& (0+255),b
 18211  0028A2  EC31  F035         	call	___wmul	;wreg free
 18212  0028A6  0E50               	movlw	low __powers_
 18213  0028A8  0100               	movlb	0	; () banked
 18214  0028AA  0100               	movlb	0	; () banked
 18215  0028AC  2576               	addwf	?___wmul& (0+255),w,b
 18216  0028AE  6EF6               	movwf	tblptrl,c
 18217  0028B0  0E7F               	movlw	high __powers_
 18218  0028B2  0100               	movlb	0	; () banked
 18219  0028B4  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18220  0028B6  6EF7               	movwf	tblptrh,c
 18221  0028B8  0009               	tblrd		*+
 18222  0028BA  CFF5 F0A4          	movff	tablat,??_scale+3
 18223  0028BE  0009               	tblrd		*+
 18224  0028C0  CFF5 F0A5          	movff	tablat,??_scale+4
 18225  0028C4  0009               	tblrd		*+
 18226  0028C6  CFF5 F0A6          	movff	tablat,??_scale+5
 18227  0028CA  C0A6  F08F         	movff	??_scale+5,?___ftmul+2
 18228  0028CE  C0A5  F08E         	movff	??_scale+4,?___ftmul+1
 18229  0028D2  C0A4  F08D         	movff	??_scale+3,?___ftmul
 18230  0028D6  EC79  F026         	call	___ftmul	;wreg free
 18231  0028DA  C08F  F0A9         	movff	?___ftmul+2,_scale$1434+2
 18232  0028DE  C08E  F0A8         	movff	?___ftmul+1,_scale$1434+1
 18233  0028E2  C08D  F0A7         	movff	?___ftmul,_scale$1434
 18234                           
 18235                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 18236  0028E6  C0A7  F08D         	movff	_scale$1434,?___ftmul
 18237  0028EA  C0A8  F08E         	movff	_scale$1434+1,?___ftmul+1
 18238  0028EE  C0A9  F08F         	movff	_scale$1434+2,?___ftmul+2
 18239  0028F2  0E00               	movlw	0
 18240  0028F4  0100               	movlb	0	; () banked
 18241  0028F6  0100               	movlb	0	; () banked
 18242  0028F8  6F79               	movwf	(?___wmul+3)& (0+255),b
 18243  0028FA  0E03               	movlw	3
 18244  0028FC  0100               	movlb	0	; () banked
 18245  0028FE  6F78               	movwf	(?___wmul+2)& (0+255),b
 18246  002900  0E00               	movlw	0
 18247  002902  0100               	movlb	0	; () banked
 18248  002904  0100               	movlb	0	; () banked
 18249  002906  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 18250  002908  0E0A               	movlw	10
 18251  00290A  0100               	movlb	0	; () banked
 18252  00290C  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 18253  00290E  0100               	movlb	0	; () banked
 18254  002910  0100               	movlb	0	; () banked
 18255  002912  519E               	movf	scale@scl& (0+255),w,b
 18256  002914  0100               	movlb	0	; () banked
 18257  002916  0100               	movlb	0	; () banked
 18258  002918  6F60               	movwf	?i2___awmod& (0+255),b
 18259  00291A  0100               	movlb	0	; () banked
 18260  00291C  6B61               	clrf	(?i2___awmod+1)& (0+255),b
 18261  00291E  0100               	movlb	0	; () banked
 18262  002920  BF60               	btfsc	?i2___awmod& (0+255),7,b
 18263  002922  0761               	decf	(?i2___awmod+1)& (0+255),f,b
 18264  002924  EC21  F02F         	call	i2___awmod	;wreg free
 18265  002928  0100               	movlb	0	; () banked
 18266  00292A  C060  F076         	movff	?i2___awmod,?___wmul
 18267  00292E  0100               	movlb	0	; () banked
 18268  002930  C061  F077         	movff	?i2___awmod+1,?___wmul+1
 18269  002934  EC31  F035         	call	___wmul	;wreg free
 18270  002938  0E50               	movlw	low __powers_
 18271  00293A  0100               	movlb	0	; () banked
 18272  00293C  0100               	movlb	0	; () banked
 18273  00293E  2576               	addwf	?___wmul& (0+255),w,b
 18274  002940  6EF6               	movwf	tblptrl,c
 18275  002942  0E7F               	movlw	high __powers_
 18276  002944  0100               	movlb	0	; () banked
 18277  002946  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18278  002948  6EF7               	movwf	tblptrh,c
 18279  00294A  0009               	tblrd		*+
 18280  00294C  CFF5 F0A1          	movff	tablat,??_scale
 18281  002950  0009               	tblrd		*+
 18282  002952  CFF5 F0A2          	movff	tablat,??_scale+1
 18283  002956  0009               	tblrd		*+
 18284  002958  CFF5 F0A3          	movff	tablat,??_scale+2
 18285  00295C  C0A3  F092         	movff	??_scale+2,?___ftmul+5
 18286  002960  C0A2  F091         	movff	??_scale+1,?___ftmul+4
 18287  002964  C0A1  F090         	movff	??_scale,?___ftmul+3
 18288  002968  EC79  F026         	call	___ftmul	;wreg free
 18289  00296C  D086               	goto	L26
 18290  00296E                     i2l7667:
 18291                           
 18292                           ;doprnt.c: 438: else if(scl > 10)
 18293  00296E  0100               	movlb	0	; () banked
 18294  002970  0100               	movlb	0	; () banked
 18295  002972  519E               	movf	scale@scl& (0+255),w,b
 18296  002974  0A80               	xorlw	128
 18297  002976  0F75               	addlw	-139
 18298  002978  A0D8               	btfss	status,0,c
 18299  00297A  D086               	goto	i2l7673
 18300                           
 18301                           ; BSR set to: 0
 18302                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 18303  00297C  0E00               	movlw	0
 18304  00297E  0100               	movlb	0	; () banked
 18305  002980  0100               	movlb	0	; () banked
 18306  002982  6F79               	movwf	(?___wmul+3)& (0+255),b
 18307  002984  0E03               	movlw	3
 18308  002986  0100               	movlb	0	; () banked
 18309  002988  6F78               	movwf	(?___wmul+2)& (0+255),b
 18310  00298A  0E00               	movlw	0
 18311  00298C  0100               	movlb	0	; () banked
 18312  00298E  0100               	movlb	0	; () banked
 18313  002990  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 18314  002992  0E0A               	movlw	10
 18315  002994  0100               	movlb	0	; () banked
 18316  002996  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 18317  002998  0100               	movlb	0	; () banked
 18318  00299A  0100               	movlb	0	; () banked
 18319  00299C  519E               	movf	scale@scl& (0+255),w,b
 18320  00299E  0100               	movlb	0	; () banked
 18321  0029A0  0100               	movlb	0	; () banked
 18322  0029A2  6F69               	movwf	?___awdiv& (0+255),b
 18323  0029A4  0100               	movlb	0	; () banked
 18324  0029A6  6B6A               	clrf	(?___awdiv+1)& (0+255),b
 18325  0029A8  0100               	movlb	0	; () banked
 18326  0029AA  BF69               	btfsc	?___awdiv& (0+255),7,b
 18327  0029AC  076A               	decf	(?___awdiv+1)& (0+255),f,b
 18328  0029AE  EC1A  F02C         	call	___awdiv	;wreg free
 18329  0029B2  0E09               	movlw	9
 18330  0029B4  0100               	movlb	0	; () banked
 18331  0029B6  0100               	movlb	0	; () banked
 18332  0029B8  2569               	addwf	?___awdiv& (0+255),w,b
 18333  0029BA  0100               	movlb	0	; () banked
 18334  0029BC  0100               	movlb	0	; () banked
 18335  0029BE  6F76               	movwf	?___wmul& (0+255),b
 18336  0029C0  0E00               	movlw	0
 18337  0029C2  0100               	movlb	0	; () banked
 18338  0029C4  0100               	movlb	0	; () banked
 18339  0029C6  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 18340  0029C8  0100               	movlb	0	; () banked
 18341  0029CA  6F77               	movwf	(?___wmul+1)& (0+255),b
 18342  0029CC  EC31  F035         	call	___wmul	;wreg free
 18343  0029D0  0E50               	movlw	low __powers_
 18344  0029D2  0100               	movlb	0	; () banked
 18345  0029D4  0100               	movlb	0	; () banked
 18346  0029D6  2576               	addwf	?___wmul& (0+255),w,b
 18347  0029D8  6EF6               	movwf	tblptrl,c
 18348  0029DA  0E7F               	movlw	high __powers_
 18349  0029DC  0100               	movlb	0	; () banked
 18350  0029DE  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18351  0029E0  6EF7               	movwf	tblptrh,c
 18352  0029E2  0009               	tblrd		*+
 18353  0029E4  CFF5 F0A1          	movff	tablat,??_scale
 18354  0029E8  0009               	tblrd		*+
 18355  0029EA  CFF5 F0A2          	movff	tablat,??_scale+1
 18356  0029EE  0009               	tblrd		*+
 18357  0029F0  CFF5 F0A3          	movff	tablat,??_scale+2
 18358  0029F4  C0A3  F08F         	movff	??_scale+2,?___ftmul+2
 18359  0029F8  C0A2  F08E         	movff	??_scale+1,?___ftmul+1
 18360  0029FC  C0A1  F08D         	movff	??_scale,?___ftmul
 18361  002A00  0E00               	movlw	0
 18362  002A02  0100               	movlb	0	; () banked
 18363  002A04  0100               	movlb	0	; () banked
 18364  002A06  6F79               	movwf	(?___wmul+3)& (0+255),b
 18365  002A08  0E03               	movlw	3
 18366  002A0A  0100               	movlb	0	; () banked
 18367  002A0C  6F78               	movwf	(?___wmul+2)& (0+255),b
 18368  002A0E  0E00               	movlw	0
 18369  002A10  0100               	movlb	0	; () banked
 18370  002A12  0100               	movlb	0	; () banked
 18371  002A14  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 18372  002A16  0E0A               	movlw	10
 18373  002A18  0100               	movlb	0	; () banked
 18374  002A1A  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 18375  002A1C  0100               	movlb	0	; () banked
 18376  002A1E  0100               	movlb	0	; () banked
 18377  002A20  519E               	movf	scale@scl& (0+255),w,b
 18378  002A22  0100               	movlb	0	; () banked
 18379  002A24  0100               	movlb	0	; () banked
 18380  002A26  6F60               	movwf	?i2___awmod& (0+255),b
 18381  002A28  0100               	movlb	0	; () banked
 18382  002A2A  6B61               	clrf	(?i2___awmod+1)& (0+255),b
 18383  002A2C  0100               	movlb	0	; () banked
 18384  002A2E  BF60               	btfsc	?i2___awmod& (0+255),7,b
 18385  002A30  0761               	decf	(?i2___awmod+1)& (0+255),f,b
 18386  002A32  EC21  F02F         	call	i2___awmod	;wreg free
 18387  002A36  0100               	movlb	0	; () banked
 18388  002A38  C060  F076         	movff	?i2___awmod,?___wmul
 18389  002A3C  0100               	movlb	0	; () banked
 18390  002A3E  C061  F077         	movff	?i2___awmod+1,?___wmul+1
 18391  002A42  EC31  F035         	call	___wmul	;wreg free
 18392  002A46  0E50               	movlw	low __powers_
 18393  002A48  0100               	movlb	0	; () banked
 18394  002A4A  0100               	movlb	0	; () banked
 18395  002A4C  2576               	addwf	?___wmul& (0+255),w,b
 18396  002A4E  6EF6               	movwf	tblptrl,c
 18397  002A50  0E7F               	movlw	high __powers_
 18398  002A52  0100               	movlb	0	; () banked
 18399  002A54  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18400  002A56  6EF7               	movwf	tblptrh,c
 18401  002A58  0009               	tblrd		*+
 18402  002A5A  CFF5 F0A4          	movff	tablat,??_scale+3
 18403  002A5E  0009               	tblrd		*+
 18404  002A60  CFF5 F0A5          	movff	tablat,??_scale+4
 18405  002A64  0009               	tblrd		*+
 18406  002A66  CFF5 F0A6          	movff	tablat,??_scale+5
 18407  002A6A  C0A6  F092         	movff	??_scale+5,?___ftmul+5
 18408  002A6E  C0A5  F091         	movff	??_scale+4,?___ftmul+4
 18409  002A72  C0A4  F090         	movff	??_scale+3,?___ftmul+3
 18410  002A76  EC79  F026         	call	___ftmul	;wreg free
 18411  002A7A                     L26:
 18412  002A7A  C08F  F0A0         	movff	?___ftmul+2,?_scale+2
 18413  002A7E  C08E  F09F         	movff	?___ftmul+1,?_scale+1
 18414  002A82  C08D  F09E         	movff	?___ftmul,?_scale
 18415  002A86  D019               	goto	i2l641
 18416  002A88                     i2l7673:
 18417                           
 18418                           ;doprnt.c: 440: return _powers_[scl];
 18419  002A88  0100               	movlb	0	; () banked
 18420  002A8A  0100               	movlb	0	; () banked
 18421  002A8C  519E               	movf	scale@scl& (0+255),w,b
 18422  002A8E  0D03               	mullw	3
 18423  002A90  0E50               	movlw	low __powers_
 18424  002A92  24F3               	addwf	prodl,w,c
 18425  002A94  6EF6               	movwf	tblptrl,c
 18426  002A96  0E7F               	movlw	high __powers_
 18427  002A98                     L25:
 18428  002A98  20F4               	addwfc	prodh,w,c
 18429  002A9A  6EF7               	movwf	tblptrh,c
 18430  002A9C  0009               	tblrd		*+
 18431  002A9E  CFF5 F0A1          	movff	tablat,??_scale
 18432  002AA2  0009               	tblrd		*+
 18433  002AA4  CFF5 F0A2          	movff	tablat,??_scale+1
 18434  002AA8  0009               	tblrd		*+
 18435  002AAA  CFF5 F0A3          	movff	tablat,??_scale+2
 18436  002AAE  C0A3  F0A0         	movff	??_scale+2,?_scale+2
 18437  002AB2  C0A2  F09F         	movff	??_scale+1,?_scale+1
 18438  002AB6  C0A1  F09E         	movff	??_scale,?_scale
 18439  002ABA                     i2l641:
 18440  002ABA  0012               	return	
 18441  002ABC                     __end_of_scale:
 18442                           	opt stack 0
 18443                           tosu	equ	0xFFF
 18444                           tosh	equ	0xFFE
 18445                           tosl	equ	0xFFD
 18446                           pclatu	equ	0xFFB
 18447                           pclath	equ	0xFFA
 18448                           tblptru	equ	0xFF8
 18449                           tblptrh	equ	0xFF7
 18450                           tblptrl	equ	0xFF6
 18451                           tablat	equ	0xFF5
 18452                           prodh	equ	0xFF4
 18453                           prodl	equ	0xFF3
 18454                           intcon	equ	0xFF2
 18455                           intcon2	equ	0xFF1
 18456                           indf0	equ	0xFEF
 18457                           postinc0	equ	0xFEE
 18458                           fsr0h	equ	0xFEA
 18459                           fsr0l	equ	0xFE9
 18460                           wreg	equ	0xFE8
 18461                           postinc1	equ	0xFE6
 18462                           postdec1	equ	0xFE5
 18463                           fsr1h	equ	0xFE2
 18464                           fsr1l	equ	0xFE1
 18465                           bsr	equ	0xFE0
 18466                           indf2	equ	0xFDF
 18467                           postinc2	equ	0xFDE
 18468                           postdec2	equ	0xFDD
 18469                           plusw2	equ	0xFDB
 18470                           fsr2h	equ	0xFDA
 18471                           fsr2l	equ	0xFD9
 18472                           status	equ	0xFD8
 18473                           
 18474 ;; *************** function _fround *****************
 18475 ;; Defined at:
 18476 ;;		line 410 in file "/usr/opt/microchip/xc8/v1.20/sources/common/doprnt.c"
 18477 ;; Parameters:    Size  Location     Type
 18478 ;;  prec            1   62[BANK0 ] unsigned char 
 18479 ;; Auto vars:     Size  Location     Type
 18480 ;;		None
 18481 ;; Return value:  Size  Location     Type
 18482 ;;                  3   62[BANK0 ] unsigned char 
 18483 ;; Registers used:
 18484 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18485 ;; Tracked objects:
 18486 ;;		On entry : 0/0
 18487 ;;		On exit  : 0/0
 18488 ;;		Unchanged: 0/0
 18489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18490 ;;      Params:         0       3       0       0       0       0       0       0       0
 18491 ;;      Locals:         0       6       0       0       0       0       0       0       0
 18492 ;;      Temps:          0       6       0       0       0       0       0       0       0
 18493 ;;      Totals:         0      15       0       0       0       0       0       0       0
 18494 ;;Total ram usage:       15 bytes
 18495 ;; Hardware stack levels used:    1
 18496 ;; Hardware stack levels required when called:    2
 18497 ;; This function calls:
 18498 ;;		___ftmul
 18499 ;;		___awdiv
 18500 ;;		___wmul
 18501 ;;		i2___awmod
 18502 ;; This function is called by:
 18503 ;;		_sprintf
 18504 ;; This function uses a non-reentrant model
 18505 ;;
 18506                           
 18507                           	psect	text54
 18508  003C8A                     __ptext54:
 18509                           	opt stack 0
 18510  003C8A                     _fround:
 18511                           	opt stack 15
 18512                           
 18513                           ;doprnt.c: 413: if(prec>=110)
 18514                           
 18515                           ;incstack = 0
 18516                           ;incstack = 0
 18517  003C8A  0E6D               	movlw	109
 18518  003C8C  0100               	movlb	0	; () banked
 18519  003C8E  0100               	movlb	0	; () banked
 18520  003C90  659E               	cpfsgt	fround@prec& (0+255),b
 18521  003C92  D0ED               	goto	i2l7625
 18522                           
 18523                           ; BSR set to: 0
 18524                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18525  003C94  0E00               	movlw	0
 18526  003C96  0100               	movlb	0	; () banked
 18527  003C98  0100               	movlb	0	; () banked
 18528  003C9A  6F79               	movwf	(?___wmul+3)& (0+255),b
 18529  003C9C  0E03               	movlw	3
 18530  003C9E  0100               	movlb	0	; () banked
 18531  003CA0  6F78               	movwf	(?___wmul+2)& (0+255),b
 18532  003CA2  0E00               	movlw	0
 18533  003CA4  0100               	movlb	0	; () banked
 18534  003CA6  0100               	movlb	0	; () banked
 18535  003CA8  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 18536  003CAA  0E0A               	movlw	10
 18537  003CAC  0100               	movlb	0	; () banked
 18538  003CAE  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 18539  003CB0  0E00               	movlw	0
 18540  003CB2  0100               	movlb	0	; () banked
 18541  003CB4  0100               	movlb	0	; () banked
 18542  003CB6  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 18543  003CB8  0E64               	movlw	100
 18544  003CBA  0100               	movlb	0	; () banked
 18545  003CBC  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 18546  003CBE  0100               	movlb	0	; () banked
 18547  003CC0  0100               	movlb	0	; () banked
 18548  003CC2  C09E  F060         	movff	fround@prec,?i2___awmod
 18549  003CC6  0100               	movlb	0	; () banked
 18550  003CC8  0100               	movlb	0	; () banked
 18551  003CCA  6B61               	clrf	(?i2___awmod+1)& (0+255),b
 18552  003CCC  EC21  F02F         	call	i2___awmod	;wreg free
 18553  003CD0  0100               	movlb	0	; () banked
 18554  003CD2  C060  F069         	movff	?i2___awmod,?___awdiv
 18555  003CD6  0100               	movlb	0	; () banked
 18556  003CD8  C061  F06A         	movff	?i2___awmod+1,?___awdiv+1
 18557  003CDC  EC1A  F02C         	call	___awdiv	;wreg free
 18558  003CE0  0E09               	movlw	9
 18559  003CE2  0100               	movlb	0	; () banked
 18560  003CE4  0100               	movlb	0	; () banked
 18561  003CE6  2569               	addwf	?___awdiv& (0+255),w,b
 18562  003CE8  0100               	movlb	0	; () banked
 18563  003CEA  0100               	movlb	0	; () banked
 18564  003CEC  6F76               	movwf	?___wmul& (0+255),b
 18565  003CEE  0E00               	movlw	0
 18566  003CF0  0100               	movlb	0	; () banked
 18567  003CF2  0100               	movlb	0	; () banked
 18568  003CF4  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 18569  003CF6  0100               	movlb	0	; () banked
 18570  003CF8  6F77               	movwf	(?___wmul+1)& (0+255),b
 18571  003CFA  EC31  F035         	call	___wmul	;wreg free
 18572  003CFE  0E29               	movlw	low __npowers_
 18573  003D00  0100               	movlb	0	; () banked
 18574  003D02  0100               	movlb	0	; () banked
 18575  003D04  2576               	addwf	?___wmul& (0+255),w,b
 18576  003D06  6EF6               	movwf	tblptrl,c
 18577  003D08  0E7F               	movlw	high __npowers_
 18578  003D0A  0100               	movlb	0	; () banked
 18579  003D0C  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18580  003D0E  6EF7               	movwf	tblptrh,c
 18581  003D10  0009               	tblrd		*+
 18582  003D12  CFF5 F0A1          	movff	tablat,??_fround
 18583  003D16  0009               	tblrd		*+
 18584  003D18  CFF5 F0A2          	movff	tablat,??_fround+1
 18585  003D1C  0009               	tblrd		*+
 18586  003D1E  CFF5 F0A3          	movff	tablat,??_fround+2
 18587  003D22  C0A3  F092         	movff	??_fround+2,?___ftmul+5
 18588  003D26  C0A2  F091         	movff	??_fround+1,?___ftmul+4
 18589  003D2A  C0A1  F090         	movff	??_fround,?___ftmul+3
 18590  003D2E  0E00               	movlw	0
 18591  003D30  0100               	movlb	0	; () banked
 18592  003D32  0100               	movlb	0	; () banked
 18593  003D34  6F79               	movwf	(?___wmul+3)& (0+255),b
 18594  003D36  0E03               	movlw	3
 18595  003D38  0100               	movlb	0	; () banked
 18596  003D3A  6F78               	movwf	(?___wmul+2)& (0+255),b
 18597  003D3C  0E00               	movlw	0
 18598  003D3E  0100               	movlb	0	; () banked
 18599  003D40  0100               	movlb	0	; () banked
 18600  003D42  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 18601  003D44  0E64               	movlw	100
 18602  003D46  0100               	movlb	0	; () banked
 18603  003D48  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 18604  003D4A  0100               	movlb	0	; () banked
 18605  003D4C  0100               	movlb	0	; () banked
 18606  003D4E  C09E  F069         	movff	fround@prec,?___awdiv
 18607  003D52  0100               	movlb	0	; () banked
 18608  003D54  0100               	movlb	0	; () banked
 18609  003D56  6B6A               	clrf	(?___awdiv+1)& (0+255),b
 18610  003D58  EC1A  F02C         	call	___awdiv	;wreg free
 18611  003D5C  0E12               	movlw	18
 18612  003D5E  0100               	movlb	0	; () banked
 18613  003D60  0100               	movlb	0	; () banked
 18614  003D62  2569               	addwf	?___awdiv& (0+255),w,b
 18615  003D64  0100               	movlb	0	; () banked
 18616  003D66  0100               	movlb	0	; () banked
 18617  003D68  6F76               	movwf	?___wmul& (0+255),b
 18618  003D6A  0E00               	movlw	0
 18619  003D6C  0100               	movlb	0	; () banked
 18620  003D6E  0100               	movlb	0	; () banked
 18621  003D70  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 18622  003D72  0100               	movlb	0	; () banked
 18623  003D74  6F77               	movwf	(?___wmul+1)& (0+255),b
 18624  003D76  EC31  F035         	call	___wmul	;wreg free
 18625  003D7A  0E29               	movlw	low __npowers_
 18626  003D7C  0100               	movlb	0	; () banked
 18627  003D7E  0100               	movlb	0	; () banked
 18628  003D80  2576               	addwf	?___wmul& (0+255),w,b
 18629  003D82  6EF6               	movwf	tblptrl,c
 18630  003D84  0E7F               	movlw	high __npowers_
 18631  003D86  0100               	movlb	0	; () banked
 18632  003D88  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18633  003D8A  6EF7               	movwf	tblptrh,c
 18634  003D8C  0009               	tblrd		*+
 18635  003D8E  CFF5 F0A4          	movff	tablat,??_fround+3
 18636  003D92  0009               	tblrd		*+
 18637  003D94  CFF5 F0A5          	movff	tablat,??_fround+4
 18638  003D98  0009               	tblrd		*+
 18639  003D9A  CFF5 F0A6          	movff	tablat,??_fround+5
 18640  003D9E  C0A6  F08F         	movff	??_fround+5,?___ftmul+2
 18641  003DA2  C0A5  F08E         	movff	??_fround+4,?___ftmul+1
 18642  003DA6  C0A4  F08D         	movff	??_fround+3,?___ftmul
 18643  003DAA  EC79  F026         	call	___ftmul	;wreg free
 18644  003DAE  C08F  F0AC         	movff	?___ftmul+2,_fround$1432+2
 18645  003DB2  C08E  F0AB         	movff	?___ftmul+1,_fround$1432+1
 18646  003DB6  C08D  F0AA         	movff	?___ftmul,_fround$1432
 18647                           
 18648                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18649  003DBA  0E00               	movlw	0
 18650  003DBC  0100               	movlb	0	; () banked
 18651  003DBE  0100               	movlb	0	; () banked
 18652  003DC0  6F79               	movwf	(?___wmul+3)& (0+255),b
 18653  003DC2  0E03               	movlw	3
 18654  003DC4  0100               	movlb	0	; () banked
 18655  003DC6  6F78               	movwf	(?___wmul+2)& (0+255),b
 18656  003DC8  0E00               	movlw	0
 18657  003DCA  0100               	movlb	0	; () banked
 18658  003DCC  0100               	movlb	0	; () banked
 18659  003DCE  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 18660  003DD0  0E0A               	movlw	10
 18661  003DD2  0100               	movlb	0	; () banked
 18662  003DD4  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 18663  003DD6  0100               	movlb	0	; () banked
 18664  003DD8  0100               	movlb	0	; () banked
 18665  003DDA  C09E  F060         	movff	fround@prec,?i2___awmod
 18666  003DDE  0100               	movlb	0	; () banked
 18667  003DE0  0100               	movlb	0	; () banked
 18668  003DE2  6B61               	clrf	(?i2___awmod+1)& (0+255),b
 18669  003DE4  EC21  F02F         	call	i2___awmod	;wreg free
 18670  003DE8  0100               	movlb	0	; () banked
 18671  003DEA  C060  F076         	movff	?i2___awmod,?___wmul
 18672  003DEE  0100               	movlb	0	; () banked
 18673  003DF0  C061  F077         	movff	?i2___awmod+1,?___wmul+1
 18674  003DF4  EC31  F035         	call	___wmul	;wreg free
 18675  003DF8  0E29               	movlw	low __npowers_
 18676  003DFA  0100               	movlb	0	; () banked
 18677  003DFC  0100               	movlb	0	; () banked
 18678  003DFE  2576               	addwf	?___wmul& (0+255),w,b
 18679  003E00  6EF6               	movwf	tblptrl,c
 18680  003E02  0E7F               	movlw	high __npowers_
 18681  003E04  0100               	movlb	0	; () banked
 18682  003E06  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18683  003E08  6EF7               	movwf	tblptrh,c
 18684  003E0A  0009               	tblrd		*+
 18685  003E0C  CFF5 F0A1          	movff	tablat,??_fround
 18686  003E10  0009               	tblrd		*+
 18687  003E12  CFF5 F0A2          	movff	tablat,??_fround+1
 18688  003E16  0009               	tblrd		*+
 18689  003E18  CFF5 F0A3          	movff	tablat,??_fround+2
 18690  003E1C  C0A3  F092         	movff	??_fround+2,?___ftmul+5
 18691  003E20  C0A2  F091         	movff	??_fround+1,?___ftmul+4
 18692  003E24  C0A1  F090         	movff	??_fround,?___ftmul+3
 18693  003E28  C0AA  F08D         	movff	_fround$1432,?___ftmul
 18694  003E2C  C0AB  F08E         	movff	_fround$1432+1,?___ftmul+1
 18695  003E30  C0AC  F08F         	movff	_fround$1432+2,?___ftmul+2
 18696  003E34  EC79  F026         	call	___ftmul	;wreg free
 18697  003E38  C08F  F0A9         	movff	?___ftmul+2,_fround$1433+2
 18698  003E3C  C08E  F0A8         	movff	?___ftmul+1,_fround$1433+1
 18699  003E40  C08D  F0A7         	movff	?___ftmul,_fround$1433
 18700                           
 18701                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18702  003E44  C0A7  F08D         	movff	_fround$1433,?___ftmul
 18703  003E48  C0A8  F08E         	movff	_fround$1433+1,?___ftmul+1
 18704  003E4C  C0A9  F08F         	movff	_fround$1433+2,?___ftmul+2
 18705  003E50  0E00               	movlw	0
 18706  003E52  0100               	movlb	0	; () banked
 18707  003E54  0100               	movlb	0	; () banked
 18708  003E56  6F90               	movwf	(?___ftmul+3)& (0+255),b
 18709  003E58  0E00               	movlw	0
 18710  003E5A  0100               	movlb	0	; () banked
 18711  003E5C  0100               	movlb	0	; () banked
 18712  003E5E  6F91               	movwf	(?___ftmul+4)& (0+255),b
 18713  003E60  0E3F               	movlw	63
 18714  003E62  0100               	movlb	0	; () banked
 18715  003E64  0100               	movlb	0	; () banked
 18716  003E66  6F92               	movwf	(?___ftmul+5)& (0+255),b
 18717  003E68  EC79  F026         	call	___ftmul	;wreg free
 18718  003E6C  D0BE               	goto	L28
 18719  003E6E                     i2l7625:
 18720                           
 18721                           ;doprnt.c: 415: else if(prec > 10)
 18722  003E6E  0E0A               	movlw	10
 18723  003E70  0100               	movlb	0	; () banked
 18724  003E72  0100               	movlb	0	; () banked
 18725  003E74  659E               	cpfsgt	fround@prec& (0+255),b
 18726  003E76  D092               	goto	i2l7633
 18727                           
 18728                           ; BSR set to: 0
 18729                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18730  003E78  0E00               	movlw	0
 18731  003E7A  0100               	movlb	0	; () banked
 18732  003E7C  0100               	movlb	0	; () banked
 18733  003E7E  6F79               	movwf	(?___wmul+3)& (0+255),b
 18734  003E80  0E03               	movlw	3
 18735  003E82  0100               	movlb	0	; () banked
 18736  003E84  6F78               	movwf	(?___wmul+2)& (0+255),b
 18737  003E86  0E00               	movlw	0
 18738  003E88  0100               	movlb	0	; () banked
 18739  003E8A  0100               	movlb	0	; () banked
 18740  003E8C  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 18741  003E8E  0E0A               	movlw	10
 18742  003E90  0100               	movlb	0	; () banked
 18743  003E92  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 18744  003E94  0100               	movlb	0	; () banked
 18745  003E96  0100               	movlb	0	; () banked
 18746  003E98  C09E  F060         	movff	fround@prec,?i2___awmod
 18747  003E9C  0100               	movlb	0	; () banked
 18748  003E9E  0100               	movlb	0	; () banked
 18749  003EA0  6B61               	clrf	(?i2___awmod+1)& (0+255),b
 18750  003EA2  EC21  F02F         	call	i2___awmod	;wreg free
 18751  003EA6  0100               	movlb	0	; () banked
 18752  003EA8  C060  F076         	movff	?i2___awmod,?___wmul
 18753  003EAC  0100               	movlb	0	; () banked
 18754  003EAE  C061  F077         	movff	?i2___awmod+1,?___wmul+1
 18755  003EB2  EC31  F035         	call	___wmul	;wreg free
 18756  003EB6  0E29               	movlw	low __npowers_
 18757  003EB8  0100               	movlb	0	; () banked
 18758  003EBA  0100               	movlb	0	; () banked
 18759  003EBC  2576               	addwf	?___wmul& (0+255),w,b
 18760  003EBE  6EF6               	movwf	tblptrl,c
 18761  003EC0  0E7F               	movlw	high __npowers_
 18762  003EC2  0100               	movlb	0	; () banked
 18763  003EC4  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18764  003EC6  6EF7               	movwf	tblptrh,c
 18765  003EC8  0009               	tblrd		*+
 18766  003ECA  CFF5 F0A1          	movff	tablat,??_fround
 18767  003ECE  0009               	tblrd		*+
 18768  003ED0  CFF5 F0A2          	movff	tablat,??_fround+1
 18769  003ED4  0009               	tblrd		*+
 18770  003ED6  CFF5 F0A3          	movff	tablat,??_fround+2
 18771  003EDA  C0A3  F092         	movff	??_fround+2,?___ftmul+5
 18772  003EDE  C0A2  F091         	movff	??_fround+1,?___ftmul+4
 18773  003EE2  C0A1  F090         	movff	??_fround,?___ftmul+3
 18774  003EE6  0E00               	movlw	0
 18775  003EE8  0100               	movlb	0	; () banked
 18776  003EEA  0100               	movlb	0	; () banked
 18777  003EEC  6F79               	movwf	(?___wmul+3)& (0+255),b
 18778  003EEE  0E03               	movlw	3
 18779  003EF0  0100               	movlb	0	; () banked
 18780  003EF2  6F78               	movwf	(?___wmul+2)& (0+255),b
 18781  003EF4  0E00               	movlw	0
 18782  003EF6  0100               	movlb	0	; () banked
 18783  003EF8  0100               	movlb	0	; () banked
 18784  003EFA  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 18785  003EFC  0E0A               	movlw	10
 18786  003EFE  0100               	movlb	0	; () banked
 18787  003F00  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 18788  003F02  0100               	movlb	0	; () banked
 18789  003F04  0100               	movlb	0	; () banked
 18790  003F06  C09E  F069         	movff	fround@prec,?___awdiv
 18791  003F0A  0100               	movlb	0	; () banked
 18792  003F0C  0100               	movlb	0	; () banked
 18793  003F0E  6B6A               	clrf	(?___awdiv+1)& (0+255),b
 18794  003F10  EC1A  F02C         	call	___awdiv	;wreg free
 18795  003F14  0E09               	movlw	9
 18796  003F16  0100               	movlb	0	; () banked
 18797  003F18  0100               	movlb	0	; () banked
 18798  003F1A  2569               	addwf	?___awdiv& (0+255),w,b
 18799  003F1C  0100               	movlb	0	; () banked
 18800  003F1E  0100               	movlb	0	; () banked
 18801  003F20  6F76               	movwf	?___wmul& (0+255),b
 18802  003F22  0E00               	movlw	0
 18803  003F24  0100               	movlb	0	; () banked
 18804  003F26  0100               	movlb	0	; () banked
 18805  003F28  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 18806  003F2A  0100               	movlb	0	; () banked
 18807  003F2C  6F77               	movwf	(?___wmul+1)& (0+255),b
 18808  003F2E  EC31  F035         	call	___wmul	;wreg free
 18809  003F32  0E29               	movlw	low __npowers_
 18810  003F34  0100               	movlb	0	; () banked
 18811  003F36  0100               	movlb	0	; () banked
 18812  003F38  2576               	addwf	?___wmul& (0+255),w,b
 18813  003F3A  6EF6               	movwf	tblptrl,c
 18814  003F3C  0E7F               	movlw	high __npowers_
 18815  003F3E  0100               	movlb	0	; () banked
 18816  003F40  2177               	addwfc	(?___wmul+1)& (0+255),w,b
 18817  003F42  6EF7               	movwf	tblptrh,c
 18818  003F44  0009               	tblrd		*+
 18819  003F46  CFF5 F0A4          	movff	tablat,??_fround+3
 18820  003F4A  0009               	tblrd		*+
 18821  003F4C  CFF5 F0A5          	movff	tablat,??_fround+4
 18822  003F50  0009               	tblrd		*+
 18823  003F52  CFF5 F0A6          	movff	tablat,??_fround+5
 18824  003F56  C0A6  F08F         	movff	??_fround+5,?___ftmul+2
 18825  003F5A  C0A5  F08E         	movff	??_fround+4,?___ftmul+1
 18826  003F5E  C0A4  F08D         	movff	??_fround+3,?___ftmul
 18827  003F62  EC79  F026         	call	___ftmul	;wreg free
 18828  003F66  C08F  F0AC         	movff	?___ftmul+2,_fround$1432+2
 18829  003F6A  C08E  F0AB         	movff	?___ftmul+1,_fround$1432+1
 18830  003F6E  C08D  F0AA         	movff	?___ftmul,_fround$1432
 18831                           
 18832                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18833  003F72  C0AA  F08D         	movff	_fround$1432,?___ftmul
 18834  003F76  C0AB  F08E         	movff	_fround$1432+1,?___ftmul+1
 18835  003F7A  C0AC  F08F         	movff	_fround$1432+2,?___ftmul+2
 18836  003F7E  0E00               	movlw	0
 18837  003F80  0100               	movlb	0	; () banked
 18838  003F82  0100               	movlb	0	; () banked
 18839  003F84  6F90               	movwf	(?___ftmul+3)& (0+255),b
 18840  003F86  0E00               	movlw	0
 18841  003F88  0100               	movlb	0	; () banked
 18842  003F8A  0100               	movlb	0	; () banked
 18843  003F8C  6F91               	movwf	(?___ftmul+4)& (0+255),b
 18844  003F8E  0E3F               	movlw	63
 18845  003F90  0100               	movlb	0	; () banked
 18846  003F92  0100               	movlb	0	; () banked
 18847  003F94  6F92               	movwf	(?___ftmul+5)& (0+255),b
 18848  003F96  EC79  F026         	call	___ftmul	;wreg free
 18849  003F9A  D027               	goto	L28
 18850  003F9C                     i2l7633:
 18851                           
 18852                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 18853  003F9C  0100               	movlb	0	; () banked
 18854  003F9E  0100               	movlb	0	; () banked
 18855  003FA0  519E               	movf	fround@prec& (0+255),w,b
 18856  003FA2  0D03               	mullw	3
 18857  003FA4  0E29               	movlw	low __npowers_
 18858  003FA6  24F3               	addwf	prodl,w,c
 18859  003FA8  6EF6               	movwf	tblptrl,c
 18860  003FAA  0E7F               	movlw	high __npowers_
 18861  003FAC  20F4               	addwfc	prodh,w,c
 18862  003FAE  6EF7               	movwf	tblptrh,c
 18863  003FB0  0009               	tblrd		*+
 18864  003FB2  CFF5 F0A1          	movff	tablat,??_fround
 18865  003FB6  0009               	tblrd		*+
 18866  003FB8  CFF5 F0A2          	movff	tablat,??_fround+1
 18867  003FBC  0009               	tblrd		*+
 18868  003FBE  CFF5 F0A3          	movff	tablat,??_fround+2
 18869  003FC2  C0A3  F08F         	movff	??_fround+2,?___ftmul+2
 18870  003FC6  C0A2  F08E         	movff	??_fround+1,?___ftmul+1
 18871  003FCA  C0A1  F08D         	movff	??_fround,?___ftmul
 18872  003FCE  0E00               	movlw	0
 18873  003FD0  0100               	movlb	0	; () banked
 18874  003FD2  0100               	movlb	0	; () banked
 18875  003FD4  6F90               	movwf	(?___ftmul+3)& (0+255),b
 18876  003FD6  0E00               	movlw	0
 18877  003FD8  0100               	movlb	0	; () banked
 18878  003FDA  0100               	movlb	0	; () banked
 18879  003FDC  6F91               	movwf	(?___ftmul+4)& (0+255),b
 18880  003FDE  0E3F               	movlw	63
 18881  003FE0  0100               	movlb	0	; () banked
 18882  003FE2  0100               	movlb	0	; () banked
 18883  003FE4  6F92               	movwf	(?___ftmul+5)& (0+255),b
 18884  003FE6  EC79  F026         	call	___ftmul	;wreg free
 18885  003FEA                     L28:
 18886  003FEA  C08F  F0A0         	movff	?___ftmul+2,?_fround+2
 18887  003FEE  C08E  F09F         	movff	?___ftmul+1,?_fround+1
 18888  003FF2  C08D  F09E         	movff	?___ftmul,?_fround
 18889  003FF6  0012               	return	
 18890  003FF8                     __end_of_fround:
 18891                           	opt stack 0
 18892                           tosu	equ	0xFFF
 18893                           tosh	equ	0xFFE
 18894                           tosl	equ	0xFFD
 18895                           pclatu	equ	0xFFB
 18896                           pclath	equ	0xFFA
 18897                           tblptru	equ	0xFF8
 18898                           tblptrh	equ	0xFF7
 18899                           tblptrl	equ	0xFF6
 18900                           tablat	equ	0xFF5
 18901                           prodh	equ	0xFF4
 18902                           prodl	equ	0xFF3
 18903                           intcon	equ	0xFF2
 18904                           intcon2	equ	0xFF1
 18905                           indf0	equ	0xFEF
 18906                           postinc0	equ	0xFEE
 18907                           fsr0h	equ	0xFEA
 18908                           fsr0l	equ	0xFE9
 18909                           wreg	equ	0xFE8
 18910                           postinc1	equ	0xFE6
 18911                           postdec1	equ	0xFE5
 18912                           fsr1h	equ	0xFE2
 18913                           fsr1l	equ	0xFE1
 18914                           bsr	equ	0xFE0
 18915                           indf2	equ	0xFDF
 18916                           postinc2	equ	0xFDE
 18917                           postdec2	equ	0xFDD
 18918                           plusw2	equ	0xFDB
 18919                           fsr2h	equ	0xFDA
 18920                           fsr2l	equ	0xFD9
 18921                           status	equ	0xFD8
 18922                           
 18923 ;; *************** function i2___awmod *****************
 18924 ;; Defined at:
 18925 ;;		line 10 in file "/usr/opt/microchip/xc8/v1.20/sources/common/awmod.c"
 18926 ;; Parameters:    Size  Location     Type
 18927 ;;  __awmod         2    0[BANK0 ] int 
 18928 ;;  __awmod         2    2[BANK0 ] int 
 18929 ;; Auto vars:     Size  Location     Type
 18930 ;;  __awmod         1    8[BANK0 ] unsigned char 
 18931 ;;  __awmod         1    7[BANK0 ] unsigned char 
 18932 ;; Return value:  Size  Location     Type
 18933 ;;                  2    0[BANK0 ] int 
 18934 ;; Registers used:
 18935 ;;		wreg, status,2, status,0
 18936 ;; Tracked objects:
 18937 ;;		On entry : 0/0
 18938 ;;		On exit  : 0/0
 18939 ;;		Unchanged: 0/0
 18940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18941 ;;      Params:         0       4       0       0       0       0       0       0       0
 18942 ;;      Locals:         0       4       0       0       0       0       0       0       0
 18943 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18944 ;;      Totals:         0       9       0       0       0       0       0       0       0
 18945 ;;Total ram usage:        9 bytes
 18946 ;; Hardware stack levels used:    1
 18947 ;; This function calls:
 18948 ;;		Nothing
 18949 ;; This function is called by:
 18950 ;;		_dayOfWeek
 18951 ;;		_fround
 18952 ;;		_scale
 18953 ;;		_sprintf
 18954 ;; This function uses a non-reentrant model
 18955 ;;
 18956                           
 18957                           	psect	text55
 18958  005E42                     __ptext55:
 18959                           	opt stack 0
 18960  005E42                     i2___awmod:
 18961                           	opt stack 17
 18962                           
 18963                           ;incstack = 0
 18964                           ;incstack = 0
 18965  005E42  0100               	movlb	0	; () banked
 18966  005E44  6F64               	movwf	??i2___awmod& (0+255),b
 18967  005E46  0E00               	movlw	0
 18968  005E48  0100               	movlb	0	; () banked
 18969  005E4A  0100               	movlb	0	; () banked
 18970  005E4C  6F68               	movwf	i2___awmod@sign& (0+255),b
 18971  005E4E  0100               	movlb	0	; () banked
 18972  005E50  5164               	movf	??i2___awmod& (0+255),w,b
 18973                           
 18974                           ; BSR set to: 0
 18975  005E52  0100               	movlb	0	; () banked
 18976  005E54  0100               	movlb	0	; () banked
 18977  005E56  AF61               	btfss	(i2___awmod@dividend+1)& (0+255),7,b
 18978  005E58  D00F               	goto	i2l8277
 18979                           
 18980                           ; BSR set to: 0
 18981  005E5A  0100               	movlb	0	; () banked
 18982  005E5C  0100               	movlb	0	; () banked
 18983  005E5E  6D60               	negf	i2___awmod@dividend& (0+255),b
 18984  005E60  0100               	movlb	0	; () banked
 18985  005E62  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
 18986  005E64  B0D8               	btfsc	status,0,c
 18987  005E66  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
 18988                           
 18989                           ; BSR set to: 0
 18990  005E68  0100               	movlb	0	; () banked
 18991  005E6A  6F64               	movwf	??i2___awmod& (0+255),b
 18992  005E6C  0E01               	movlw	1
 18993  005E6E  0100               	movlb	0	; () banked
 18994  005E70  0100               	movlb	0	; () banked
 18995  005E72  6F68               	movwf	i2___awmod@sign& (0+255),b
 18996  005E74  0100               	movlb	0	; () banked
 18997  005E76  5164               	movf	??i2___awmod& (0+255),w,b
 18998  005E78                     i2l8277:
 18999                           
 19000                           ; BSR set to: 0
 19001  005E78  0100               	movlb	0	; () banked
 19002  005E7A  0100               	movlb	0	; () banked
 19003  005E7C  AF63               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
 19004  005E7E  D007               	goto	i2l8281
 19005                           
 19006                           ; BSR set to: 0
 19007  005E80  0100               	movlb	0	; () banked
 19008  005E82  0100               	movlb	0	; () banked
 19009  005E84  6D62               	negf	i2___awmod@divisor& (0+255),b
 19010  005E86  0100               	movlb	0	; () banked
 19011  005E88  1F63               	comf	(i2___awmod@divisor+1)& (0+255),f,b
 19012  005E8A  B0D8               	btfsc	status,0,c
 19013  005E8C  2B63               	incf	(i2___awmod@divisor+1)& (0+255),f,b
 19014  005E8E                     i2l8281:
 19015                           
 19016                           ; BSR set to: 0
 19017  005E8E  0100               	movlb	0	; () banked
 19018  005E90  0100               	movlb	0	; () banked
 19019  005E92  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 19020  005E94  1162               	iorwf	i2___awmod@divisor& (0+255),w,b
 19021  005E96  B4D8               	btfsc	status,2,c
 19022  005E98  D03A               	goto	i2l8297
 19023                           
 19024                           ; BSR set to: 0
 19025  005E9A  0100               	movlb	0	; () banked
 19026  005E9C  6F64               	movwf	??i2___awmod& (0+255),b
 19027  005E9E  0E01               	movlw	1
 19028  005EA0  0100               	movlb	0	; () banked
 19029  005EA2  0100               	movlb	0	; () banked
 19030  005EA4  6F67               	movwf	i2___awmod@counter& (0+255),b
 19031  005EA6  0100               	movlb	0	; () banked
 19032  005EA8  5164               	movf	??i2___awmod& (0+255),w,b
 19033  005EAA  D009               	goto	i2l8287
 19034  005EAC                     i2l8285:
 19035                           
 19036                           ; BSR set to: 0
 19037  005EAC  0100               	movlb	0	; () banked
 19038  005EAE  0100               	movlb	0	; () banked
 19039  005EB0  0100               	movlb	0	; () banked
 19040  005EB2  90D8               	bcf	status,0,c
 19041  005EB4  3762               	rlcf	i2___awmod@divisor& (0+255),f,b
 19042  005EB6  3763               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
 19043  005EB8  0100               	movlb	0	; () banked
 19044  005EBA  0100               	movlb	0	; () banked
 19045  005EBC  2B67               	incf	i2___awmod@counter& (0+255),f,b
 19046  005EBE                     i2l8287:
 19047                           
 19048                           ; BSR set to: 0
 19049  005EBE  0100               	movlb	0	; () banked
 19050  005EC0  0100               	movlb	0	; () banked
 19051  005EC2  AF63               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
 19052  005EC4  D7F3               	goto	i2l8285
 19053  005EC6                     i2l8289:
 19054                           
 19055                           ; BSR set to: 0
 19056  005EC6  0100               	movlb	0	; () banked
 19057  005EC8  0100               	movlb	0	; () banked
 19058  005ECA  5162               	movf	i2___awmod@divisor& (0+255),w,b
 19059  005ECC  0100               	movlb	0	; () banked
 19060  005ECE  0100               	movlb	0	; () banked
 19061  005ED0  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
 19062  005ED2  0100               	movlb	0	; () banked
 19063  005ED4  0100               	movlb	0	; () banked
 19064  005ED6  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 19065  005ED8  0100               	movlb	0	; () banked
 19066  005EDA  0100               	movlb	0	; () banked
 19067  005EDC  5961               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
 19068  005EDE  A0D8               	btfss	status,0,c
 19069  005EE0  D00C               	goto	i2l8293
 19070                           
 19071                           ; BSR set to: 0
 19072  005EE2  0100               	movlb	0	; () banked
 19073  005EE4  0100               	movlb	0	; () banked
 19074  005EE6  5162               	movf	i2___awmod@divisor& (0+255),w,b
 19075  005EE8  0100               	movlb	0	; () banked
 19076  005EEA  0100               	movlb	0	; () banked
 19077  005EEC  5F60               	subwf	i2___awmod@dividend& (0+255),f,b
 19078  005EEE  0100               	movlb	0	; () banked
 19079  005EF0  0100               	movlb	0	; () banked
 19080  005EF2  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 19081  005EF4  0100               	movlb	0	; () banked
 19082  005EF6  0100               	movlb	0	; () banked
 19083  005EF8  5B61               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
 19084  005EFA                     i2l8293:
 19085                           
 19086                           ; BSR set to: 0
 19087  005EFA  0100               	movlb	0	; () banked
 19088  005EFC  0100               	movlb	0	; () banked
 19089  005EFE  0100               	movlb	0	; () banked
 19090  005F00  90D8               	bcf	status,0,c
 19091  005F02  3363               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
 19092  005F04  3362               	rrcf	i2___awmod@divisor& (0+255),f,b
 19093                           
 19094                           ; BSR set to: 0
 19095  005F06  0100               	movlb	0	; () banked
 19096  005F08  0100               	movlb	0	; () banked
 19097  005F0A  2F67               	decfsz	i2___awmod@counter& (0+255),f,b
 19098  005F0C  D7DC               	goto	i2l8289
 19099  005F0E                     i2l8297:
 19100                           
 19101                           ; BSR set to: 0
 19102  005F0E  0100               	movlb	0	; () banked
 19103  005F10  0100               	movlb	0	; () banked
 19104  005F12  5168               	movf	i2___awmod@sign& (0+255),w,b
 19105  005F14  B4D8               	btfsc	status,2,c
 19106  005F16  D007               	goto	i2l8301
 19107                           
 19108                           ; BSR set to: 0
 19109  005F18  0100               	movlb	0	; () banked
 19110  005F1A  0100               	movlb	0	; () banked
 19111  005F1C  6D60               	negf	i2___awmod@dividend& (0+255),b
 19112  005F1E  0100               	movlb	0	; () banked
 19113  005F20  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
 19114  005F22  B0D8               	btfsc	status,0,c
 19115  005F24  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
 19116  005F26                     i2l8301:
 19117                           
 19118                           ; BSR set to: 0
 19119  005F26  C060  F060         	movff	i2___awmod@dividend,?i2___awmod
 19120  005F2A  C061  F061         	movff	i2___awmod@dividend+1,?i2___awmod+1
 19121                           
 19122                           ; BSR set to: 0
 19123                           
 19124                           ; BSR set to: 0
 19125  005F2E  0012               	return	
 19126  005F30                     __end_ofi2___awmod:
 19127                           	opt stack 0
 19128                           tosu	equ	0xFFF
 19129                           tosh	equ	0xFFE
 19130                           tosl	equ	0xFFD
 19131                           pclatu	equ	0xFFB
 19132                           pclath	equ	0xFFA
 19133                           tblptru	equ	0xFF8
 19134                           tblptrh	equ	0xFF7
 19135                           tblptrl	equ	0xFF6
 19136                           tablat	equ	0xFF5
 19137                           prodh	equ	0xFF4
 19138                           prodl	equ	0xFF3
 19139                           intcon	equ	0xFF2
 19140                           intcon2	equ	0xFF1
 19141                           indf0	equ	0xFEF
 19142                           postinc0	equ	0xFEE
 19143                           fsr0h	equ	0xFEA
 19144                           fsr0l	equ	0xFE9
 19145                           wreg	equ	0xFE8
 19146                           postinc1	equ	0xFE6
 19147                           postdec1	equ	0xFE5
 19148                           fsr1h	equ	0xFE2
 19149                           fsr1l	equ	0xFE1
 19150                           bsr	equ	0xFE0
 19151                           indf2	equ	0xFDF
 19152                           postinc2	equ	0xFDE
 19153                           postdec2	equ	0xFDD
 19154                           plusw2	equ	0xFDB
 19155                           fsr2h	equ	0xFDA
 19156                           fsr2l	equ	0xFD9
 19157                           status	equ	0xFD8
 19158                           
 19159 ;; *************** function ___awdiv *****************
 19160 ;; Defined at:
 19161 ;;		line 10 in file "/usr/opt/microchip/xc8/v1.20/sources/common/awdiv.c"
 19162 ;; Parameters:    Size  Location     Type
 19163 ;;  dividend        2    9[BANK0 ] int 
 19164 ;;  divisor         2   11[BANK0 ] int 
 19165 ;; Auto vars:     Size  Location     Type
 19166 ;;  quotient        2   20[BANK0 ] int 
 19167 ;;  sign            1   19[BANK0 ] unsigned char 
 19168 ;;  counter         1   18[BANK0 ] unsigned char 
 19169 ;; Return value:  Size  Location     Type
 19170 ;;                  2    9[BANK0 ] int 
 19171 ;; Registers used:
 19172 ;;		wreg, status,2, status,0
 19173 ;; Tracked objects:
 19174 ;;		On entry : 0/0
 19175 ;;		On exit  : 0/0
 19176 ;;		Unchanged: 0/0
 19177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19178 ;;      Params:         0       4       0       0       0       0       0       0       0
 19179 ;;      Locals:         0       8       0       0       0       0       0       0       0
 19180 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19181 ;;      Totals:         0      13       0       0       0       0       0       0       0
 19182 ;;Total ram usage:       13 bytes
 19183 ;; Hardware stack levels used:    1
 19184 ;; This function calls:
 19185 ;;		Nothing
 19186 ;; This function is called by:
 19187 ;;		_dayOfWeek
 19188 ;;		_fround
 19189 ;;		_scale
 19190 ;;		_sprintf
 19191 ;; This function uses a non-reentrant model
 19192 ;;
 19193                           
 19194                           	psect	text56
 19195  005834                     __ptext56:
 19196                           	opt stack 0
 19197  005834                     ___awdiv:
 19198                           	opt stack 17
 19199                           
 19200                           ; BSR set to: 0
 19201                           ;incstack = 0
 19202                           ;incstack = 0
 19203  005834  0100               	movlb	0	; () banked
 19204  005836  6F6D               	movwf	??___awdiv& (0+255),b
 19205  005838  0E00               	movlw	0
 19206  00583A  0100               	movlb	0	; () banked
 19207  00583C  0100               	movlb	0	; () banked
 19208  00583E  6F73               	movwf	___awdiv@sign& (0+255),b
 19209  005840  0100               	movlb	0	; () banked
 19210  005842  516D               	movf	??___awdiv& (0+255),w,b
 19211                           
 19212                           ; BSR set to: 0
 19213  005844  0100               	movlb	0	; () banked
 19214  005846  0100               	movlb	0	; () banked
 19215  005848  AF6C               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19216  00584A  D00F               	goto	i2l8027
 19217                           
 19218                           ; BSR set to: 0
 19219  00584C  0100               	movlb	0	; () banked
 19220  00584E  0100               	movlb	0	; () banked
 19221  005850  6D6B               	negf	___awdiv@divisor& (0+255),b
 19222  005852  0100               	movlb	0	; () banked
 19223  005854  1F6C               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19224  005856  B0D8               	btfsc	status,0,c
 19225  005858  2B6C               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19226                           
 19227                           ; BSR set to: 0
 19228  00585A  0100               	movlb	0	; () banked
 19229  00585C  6F6D               	movwf	??___awdiv& (0+255),b
 19230  00585E  0E01               	movlw	1
 19231  005860  0100               	movlb	0	; () banked
 19232  005862  0100               	movlb	0	; () banked
 19233  005864  6F73               	movwf	___awdiv@sign& (0+255),b
 19234  005866  0100               	movlb	0	; () banked
 19235  005868  516D               	movf	??___awdiv& (0+255),w,b
 19236  00586A                     i2l8027:
 19237                           
 19238                           ; BSR set to: 0
 19239  00586A  0100               	movlb	0	; () banked
 19240  00586C  0100               	movlb	0	; () banked
 19241  00586E  AF6A               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19242  005870  D00B               	goto	i2l8033
 19243                           
 19244                           ; BSR set to: 0
 19245  005872  0100               	movlb	0	; () banked
 19246  005874  0100               	movlb	0	; () banked
 19247  005876  6D69               	negf	___awdiv@dividend& (0+255),b
 19248  005878  0100               	movlb	0	; () banked
 19249  00587A  1F6A               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19250  00587C  B0D8               	btfsc	status,0,c
 19251  00587E  2B6A               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19252                           
 19253                           ; BSR set to: 0
 19254  005880  0E01               	movlw	1
 19255  005882  0100               	movlb	0	; () banked
 19256  005884  0100               	movlb	0	; () banked
 19257  005886  1B73               	xorwf	___awdiv@sign& (0+255),f,b
 19258  005888                     i2l8033:
 19259                           
 19260                           ; BSR set to: 0
 19261  005888  0E00               	movlw	0
 19262  00588A  0100               	movlb	0	; () banked
 19263  00588C  0100               	movlb	0	; () banked
 19264  00588E  6F75               	movwf	(___awdiv@quotient+1)& (0+255),b
 19265  005890  0E00               	movlw	0
 19266  005892  0100               	movlb	0	; () banked
 19267  005894  6F74               	movwf	___awdiv@quotient& (0+255),b
 19268                           
 19269                           ; BSR set to: 0
 19270  005896  0100               	movlb	0	; () banked
 19271  005898  0100               	movlb	0	; () banked
 19272  00589A  516C               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19273  00589C  116B               	iorwf	___awdiv@divisor& (0+255),w,b
 19274  00589E  B4D8               	btfsc	status,2,c
 19275  0058A0  D043               	goto	i2l8055
 19276                           
 19277                           ; BSR set to: 0
 19278  0058A2  0100               	movlb	0	; () banked
 19279  0058A4  6F6D               	movwf	??___awdiv& (0+255),b
 19280  0058A6  0E01               	movlw	1
 19281  0058A8  0100               	movlb	0	; () banked
 19282  0058AA  0100               	movlb	0	; () banked
 19283  0058AC  6F72               	movwf	___awdiv@counter& (0+255),b
 19284  0058AE  0100               	movlb	0	; () banked
 19285  0058B0  516D               	movf	??___awdiv& (0+255),w,b
 19286  0058B2  D009               	goto	i2l8041
 19287  0058B4                     i2l8039:
 19288                           
 19289                           ; BSR set to: 0
 19290  0058B4  0100               	movlb	0	; () banked
 19291  0058B6  0100               	movlb	0	; () banked
 19292  0058B8  0100               	movlb	0	; () banked
 19293  0058BA  90D8               	bcf	status,0,c
 19294  0058BC  376B               	rlcf	___awdiv@divisor& (0+255),f,b
 19295  0058BE  376C               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19296  0058C0  0100               	movlb	0	; () banked
 19297  0058C2  0100               	movlb	0	; () banked
 19298  0058C4  2B72               	incf	___awdiv@counter& (0+255),f,b
 19299  0058C6                     i2l8041:
 19300                           
 19301                           ; BSR set to: 0
 19302  0058C6  0100               	movlb	0	; () banked
 19303  0058C8  0100               	movlb	0	; () banked
 19304  0058CA  AF6C               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19305  0058CC  D7F3               	goto	i2l8039
 19306  0058CE                     i2l8043:
 19307                           
 19308                           ; BSR set to: 0
 19309  0058CE  0100               	movlb	0	; () banked
 19310  0058D0  0100               	movlb	0	; () banked
 19311  0058D2  0100               	movlb	0	; () banked
 19312  0058D4  90D8               	bcf	status,0,c
 19313  0058D6  3774               	rlcf	___awdiv@quotient& (0+255),f,b
 19314  0058D8  3775               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19315                           
 19316                           ; BSR set to: 0
 19317  0058DA  0100               	movlb	0	; () banked
 19318  0058DC  0100               	movlb	0	; () banked
 19319  0058DE  516B               	movf	___awdiv@divisor& (0+255),w,b
 19320  0058E0  0100               	movlb	0	; () banked
 19321  0058E2  0100               	movlb	0	; () banked
 19322  0058E4  5D69               	subwf	___awdiv@dividend& (0+255),w,b
 19323  0058E6  0100               	movlb	0	; () banked
 19324  0058E8  0100               	movlb	0	; () banked
 19325  0058EA  516C               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19326  0058EC  0100               	movlb	0	; () banked
 19327  0058EE  0100               	movlb	0	; () banked
 19328  0058F0  596A               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19329  0058F2  A0D8               	btfss	status,0,c
 19330  0058F4  D00F               	goto	i2l8051
 19331                           
 19332                           ; BSR set to: 0
 19333  0058F6  0100               	movlb	0	; () banked
 19334  0058F8  0100               	movlb	0	; () banked
 19335  0058FA  516B               	movf	___awdiv@divisor& (0+255),w,b
 19336  0058FC  0100               	movlb	0	; () banked
 19337  0058FE  0100               	movlb	0	; () banked
 19338  005900  5F69               	subwf	___awdiv@dividend& (0+255),f,b
 19339  005902  0100               	movlb	0	; () banked
 19340  005904  0100               	movlb	0	; () banked
 19341  005906  516C               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19342  005908  0100               	movlb	0	; () banked
 19343  00590A  0100               	movlb	0	; () banked
 19344  00590C  5B6A               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19345                           
 19346                           ; BSR set to: 0
 19347  00590E  0100               	movlb	0	; () banked
 19348  005910  0100               	movlb	0	; () banked
 19349  005912  8174               	bsf	___awdiv@quotient& (0+255),0,b
 19350  005914                     i2l8051:
 19351                           
 19352                           ; BSR set to: 0
 19353  005914  0100               	movlb	0	; () banked
 19354  005916  0100               	movlb	0	; () banked
 19355  005918  0100               	movlb	0	; () banked
 19356  00591A  90D8               	bcf	status,0,c
 19357  00591C  336C               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19358  00591E  336B               	rrcf	___awdiv@divisor& (0+255),f,b
 19359                           
 19360                           ; BSR set to: 0
 19361  005920  0100               	movlb	0	; () banked
 19362  005922  0100               	movlb	0	; () banked
 19363  005924  2F72               	decfsz	___awdiv@counter& (0+255),f,b
 19364  005926  D7D3               	goto	i2l8043
 19365  005928                     i2l8055:
 19366                           
 19367                           ; BSR set to: 0
 19368  005928  0100               	movlb	0	; () banked
 19369  00592A  0100               	movlb	0	; () banked
 19370  00592C  5173               	movf	___awdiv@sign& (0+255),w,b
 19371  00592E  B4D8               	btfsc	status,2,c
 19372  005930  D007               	goto	i2l8059
 19373                           
 19374                           ; BSR set to: 0
 19375  005932  0100               	movlb	0	; () banked
 19376  005934  0100               	movlb	0	; () banked
 19377  005936  6D74               	negf	___awdiv@quotient& (0+255),b
 19378  005938  0100               	movlb	0	; () banked
 19379  00593A  1F75               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19380  00593C  B0D8               	btfsc	status,0,c
 19381  00593E  2B75               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19382  005940                     i2l8059:
 19383                           
 19384                           ; BSR set to: 0
 19385  005940  C074  F069         	movff	___awdiv@quotient,?___awdiv
 19386  005944  C075  F06A         	movff	___awdiv@quotient+1,?___awdiv+1
 19387                           
 19388                           ; BSR set to: 0
 19389                           
 19390                           ; BSR set to: 0
 19391  005948  0012               	return	
 19392  00594A                     __end_of___awdiv:
 19393                           	opt stack 0
 19394                           tosu	equ	0xFFF
 19395                           tosh	equ	0xFFE
 19396                           tosl	equ	0xFFD
 19397                           pclatu	equ	0xFFB
 19398                           pclath	equ	0xFFA
 19399                           tblptru	equ	0xFF8
 19400                           tblptrh	equ	0xFF7
 19401                           tblptrl	equ	0xFF6
 19402                           tablat	equ	0xFF5
 19403                           prodh	equ	0xFF4
 19404                           prodl	equ	0xFF3
 19405                           intcon	equ	0xFF2
 19406                           intcon2	equ	0xFF1
 19407                           indf0	equ	0xFEF
 19408                           postinc0	equ	0xFEE
 19409                           fsr0h	equ	0xFEA
 19410                           fsr0l	equ	0xFE9
 19411                           wreg	equ	0xFE8
 19412                           postinc1	equ	0xFE6
 19413                           postdec1	equ	0xFE5
 19414                           fsr1h	equ	0xFE2
 19415                           fsr1l	equ	0xFE1
 19416                           bsr	equ	0xFE0
 19417                           indf2	equ	0xFDF
 19418                           postinc2	equ	0xFDE
 19419                           postdec2	equ	0xFDD
 19420                           plusw2	equ	0xFDB
 19421                           fsr2h	equ	0xFDA
 19422                           fsr2l	equ	0xFD9
 19423                           status	equ	0xFD8
 19424                           
 19425 ;; *************** function ___ftmul *****************
 19426 ;; Defined at:
 19427 ;;		line 52 in file "/usr/opt/microchip/xc8/v1.20/sources/common/ftmul.c"
 19428 ;; Parameters:    Size  Location     Type
 19429 ;;  f1              3   45[BANK0 ] float 
 19430 ;;  f2              3   48[BANK0 ] float 
 19431 ;; Auto vars:     Size  Location     Type
 19432 ;;  f3_as_produc    3   57[BANK0 ] unsigned um
 19433 ;;  sign            1   61[BANK0 ] unsigned char 
 19434 ;;  cntr            1   60[BANK0 ] unsigned char 
 19435 ;;  exp             1   56[BANK0 ] unsigned char 
 19436 ;; Return value:  Size  Location     Type
 19437 ;;                  3   45[BANK0 ] float 
 19438 ;; Registers used:
 19439 ;;		wreg, status,2, status,0, cstack
 19440 ;; Tracked objects:
 19441 ;;		On entry : 0/0
 19442 ;;		On exit  : 0/0
 19443 ;;		Unchanged: 0/0
 19444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19445 ;;      Params:         0       6       0       0       0       0       0       0       0
 19446 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19447 ;;      Temps:          0       5       0       0       0       0       0       0       0
 19448 ;;      Totals:         0      17       0       0       0       0       0       0       0
 19449 ;;Total ram usage:       17 bytes
 19450 ;; Hardware stack levels used:    1
 19451 ;; Hardware stack levels required when called:    1
 19452 ;; This function calls:
 19453 ;;		___ftpack
 19454 ;; This function is called by:
 19455 ;;		_getTemp
 19456 ;;		_fround
 19457 ;;		_scale
 19458 ;;		_sprintf
 19459 ;;		___asftmul
 19460 ;; This function uses a non-reentrant model
 19461 ;;
 19462                           
 19463                           	psect	text57
 19464  004CF2                     __ptext57:
 19465                           	opt stack 0
 19466  004CF2                     ___ftmul:
 19467                           	opt stack 16
 19468                           
 19469                           ; BSR set to: 0
 19470                           ;incstack = 0
 19471                           ;incstack = 0
 19472  004CF2  0E0F               	movlw	15
 19473  004CF4  0100               	movlb	0	; () banked
 19474  004CF6  6F93               	movwf	??___ftmul& (0+255),b
 19475  004CF8  0100               	movlb	0	; () banked
 19476  004CFA  C08D  F094         	movff	___ftmul@f1,??___ftmul+1
 19477  004CFE  0100               	movlb	0	; () banked
 19478  004D00  C08E  F095         	movff	___ftmul@f1+1,??___ftmul+2
 19479  004D04  0100               	movlb	0	; () banked
 19480  004D06  C08F  F096         	movff	___ftmul@f1+2,??___ftmul+3
 19481  004D0A  0100               	movlb	0	; () banked
 19482  004D0C  2993               	incf	??___ftmul& (0+255),w,b
 19483  004D0E  0100               	movlb	0	; () banked
 19484  004D10  6F97               	movwf	(??___ftmul+4)& (0+255),b
 19485  004D12  D005               	goto	i2u655_40
 19486  004D14                     i2u655_45:
 19487  004D14  0100               	movlb	0	; () banked
 19488  004D16  90D8               	bcf	status,0,c
 19489  004D18  3396               	rrcf	(??___ftmul+3)& (0+255),f,b
 19490  004D1A  3395               	rrcf	(??___ftmul+2)& (0+255),f,b
 19491  004D1C  3394               	rrcf	(??___ftmul+1)& (0+255),f,b
 19492  004D1E                     i2u655_40:
 19493  004D1E  0100               	movlb	0	; () banked
 19494  004D20  2F97               	decfsz	(??___ftmul+4)& (0+255),f,b
 19495  004D22  D7F8               	goto	i2u655_45
 19496  004D24  0100               	movlb	0	; () banked
 19497  004D26  5194               	movf	(??___ftmul+1)& (0+255),w,b
 19498  004D28  0100               	movlb	0	; () banked
 19499  004D2A  0100               	movlb	0	; () banked
 19500  004D2C  6F98               	movwf	___ftmul@exp& (0+255),b
 19501  004D2E  0100               	movlb	0	; () banked
 19502  004D30  6798               	tstfsz	___ftmul@exp& (0+255),b
 19503  004D32  D001               	goto	i2l7967
 19504  004D34  D021               	goto	i2u658_40
 19505  004D36                     i2l7967:
 19506                           
 19507                           ; BSR set to: 0
 19508  004D36  0E0F               	movlw	15
 19509  004D38  0100               	movlb	0	; () banked
 19510  004D3A  6F93               	movwf	??___ftmul& (0+255),b
 19511  004D3C  0100               	movlb	0	; () banked
 19512  004D3E  C090  F094         	movff	___ftmul@f2,??___ftmul+1
 19513  004D42  0100               	movlb	0	; () banked
 19514  004D44  C091  F095         	movff	___ftmul@f2+1,??___ftmul+2
 19515  004D48  0100               	movlb	0	; () banked
 19516  004D4A  C092  F096         	movff	___ftmul@f2+2,??___ftmul+3
 19517  004D4E  0100               	movlb	0	; () banked
 19518  004D50  2993               	incf	??___ftmul& (0+255),w,b
 19519  004D52  0100               	movlb	0	; () banked
 19520  004D54  6F97               	movwf	(??___ftmul+4)& (0+255),b
 19521  004D56  D005               	goto	i2u657_40
 19522  004D58                     i2u657_45:
 19523  004D58  0100               	movlb	0	; () banked
 19524  004D5A  90D8               	bcf	status,0,c
 19525  004D5C  3396               	rrcf	(??___ftmul+3)& (0+255),f,b
 19526  004D5E  3395               	rrcf	(??___ftmul+2)& (0+255),f,b
 19527  004D60  3394               	rrcf	(??___ftmul+1)& (0+255),f,b
 19528  004D62                     i2u657_40:
 19529  004D62  0100               	movlb	0	; () banked
 19530  004D64  2F97               	decfsz	(??___ftmul+4)& (0+255),f,b
 19531  004D66  D7F8               	goto	i2u657_45
 19532  004D68  0100               	movlb	0	; () banked
 19533  004D6A  5194               	movf	(??___ftmul+1)& (0+255),w,b
 19534  004D6C  0100               	movlb	0	; () banked
 19535  004D6E  0100               	movlb	0	; () banked
 19536  004D70  6F9D               	movwf	___ftmul@sign& (0+255),b
 19537  004D72  0100               	movlb	0	; () banked
 19538  004D74  679D               	tstfsz	___ftmul@sign& (0+255),b
 19539  004D76  D00D               	goto	i2l7973
 19540  004D78                     i2u658_40:
 19541                           
 19542                           ; BSR set to: 0
 19543  004D78  0E00               	movlw	0
 19544  004D7A  0100               	movlb	0	; () banked
 19545  004D7C  0100               	movlb	0	; () banked
 19546  004D7E  6F8D               	movwf	?___ftmul& (0+255),b
 19547  004D80  0E00               	movlw	0
 19548  004D82  0100               	movlb	0	; () banked
 19549  004D84  0100               	movlb	0	; () banked
 19550  004D86  6F8E               	movwf	(?___ftmul+1)& (0+255),b
 19551  004D88  0E00               	movlw	0
 19552  004D8A  0100               	movlb	0	; () banked
 19553  004D8C  0100               	movlb	0	; () banked
 19554  004D8E  6F8F               	movwf	(?___ftmul+2)& (0+255),b
 19555  004D90  D0A6               	goto	i2l1232
 19556  004D92                     i2l7973:
 19557                           
 19558                           ; BSR set to: 0
 19559  004D92  0100               	movlb	0	; () banked
 19560  004D94  0100               	movlb	0	; () banked
 19561  004D96  519D               	movf	___ftmul@sign& (0+255),w,b
 19562  004D98  0F7B               	addlw	123
 19563  004D9A  0100               	movlb	0	; () banked
 19564  004D9C  0100               	movlb	0	; () banked
 19565  004D9E  2798               	addwf	___ftmul@exp& (0+255),f,b
 19566                           
 19567                           ; BSR set to: 0
 19568  004DA0  C08F  F09D         	movff	___ftmul@f1+2,___ftmul@sign
 19569  004DA4  0100               	movlb	0	; () banked
 19570  004DA6  5192               	movf	(___ftmul@f2+2)& (0+255),w,b
 19571  004DA8  0100               	movlb	0	; () banked
 19572  004DAA  0100               	movlb	0	; () banked
 19573  004DAC  1B9D               	xorwf	___ftmul@sign& (0+255),f,b
 19574  004DAE  0E80               	movlw	128
 19575  004DB0  0100               	movlb	0	; () banked
 19576  004DB2  0100               	movlb	0	; () banked
 19577  004DB4  179D               	andwf	___ftmul@sign& (0+255),f,b
 19578                           
 19579                           ; BSR set to: 0
 19580  004DB6  0100               	movlb	0	; () banked
 19581  004DB8  0100               	movlb	0	; () banked
 19582  004DBA  8F8E               	bsf	(___ftmul@f1+1)& (0+255),7,b
 19583                           
 19584                           ; BSR set to: 0
 19585  004DBC  0100               	movlb	0	; () banked
 19586  004DBE  0100               	movlb	0	; () banked
 19587  004DC0  8F91               	bsf	(___ftmul@f2+1)& (0+255),7,b
 19588                           
 19589                           ; BSR set to: 0
 19590  004DC2  0EFF               	movlw	255
 19591  004DC4  0100               	movlb	0	; () banked
 19592  004DC6  0100               	movlb	0	; () banked
 19593  004DC8  1790               	andwf	___ftmul@f2& (0+255),f,b
 19594  004DCA  0EFF               	movlw	255
 19595  004DCC  0100               	movlb	0	; () banked
 19596  004DCE  0100               	movlb	0	; () banked
 19597  004DD0  1791               	andwf	(___ftmul@f2+1)& (0+255),f,b
 19598  004DD2  0E00               	movlw	0
 19599  004DD4  0100               	movlb	0	; () banked
 19600  004DD6  0100               	movlb	0	; () banked
 19601  004DD8  1792               	andwf	(___ftmul@f2+2)& (0+255),f,b
 19602                           
 19603                           ; BSR set to: 0
 19604  004DDA  0E00               	movlw	0
 19605  004DDC  0100               	movlb	0	; () banked
 19606  004DDE  0100               	movlb	0	; () banked
 19607  004DE0  6F99               	movwf	___ftmul@f3_as_product& (0+255),b
 19608  004DE2  0E00               	movlw	0
 19609  004DE4  0100               	movlb	0	; () banked
 19610  004DE6  0100               	movlb	0	; () banked
 19611  004DE8  6F9A               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 19612  004DEA  0E00               	movlw	0
 19613  004DEC  0100               	movlb	0	; () banked
 19614  004DEE  0100               	movlb	0	; () banked
 19615  004DF0  6F9B               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 19616                           
 19617                           ; BSR set to: 0
 19618  004DF2  0100               	movlb	0	; () banked
 19619  004DF4  6F93               	movwf	??___ftmul& (0+255),b
 19620  004DF6  0E07               	movlw	7
 19621  004DF8  0100               	movlb	0	; () banked
 19622  004DFA  0100               	movlb	0	; () banked
 19623  004DFC  6F9C               	movwf	___ftmul@cntr& (0+255),b
 19624  004DFE  0100               	movlb	0	; () banked
 19625  004E00  5193               	movf	??___ftmul& (0+255),w,b
 19626  004E02                     i2l7987:
 19627                           
 19628                           ; BSR set to: 0
 19629  004E02  0100               	movlb	0	; () banked
 19630  004E04  0100               	movlb	0	; () banked
 19631  004E06  A18D               	btfss	___ftmul@f1& (0+255),0,b
 19632  004E08  D012               	goto	i2l7991
 19633                           
 19634                           ; BSR set to: 0
 19635  004E0A  0100               	movlb	0	; () banked
 19636  004E0C  0100               	movlb	0	; () banked
 19637  004E0E  5190               	movf	___ftmul@f2& (0+255),w,b
 19638  004E10  0100               	movlb	0	; () banked
 19639  004E12  0100               	movlb	0	; () banked
 19640  004E14  2799               	addwf	___ftmul@f3_as_product& (0+255),f,b
 19641  004E16  0100               	movlb	0	; () banked
 19642  004E18  0100               	movlb	0	; () banked
 19643  004E1A  5191               	movf	(___ftmul@f2+1)& (0+255),w,b
 19644  004E1C  0100               	movlb	0	; () banked
 19645  004E1E  0100               	movlb	0	; () banked
 19646  004E20  239A               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 19647  004E22  0100               	movlb	0	; () banked
 19648  004E24  0100               	movlb	0	; () banked
 19649  004E26  5192               	movf	(___ftmul@f2+2)& (0+255),w,b
 19650  004E28  0100               	movlb	0	; () banked
 19651  004E2A  0100               	movlb	0	; () banked
 19652  004E2C  239B               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 19653  004E2E                     i2l7991:
 19654                           
 19655                           ; BSR set to: 0
 19656  004E2E  0100               	movlb	0	; () banked
 19657  004E30  90D8               	bcf	status,0,c
 19658  004E32  0100               	movlb	0	; () banked
 19659  004E34  338F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 19660  004E36  0100               	movlb	0	; () banked
 19661  004E38  338E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 19662  004E3A  0100               	movlb	0	; () banked
 19663  004E3C  338D               	rrcf	___ftmul@f1& (0+255),f,b
 19664  004E3E  0100               	movlb	0	; () banked
 19665  004E40  90D8               	bcf	status,0,c
 19666  004E42  0100               	movlb	0	; () banked
 19667  004E44  3790               	rlcf	___ftmul@f2& (0+255),f,b
 19668  004E46  0100               	movlb	0	; () banked
 19669  004E48  3791               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 19670  004E4A  0100               	movlb	0	; () banked
 19671  004E4C  3792               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 19672                           
 19673                           ; BSR set to: 0
 19674  004E4E  0100               	movlb	0	; () banked
 19675  004E50  0100               	movlb	0	; () banked
 19676  004E52  2F9C               	decfsz	___ftmul@cntr& (0+255),f,b
 19677  004E54  D7D6               	goto	i2l7987
 19678                           
 19679                           ; BSR set to: 0
 19680                           
 19681                           ; BSR set to: 0
 19682  004E56  0100               	movlb	0	; () banked
 19683  004E58  6F93               	movwf	??___ftmul& (0+255),b
 19684  004E5A  0E09               	movlw	9
 19685  004E5C  0100               	movlb	0	; () banked
 19686  004E5E  0100               	movlb	0	; () banked
 19687  004E60  6F9C               	movwf	___ftmul@cntr& (0+255),b
 19688  004E62  0100               	movlb	0	; () banked
 19689  004E64  5193               	movf	??___ftmul& (0+255),w,b
 19690  004E66                     i2l7997:
 19691                           
 19692                           ; BSR set to: 0
 19693  004E66  0100               	movlb	0	; () banked
 19694  004E68  0100               	movlb	0	; () banked
 19695  004E6A  A18D               	btfss	___ftmul@f1& (0+255),0,b
 19696  004E6C  D012               	goto	i2l8001
 19697                           
 19698                           ; BSR set to: 0
 19699  004E6E  0100               	movlb	0	; () banked
 19700  004E70  0100               	movlb	0	; () banked
 19701  004E72  5190               	movf	___ftmul@f2& (0+255),w,b
 19702  004E74  0100               	movlb	0	; () banked
 19703  004E76  0100               	movlb	0	; () banked
 19704  004E78  2799               	addwf	___ftmul@f3_as_product& (0+255),f,b
 19705  004E7A  0100               	movlb	0	; () banked
 19706  004E7C  0100               	movlb	0	; () banked
 19707  004E7E  5191               	movf	(___ftmul@f2+1)& (0+255),w,b
 19708  004E80  0100               	movlb	0	; () banked
 19709  004E82  0100               	movlb	0	; () banked
 19710  004E84  239A               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 19711  004E86  0100               	movlb	0	; () banked
 19712  004E88  0100               	movlb	0	; () banked
 19713  004E8A  5192               	movf	(___ftmul@f2+2)& (0+255),w,b
 19714  004E8C  0100               	movlb	0	; () banked
 19715  004E8E  0100               	movlb	0	; () banked
 19716  004E90  239B               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 19717  004E92                     i2l8001:
 19718                           
 19719                           ; BSR set to: 0
 19720  004E92  0100               	movlb	0	; () banked
 19721  004E94  90D8               	bcf	status,0,c
 19722  004E96  0100               	movlb	0	; () banked
 19723  004E98  338F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 19724  004E9A  0100               	movlb	0	; () banked
 19725  004E9C  338E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 19726  004E9E  0100               	movlb	0	; () banked
 19727  004EA0  338D               	rrcf	___ftmul@f1& (0+255),f,b
 19728  004EA2  0100               	movlb	0	; () banked
 19729  004EA4  90D8               	bcf	status,0,c
 19730  004EA6  0100               	movlb	0	; () banked
 19731  004EA8  339B               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 19732  004EAA  0100               	movlb	0	; () banked
 19733  004EAC  339A               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 19734  004EAE  0100               	movlb	0	; () banked
 19735  004EB0  3399               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 19736                           
 19737                           ; BSR set to: 0
 19738  004EB2  0100               	movlb	0	; () banked
 19739  004EB4  0100               	movlb	0	; () banked
 19740  004EB6  2F9C               	decfsz	___ftmul@cntr& (0+255),f,b
 19741  004EB8  D7D6               	goto	i2l7997
 19742                           
 19743                           ; BSR set to: 0
 19744                           
 19745                           ; BSR set to: 0
 19746  004EBA  C099  F060         	movff	___ftmul@f3_as_product,?___ftpack
 19747  004EBE  C09A  F061         	movff	___ftmul@f3_as_product+1,?___ftpack+1
 19748  004EC2  C09B  F062         	movff	___ftmul@f3_as_product+2,?___ftpack+2
 19749  004EC6  C098  F063         	movff	___ftmul@exp,?___ftpack+3
 19750  004ECA  C09D  F064         	movff	___ftmul@sign,?___ftpack+4
 19751  004ECE  ECC5  F02A         	call	___ftpack	;wreg free
 19752  004ED2  C062  F08F         	movff	?___ftpack+2,?___ftmul+2
 19753  004ED6  C061  F08E         	movff	?___ftpack+1,?___ftmul+1
 19754  004EDA  C060  F08D         	movff	?___ftpack,?___ftmul
 19755  004EDE                     i2l1232:
 19756  004EDE  0012               	return	
 19757  004EE0                     __end_of___ftmul:
 19758                           	opt stack 0
 19759                           tosu	equ	0xFFF
 19760                           tosh	equ	0xFFE
 19761                           tosl	equ	0xFFD
 19762                           pclatu	equ	0xFFB
 19763                           pclath	equ	0xFFA
 19764                           tblptru	equ	0xFF8
 19765                           tblptrh	equ	0xFF7
 19766                           tblptrl	equ	0xFF6
 19767                           tablat	equ	0xFF5
 19768                           prodh	equ	0xFF4
 19769                           prodl	equ	0xFF3
 19770                           intcon	equ	0xFF2
 19771                           intcon2	equ	0xFF1
 19772                           indf0	equ	0xFEF
 19773                           postinc0	equ	0xFEE
 19774                           fsr0h	equ	0xFEA
 19775                           fsr0l	equ	0xFE9
 19776                           wreg	equ	0xFE8
 19777                           postinc1	equ	0xFE6
 19778                           postdec1	equ	0xFE5
 19779                           fsr1h	equ	0xFE2
 19780                           fsr1l	equ	0xFE1
 19781                           bsr	equ	0xFE0
 19782                           indf2	equ	0xFDF
 19783                           postinc2	equ	0xFDE
 19784                           postdec2	equ	0xFDD
 19785                           plusw2	equ	0xFDB
 19786                           fsr2h	equ	0xFDA
 19787                           fsr2l	equ	0xFD9
 19788                           status	equ	0xFD8
 19789                           
 19790 ;; *************** function ___wmul *****************
 19791 ;; Defined at:
 19792 ;;		line 5 in file "/usr/opt/microchip/xc8/v1.20/sources/common/wmul.c"
 19793 ;; Parameters:    Size  Location     Type
 19794 ;;  multiplier      2   22[BANK0 ] unsigned int 
 19795 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 19796 ;; Auto vars:     Size  Location     Type
 19797 ;;  product         2   28[BANK0 ] unsigned int 
 19798 ;; Return value:  Size  Location     Type
 19799 ;;                  2   22[BANK0 ] unsigned int 
 19800 ;; Registers used:
 19801 ;;		wreg, status,2, status,0, prodl, prodh
 19802 ;; Tracked objects:
 19803 ;;		On entry : 0/0
 19804 ;;		On exit  : 0/0
 19805 ;;		Unchanged: 0/0
 19806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19807 ;;      Params:         0       4       0       0       0       0       0       0       0
 19808 ;;      Locals:         0       4       0       0       0       0       0       0       0
 19809 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19810 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19811 ;;Total ram usage:        8 bytes
 19812 ;; Hardware stack levels used:    1
 19813 ;; This function calls:
 19814 ;;		Nothing
 19815 ;; This function is called by:
 19816 ;;		_writeString
 19817 ;;		_dayOfWeek
 19818 ;;		_getTemp
 19819 ;;		_fround
 19820 ;;		_scale
 19821 ;;		_sprintf
 19822 ;; This function uses a non-reentrant model
 19823 ;;
 19824                           
 19825                           	psect	text58
 19826  006A62                     __ptext58:
 19827                           	opt stack 0
 19828  006A62                     ___wmul:
 19829                           	opt stack 17
 19830                           
 19831                           ;incstack = 0
 19832                           ;incstack = 0
 19833  006A62  0100               	movlb	0	; () banked
 19834  006A64  0100               	movlb	0	; () banked
 19835  006A66  5176               	movf	___wmul@multiplier& (0+255),w,b
 19836  006A68  0100               	movlb	0	; () banked
 19837  006A6A  0100               	movlb	0	; () banked
 19838  006A6C  0378               	mulwf	___wmul@multiplicand& (0+255),b
 19839  006A6E  CFF3 F07C          	movff	prodl,___wmul@product
 19840  006A72  CFF4 F07D          	movff	prodh,___wmul@product+1
 19841  006A76  0100               	movlb	0	; () banked
 19842  006A78  0100               	movlb	0	; () banked
 19843  006A7A  5176               	movf	___wmul@multiplier& (0+255),w,b
 19844  006A7C  0100               	movlb	0	; () banked
 19845  006A7E  0100               	movlb	0	; () banked
 19846  006A80  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19847  006A82  CFF3 FFF4          	movff	prodl,prodh
 19848  006A86  6AF3               	clrf	prodl,c
 19849  006A88  50F3               	movf	prodl,w,c
 19850  006A8A  0100               	movlb	0	; () banked
 19851  006A8C  0100               	movlb	0	; () banked
 19852  006A8E  277C               	addwf	___wmul@product& (0+255),f,b
 19853  006A90  50F4               	movf	prodh,w,c
 19854  006A92  0100               	movlb	0	; () banked
 19855  006A94  0100               	movlb	0	; () banked
 19856  006A96  237D               	addwfc	(___wmul@product+1)& (0+255),f,b
 19857  006A98  0100               	movlb	0	; () banked
 19858  006A9A  0100               	movlb	0	; () banked
 19859  006A9C  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19860  006A9E  0100               	movlb	0	; () banked
 19861  006AA0  0100               	movlb	0	; () banked
 19862  006AA2  0378               	mulwf	___wmul@multiplicand& (0+255),b
 19863  006AA4  CFF3 FFF4          	movff	prodl,prodh
 19864  006AA8  6AF3               	clrf	prodl,c
 19865  006AAA  50F3               	movf	prodl,w,c
 19866  006AAC  0100               	movlb	0	; () banked
 19867  006AAE  0100               	movlb	0	; () banked
 19868  006AB0  277C               	addwf	___wmul@product& (0+255),f,b
 19869  006AB2  50F4               	movf	prodh,w,c
 19870  006AB4  0100               	movlb	0	; () banked
 19871  006AB6  0100               	movlb	0	; () banked
 19872  006AB8  237D               	addwfc	(___wmul@product+1)& (0+255),f,b
 19873                           
 19874                           ; BSR set to: 0
 19875  006ABA  C07C  F076         	movff	___wmul@product,?___wmul
 19876  006ABE  C07D  F077         	movff	___wmul@product+1,?___wmul+1
 19877                           
 19878                           ; BSR set to: 0
 19879                           
 19880                           ; BSR set to: 0
 19881  006AC2  0012               	return	
 19882  006AC4                     __end_of___wmul:
 19883                           	opt stack 0
 19884                           tosu	equ	0xFFF
 19885                           tosh	equ	0xFFE
 19886                           tosl	equ	0xFFD
 19887                           pclatu	equ	0xFFB
 19888                           pclath	equ	0xFFA
 19889                           tblptru	equ	0xFF8
 19890                           tblptrh	equ	0xFF7
 19891                           tblptrl	equ	0xFF6
 19892                           tablat	equ	0xFF5
 19893                           prodh	equ	0xFF4
 19894                           prodl	equ	0xFF3
 19895                           intcon	equ	0xFF2
 19896                           intcon2	equ	0xFF1
 19897                           indf0	equ	0xFEF
 19898                           postinc0	equ	0xFEE
 19899                           fsr0h	equ	0xFEA
 19900                           fsr0l	equ	0xFE9
 19901                           wreg	equ	0xFE8
 19902                           postinc1	equ	0xFE6
 19903                           postdec1	equ	0xFE5
 19904                           fsr1h	equ	0xFE2
 19905                           fsr1l	equ	0xFE1
 19906                           bsr	equ	0xFE0
 19907                           indf2	equ	0xFDF
 19908                           postinc2	equ	0xFDE
 19909                           postdec2	equ	0xFDD
 19910                           plusw2	equ	0xFDB
 19911                           fsr2h	equ	0xFDA
 19912                           fsr2l	equ	0xFD9
 19913                           status	equ	0xFD8
 19914                           
 19915 ;; *************** function ___lwmod *****************
 19916 ;; Defined at:
 19917 ;;		line 10 in file "/usr/opt/microchip/xc8/v1.20/sources/common/lwmod.c"
 19918 ;; Parameters:    Size  Location     Type
 19919 ;;  dividend        2    0[BANK0 ] unsigned int 
 19920 ;;  divisor         2    2[BANK0 ] unsigned int 
 19921 ;; Auto vars:     Size  Location     Type
 19922 ;;  counter         1    6[BANK0 ] unsigned char 
 19923 ;; Return value:  Size  Location     Type
 19924 ;;                  2    0[BANK0 ] unsigned int 
 19925 ;; Registers used:
 19926 ;;		wreg, status,2, status,0
 19927 ;; Tracked objects:
 19928 ;;		On entry : 0/0
 19929 ;;		On exit  : 0/0
 19930 ;;		Unchanged: 0/0
 19931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19932 ;;      Params:         0       4       0       0       0       0       0       0       0
 19933 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19934 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19935 ;;      Totals:         0       7       0       0       0       0       0       0       0
 19936 ;;Total ram usage:        7 bytes
 19937 ;; Hardware stack levels used:    1
 19938 ;; This function calls:
 19939 ;;		Nothing
 19940 ;; This function is called by:
 19941 ;;		_daysOfMonth
 19942 ;;		_printRTC
 19943 ;;		_sprintf
 19944 ;; This function uses a non-reentrant model
 19945 ;;
 19946                           
 19947                           	psect	text59
 19948  0065B8                     __ptext59:
 19949                           	opt stack 0
 19950  0065B8                     ___lwmod:
 19951                           	opt stack 17
 19952                           
 19953                           ; BSR set to: 0
 19954                           ;incstack = 0
 19955                           ;incstack = 0
 19956  0065B8  0100               	movlb	0	; () banked
 19957  0065BA  0100               	movlb	0	; () banked
 19958  0065BC  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 19959  0065BE  1162               	iorwf	___lwmod@divisor& (0+255),w,b
 19960  0065C0  B4D8               	btfsc	status,2,c
 19961  0065C2  D03A               	goto	i2l1375
 19962                           
 19963                           ; BSR set to: 0
 19964  0065C4  0100               	movlb	0	; () banked
 19965  0065C6  6F64               	movwf	??___lwmod& (0+255),b
 19966  0065C8  0E01               	movlw	1
 19967  0065CA  0100               	movlb	0	; () banked
 19968  0065CC  0100               	movlb	0	; () banked
 19969  0065CE  6F66               	movwf	___lwmod@counter& (0+255),b
 19970  0065D0  0100               	movlb	0	; () banked
 19971  0065D2  5164               	movf	??___lwmod& (0+255),w,b
 19972  0065D4  D009               	goto	i2l8221
 19973  0065D6                     i2l8219:
 19974                           
 19975                           ; BSR set to: 0
 19976  0065D6  0100               	movlb	0	; () banked
 19977  0065D8  0100               	movlb	0	; () banked
 19978  0065DA  0100               	movlb	0	; () banked
 19979  0065DC  90D8               	bcf	status,0,c
 19980  0065DE  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 19981  0065E0  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 19982  0065E2  0100               	movlb	0	; () banked
 19983  0065E4  0100               	movlb	0	; () banked
 19984  0065E6  2B66               	incf	___lwmod@counter& (0+255),f,b
 19985  0065E8                     i2l8221:
 19986                           
 19987                           ; BSR set to: 0
 19988  0065E8  0100               	movlb	0	; () banked
 19989  0065EA  0100               	movlb	0	; () banked
 19990  0065EC  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 19991  0065EE  D7F3               	goto	i2l8219
 19992  0065F0                     i2l8223:
 19993                           
 19994                           ; BSR set to: 0
 19995  0065F0  0100               	movlb	0	; () banked
 19996  0065F2  0100               	movlb	0	; () banked
 19997  0065F4  5162               	movf	___lwmod@divisor& (0+255),w,b
 19998  0065F6  0100               	movlb	0	; () banked
 19999  0065F8  0100               	movlb	0	; () banked
 20000  0065FA  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 20001  0065FC  0100               	movlb	0	; () banked
 20002  0065FE  0100               	movlb	0	; () banked
 20003  006600  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20004  006602  0100               	movlb	0	; () banked
 20005  006604  0100               	movlb	0	; () banked
 20006  006606  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 20007  006608  A0D8               	btfss	status,0,c
 20008  00660A  D00C               	goto	i2l8227
 20009                           
 20010                           ; BSR set to: 0
 20011  00660C  0100               	movlb	0	; () banked
 20012  00660E  0100               	movlb	0	; () banked
 20013  006610  5162               	movf	___lwmod@divisor& (0+255),w,b
 20014  006612  0100               	movlb	0	; () banked
 20015  006614  0100               	movlb	0	; () banked
 20016  006616  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 20017  006618  0100               	movlb	0	; () banked
 20018  00661A  0100               	movlb	0	; () banked
 20019  00661C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20020  00661E  0100               	movlb	0	; () banked
 20021  006620  0100               	movlb	0	; () banked
 20022  006622  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 20023  006624                     i2l8227:
 20024                           
 20025                           ; BSR set to: 0
 20026  006624  0100               	movlb	0	; () banked
 20027  006626  0100               	movlb	0	; () banked
 20028  006628  0100               	movlb	0	; () banked
 20029  00662A  90D8               	bcf	status,0,c
 20030  00662C  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 20031  00662E  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 20032                           
 20033                           ; BSR set to: 0
 20034  006630  0100               	movlb	0	; () banked
 20035  006632  0100               	movlb	0	; () banked
 20036  006634  2F66               	decfsz	___lwmod@counter& (0+255),f,b
 20037  006636  D7DC               	goto	i2l8223
 20038  006638                     i2l1375:
 20039                           
 20040                           ; BSR set to: 0
 20041  006638  C060  F060         	movff	___lwmod@dividend,?___lwmod
 20042  00663C  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 20043                           
 20044                           ; BSR set to: 0
 20045  006640  0012               	return	
 20046  006642                     __end_of___lwmod:
 20047                           	opt stack 0
 20048                           tosu	equ	0xFFF
 20049                           tosh	equ	0xFFE
 20050                           tosl	equ	0xFFD
 20051                           pclatu	equ	0xFFB
 20052                           pclath	equ	0xFFA
 20053                           tblptru	equ	0xFF8
 20054                           tblptrh	equ	0xFF7
 20055                           tblptrl	equ	0xFF6
 20056                           tablat	equ	0xFF5
 20057                           prodh	equ	0xFF4
 20058                           prodl	equ	0xFF3
 20059                           intcon	equ	0xFF2
 20060                           intcon2	equ	0xFF1
 20061                           indf0	equ	0xFEF
 20062                           postinc0	equ	0xFEE
 20063                           fsr0h	equ	0xFEA
 20064                           fsr0l	equ	0xFE9
 20065                           wreg	equ	0xFE8
 20066                           postinc1	equ	0xFE6
 20067                           postdec1	equ	0xFE5
 20068                           fsr1h	equ	0xFE2
 20069                           fsr1l	equ	0xFE1
 20070                           bsr	equ	0xFE0
 20071                           indf2	equ	0xFDF
 20072                           postinc2	equ	0xFDE
 20073                           postdec2	equ	0xFDD
 20074                           plusw2	equ	0xFDB
 20075                           fsr2h	equ	0xFDA
 20076                           fsr2l	equ	0xFD9
 20077                           status	equ	0xFD8
 20078                           
 20079 ;; *************** function ___llmod *****************
 20080 ;; Defined at:
 20081 ;;		line 10 in file "/usr/opt/microchip/xc8/v1.20/sources/common/llmod.c"
 20082 ;; Parameters:    Size  Location     Type
 20083 ;;  dividend        4   19[BANK0 ] unsigned long 
 20084 ;;  divisor         4   23[BANK0 ] unsigned long 
 20085 ;; Auto vars:     Size  Location     Type
 20086 ;;  counter         1   29[BANK0 ] unsigned char 
 20087 ;; Return value:  Size  Location     Type
 20088 ;;                  4   19[BANK0 ] unsigned long 
 20089 ;; Registers used:
 20090 ;;		wreg, status,2, status,0
 20091 ;; Tracked objects:
 20092 ;;		On entry : 0/0
 20093 ;;		On exit  : 0/0
 20094 ;;		Unchanged: 0/0
 20095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20096 ;;      Params:         0       8       0       0       0       0       0       0       0
 20097 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20098 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20099 ;;      Totals:         0      11       0       0       0       0       0       0       0
 20100 ;;Total ram usage:       11 bytes
 20101 ;; Hardware stack levels used:    1
 20102 ;; This function calls:
 20103 ;;		Nothing
 20104 ;; This function is called by:
 20105 ;;		_dayOfWeek
 20106 ;;		_sprintf
 20107 ;; This function uses a non-reentrant model
 20108 ;;
 20109                           
 20110                           	psect	text60
 20111  005F30                     __ptext60:
 20112                           	opt stack 0
 20113  005F30                     ___llmod:
 20114                           	opt stack 17
 20115                           
 20116                           ; BSR set to: 0
 20117                           ;incstack = 0
 20118                           ;incstack = 0
 20119  005F30  0100               	movlb	0	; () banked
 20120  005F32  0100               	movlb	0	; () banked
 20121  005F34  517A               	movf	(___llmod@divisor+3)& (0+255),w,b
 20122  005F36  1177               	iorwf	___llmod@divisor& (0+255),w,b
 20123  005F38  1178               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 20124  005F3A  1179               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 20125  005F3C  B4D8               	btfsc	status,2,c
 20126  005F3E  D05A               	goto	i2l1306
 20127                           
 20128                           ; BSR set to: 0
 20129  005F40  0100               	movlb	0	; () banked
 20130  005F42  6F7B               	movwf	??___llmod& (0+255),b
 20131  005F44  0E01               	movlw	1
 20132  005F46  0100               	movlb	0	; () banked
 20133  005F48  0100               	movlb	0	; () banked
 20134  005F4A  6F7D               	movwf	___llmod@counter& (0+255),b
 20135  005F4C  0100               	movlb	0	; () banked
 20136  005F4E  517B               	movf	??___llmod& (0+255),w,b
 20137  005F50  D00D               	goto	i2l8195
 20138  005F52                     i2l8193:
 20139                           
 20140                           ; BSR set to: 0
 20141  005F52  0100               	movlb	0	; () banked
 20142  005F54  90D8               	bcf	status,0,c
 20143  005F56  0100               	movlb	0	; () banked
 20144  005F58  3777               	rlcf	___llmod@divisor& (0+255),f,b
 20145  005F5A  0100               	movlb	0	; () banked
 20146  005F5C  3778               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 20147  005F5E  0100               	movlb	0	; () banked
 20148  005F60  3779               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 20149  005F62  0100               	movlb	0	; () banked
 20150  005F64  377A               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 20151  005F66  0100               	movlb	0	; () banked
 20152  005F68  0100               	movlb	0	; () banked
 20153  005F6A  2B7D               	incf	___llmod@counter& (0+255),f,b
 20154  005F6C                     i2l8195:
 20155                           
 20156                           ; BSR set to: 0
 20157  005F6C  0100               	movlb	0	; () banked
 20158  005F6E  0100               	movlb	0	; () banked
 20159  005F70  AF7A               	btfss	(___llmod@divisor+3)& (0+255),7,b
 20160  005F72  D7EF               	goto	i2l8193
 20161  005F74                     i2l8197:
 20162                           
 20163                           ; BSR set to: 0
 20164  005F74  0100               	movlb	0	; () banked
 20165  005F76  0100               	movlb	0	; () banked
 20166  005F78  5177               	movf	___llmod@divisor& (0+255),w,b
 20167  005F7A  0100               	movlb	0	; () banked
 20168  005F7C  0100               	movlb	0	; () banked
 20169  005F7E  5D73               	subwf	___llmod@dividend& (0+255),w,b
 20170  005F80  0100               	movlb	0	; () banked
 20171  005F82  0100               	movlb	0	; () banked
 20172  005F84  5178               	movf	(___llmod@divisor+1)& (0+255),w,b
 20173  005F86  0100               	movlb	0	; () banked
 20174  005F88  0100               	movlb	0	; () banked
 20175  005F8A  5974               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 20176  005F8C  0100               	movlb	0	; () banked
 20177  005F8E  0100               	movlb	0	; () banked
 20178  005F90  5179               	movf	(___llmod@divisor+2)& (0+255),w,b
 20179  005F92  0100               	movlb	0	; () banked
 20180  005F94  0100               	movlb	0	; () banked
 20181  005F96  5975               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 20182  005F98  0100               	movlb	0	; () banked
 20183  005F9A  0100               	movlb	0	; () banked
 20184  005F9C  517A               	movf	(___llmod@divisor+3)& (0+255),w,b
 20185  005F9E  0100               	movlb	0	; () banked
 20186  005FA0  0100               	movlb	0	; () banked
 20187  005FA2  5976               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 20188  005FA4  A0D8               	btfss	status,0,c
 20189  005FA6  D018               	goto	i2l8201
 20190                           
 20191                           ; BSR set to: 0
 20192  005FA8  0100               	movlb	0	; () banked
 20193  005FAA  0100               	movlb	0	; () banked
 20194  005FAC  5177               	movf	___llmod@divisor& (0+255),w,b
 20195  005FAE  0100               	movlb	0	; () banked
 20196  005FB0  0100               	movlb	0	; () banked
 20197  005FB2  5F73               	subwf	___llmod@dividend& (0+255),f,b
 20198  005FB4  0100               	movlb	0	; () banked
 20199  005FB6  0100               	movlb	0	; () banked
 20200  005FB8  5178               	movf	(___llmod@divisor+1)& (0+255),w,b
 20201  005FBA  0100               	movlb	0	; () banked
 20202  005FBC  0100               	movlb	0	; () banked
 20203  005FBE  5B74               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 20204  005FC0  0100               	movlb	0	; () banked
 20205  005FC2  0100               	movlb	0	; () banked
 20206  005FC4  5179               	movf	(___llmod@divisor+2)& (0+255),w,b
 20207  005FC6  0100               	movlb	0	; () banked
 20208  005FC8  0100               	movlb	0	; () banked
 20209  005FCA  5B75               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 20210  005FCC  0100               	movlb	0	; () banked
 20211  005FCE  0100               	movlb	0	; () banked
 20212  005FD0  517A               	movf	(___llmod@divisor+3)& (0+255),w,b
 20213  005FD2  0100               	movlb	0	; () banked
 20214  005FD4  0100               	movlb	0	; () banked
 20215  005FD6  5B76               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 20216  005FD8                     i2l8201:
 20217                           
 20218                           ; BSR set to: 0
 20219  005FD8  0100               	movlb	0	; () banked
 20220  005FDA  90D8               	bcf	status,0,c
 20221  005FDC  0100               	movlb	0	; () banked
 20222  005FDE  337A               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 20223  005FE0  0100               	movlb	0	; () banked
 20224  005FE2  3379               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 20225  005FE4  0100               	movlb	0	; () banked
 20226  005FE6  3378               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 20227  005FE8  0100               	movlb	0	; () banked
 20228  005FEA  3377               	rrcf	___llmod@divisor& (0+255),f,b
 20229                           
 20230                           ; BSR set to: 0
 20231  005FEC  0100               	movlb	0	; () banked
 20232  005FEE  0100               	movlb	0	; () banked
 20233  005FF0  2F7D               	decfsz	___llmod@counter& (0+255),f,b
 20234  005FF2  D7C0               	goto	i2l8197
 20235  005FF4                     i2l1306:
 20236                           
 20237                           ; BSR set to: 0
 20238  005FF4  C073  F073         	movff	___llmod@dividend,?___llmod
 20239  005FF8  C074  F074         	movff	___llmod@dividend+1,?___llmod+1
 20240  005FFC  C075  F075         	movff	___llmod@dividend+2,?___llmod+2
 20241  006000  C076  F076         	movff	___llmod@dividend+3,?___llmod+3
 20242                           
 20243                           ; BSR set to: 0
 20244  006004  0012               	return	
 20245  006006                     __end_of___llmod:
 20246                           	opt stack 0
 20247                           tosu	equ	0xFFF
 20248                           tosh	equ	0xFFE
 20249                           tosl	equ	0xFFD
 20250                           pclatu	equ	0xFFB
 20251                           pclath	equ	0xFFA
 20252                           tblptru	equ	0xFF8
 20253                           tblptrh	equ	0xFF7
 20254                           tblptrl	equ	0xFF6
 20255                           tablat	equ	0xFF5
 20256                           prodh	equ	0xFF4
 20257                           prodl	equ	0xFF3
 20258                           intcon	equ	0xFF2
 20259                           intcon2	equ	0xFF1
 20260                           indf0	equ	0xFEF
 20261                           postinc0	equ	0xFEE
 20262                           fsr0h	equ	0xFEA
 20263                           fsr0l	equ	0xFE9
 20264                           wreg	equ	0xFE8
 20265                           postinc1	equ	0xFE6
 20266                           postdec1	equ	0xFE5
 20267                           fsr1h	equ	0xFE2
 20268                           fsr1l	equ	0xFE1
 20269                           bsr	equ	0xFE0
 20270                           indf2	equ	0xFDF
 20271                           postinc2	equ	0xFDE
 20272                           postdec2	equ	0xFDD
 20273                           plusw2	equ	0xFDB
 20274                           fsr2h	equ	0xFDA
 20275                           fsr2l	equ	0xFD9
 20276                           status	equ	0xFD8
 20277                           
 20278 ;; *************** function ___ftadd *****************
 20279 ;; Defined at:
 20280 ;;		line 87 in file "/usr/opt/microchip/xc8/v1.20/sources/common/ftadd.c"
 20281 ;; Parameters:    Size  Location     Type
 20282 ;;  f1              3   66[BANK0 ] float 
 20283 ;;  f2              3   69[BANK0 ] float 
 20284 ;; Auto vars:     Size  Location     Type
 20285 ;;  exp1            1   79[BANK0 ] unsigned char 
 20286 ;;  exp2            1   78[BANK0 ] unsigned char 
 20287 ;;  sign            1   77[BANK0 ] unsigned char 
 20288 ;; Return value:  Size  Location     Type
 20289 ;;                  3   66[BANK0 ] float 
 20290 ;; Registers used:
 20291 ;;		wreg, status,2, status,0, cstack
 20292 ;; Tracked objects:
 20293 ;;		On entry : 0/0
 20294 ;;		On exit  : 0/0
 20295 ;;		Unchanged: 0/0
 20296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20297 ;;      Params:         0       6       0       0       0       0       0       0       0
 20298 ;;      Locals:         0       3       0       0       0       0       0       0       0
 20299 ;;      Temps:          0       5       0       0       0       0       0       0       0
 20300 ;;      Totals:         0      14       0       0       0       0       0       0       0
 20301 ;;Total ram usage:       14 bytes
 20302 ;; Hardware stack levels used:    1
 20303 ;; Hardware stack levels required when called:    1
 20304 ;; This function calls:
 20305 ;;		___ftpack
 20306 ;; This function is called by:
 20307 ;;		_getTemp
 20308 ;;		_sprintf
 20309 ;;		___asftadd
 20310 ;;		___ftsub
 20311 ;; This function uses a non-reentrant model
 20312 ;;
 20313                           
 20314                           	psect	text61
 20315  003FF8                     __ptext61:
 20316                           	opt stack 0
 20317  003FF8                     ___ftadd:
 20318                           	opt stack 14
 20319                           
 20320                           ; BSR set to: 0
 20321                           ;incstack = 0
 20322                           ;incstack = 0
 20323  003FF8  0E0F               	movlw	15
 20324  003FFA  0100               	movlb	0	; () banked
 20325  003FFC  6FA8               	movwf	??___ftadd& (0+255),b
 20326  003FFE  0100               	movlb	0	; () banked
 20327  004000  C0A2  F0A9         	movff	___ftadd@f1,??___ftadd+1
 20328  004004  0100               	movlb	0	; () banked
 20329  004006  C0A3  F0AA         	movff	___ftadd@f1+1,??___ftadd+2
 20330  00400A  0100               	movlb	0	; () banked
 20331  00400C  C0A4  F0AB         	movff	___ftadd@f1+2,??___ftadd+3
 20332  004010  0100               	movlb	0	; () banked
 20333  004012  29A8               	incf	??___ftadd& (0+255),w,b
 20334  004014  0100               	movlb	0	; () banked
 20335  004016  6FAC               	movwf	(??___ftadd+4)& (0+255),b
 20336  004018  D005               	goto	i2u629_40
 20337  00401A                     i2u629_45:
 20338  00401A  0100               	movlb	0	; () banked
 20339  00401C  90D8               	bcf	status,0,c
 20340  00401E  33AB               	rrcf	(??___ftadd+3)& (0+255),f,b
 20341  004020  33AA               	rrcf	(??___ftadd+2)& (0+255),f,b
 20342  004022  33A9               	rrcf	(??___ftadd+1)& (0+255),f,b
 20343  004024                     i2u629_40:
 20344  004024  0100               	movlb	0	; () banked
 20345  004026  2FAC               	decfsz	(??___ftadd+4)& (0+255),f,b
 20346  004028  D7F8               	goto	i2u629_45
 20347  00402A  0100               	movlb	0	; () banked
 20348  00402C  51A9               	movf	(??___ftadd+1)& (0+255),w,b
 20349  00402E  0100               	movlb	0	; () banked
 20350  004030  0100               	movlb	0	; () banked
 20351  004032  6FAF               	movwf	___ftadd@exp1& (0+255),b
 20352  004034  0E0F               	movlw	15
 20353  004036  0100               	movlb	0	; () banked
 20354  004038  6FA8               	movwf	??___ftadd& (0+255),b
 20355  00403A  0100               	movlb	0	; () banked
 20356  00403C  C0A5  F0A9         	movff	___ftadd@f2,??___ftadd+1
 20357  004040  0100               	movlb	0	; () banked
 20358  004042  C0A6  F0AA         	movff	___ftadd@f2+1,??___ftadd+2
 20359  004046  0100               	movlb	0	; () banked
 20360  004048  C0A7  F0AB         	movff	___ftadd@f2+2,??___ftadd+3
 20361  00404C  0100               	movlb	0	; () banked
 20362  00404E  29A8               	incf	??___ftadd& (0+255),w,b
 20363  004050  0100               	movlb	0	; () banked
 20364  004052  6FAC               	movwf	(??___ftadd+4)& (0+255),b
 20365  004054  D005               	goto	i2u630_40
 20366  004056                     i2u630_45:
 20367  004056  0100               	movlb	0	; () banked
 20368  004058  90D8               	bcf	status,0,c
 20369  00405A  33AB               	rrcf	(??___ftadd+3)& (0+255),f,b
 20370  00405C  33AA               	rrcf	(??___ftadd+2)& (0+255),f,b
 20371  00405E  33A9               	rrcf	(??___ftadd+1)& (0+255),f,b
 20372  004060                     i2u630_40:
 20373  004060  0100               	movlb	0	; () banked
 20374  004062  2FAC               	decfsz	(??___ftadd+4)& (0+255),f,b
 20375  004064  D7F8               	goto	i2u630_45
 20376  004066  0100               	movlb	0	; () banked
 20377  004068  51A9               	movf	(??___ftadd+1)& (0+255),w,b
 20378  00406A  0100               	movlb	0	; () banked
 20379  00406C  0100               	movlb	0	; () banked
 20380  00406E  6FAE               	movwf	___ftadd@exp2& (0+255),b
 20381                           
 20382                           ; BSR set to: 0
 20383  004070  0100               	movlb	0	; () banked
 20384  004072  0100               	movlb	0	; () banked
 20385  004074  51AF               	movf	___ftadd@exp1& (0+255),w,b
 20386  004076  B4D8               	btfsc	status,2,c
 20387  004078  D015               	goto	i2l1168
 20388                           
 20389                           ; BSR set to: 0
 20390  00407A  0100               	movlb	0	; () banked
 20391  00407C  0100               	movlb	0	; () banked
 20392  00407E  51AE               	movf	___ftadd@exp2& (0+255),w,b
 20393  004080  0100               	movlb	0	; () banked
 20394  004082  0100               	movlb	0	; () banked
 20395  004084  61AF               	cpfslt	___ftadd@exp1& (0+255),b
 20396  004086  D015               	goto	i2l7847
 20397                           
 20398                           ; BSR set to: 0
 20399  004088  0100               	movlb	0	; () banked
 20400  00408A  0100               	movlb	0	; () banked
 20401  00408C  51AF               	movf	___ftadd@exp1& (0+255),w,b
 20402  00408E  0800               	sublw	0
 20403  004090  0100               	movlb	0	; () banked
 20404  004092  0100               	movlb	0	; () banked
 20405  004094  25AE               	addwf	___ftadd@exp2& (0+255),w,b
 20406  004096  0100               	movlb	0	; () banked
 20407  004098  6FA8               	movwf	??___ftadd& (0+255),b
 20408  00409A  0E19               	movlw	25
 20409  00409C  0100               	movlb	0	; () banked
 20410  00409E  5DA8               	subwf	??___ftadd& (0+255),w,b
 20411  0040A0  A0D8               	btfss	status,0,c
 20412  0040A2  D007               	goto	i2l7847
 20413  0040A4                     i2l1168:
 20414                           
 20415                           ; BSR set to: 0
 20416  0040A4  C0A5  F0A2         	movff	___ftadd@f2,?___ftadd
 20417  0040A8  C0A6  F0A3         	movff	___ftadd@f2+1,?___ftadd+1
 20418  0040AC  C0A7  F0A4         	movff	___ftadd@f2+2,?___ftadd+2
 20419  0040B0  D148               	goto	i2l1169
 20420  0040B2                     i2l7847:
 20421                           
 20422                           ; BSR set to: 0
 20423  0040B2  0100               	movlb	0	; () banked
 20424  0040B4  0100               	movlb	0	; () banked
 20425  0040B6  51AE               	movf	___ftadd@exp2& (0+255),w,b
 20426  0040B8  B4D8               	btfsc	status,2,c
 20427  0040BA  D015               	goto	i2l1172
 20428                           
 20429                           ; BSR set to: 0
 20430  0040BC  0100               	movlb	0	; () banked
 20431  0040BE  0100               	movlb	0	; () banked
 20432  0040C0  51AF               	movf	___ftadd@exp1& (0+255),w,b
 20433  0040C2  0100               	movlb	0	; () banked
 20434  0040C4  0100               	movlb	0	; () banked
 20435  0040C6  61AE               	cpfslt	___ftadd@exp2& (0+255),b
 20436  0040C8  D015               	goto	i2l7853
 20437                           
 20438                           ; BSR set to: 0
 20439  0040CA  0100               	movlb	0	; () banked
 20440  0040CC  0100               	movlb	0	; () banked
 20441  0040CE  51AE               	movf	___ftadd@exp2& (0+255),w,b
 20442  0040D0  0800               	sublw	0
 20443  0040D2  0100               	movlb	0	; () banked
 20444  0040D4  0100               	movlb	0	; () banked
 20445  0040D6  25AF               	addwf	___ftadd@exp1& (0+255),w,b
 20446  0040D8  0100               	movlb	0	; () banked
 20447  0040DA  6FA8               	movwf	??___ftadd& (0+255),b
 20448  0040DC  0E19               	movlw	25
 20449  0040DE  0100               	movlb	0	; () banked
 20450  0040E0  5DA8               	subwf	??___ftadd& (0+255),w,b
 20451  0040E2  A0D8               	btfss	status,0,c
 20452  0040E4  D007               	goto	i2l7853
 20453  0040E6                     i2l1172:
 20454                           
 20455                           ; BSR set to: 0
 20456  0040E6  C0A2  F0A2         	movff	___ftadd@f1,?___ftadd
 20457  0040EA  C0A3  F0A3         	movff	___ftadd@f1+1,?___ftadd+1
 20458  0040EE  C0A4  F0A4         	movff	___ftadd@f1+2,?___ftadd+2
 20459  0040F2  D127               	goto	i2l1169
 20460  0040F4                     i2l7853:
 20461                           
 20462                           ; BSR set to: 0
 20463  0040F4  0100               	movlb	0	; () banked
 20464  0040F6  6FA8               	movwf	??___ftadd& (0+255),b
 20465  0040F8  0E06               	movlw	6
 20466  0040FA  0100               	movlb	0	; () banked
 20467  0040FC  0100               	movlb	0	; () banked
 20468  0040FE  6FAD               	movwf	___ftadd@sign& (0+255),b
 20469  004100  0100               	movlb	0	; () banked
 20470  004102  51A8               	movf	??___ftadd& (0+255),w,b
 20471                           
 20472                           ; BSR set to: 0
 20473  004104  0100               	movlb	0	; () banked
 20474  004106  0100               	movlb	0	; () banked
 20475  004108  AFA4               	btfss	(___ftadd@f1+2)& (0+255),7,b
 20476  00410A  D003               	goto	i2l7859
 20477                           
 20478                           ; BSR set to: 0
 20479  00410C  0100               	movlb	0	; () banked
 20480  00410E  0100               	movlb	0	; () banked
 20481  004110  8FAD               	bsf	___ftadd@sign& (0+255),7,b
 20482  004112                     i2l7859:
 20483                           
 20484                           ; BSR set to: 0
 20485  004112  0100               	movlb	0	; () banked
 20486  004114  0100               	movlb	0	; () banked
 20487  004116  AFA7               	btfss	(___ftadd@f2+2)& (0+255),7,b
 20488  004118  D003               	goto	i2l1174
 20489                           
 20490                           ; BSR set to: 0
 20491  00411A  0100               	movlb	0	; () banked
 20492  00411C  0100               	movlb	0	; () banked
 20493  00411E  8DAD               	bsf	___ftadd@sign& (0+255),6,b
 20494  004120                     i2l1174:
 20495                           
 20496                           ; BSR set to: 0
 20497  004120  0100               	movlb	0	; () banked
 20498  004122  0100               	movlb	0	; () banked
 20499  004124  8FA3               	bsf	(___ftadd@f1+1)& (0+255),7,b
 20500                           
 20501                           ; BSR set to: 0
 20502  004126  0EFF               	movlw	255
 20503  004128  0100               	movlb	0	; () banked
 20504  00412A  0100               	movlb	0	; () banked
 20505  00412C  17A2               	andwf	___ftadd@f1& (0+255),f,b
 20506  00412E  0EFF               	movlw	255
 20507  004130  0100               	movlb	0	; () banked
 20508  004132  0100               	movlb	0	; () banked
 20509  004134  17A3               	andwf	(___ftadd@f1+1)& (0+255),f,b
 20510  004136  0E00               	movlw	0
 20511  004138  0100               	movlb	0	; () banked
 20512  00413A  0100               	movlb	0	; () banked
 20513  00413C  17A4               	andwf	(___ftadd@f1+2)& (0+255),f,b
 20514  00413E  0100               	movlb	0	; () banked
 20515  004140  0100               	movlb	0	; () banked
 20516  004142  8FA6               	bsf	(___ftadd@f2+1)& (0+255),7,b
 20517                           
 20518                           ; BSR set to: 0
 20519  004144  0EFF               	movlw	255
 20520  004146  0100               	movlb	0	; () banked
 20521  004148  0100               	movlb	0	; () banked
 20522  00414A  17A5               	andwf	___ftadd@f2& (0+255),f,b
 20523  00414C  0EFF               	movlw	255
 20524  00414E  0100               	movlb	0	; () banked
 20525  004150  0100               	movlb	0	; () banked
 20526  004152  17A6               	andwf	(___ftadd@f2+1)& (0+255),f,b
 20527  004154  0E00               	movlw	0
 20528  004156  0100               	movlb	0	; () banked
 20529  004158  0100               	movlb	0	; () banked
 20530  00415A  17A7               	andwf	(___ftadd@f2+2)& (0+255),f,b
 20531                           
 20532                           ; BSR set to: 0
 20533  00415C  0100               	movlb	0	; () banked
 20534  00415E  0100               	movlb	0	; () banked
 20535  004160  51AE               	movf	___ftadd@exp2& (0+255),w,b
 20536  004162  0100               	movlb	0	; () banked
 20537  004164  0100               	movlb	0	; () banked
 20538  004166  61AF               	cpfslt	___ftadd@exp1& (0+255),b
 20539  004168  D02F               	goto	i2l7879
 20540  00416A                     i2l7869:
 20541                           
 20542                           ; BSR set to: 0
 20543  00416A  0100               	movlb	0	; () banked
 20544  00416C  90D8               	bcf	status,0,c
 20545  00416E  0100               	movlb	0	; () banked
 20546  004170  37A5               	rlcf	___ftadd@f2& (0+255),f,b
 20547  004172  0100               	movlb	0	; () banked
 20548  004174  37A6               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 20549  004176  0100               	movlb	0	; () banked
 20550  004178  37A7               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 20551  00417A  0100               	movlb	0	; () banked
 20552  00417C  0100               	movlb	0	; () banked
 20553  00417E  07AE               	decf	___ftadd@exp2& (0+255),f,b
 20554                           
 20555                           ; BSR set to: 0
 20556  004180  0100               	movlb	0	; () banked
 20557  004182  0100               	movlb	0	; () banked
 20558  004184  51AE               	movf	___ftadd@exp2& (0+255),w,b
 20559  004186  0100               	movlb	0	; () banked
 20560  004188  0100               	movlb	0	; () banked
 20561  00418A  19AF               	xorwf	___ftadd@exp1& (0+255),w,b
 20562  00418C  B4D8               	btfsc	status,2,c
 20563  00418E  D014               	goto	i2l7877
 20564                           
 20565                           ; BSR set to: 0
 20566  004190  0100               	movlb	0	; () banked
 20567  004192  0100               	movlb	0	; () banked
 20568  004194  07AD               	decf	___ftadd@sign& (0+255),f,b
 20569  004196  0100               	movlb	0	; () banked
 20570  004198  51AD               	movf	___ftadd@sign& (0+255),w,b
 20571  00419A  0B07               	andlw	7
 20572  00419C  B4D8               	btfsc	status,2,c
 20573  00419E  D00C               	goto	i2l7877
 20574  0041A0  D7E4               	goto	i2l7869
 20575  0041A2                     i2l7875:
 20576                           
 20577                           ; BSR set to: 0
 20578  0041A2  0100               	movlb	0	; () banked
 20579  0041A4  90D8               	bcf	status,0,c
 20580  0041A6  0100               	movlb	0	; () banked
 20581  0041A8  33A4               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 20582  0041AA  0100               	movlb	0	; () banked
 20583  0041AC  33A3               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 20584  0041AE  0100               	movlb	0	; () banked
 20585  0041B0  33A2               	rrcf	___ftadd@f1& (0+255),f,b
 20586  0041B2  0100               	movlb	0	; () banked
 20587  0041B4  0100               	movlb	0	; () banked
 20588  0041B6  2BAF               	incf	___ftadd@exp1& (0+255),f,b
 20589  0041B8                     i2l7877:
 20590                           
 20591                           ; BSR set to: 0
 20592  0041B8  0100               	movlb	0	; () banked
 20593  0041BA  0100               	movlb	0	; () banked
 20594  0041BC  51AE               	movf	___ftadd@exp2& (0+255),w,b
 20595  0041BE  0100               	movlb	0	; () banked
 20596  0041C0  0100               	movlb	0	; () banked
 20597  0041C2  63AF               	cpfseq	___ftadd@exp1& (0+255),b
 20598  0041C4  D7EE               	goto	i2l7875
 20599  0041C6  D035               	goto	i2l1183
 20600  0041C8                     i2l7879:
 20601                           
 20602                           ; BSR set to: 0
 20603  0041C8  0100               	movlb	0	; () banked
 20604  0041CA  0100               	movlb	0	; () banked
 20605  0041CC  51AF               	movf	___ftadd@exp1& (0+255),w,b
 20606  0041CE  0100               	movlb	0	; () banked
 20607  0041D0  0100               	movlb	0	; () banked
 20608  0041D2  61AE               	cpfslt	___ftadd@exp2& (0+255),b
 20609  0041D4  D02E               	goto	i2l1183
 20610  0041D6                     i2l7881:
 20611                           
 20612                           ; BSR set to: 0
 20613  0041D6  0100               	movlb	0	; () banked
 20614  0041D8  90D8               	bcf	status,0,c
 20615  0041DA  0100               	movlb	0	; () banked
 20616  0041DC  37A2               	rlcf	___ftadd@f1& (0+255),f,b
 20617  0041DE  0100               	movlb	0	; () banked
 20618  0041E0  37A3               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 20619  0041E2  0100               	movlb	0	; () banked
 20620  0041E4  37A4               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 20621  0041E6  0100               	movlb	0	; () banked
 20622  0041E8  0100               	movlb	0	; () banked
 20623  0041EA  07AF               	decf	___ftadd@exp1& (0+255),f,b
 20624                           
 20625                           ; BSR set to: 0
 20626  0041EC  0100               	movlb	0	; () banked
 20627  0041EE  0100               	movlb	0	; () banked
 20628  0041F0  51AE               	movf	___ftadd@exp2& (0+255),w,b
 20629  0041F2  0100               	movlb	0	; () banked
 20630  0041F4  0100               	movlb	0	; () banked
 20631  0041F6  19AF               	xorwf	___ftadd@exp1& (0+255),w,b
 20632  0041F8  B4D8               	btfsc	status,2,c
 20633  0041FA  D014               	goto	i2l7889
 20634                           
 20635                           ; BSR set to: 0
 20636  0041FC  0100               	movlb	0	; () banked
 20637  0041FE  0100               	movlb	0	; () banked
 20638  004200  07AD               	decf	___ftadd@sign& (0+255),f,b
 20639  004202  0100               	movlb	0	; () banked
 20640  004204  51AD               	movf	___ftadd@sign& (0+255),w,b
 20641  004206  0B07               	andlw	7
 20642  004208  B4D8               	btfsc	status,2,c
 20643  00420A  D00C               	goto	i2l7889
 20644  00420C  D7E4               	goto	i2l7881
 20645  00420E                     i2l7887:
 20646                           
 20647                           ; BSR set to: 0
 20648  00420E  0100               	movlb	0	; () banked
 20649  004210  90D8               	bcf	status,0,c
 20650  004212  0100               	movlb	0	; () banked
 20651  004214  33A7               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 20652  004216  0100               	movlb	0	; () banked
 20653  004218  33A6               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 20654  00421A  0100               	movlb	0	; () banked
 20655  00421C  33A5               	rrcf	___ftadd@f2& (0+255),f,b
 20656  00421E  0100               	movlb	0	; () banked
 20657  004220  0100               	movlb	0	; () banked
 20658  004222  2BAE               	incf	___ftadd@exp2& (0+255),f,b
 20659  004224                     i2l7889:
 20660                           
 20661                           ; BSR set to: 0
 20662  004224  0100               	movlb	0	; () banked
 20663  004226  0100               	movlb	0	; () banked
 20664  004228  51AE               	movf	___ftadd@exp2& (0+255),w,b
 20665  00422A  0100               	movlb	0	; () banked
 20666  00422C  0100               	movlb	0	; () banked
 20667  00422E  63AF               	cpfseq	___ftadd@exp1& (0+255),b
 20668  004230  D7EE               	goto	i2l7887
 20669  004232                     i2l1183:
 20670                           
 20671                           ; BSR set to: 0
 20672  004232  0100               	movlb	0	; () banked
 20673  004234  0100               	movlb	0	; () banked
 20674  004236  AFAD               	btfss	___ftadd@sign& (0+255),7,b
 20675  004238  D018               	goto	i2l1192
 20676                           
 20677                           ; BSR set to: 0
 20678  00423A  0EFF               	movlw	255
 20679  00423C  0100               	movlb	0	; () banked
 20680  00423E  0100               	movlb	0	; () banked
 20681  004240  1BA2               	xorwf	___ftadd@f1& (0+255),f,b
 20682  004242  0EFF               	movlw	255
 20683  004244  0100               	movlb	0	; () banked
 20684  004246  0100               	movlb	0	; () banked
 20685  004248  1BA3               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 20686  00424A  0EFF               	movlw	255
 20687  00424C  0100               	movlb	0	; () banked
 20688  00424E  0100               	movlb	0	; () banked
 20689  004250  1BA4               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 20690  004252  0E01               	movlw	1
 20691  004254  0100               	movlb	0	; () banked
 20692  004256  0100               	movlb	0	; () banked
 20693  004258  27A2               	addwf	___ftadd@f1& (0+255),f,b
 20694  00425A  0E00               	movlw	0
 20695  00425C  0100               	movlb	0	; () banked
 20696  00425E  0100               	movlb	0	; () banked
 20697  004260  23A3               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 20698  004262  0E00               	movlw	0
 20699  004264  0100               	movlb	0	; () banked
 20700  004266  0100               	movlb	0	; () banked
 20701  004268  23A4               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 20702  00426A                     i2l1192:
 20703                           
 20704                           ; BSR set to: 0
 20705  00426A  0100               	movlb	0	; () banked
 20706  00426C  0100               	movlb	0	; () banked
 20707  00426E  ADAD               	btfss	___ftadd@sign& (0+255),6,b
 20708  004270  D018               	goto	i2l7895
 20709                           
 20710                           ; BSR set to: 0
 20711  004272  0EFF               	movlw	255
 20712  004274  0100               	movlb	0	; () banked
 20713  004276  0100               	movlb	0	; () banked
 20714  004278  1BA5               	xorwf	___ftadd@f2& (0+255),f,b
 20715  00427A  0EFF               	movlw	255
 20716  00427C  0100               	movlb	0	; () banked
 20717  00427E  0100               	movlb	0	; () banked
 20718  004280  1BA6               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 20719  004282  0EFF               	movlw	255
 20720  004284  0100               	movlb	0	; () banked
 20721  004286  0100               	movlb	0	; () banked
 20722  004288  1BA7               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 20723  00428A  0E01               	movlw	1
 20724  00428C  0100               	movlb	0	; () banked
 20725  00428E  0100               	movlb	0	; () banked
 20726  004290  27A5               	addwf	___ftadd@f2& (0+255),f,b
 20727  004292  0E00               	movlw	0
 20728  004294  0100               	movlb	0	; () banked
 20729  004296  0100               	movlb	0	; () banked
 20730  004298  23A6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 20731  00429A  0E00               	movlw	0
 20732  00429C  0100               	movlb	0	; () banked
 20733  00429E  0100               	movlb	0	; () banked
 20734  0042A0  23A7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 20735  0042A2                     i2l7895:
 20736                           
 20737                           ; BSR set to: 0
 20738  0042A2  0100               	movlb	0	; () banked
 20739  0042A4  6FA8               	movwf	??___ftadd& (0+255),b
 20740  0042A6  0E00               	movlw	0
 20741  0042A8  0100               	movlb	0	; () banked
 20742  0042AA  0100               	movlb	0	; () banked
 20743  0042AC  6FAD               	movwf	___ftadd@sign& (0+255),b
 20744  0042AE  0100               	movlb	0	; () banked
 20745  0042B0  51A8               	movf	??___ftadd& (0+255),w,b
 20746                           
 20747                           ; BSR set to: 0
 20748  0042B2  0100               	movlb	0	; () banked
 20749  0042B4  0100               	movlb	0	; () banked
 20750  0042B6  51A2               	movf	___ftadd@f1& (0+255),w,b
 20751  0042B8  0100               	movlb	0	; () banked
 20752  0042BA  0100               	movlb	0	; () banked
 20753  0042BC  27A5               	addwf	___ftadd@f2& (0+255),f,b
 20754  0042BE  0100               	movlb	0	; () banked
 20755  0042C0  0100               	movlb	0	; () banked
 20756  0042C2  51A3               	movf	(___ftadd@f1+1)& (0+255),w,b
 20757  0042C4  0100               	movlb	0	; () banked
 20758  0042C6  0100               	movlb	0	; () banked
 20759  0042C8  23A6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 20760  0042CA  0100               	movlb	0	; () banked
 20761  0042CC  0100               	movlb	0	; () banked
 20762  0042CE  51A4               	movf	(___ftadd@f1+2)& (0+255),w,b
 20763  0042D0  0100               	movlb	0	; () banked
 20764  0042D2  0100               	movlb	0	; () banked
 20765  0042D4  23A7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 20766                           
 20767                           ; BSR set to: 0
 20768  0042D6  0100               	movlb	0	; () banked
 20769  0042D8  0100               	movlb	0	; () banked
 20770  0042DA  AFA7               	btfss	(___ftadd@f2+2)& (0+255),7,b
 20771  0042DC  D020               	goto	i2l7905
 20772                           
 20773                           ; BSR set to: 0
 20774  0042DE  0EFF               	movlw	255
 20775  0042E0  0100               	movlb	0	; () banked
 20776  0042E2  0100               	movlb	0	; () banked
 20777  0042E4  1BA5               	xorwf	___ftadd@f2& (0+255),f,b
 20778  0042E6  0EFF               	movlw	255
 20779  0042E8  0100               	movlb	0	; () banked
 20780  0042EA  0100               	movlb	0	; () banked
 20781  0042EC  1BA6               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 20782  0042EE  0EFF               	movlw	255
 20783  0042F0  0100               	movlb	0	; () banked
 20784  0042F2  0100               	movlb	0	; () banked
 20785  0042F4  1BA7               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 20786  0042F6  0E01               	movlw	1
 20787  0042F8  0100               	movlb	0	; () banked
 20788  0042FA  0100               	movlb	0	; () banked
 20789  0042FC  27A5               	addwf	___ftadd@f2& (0+255),f,b
 20790  0042FE  0E00               	movlw	0
 20791  004300  0100               	movlb	0	; () banked
 20792  004302  0100               	movlb	0	; () banked
 20793  004304  23A6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 20794  004306  0E00               	movlw	0
 20795  004308  0100               	movlb	0	; () banked
 20796  00430A  0100               	movlb	0	; () banked
 20797  00430C  23A7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 20798                           
 20799                           ; BSR set to: 0
 20800  00430E  0100               	movlb	0	; () banked
 20801  004310  6FA8               	movwf	??___ftadd& (0+255),b
 20802  004312  0E01               	movlw	1
 20803  004314  0100               	movlb	0	; () banked
 20804  004316  0100               	movlb	0	; () banked
 20805  004318  6FAD               	movwf	___ftadd@sign& (0+255),b
 20806  00431A  0100               	movlb	0	; () banked
 20807  00431C  51A8               	movf	??___ftadd& (0+255),w,b
 20808  00431E                     i2l7905:
 20809                           
 20810                           ; BSR set to: 0
 20811  00431E  C0A5  F060         	movff	___ftadd@f2,?___ftpack
 20812  004322  C0A6  F061         	movff	___ftadd@f2+1,?___ftpack+1
 20813  004326  C0A7  F062         	movff	___ftadd@f2+2,?___ftpack+2
 20814  00432A  C0AF  F063         	movff	___ftadd@exp1,?___ftpack+3
 20815  00432E  C0AD  F064         	movff	___ftadd@sign,?___ftpack+4
 20816  004332  ECC5  F02A         	call	___ftpack	;wreg free
 20817  004336  C062  F0A4         	movff	?___ftpack+2,?___ftadd+2
 20818  00433A  C061  F0A3         	movff	?___ftpack+1,?___ftadd+1
 20819  00433E  C060  F0A2         	movff	?___ftpack,?___ftadd
 20820  004342                     i2l1169:
 20821  004342  0012               	return	
 20822  004344                     __end_of___ftadd:
 20823                           	opt stack 0
 20824                           tosu	equ	0xFFF
 20825                           tosh	equ	0xFFE
 20826                           tosl	equ	0xFFD
 20827                           pclatu	equ	0xFFB
 20828                           pclath	equ	0xFFA
 20829                           tblptru	equ	0xFF8
 20830                           tblptrh	equ	0xFF7
 20831                           tblptrl	equ	0xFF6
 20832                           tablat	equ	0xFF5
 20833                           prodh	equ	0xFF4
 20834                           prodl	equ	0xFF3
 20835                           intcon	equ	0xFF2
 20836                           intcon2	equ	0xFF1
 20837                           indf0	equ	0xFEF
 20838                           postinc0	equ	0xFEE
 20839                           fsr0h	equ	0xFEA
 20840                           fsr0l	equ	0xFE9
 20841                           wreg	equ	0xFE8
 20842                           postinc1	equ	0xFE6
 20843                           postdec1	equ	0xFE5
 20844                           fsr1h	equ	0xFE2
 20845                           fsr1l	equ	0xFE1
 20846                           bsr	equ	0xFE0
 20847                           indf2	equ	0xFDF
 20848                           postinc2	equ	0xFDE
 20849                           postdec2	equ	0xFDD
 20850                           plusw2	equ	0xFDB
 20851                           fsr2h	equ	0xFDA
 20852                           fsr2l	equ	0xFD9
 20853                           status	equ	0xFD8
 20854                           
 20855 ;; *************** function ___ftpack *****************
 20856 ;; Defined at:
 20857 ;;		line 63 in file "/usr/opt/microchip/xc8/v1.20/sources/common/float.c"
 20858 ;; Parameters:    Size  Location     Type
 20859 ;;  arg             3    0[BANK0 ] unsigned um
 20860 ;;  exp             1    3[BANK0 ] unsigned char 
 20861 ;;  sign            1    4[BANK0 ] unsigned char 
 20862 ;; Auto vars:     Size  Location     Type
 20863 ;;		None
 20864 ;; Return value:  Size  Location     Type
 20865 ;;                  3    0[BANK0 ] float 
 20866 ;; Registers used:
 20867 ;;		wreg, status,2, status,0
 20868 ;; Tracked objects:
 20869 ;;		On entry : 0/0
 20870 ;;		On exit  : 0/0
 20871 ;;		Unchanged: 0/0
 20872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20873 ;;      Params:         0       5       0       0       0       0       0       0       0
 20874 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20875 ;;      Temps:          0       3       0       0       0       0       0       0       0
 20876 ;;      Totals:         0       8       0       0       0       0       0       0       0
 20877 ;;Total ram usage:        8 bytes
 20878 ;; Hardware stack levels used:    1
 20879 ;; This function calls:
 20880 ;;		Nothing
 20881 ;; This function is called by:
 20882 ;;		___ftadd
 20883 ;;		___ftdiv
 20884 ;;		___ftmul
 20885 ;;		___lltoft
 20886 ;;		___lwtoft
 20887 ;; This function uses a non-reentrant model
 20888 ;;
 20889                           
 20890                           	psect	text62
 20891  00558A                     __ptext62:
 20892                           	opt stack 0
 20893  00558A                     ___ftpack:
 20894                           	opt stack 16
 20895                           
 20896                           ;incstack = 0
 20897                           ;incstack = 0
 20898  00558A  0100               	movlb	0	; () banked
 20899  00558C  0100               	movlb	0	; () banked
 20900  00558E  5163               	movf	___ftpack@exp& (0+255),w,b
 20901  005590  B4D8               	btfsc	status,2,c
 20902  005592  D009               	goto	i2l7805
 20903                           
 20904                           ; BSR set to: 0
 20905  005594  0100               	movlb	0	; () banked
 20906  005596  0100               	movlb	0	; () banked
 20907  005598  5160               	movf	___ftpack@arg& (0+255),w,b
 20908  00559A  0100               	movlb	0	; () banked
 20909  00559C  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 20910  00559E  0100               	movlb	0	; () banked
 20911  0055A0  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 20912  0055A2  A4D8               	btfss	status,2,c
 20913  0055A4  D018               	goto	i2l7811
 20914  0055A6                     i2l7805:
 20915                           
 20916                           ; BSR set to: 0
 20917  0055A6  0E00               	movlw	0
 20918  0055A8  0100               	movlb	0	; () banked
 20919  0055AA  0100               	movlb	0	; () banked
 20920  0055AC  6F60               	movwf	?___ftpack& (0+255),b
 20921  0055AE  0E00               	movlw	0
 20922  0055B0  0100               	movlb	0	; () banked
 20923  0055B2  0100               	movlb	0	; () banked
 20924  0055B4  6F61               	movwf	(?___ftpack+1)& (0+255),b
 20925  0055B6  0E00               	movlw	0
 20926  0055B8  0100               	movlb	0	; () banked
 20927  0055BA  0100               	movlb	0	; () banked
 20928  0055BC  6F62               	movwf	(?___ftpack+2)& (0+255),b
 20929  0055BE  D091               	goto	i2l1131
 20930  0055C0                     i2l7809:
 20931                           
 20932                           ; BSR set to: 0
 20933  0055C0  0100               	movlb	0	; () banked
 20934  0055C2  0100               	movlb	0	; () banked
 20935  0055C4  2B63               	incf	___ftpack@exp& (0+255),f,b
 20936  0055C6  0100               	movlb	0	; () banked
 20937  0055C8  90D8               	bcf	status,0,c
 20938  0055CA  0100               	movlb	0	; () banked
 20939  0055CC  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20940  0055CE  0100               	movlb	0	; () banked
 20941  0055D0  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20942  0055D2  0100               	movlb	0	; () banked
 20943  0055D4  3360               	rrcf	___ftpack@arg& (0+255),f,b
 20944  0055D6                     i2l7811:
 20945                           
 20946                           ; BSR set to: 0
 20947  0055D6  0E00               	movlw	0
 20948  0055D8  0100               	movlb	0	; () banked
 20949  0055DA  0100               	movlb	0	; () banked
 20950  0055DC  1560               	andwf	___ftpack@arg& (0+255),w,b
 20951  0055DE  0100               	movlb	0	; () banked
 20952  0055E0  6F65               	movwf	??___ftpack& (0+255),b
 20953  0055E2  0E00               	movlw	0
 20954  0055E4  0100               	movlb	0	; () banked
 20955  0055E6  0100               	movlb	0	; () banked
 20956  0055E8  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 20957  0055EA  0100               	movlb	0	; () banked
 20958  0055EC  6F66               	movwf	(??___ftpack+1)& (0+255),b
 20959  0055EE  0EFE               	movlw	254
 20960  0055F0  0100               	movlb	0	; () banked
 20961  0055F2  0100               	movlb	0	; () banked
 20962  0055F4  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20963  0055F6  0100               	movlb	0	; () banked
 20964  0055F8  6F67               	movwf	(??___ftpack+2)& (0+255),b
 20965  0055FA  0100               	movlb	0	; () banked
 20966  0055FC  5165               	movf	??___ftpack& (0+255),w,b
 20967  0055FE  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 20968  005600  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 20969  005602  B4D8               	btfsc	status,2,c
 20970  005604  D018               	goto	i2l7817
 20971  005606  D7DC               	goto	i2l7809
 20972  005608                     i2l7813:
 20973                           
 20974                           ; BSR set to: 0
 20975  005608  0100               	movlb	0	; () banked
 20976  00560A  0100               	movlb	0	; () banked
 20977  00560C  2B63               	incf	___ftpack@exp& (0+255),f,b
 20978                           
 20979                           ; BSR set to: 0
 20980  00560E  0E01               	movlw	1
 20981  005610  0100               	movlb	0	; () banked
 20982  005612  0100               	movlb	0	; () banked
 20983  005614  2760               	addwf	___ftpack@arg& (0+255),f,b
 20984  005616  0E00               	movlw	0
 20985  005618  0100               	movlb	0	; () banked
 20986  00561A  0100               	movlb	0	; () banked
 20987  00561C  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 20988  00561E  0E00               	movlw	0
 20989  005620  0100               	movlb	0	; () banked
 20990  005622  0100               	movlb	0	; () banked
 20991  005624  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 20992  005626  0100               	movlb	0	; () banked
 20993  005628  90D8               	bcf	status,0,c
 20994  00562A  0100               	movlb	0	; () banked
 20995  00562C  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20996  00562E  0100               	movlb	0	; () banked
 20997  005630  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20998  005632  0100               	movlb	0	; () banked
 20999  005634  3360               	rrcf	___ftpack@arg& (0+255),f,b
 21000  005636                     i2l7817:
 21001                           
 21002                           ; BSR set to: 0
 21003  005636  0E00               	movlw	0
 21004  005638  0100               	movlb	0	; () banked
 21005  00563A  0100               	movlb	0	; () banked
 21006  00563C  1560               	andwf	___ftpack@arg& (0+255),w,b
 21007  00563E  0100               	movlb	0	; () banked
 21008  005640  6F65               	movwf	??___ftpack& (0+255),b
 21009  005642  0E00               	movlw	0
 21010  005644  0100               	movlb	0	; () banked
 21011  005646  0100               	movlb	0	; () banked
 21012  005648  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 21013  00564A  0100               	movlb	0	; () banked
 21014  00564C  6F66               	movwf	(??___ftpack+1)& (0+255),b
 21015  00564E  0EFF               	movlw	255
 21016  005650  0100               	movlb	0	; () banked
 21017  005652  0100               	movlb	0	; () banked
 21018  005654  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 21019  005656  0100               	movlb	0	; () banked
 21020  005658  6F67               	movwf	(??___ftpack+2)& (0+255),b
 21021  00565A  0100               	movlb	0	; () banked
 21022  00565C  5165               	movf	??___ftpack& (0+255),w,b
 21023  00565E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 21024  005660  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 21025  005662  B4D8               	btfsc	status,2,c
 21026  005664  D00C               	goto	i2l7821
 21027  005666  D7D0               	goto	i2l7813
 21028  005668                     i2l7819:
 21029                           
 21030                           ; BSR set to: 0
 21031  005668  0100               	movlb	0	; () banked
 21032  00566A  0100               	movlb	0	; () banked
 21033  00566C  0763               	decf	___ftpack@exp& (0+255),f,b
 21034  00566E  0100               	movlb	0	; () banked
 21035  005670  90D8               	bcf	status,0,c
 21036  005672  0100               	movlb	0	; () banked
 21037  005674  3760               	rlcf	___ftpack@arg& (0+255),f,b
 21038  005676  0100               	movlb	0	; () banked
 21039  005678  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 21040  00567A  0100               	movlb	0	; () banked
 21041  00567C  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 21042  00567E                     i2l7821:
 21043                           
 21044                           ; BSR set to: 0
 21045  00567E  0100               	movlb	0	; () banked
 21046  005680  0100               	movlb	0	; () banked
 21047  005682  AF61               	btfss	(___ftpack@arg+1)& (0+255),7,b
 21048  005684  D7F1               	goto	i2l7819
 21049                           
 21050                           ; BSR set to: 0
 21051  005686  0100               	movlb	0	; () banked
 21052  005688  0100               	movlb	0	; () banked
 21053  00568A  B163               	btfsc	___ftpack@exp& (0+255),0,b
 21054  00568C  D003               	goto	i2l7825
 21055                           
 21056                           ; BSR set to: 0
 21057  00568E  0100               	movlb	0	; () banked
 21058  005690  0100               	movlb	0	; () banked
 21059  005692  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 21060  005694                     i2l7825:
 21061                           
 21062                           ; BSR set to: 0
 21063  005694  0100               	movlb	0	; () banked
 21064  005696  90D8               	bcf	status,0,c
 21065  005698  3363               	rrcf	___ftpack@exp& (0+255),f,b
 21066  00569A  0100               	movlb	0	; () banked
 21067  00569C  0100               	movlb	0	; () banked
 21068  00569E  5163               	movf	___ftpack@exp& (0+255),w,b
 21069  0056A0  0100               	movlb	0	; () banked
 21070  0056A2  6F67               	movwf	(??___ftpack+2)& (0+255),b
 21071  0056A4  6B66               	clrf	(??___ftpack+1)& (0+255),b
 21072  0056A6  6B65               	clrf	??___ftpack& (0+255),b
 21073  0056A8  0100               	movlb	0	; () banked
 21074  0056AA  5165               	movf	??___ftpack& (0+255),w,b
 21075  0056AC  0100               	movlb	0	; () banked
 21076  0056AE  0100               	movlb	0	; () banked
 21077  0056B0  1360               	iorwf	___ftpack@arg& (0+255),f,b
 21078  0056B2  0100               	movlb	0	; () banked
 21079  0056B4  5166               	movf	(??___ftpack+1)& (0+255),w,b
 21080  0056B6  0100               	movlb	0	; () banked
 21081  0056B8  0100               	movlb	0	; () banked
 21082  0056BA  1361               	iorwf	(___ftpack@arg+1)& (0+255),f,b
 21083  0056BC  0100               	movlb	0	; () banked
 21084  0056BE  5167               	movf	(??___ftpack+2)& (0+255),w,b
 21085  0056C0  0100               	movlb	0	; () banked
 21086  0056C2  0100               	movlb	0	; () banked
 21087  0056C4  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 21088                           
 21089                           ; BSR set to: 0
 21090  0056C6  0100               	movlb	0	; () banked
 21091  0056C8  0100               	movlb	0	; () banked
 21092  0056CA  5164               	movf	___ftpack@sign& (0+255),w,b
 21093  0056CC  B4D8               	btfsc	status,2,c
 21094  0056CE  D003               	goto	i2l7831
 21095                           
 21096                           ; BSR set to: 0
 21097  0056D0  0100               	movlb	0	; () banked
 21098  0056D2  0100               	movlb	0	; () banked
 21099  0056D4  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 21100  0056D6                     i2l7831:
 21101                           
 21102                           ; BSR set to: 0
 21103  0056D6  C060  F060         	movff	___ftpack@arg,?___ftpack
 21104  0056DA  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 21105  0056DE  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 21106  0056E2                     i2l1131:
 21107                           
 21108                           ; BSR set to: 0
 21109  0056E2  0012               	return	
 21110  0056E4                     __end_of___ftpack:
 21111                           	opt stack 0
 21112                           tosu	equ	0xFFF
 21113                           tosh	equ	0xFFE
 21114                           tosl	equ	0xFFD
 21115                           pclatu	equ	0xFFB
 21116                           pclath	equ	0xFFA
 21117                           tblptru	equ	0xFF8
 21118                           tblptrh	equ	0xFF7
 21119                           tblptrl	equ	0xFF6
 21120                           tablat	equ	0xFF5
 21121                           prodh	equ	0xFF4
 21122                           prodl	equ	0xFF3
 21123                           intcon	equ	0xFF2
 21124                           intcon2	equ	0xFF1
 21125                           indf0	equ	0xFEF
 21126                           postinc0	equ	0xFEE
 21127                           fsr0h	equ	0xFEA
 21128                           fsr0l	equ	0xFE9
 21129                           wreg	equ	0xFE8
 21130                           postinc1	equ	0xFE6
 21131                           postdec1	equ	0xFE5
 21132                           fsr1h	equ	0xFE2
 21133                           fsr1l	equ	0xFE1
 21134                           bsr	equ	0xFE0
 21135                           indf2	equ	0xFDF
 21136                           postinc2	equ	0xFDE
 21137                           postdec2	equ	0xFDD
 21138                           plusw2	equ	0xFDB
 21139                           fsr2h	equ	0xFDA
 21140                           fsr2l	equ	0xFD9
 21141                           status	equ	0xFD8
 21142                           
 21143 ;; *************** function _tick *****************
 21144 ;; Defined at:
 21145 ;;		line 162 in file "RTC.c"
 21146 ;; Parameters:    Size  Location     Type
 21147 ;;  val             1   54[BANK0 ] unsigned char 
 21148 ;; Auto vars:     Size  Location     Type
 21149 ;;		None
 21150 ;; Return value:  Size  Location     Type
 21151 ;;                  1    wreg      unsigned char 
 21152 ;; Registers used:
 21153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 21154 ;; Tracked objects:
 21155 ;;		On entry : 0/0
 21156 ;;		On exit  : 0/0
 21157 ;;		Unchanged: 0/0
 21158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21159 ;;      Params:         0       1       0       0       0       0       0       0       0
 21160 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21161 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21162 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21163 ;;Total ram usage:        2 bytes
 21164 ;; Hardware stack levels used:    1
 21165 ;; Hardware stack levels required when called:    3
 21166 ;; This function calls:
 21167 ;;		_saveTime
 21168 ;;		_daysOfMonth
 21169 ;;		_checkDST
 21170 ;; This function is called by:
 21171 ;;		_checkDST
 21172 ;;		_high_isr
 21173 ;; This function uses a non-reentrant model
 21174 ;;
 21175                           
 21176                           	psect	text63
 21177  005B62                     __ptext63:
 21178                           	opt stack 0
 21179  005B62                     _tick:
 21180                           	opt stack 16
 21181                           
 21182                           ;RTC.c: 163: switch (val)
 21183                           
 21184                           ; BSR set to: 0
 21185                           ;incstack = 0
 21186                           ;incstack = 0
 21187  005B62  D067               	goto	i2l7367
 21188  005B64                     i2l7339:
 21189                           
 21190                           ;RTC.c: 166: if (++date.second >= 60)
 21191  005B64  0101               	movlb	1	; () banked
 21192  005B66  0101               	movlb	1	; () banked
 21193  005B68  2B59               	incf	_date& (0+255),f,b
 21194  005B6A  0E3B               	movlw	59
 21195  005B6C  0101               	movlb	1	; () banked
 21196  005B6E  6559               	cpfsgt	_date& (0+255),b
 21197  005B70  D075               	goto	i2l257
 21198                           
 21199                           ; BSR set to: 1
 21200                           ;RTC.c: 167: {
 21201                           ;RTC.c: 168: date.second = 0;
 21202  005B72  0100               	movlb	0	; () banked
 21203  005B74  6F97               	movwf	??_tick& (0+255),b
 21204  005B76  0E00               	movlw	0
 21205  005B78  0101               	movlb	1	; () banked
 21206  005B7A  0101               	movlb	1	; () banked
 21207  005B7C  6F59               	movwf	_date& (0+255),b
 21208  005B7E  0100               	movlb	0	; () banked
 21209  005B80  5197               	movf	??_tick& (0+255),w,b
 21210  005B82                     i2l7343:
 21211                           
 21212                           ; BSR set to: 0
 21213                           ;RTC.c: 170: saveTime(date);
 21214  005B82  EE21  F059         	lfsr	2,_date
 21215  005B86  EE10  F060         	lfsr	1,?_saveTime
 21216  005B8A  0E09               	movlw	9
 21217  005B8C                     i2u569_41:
 21218  005B8C  CFDE FFE6          	movff	postinc2,postinc1
 21219  005B90  2EE8               	decfsz	wreg,f,c
 21220  005B92  D7FC               	goto	i2u569_41
 21221  005B94  EC21  F033         	call	_saveTime	;wreg free
 21222                           
 21223                           ;RTC.c: 171: if (++date.minute >= 60)
 21224  005B98  0101               	movlb	1	; () banked
 21225  005B9A  EE21  F05A         	lfsr	2,_date+1
 21226  005B9E  2ADF               	incf	indf2,f,c
 21227  005BA0  0E3B               	movlw	59
 21228  005BA2  64DF               	cpfsgt	indf2,c
 21229  005BA4  D05B               	goto	i2l257
 21230                           
 21231                           ; BSR set to: 1
 21232                           ;RTC.c: 172: {
 21233                           ;RTC.c: 173: date.minute = 0;
 21234  005BA6  0100               	movlb	0	; () banked
 21235  005BA8  6F97               	movwf	??_tick& (0+255),b
 21236  005BAA  0E00               	movlw	0
 21237  005BAC  0101               	movlb	1	; () banked
 21238  005BAE  0101               	movlb	1	; () banked
 21239  005BB0  6F5A               	movwf	(_date+1)& (0+255),b
 21240  005BB2  0100               	movlb	0	; () banked
 21241  005BB4  5197               	movf	??_tick& (0+255),w,b
 21242  005BB6                     i2l7349:
 21243                           
 21244                           ; BSR set to: 0
 21245                           ;RTC.c: 175: date.hour++;
 21246  005BB6  0101               	movlb	1	; () banked
 21247  005BB8  0101               	movlb	1	; () banked
 21248  005BBA  2B5B               	incf	(_date+2)& (0+255),f,b
 21249                           
 21250                           ; BSR set to: 1
 21251                           ;RTC.c: 176: checkDST();
 21252  005BBC  EC3E  F029         	call	_checkDST	;wreg free
 21253                           
 21254                           ;RTC.c: 177: if (date.hour >= 24)
 21255  005BC0  0101               	movlb	1	; () banked
 21256  005BC2  EE21  F05B         	lfsr	2,_date+2
 21257  005BC6  0E17               	movlw	23
 21258  005BC8  64DF               	cpfsgt	indf2,c
 21259  005BCA  D048               	goto	i2l257
 21260                           
 21261                           ; BSR set to: 1
 21262                           ;RTC.c: 178: {
 21263                           ;RTC.c: 179: date.hour = 0;
 21264  005BCC  0100               	movlb	0	; () banked
 21265  005BCE  6F97               	movwf	??_tick& (0+255),b
 21266  005BD0  0E00               	movlw	0
 21267  005BD2  0101               	movlb	1	; () banked
 21268  005BD4  0101               	movlb	1	; () banked
 21269  005BD6  6F5B               	movwf	(_date+2)& (0+255),b
 21270  005BD8  0100               	movlb	0	; () banked
 21271  005BDA  5197               	movf	??_tick& (0+255),w,b
 21272  005BDC                     i2l7357:
 21273                           
 21274                           ; BSR set to: 0
 21275                           ;RTC.c: 181: if (++date.day >= daysOfMonth(date.month, date.year))
 21276  005BDC  C15E  F067         	movff	_date+5,?_daysOfMonth
 21277  005BE0  C15F  F068         	movff	_date+6,?_daysOfMonth+1
 21278  005BE4  C160  F069         	movff	_date+7,?_daysOfMonth+2
 21279  005BE8  EC03  F030         	call	_daysOfMonth	;wreg free
 21280  005BEC  0101               	movlb	1	; () banked
 21281  005BEE  0101               	movlb	1	; () banked
 21282  005BF0  2B5C               	incf	(_date+3)& (0+255),f,b
 21283  005BF2  0101               	movlb	1	; () banked
 21284  005BF4  5D5C               	subwf	(_date+3)& (0+255),w,b
 21285  005BF6  A0D8               	btfss	status,0,c
 21286  005BF8  D031               	goto	i2l257
 21287                           
 21288                           ; BSR set to: 1
 21289                           ;RTC.c: 182: {
 21290                           ;RTC.c: 183: date.day = 1;
 21291  005BFA  0100               	movlb	0	; () banked
 21292  005BFC  6F97               	movwf	??_tick& (0+255),b
 21293  005BFE  0E01               	movlw	1
 21294  005C00  0101               	movlb	1	; () banked
 21295  005C02  0101               	movlb	1	; () banked
 21296  005C04  6F5C               	movwf	(_date+3)& (0+255),b
 21297  005C06  0100               	movlb	0	; () banked
 21298  005C08  5197               	movf	??_tick& (0+255),w,b
 21299  005C0A                     i2l7361:
 21300                           
 21301                           ; BSR set to: 0
 21302                           ;RTC.c: 185: if (++date.month > 12)
 21303  005C0A  0101               	movlb	1	; () banked
 21304  005C0C  EE21  F05E         	lfsr	2,_date+5
 21305  005C10  2ADF               	incf	indf2,f,c
 21306  005C12  0E0C               	movlw	12
 21307  005C14  64DF               	cpfsgt	indf2,c
 21308  005C16  D022               	goto	i2l257
 21309                           
 21310                           ; BSR set to: 1
 21311                           ;RTC.c: 186: {
 21312                           ;RTC.c: 187: date.month = 1;
 21313  005C18  0100               	movlb	0	; () banked
 21314  005C1A  6F97               	movwf	??_tick& (0+255),b
 21315  005C1C  0E01               	movlw	1
 21316  005C1E  0101               	movlb	1	; () banked
 21317  005C20  0101               	movlb	1	; () banked
 21318  005C22  6F5E               	movwf	(_date+5)& (0+255),b
 21319  005C24  0100               	movlb	0	; () banked
 21320  005C26  5197               	movf	??_tick& (0+255),w,b
 21321  005C28                     i2l7365:
 21322                           
 21323                           ; BSR set to: 0
 21324                           ;RTC.c: 189: ++date.year;
 21325  005C28  0101               	movlb	1	; () banked
 21326  005C2A  0101               	movlb	1	; () banked
 21327  005C2C  4B5F               	infsnz	(_date+6)& (0+255),f,b
 21328  005C2E  2B60               	incf	(_date+7)& (0+255),f,b
 21329  005C30  D015               	goto	i2l257
 21330  005C32                     i2l7367:
 21331  005C32  0100               	movlb	0	; () banked
 21332  005C34  0100               	movlb	0	; () banked
 21333  005C36  5196               	movf	tick@val& (0+255),w,b
 21334                           
 21335                           ; Switch size 1, requested type "space"
 21336                           ; Number of cases is 6, Range of values is 0 to 5
 21337                           ; switch strategies available:
 21338                           ; Name         Instructions Cycles
 21339                           ; simple_byte           19    10 (average)
 21340                           ;	Chosen strategy is simple_byte
 21341  005C38  0A00               	xorlw	0	; case 0
 21342  005C3A  B4D8               	btfsc	status,2,c
 21343  005C3C  D793               	goto	i2l7339
 21344  005C3E  0A01               	xorlw	1	; case 1
 21345  005C40  B4D8               	btfsc	status,2,c
 21346  005C42  D79F               	goto	i2l7343
 21347  005C44  0A03               	xorlw	3	; case 2
 21348  005C46  B4D8               	btfsc	status,2,c
 21349  005C48  D7B6               	goto	i2l7349
 21350  005C4A  0A01               	xorlw	1	; case 3
 21351  005C4C  B4D8               	btfsc	status,2,c
 21352  005C4E  D7C6               	goto	i2l7357
 21353  005C50  0A07               	xorlw	7	; case 4
 21354  005C52  B4D8               	btfsc	status,2,c
 21355  005C54  D7DA               	goto	i2l7361
 21356  005C56  0A01               	xorlw	1	; case 5
 21357  005C58  B4D8               	btfsc	status,2,c
 21358  005C5A  D7E6               	goto	i2l7365
 21359  005C5C                     i2l257:
 21360  005C5C  0012               	return	
 21361  005C5E                     __end_of_tick:
 21362                           	opt stack 0
 21363                           tosu	equ	0xFFF
 21364                           tosh	equ	0xFFE
 21365                           tosl	equ	0xFFD
 21366                           pclatu	equ	0xFFB
 21367                           pclath	equ	0xFFA
 21368                           tblptru	equ	0xFF8
 21369                           tblptrh	equ	0xFF7
 21370                           tblptrl	equ	0xFF6
 21371                           tablat	equ	0xFF5
 21372                           prodh	equ	0xFF4
 21373                           prodl	equ	0xFF3
 21374                           intcon	equ	0xFF2
 21375                           intcon2	equ	0xFF1
 21376                           indf0	equ	0xFEF
 21377                           postinc0	equ	0xFEE
 21378                           fsr0h	equ	0xFEA
 21379                           fsr0l	equ	0xFE9
 21380                           wreg	equ	0xFE8
 21381                           postinc1	equ	0xFE6
 21382                           postdec1	equ	0xFE5
 21383                           fsr1h	equ	0xFE2
 21384                           fsr1l	equ	0xFE1
 21385                           bsr	equ	0xFE0
 21386                           indf2	equ	0xFDF
 21387                           postinc2	equ	0xFDE
 21388                           postdec2	equ	0xFDD
 21389                           plusw2	equ	0xFDB
 21390                           fsr2h	equ	0xFDA
 21391                           fsr2l	equ	0xFD9
 21392                           status	equ	0xFD8
 21393                           
 21394 ;; *************** function _checkDST *****************
 21395 ;; Defined at:
 21396 ;;		line 138 in file "RTC.c"
 21397 ;; Parameters:    Size  Location     Type
 21398 ;;		None
 21399 ;; Auto vars:     Size  Location     Type
 21400 ;;		None
 21401 ;; Return value:  Size  Location     Type
 21402 ;;		None               void
 21403 ;; Registers used:
 21404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 21405 ;; Tracked objects:
 21406 ;;		On entry : 0/0
 21407 ;;		On exit  : 0/0
 21408 ;;		Unchanged: 0/0
 21409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21410 ;;      Params:         0       0       0       0       0       0       0       0       0
 21411 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21412 ;;      Temps:          0       7       0       0       0       0       0       0       0
 21413 ;;      Totals:         0       9       0       0       0       0       0       0       0
 21414 ;;Total ram usage:        9 bytes
 21415 ;; Hardware stack levels used:    1
 21416 ;; Hardware stack levels required when called:    2
 21417 ;; This function calls:
 21418 ;;		_dayOfWeek
 21419 ;;		_tick
 21420 ;; This function is called by:
 21421 ;;		_tick
 21422 ;; This function uses a non-reentrant model
 21423 ;;
 21424                           
 21425                           	psect	text64
 21426  00527C                     __ptext64:
 21427                           	opt stack 0
 21428  00527C                     _checkDST:
 21429                           	opt stack 16
 21430                           
 21431                           ;RTC.c: 139: if ((date.dst ^ (1 & ((date.day >= ((((2)*7)-dayOfWeek((date.year),(3),((2)
      +                          *7)))) && date.month >= 3) && (date.day < ((((1)*7)-dayOfWeek((date.year),(11),((1)*7)))
      +                          ) && date.month < 11)))) && date.hour == 1)
 21432                           
 21433                           ;incstack = 0
 21434                           ;incstack = 0
 21435  00527C  0100               	movlb	0	; () banked
 21436  00527E  6F8D               	movwf	??_checkDST& (0+255),b
 21437  005280  0E00               	movlw	0
 21438  005282  0100               	movlb	0	; () banked
 21439  005284  0100               	movlb	0	; () banked
 21440  005286  6F95               	movwf	_checkDST$308& (0+255),b
 21441  005288  0100               	movlb	0	; () banked
 21442  00528A  518D               	movf	??_checkDST& (0+255),w,b
 21443                           
 21444                           ; BSR set to: 0
 21445  00528C  C15F  F07E         	movff	_date+6,?_dayOfWeek
 21446  005290  0100               	movlb	0	; () banked
 21447  005292  6F8D               	movwf	??_checkDST& (0+255),b
 21448  005294  0E03               	movlw	3
 21449  005296  0100               	movlb	0	; () banked
 21450  005298  0100               	movlb	0	; () banked
 21451  00529A  6F7F               	movwf	(?_dayOfWeek+1)& (0+255),b
 21452  00529C  0100               	movlb	0	; () banked
 21453  00529E  518D               	movf	??_checkDST& (0+255),w,b
 21454  0052A0  0100               	movlb	0	; () banked
 21455  0052A2  6F8E               	movwf	(??_checkDST+1)& (0+255),b
 21456  0052A4  0E0E               	movlw	14
 21457  0052A6  0100               	movlb	0	; () banked
 21458  0052A8  0100               	movlb	0	; () banked
 21459  0052AA  6F80               	movwf	(?_dayOfWeek+2)& (0+255),b
 21460  0052AC  0100               	movlb	0	; () banked
 21461  0052AE  518E               	movf	(??_checkDST+1)& (0+255),w,b
 21462  0052B0  ECA2  F021         	call	_dayOfWeek	;wreg free
 21463  0052B4  0100               	movlb	0	; () banked
 21464  0052B6  6F8F               	movwf	(??_checkDST+2)& (0+255),b
 21465  0052B8  6B90               	clrf	(??_checkDST+3)& (0+255),b
 21466  0052BA  0100               	movlb	0	; () banked
 21467  0052BC  1F8F               	comf	(??_checkDST+2)& (0+255),f,b
 21468  0052BE  1F90               	comf	(??_checkDST+3)& (0+255),f,b
 21469  0052C0  4B8F               	infsnz	(??_checkDST+2)& (0+255),f,b
 21470  0052C2  2B90               	incf	(??_checkDST+3)& (0+255),f,b
 21471  0052C4  0E0E               	movlw	14
 21472  0052C6  0100               	movlb	0	; () banked
 21473  0052C8  278F               	addwf	(??_checkDST+2)& (0+255),f,b
 21474  0052CA  0E00               	movlw	0
 21475  0052CC  2390               	addwfc	(??_checkDST+3)& (0+255),f,b
 21476  0052CE  0101               	movlb	1	; () banked
 21477  0052D0  0101               	movlb	1	; () banked
 21478  0052D2  515C               	movf	(_date+3)& (0+255),w,b
 21479  0052D4  0100               	movlb	0	; () banked
 21480  0052D6  6F91               	movwf	(??_checkDST+4)& (0+255),b
 21481  0052D8  6B92               	clrf	(??_checkDST+5)& (0+255),b
 21482  0052DA  0100               	movlb	0	; () banked
 21483  0052DC  5192               	movf	(??_checkDST+5)& (0+255),w,b
 21484  0052DE  0A80               	xorlw	128
 21485  0052E0  0100               	movlb	0	; () banked
 21486  0052E2  6F93               	movwf	(??_checkDST+6)& (0+255),b
 21487  0052E4  518F               	movf	(??_checkDST+2)& (0+255),w,b
 21488  0052E6  0100               	movlb	0	; () banked
 21489  0052E8  5D91               	subwf	(??_checkDST+4)& (0+255),w,b
 21490  0052EA  0100               	movlb	0	; () banked
 21491  0052EC  5190               	movf	(??_checkDST+3)& (0+255),w,b
 21492  0052EE  0A80               	xorlw	128
 21493  0052F0  0100               	movlb	0	; () banked
 21494  0052F2  5993               	subwfb	(??_checkDST+6)& (0+255),w,b
 21495  0052F4  A0D8               	btfss	status,0,c
 21496  0052F6  D04A               	goto	i2l7303
 21497                           
 21498                           ; BSR set to: 0
 21499  0052F8  0101               	movlb	1	; () banked
 21500  0052FA  EE21  F05E         	lfsr	2,_date+5
 21501  0052FE  0E02               	movlw	2
 21502  005300  64DF               	cpfsgt	indf2,c
 21503  005302  D044               	goto	i2l7303
 21504                           
 21505                           ; BSR set to: 1
 21506  005304  C15F  F07E         	movff	_date+6,?_dayOfWeek
 21507  005308  0100               	movlb	0	; () banked
 21508  00530A  6F8D               	movwf	??_checkDST& (0+255),b
 21509  00530C  0E0B               	movlw	11
 21510  00530E  0100               	movlb	0	; () banked
 21511  005310  0100               	movlb	0	; () banked
 21512  005312  6F7F               	movwf	(?_dayOfWeek+1)& (0+255),b
 21513  005314  0100               	movlb	0	; () banked
 21514  005316  518D               	movf	??_checkDST& (0+255),w,b
 21515  005318  0100               	movlb	0	; () banked
 21516  00531A  6F8E               	movwf	(??_checkDST+1)& (0+255),b
 21517  00531C  0E07               	movlw	7
 21518  00531E  0100               	movlb	0	; () banked
 21519  005320  0100               	movlb	0	; () banked
 21520  005322  6F80               	movwf	(?_dayOfWeek+2)& (0+255),b
 21521  005324  0100               	movlb	0	; () banked
 21522  005326  518E               	movf	(??_checkDST+1)& (0+255),w,b
 21523  005328  ECA2  F021         	call	_dayOfWeek	;wreg free
 21524  00532C  0100               	movlb	0	; () banked
 21525  00532E  6F8F               	movwf	(??_checkDST+2)& (0+255),b
 21526  005330  6B90               	clrf	(??_checkDST+3)& (0+255),b
 21527  005332  0100               	movlb	0	; () banked
 21528  005334  1F8F               	comf	(??_checkDST+2)& (0+255),f,b
 21529  005336  1F90               	comf	(??_checkDST+3)& (0+255),f,b
 21530  005338  4B8F               	infsnz	(??_checkDST+2)& (0+255),f,b
 21531  00533A  2B90               	incf	(??_checkDST+3)& (0+255),f,b
 21532  00533C  0E07               	movlw	7
 21533  00533E  0100               	movlb	0	; () banked
 21534  005340  278F               	addwf	(??_checkDST+2)& (0+255),f,b
 21535  005342  0E00               	movlw	0
 21536  005344  2390               	addwfc	(??_checkDST+3)& (0+255),f,b
 21537  005346  0101               	movlb	1	; () banked
 21538  005348  0101               	movlb	1	; () banked
 21539  00534A  515C               	movf	(_date+3)& (0+255),w,b
 21540  00534C  0100               	movlb	0	; () banked
 21541  00534E  6F91               	movwf	(??_checkDST+4)& (0+255),b
 21542  005350  6B92               	clrf	(??_checkDST+5)& (0+255),b
 21543  005352  0100               	movlb	0	; () banked
 21544  005354  5192               	movf	(??_checkDST+5)& (0+255),w,b
 21545  005356  0A80               	xorlw	128
 21546  005358  0100               	movlb	0	; () banked
 21547  00535A  6F93               	movwf	(??_checkDST+6)& (0+255),b
 21548  00535C  0100               	movlb	0	; () banked
 21549  00535E  518F               	movf	(??_checkDST+2)& (0+255),w,b
 21550  005360  0100               	movlb	0	; () banked
 21551  005362  5D91               	subwf	(??_checkDST+4)& (0+255),w,b
 21552  005364  0100               	movlb	0	; () banked
 21553  005366  5190               	movf	(??_checkDST+3)& (0+255),w,b
 21554  005368  0A80               	xorlw	128
 21555  00536A  0100               	movlb	0	; () banked
 21556  00536C  5993               	subwfb	(??_checkDST+6)& (0+255),w,b
 21557  00536E  B0D8               	btfsc	status,0,c
 21558  005370  D00D               	goto	i2l7303
 21559                           
 21560                           ; BSR set to: 0
 21561  005372  0E0B               	movlw	11
 21562  005374  0101               	movlb	1	; () banked
 21563  005376  0101               	movlb	1	; () banked
 21564  005378  615E               	cpfslt	(_date+5)& (0+255),b
 21565  00537A  D008               	goto	i2l7303
 21566                           
 21567                           ; BSR set to: 1
 21568  00537C  0100               	movlb	0	; () banked
 21569  00537E  6F8D               	movwf	??_checkDST& (0+255),b
 21570  005380  0E01               	movlw	1
 21571  005382  0100               	movlb	0	; () banked
 21572  005384  0100               	movlb	0	; () banked
 21573  005386  6F95               	movwf	_checkDST$308& (0+255),b
 21574  005388  0100               	movlb	0	; () banked
 21575  00538A  518D               	movf	??_checkDST& (0+255),w,b
 21576  00538C                     i2l7303:
 21577  00538C  0100               	movlb	0	; () banked
 21578  00538E  0100               	movlb	0	; () banked
 21579  005390  5195               	movf	_checkDST$308& (0+255),w,b
 21580  005392  0B01               	andlw	1
 21581  005394  0101               	movlb	1	; () banked
 21582  005396  0101               	movlb	1	; () banked
 21583  005398  1961               	xorwf	(_date+8)& (0+255),w,b
 21584  00539A  0900               	iorlw	0
 21585  00539C  B4D8               	btfsc	status,2,c
 21586  00539E  D034               	goto	i2l241
 21587                           
 21588                           ; BSR set to: 1
 21589  0053A0  0101               	movlb	1	; () banked
 21590  0053A2  0101               	movlb	1	; () banked
 21591  0053A4  055B               	decf	(_date+2)& (0+255),w,b
 21592  0053A6  A4D8               	btfss	status,2,c
 21593  0053A8  D02F               	goto	i2l241
 21594                           
 21595                           ; BSR set to: 1
 21596                           ;RTC.c: 140: {
 21597                           ;RTC.c: 141: date.dst = !date.dst;
 21598  0053AA  0101               	movlb	1	; () banked
 21599  0053AC  0101               	movlb	1	; () banked
 21600  0053AE  5161               	movf	(_date+8)& (0+255),w,b
 21601  0053B0  A4D8               	btfss	status,2,c
 21602  0053B2  D002               	goto	i2u564_40
 21603  0053B4  0E01               	movlw	1
 21604  0053B6  D001               	goto	i2u564_46
 21605  0053B8                     i2u564_40:
 21606  0053B8  0E00               	movlw	0
 21607  0053BA                     i2u564_46:
 21608  0053BA  0101               	movlb	1	; () banked
 21609  0053BC  0101               	movlb	1	; () banked
 21610  0053BE  6F61               	movwf	(_date+8)& (0+255),b
 21611                           
 21612                           ;RTC.c: 142: if (date.dst)
 21613  0053C0  0101               	movlb	1	; () banked
 21614  0053C2  0101               	movlb	1	; () banked
 21615  0053C4  5161               	movf	(_date+8)& (0+255),w,b
 21616  0053C6  B4D8               	btfsc	status,2,c
 21617  0053C8  D00B               	goto	i2l7311
 21618                           
 21619                           ; BSR set to: 1
 21620                           ;RTC.c: 143: {
 21621                           ;RTC.c: 144: tick(hour);
 21622  0053CA  0100               	movlb	0	; () banked
 21623  0053CC  6F8D               	movwf	??_checkDST& (0+255),b
 21624  0053CE  0E02               	movlw	2
 21625  0053D0  0100               	movlb	0	; () banked
 21626  0053D2  0100               	movlb	0	; () banked
 21627  0053D4  6F96               	movwf	?_tick& (0+255),b
 21628  0053D6  0100               	movlb	0	; () banked
 21629  0053D8  518D               	movf	??_checkDST& (0+255),w,b
 21630  0053DA  ECB1  F02D         	call	_tick	;wreg free
 21631                           
 21632                           ;RTC.c: 145: }
 21633  0053DE  D014               	goto	i2l241
 21634  0053E0                     i2l7311:
 21635                           
 21636                           ;RTC.c: 146: else
 21637                           ;RTC.c: 147: {
 21638                           ;RTC.c: 148: if (date.hour > 0)
 21639  0053E0  0101               	movlb	1	; () banked
 21640  0053E2  0101               	movlb	1	; () banked
 21641  0053E4  515B               	movf	(_date+2)& (0+255),w,b
 21642  0053E6  B4D8               	btfsc	status,2,c
 21643  0053E8  D004               	goto	i2l7315
 21644                           
 21645                           ; BSR set to: 1
 21646                           ;RTC.c: 149: {
 21647                           ;RTC.c: 150: date.hour--;
 21648  0053EA  0101               	movlb	1	; () banked
 21649  0053EC  0101               	movlb	1	; () banked
 21650  0053EE  075B               	decf	(_date+2)& (0+255),f,b
 21651                           
 21652                           ;RTC.c: 151: }
 21653  0053F0  D00B               	goto	i2l241
 21654  0053F2                     i2l7315:
 21655                           
 21656                           ; BSR set to: 1
 21657                           ;RTC.c: 152: else
 21658                           ;RTC.c: 153: {
 21659                           ;RTC.c: 154: date.hour = 0;
 21660  0053F2  0100               	movlb	0	; () banked
 21661  0053F4  6F8D               	movwf	??_checkDST& (0+255),b
 21662  0053F6  0E00               	movlw	0
 21663  0053F8  0101               	movlb	1	; () banked
 21664  0053FA  0101               	movlb	1	; () banked
 21665  0053FC  6F5B               	movwf	(_date+2)& (0+255),b
 21666  0053FE  0100               	movlb	0	; () banked
 21667  005400  518D               	movf	??_checkDST& (0+255),w,b
 21668                           
 21669                           ; BSR set to: 0
 21670                           ;RTC.c: 155: date.day--;
 21671  005402  0101               	movlb	1	; () banked
 21672  005404  0101               	movlb	1	; () banked
 21673  005406  075C               	decf	(_date+3)& (0+255),f,b
 21674  005408                     i2l241:
 21675  005408  0012               	return	
 21676  00540A                     __end_of_checkDST:
 21677                           	opt stack 0
 21678                           tosu	equ	0xFFF
 21679                           tosh	equ	0xFFE
 21680                           tosl	equ	0xFFD
 21681                           pclatu	equ	0xFFB
 21682                           pclath	equ	0xFFA
 21683                           tblptru	equ	0xFF8
 21684                           tblptrh	equ	0xFF7
 21685                           tblptrl	equ	0xFF6
 21686                           tablat	equ	0xFF5
 21687                           prodh	equ	0xFF4
 21688                           prodl	equ	0xFF3
 21689                           intcon	equ	0xFF2
 21690                           intcon2	equ	0xFF1
 21691                           indf0	equ	0xFEF
 21692                           postinc0	equ	0xFEE
 21693                           fsr0h	equ	0xFEA
 21694                           fsr0l	equ	0xFE9
 21695                           wreg	equ	0xFE8
 21696                           postinc1	equ	0xFE6
 21697                           postdec1	equ	0xFE5
 21698                           fsr1h	equ	0xFE2
 21699                           fsr1l	equ	0xFE1
 21700                           bsr	equ	0xFE0
 21701                           indf2	equ	0xFDF
 21702                           postinc2	equ	0xFDE
 21703                           postdec2	equ	0xFDD
 21704                           plusw2	equ	0xFDB
 21705                           fsr2h	equ	0xFDA
 21706                           fsr2l	equ	0xFD9
 21707                           status	equ	0xFD8
 21708                           
 21709 ;; *************** function _dayOfWeek *****************
 21710 ;; Defined at:
 21711 ;;		line 200 in file "RTC.c"
 21712 ;; Parameters:    Size  Location     Type
 21713 ;;  year            1   30[BANK0 ] unsigned char 
 21714 ;;  month           1   31[BANK0 ] unsigned char 
 21715 ;;  day             1   32[BANK0 ] unsigned char 
 21716 ;; Auto vars:     Size  Location     Type
 21717 ;;  tmp             4   41[BANK0 ] unsigned long 
 21718 ;; Return value:  Size  Location     Type
 21719 ;;                  1    wreg      unsigned char 
 21720 ;; Registers used:
 21721 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21722 ;; Tracked objects:
 21723 ;;		On entry : 0/0
 21724 ;;		On exit  : 0/0
 21725 ;;		Unchanged: 0/0
 21726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21727 ;;      Params:         0       3       0       0       0       0       0       0       0
 21728 ;;      Locals:         0       8       0       0       0       0       0       0       0
 21729 ;;      Temps:          0       4       0       0       0       0       0       0       0
 21730 ;;      Totals:         0      15       0       0       0       0       0       0       0
 21731 ;;Total ram usage:       15 bytes
 21732 ;; Hardware stack levels used:    1
 21733 ;; Hardware stack levels required when called:    1
 21734 ;; This function calls:
 21735 ;;		___awdiv
 21736 ;;		___llmod
 21737 ;;		___wmul
 21738 ;;		i2___awmod
 21739 ;; This function is called by:
 21740 ;;		_checkDST
 21741 ;; This function uses a non-reentrant model
 21742 ;;
 21743                           
 21744                           	psect	text65
 21745  004344                     __ptext65:
 21746                           	opt stack 0
 21747  004344                     _dayOfWeek:
 21748                           	opt stack 16
 21749                           
 21750                           ;RTC.c: 202: uint32_t tmp = (year % 200) * 365;
 21751                           
 21752                           ;incstack = 0
 21753                           ;incstack = 0
 21754  004344  0E00               	movlw	0
 21755  004346  0100               	movlb	0	; () banked
 21756  004348  0100               	movlb	0	; () banked
 21757  00434A  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 21758  00434C  0EC8               	movlw	200
 21759  00434E  0100               	movlb	0	; () banked
 21760  004350  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 21761  004352  0100               	movlb	0	; () banked
 21762  004354  0100               	movlb	0	; () banked
 21763  004356  C07E  F060         	movff	dayOfWeek@year,?i2___awmod
 21764  00435A  0100               	movlb	0	; () banked
 21765  00435C  0100               	movlb	0	; () banked
 21766  00435E  6B61               	clrf	(?i2___awmod+1)& (0+255),b
 21767  004360  EC21  F02F         	call	i2___awmod	;wreg free
 21768  004364  0100               	movlb	0	; () banked
 21769  004366  C060  F076         	movff	?i2___awmod,?___wmul
 21770  00436A  0100               	movlb	0	; () banked
 21771  00436C  C061  F077         	movff	?i2___awmod+1,?___wmul+1
 21772  004370  0E01               	movlw	1
 21773  004372  0100               	movlb	0	; () banked
 21774  004374  0100               	movlb	0	; () banked
 21775  004376  6F79               	movwf	(?___wmul+3)& (0+255),b
 21776  004378  0E6D               	movlw	109
 21777  00437A  0100               	movlb	0	; () banked
 21778  00437C  6F78               	movwf	(?___wmul+2)& (0+255),b
 21779  00437E  EC31  F035         	call	___wmul	;wreg free
 21780  004382  0100               	movlb	0	; () banked
 21781  004384  0100               	movlb	0	; () banked
 21782  004386  C076  F089         	movff	?___wmul,dayOfWeek@tmp
 21783  00438A  0100               	movlb	0	; () banked
 21784  00438C  0100               	movlb	0	; () banked
 21785  00438E  C077  F08A         	movff	?___wmul+1,dayOfWeek@tmp+1
 21786  004392  0100               	movlb	0	; () banked
 21787  004394  0E00               	movlw	0
 21788  004396  0100               	movlb	0	; () banked
 21789  004398  BF8A               	btfsc	(dayOfWeek@tmp+1)& (0+255),7,b
 21790  00439A  0EFF               	movlw	-1
 21791  00439C  0100               	movlb	0	; () banked
 21792  00439E  6F8B               	movwf	(dayOfWeek@tmp+2)& (0+255),b
 21793  0043A0  0100               	movlb	0	; () banked
 21794  0043A2  6F8C               	movwf	(dayOfWeek@tmp+3)& (0+255),b
 21795                           
 21796                           ; BSR set to: 0
 21797                           ;RTC.c: 203: tmp += (((year % 200) + 3) / 4);
 21798  0043A4  0E00               	movlw	0
 21799  0043A6  0100               	movlb	0	; () banked
 21800  0043A8  0100               	movlb	0	; () banked
 21801  0043AA  6F63               	movwf	(?i2___awmod+3)& (0+255),b
 21802  0043AC  0EC8               	movlw	200
 21803  0043AE  0100               	movlb	0	; () banked
 21804  0043B0  6F62               	movwf	(?i2___awmod+2)& (0+255),b
 21805  0043B2  0100               	movlb	0	; () banked
 21806  0043B4  0100               	movlb	0	; () banked
 21807  0043B6  C07E  F060         	movff	dayOfWeek@year,?i2___awmod
 21808  0043BA  0100               	movlb	0	; () banked
 21809  0043BC  0100               	movlb	0	; () banked
 21810  0043BE  6B61               	clrf	(?i2___awmod+1)& (0+255),b
 21811  0043C0  EC21  F02F         	call	i2___awmod	;wreg free
 21812  0043C4  0E03               	movlw	3
 21813  0043C6  0100               	movlb	0	; () banked
 21814  0043C8  0100               	movlb	0	; () banked
 21815  0043CA  2560               	addwf	?i2___awmod& (0+255),w,b
 21816  0043CC  0100               	movlb	0	; () banked
 21817  0043CE  0100               	movlb	0	; () banked
 21818  0043D0  6F69               	movwf	?___awdiv& (0+255),b
 21819  0043D2  0E00               	movlw	0
 21820  0043D4  0100               	movlb	0	; () banked
 21821  0043D6  0100               	movlb	0	; () banked
 21822  0043D8  2161               	addwfc	(?i2___awmod+1)& (0+255),w,b
 21823  0043DA  0100               	movlb	0	; () banked
 21824  0043DC  6F6A               	movwf	(?___awdiv+1)& (0+255),b
 21825  0043DE  0E00               	movlw	0
 21826  0043E0  0100               	movlb	0	; () banked
 21827  0043E2  0100               	movlb	0	; () banked
 21828  0043E4  6F6C               	movwf	(?___awdiv+3)& (0+255),b
 21829  0043E6  0E04               	movlw	4
 21830  0043E8  0100               	movlb	0	; () banked
 21831  0043EA  6F6B               	movwf	(?___awdiv+2)& (0+255),b
 21832  0043EC  EC1A  F02C         	call	___awdiv	;wreg free
 21833  0043F0  0100               	movlb	0	; () banked
 21834  0043F2  C069  F081         	movff	?___awdiv,??_dayOfWeek
 21835  0043F6  0100               	movlb	0	; () banked
 21836  0043F8  C06A  F082         	movff	?___awdiv+1,??_dayOfWeek+1
 21837  0043FC  0E00               	movlw	0
 21838  0043FE  0100               	movlb	0	; () banked
 21839  004400  BF82               	btfsc	(??_dayOfWeek+1)& (0+255),7,b
 21840  004402  0EFF               	movlw	255
 21841  004404  6F83               	movwf	(??_dayOfWeek+2)& (0+255),b
 21842  004406  6F84               	movwf	(??_dayOfWeek+3)& (0+255),b
 21843  004408  0100               	movlb	0	; () banked
 21844  00440A  5181               	movf	??_dayOfWeek& (0+255),w,b
 21845  00440C  0100               	movlb	0	; () banked
 21846  00440E  0100               	movlb	0	; () banked
 21847  004410  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 21848  004412  0100               	movlb	0	; () banked
 21849  004414  5182               	movf	(??_dayOfWeek+1)& (0+255),w,b
 21850  004416  0100               	movlb	0	; () banked
 21851  004418  0100               	movlb	0	; () banked
 21852  00441A  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 21853  00441C  0100               	movlb	0	; () banked
 21854  00441E  5183               	movf	(??_dayOfWeek+2)& (0+255),w,b
 21855  004420  0100               	movlb	0	; () banked
 21856  004422  0100               	movlb	0	; () banked
 21857  004424  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 21858  004426  0100               	movlb	0	; () banked
 21859  004428  5184               	movf	(??_dayOfWeek+3)& (0+255),w,b
 21860  00442A  0100               	movlb	0	; () banked
 21861  00442C  0100               	movlb	0	; () banked
 21862  00442E  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 21863                           
 21864                           ;RTC.c: 205: switch (month)
 21865  004430  D0A3               	goto	i2l7329
 21866  004432                     i2l7323:
 21867                           
 21868                           ; BSR set to: 0
 21869                           ;RTC.c: 208: tmp += 30;
 21870  004432  0E1E               	movlw	30
 21871  004434  0100               	movlb	0	; () banked
 21872  004436  0100               	movlb	0	; () banked
 21873  004438  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 21874  00443A  0E00               	movlw	0
 21875  00443C  0100               	movlb	0	; () banked
 21876  00443E  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 21877  004440  0E00               	movlw	0
 21878  004442  0100               	movlb	0	; () banked
 21879  004444  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 21880  004446  0E00               	movlw	0
 21881  004448  0100               	movlb	0	; () banked
 21882  00444A  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 21883  00444C                     i2l262:
 21884                           
 21885                           ; BSR set to: 0
 21886                           ;RTC.c: 211: tmp += 31;
 21887  00444C  0E1F               	movlw	31
 21888  00444E  0100               	movlb	0	; () banked
 21889  004450  0100               	movlb	0	; () banked
 21890  004452  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 21891  004454  0E00               	movlw	0
 21892  004456  0100               	movlb	0	; () banked
 21893  004458  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 21894  00445A  0E00               	movlw	0
 21895  00445C  0100               	movlb	0	; () banked
 21896  00445E  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 21897  004460  0E00               	movlw	0
 21898  004462  0100               	movlb	0	; () banked
 21899  004464  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 21900  004466                     i2l263:
 21901                           
 21902                           ; BSR set to: 0
 21903                           ;RTC.c: 214: tmp += 30;
 21904  004466  0E1E               	movlw	30
 21905  004468  0100               	movlb	0	; () banked
 21906  00446A  0100               	movlb	0	; () banked
 21907  00446C  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 21908  00446E  0E00               	movlw	0
 21909  004470  0100               	movlb	0	; () banked
 21910  004472  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 21911  004474  0E00               	movlw	0
 21912  004476  0100               	movlb	0	; () banked
 21913  004478  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 21914  00447A  0E00               	movlw	0
 21915  00447C  0100               	movlb	0	; () banked
 21916  00447E  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 21917  004480                     i2l264:
 21918                           
 21919                           ; BSR set to: 0
 21920                           ;RTC.c: 217: tmp += 31;
 21921  004480  0E1F               	movlw	31
 21922  004482  0100               	movlb	0	; () banked
 21923  004484  0100               	movlb	0	; () banked
 21924  004486  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 21925  004488  0E00               	movlw	0
 21926  00448A  0100               	movlb	0	; () banked
 21927  00448C  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 21928  00448E  0E00               	movlw	0
 21929  004490  0100               	movlb	0	; () banked
 21930  004492  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 21931  004494  0E00               	movlw	0
 21932  004496  0100               	movlb	0	; () banked
 21933  004498  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 21934  00449A                     i2l265:
 21935                           
 21936                           ; BSR set to: 0
 21937                           ;RTC.c: 220: tmp += 31;
 21938  00449A  0E1F               	movlw	31
 21939  00449C  0100               	movlb	0	; () banked
 21940  00449E  0100               	movlb	0	; () banked
 21941  0044A0  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 21942  0044A2  0E00               	movlw	0
 21943  0044A4  0100               	movlb	0	; () banked
 21944  0044A6  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 21945  0044A8  0E00               	movlw	0
 21946  0044AA  0100               	movlb	0	; () banked
 21947  0044AC  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 21948  0044AE  0E00               	movlw	0
 21949  0044B0  0100               	movlb	0	; () banked
 21950  0044B2  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 21951  0044B4                     i2l266:
 21952                           
 21953                           ; BSR set to: 0
 21954                           ;RTC.c: 223: tmp += 30;
 21955  0044B4  0E1E               	movlw	30
 21956  0044B6  0100               	movlb	0	; () banked
 21957  0044B8  0100               	movlb	0	; () banked
 21958  0044BA  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 21959  0044BC  0E00               	movlw	0
 21960  0044BE  0100               	movlb	0	; () banked
 21961  0044C0  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 21962  0044C2  0E00               	movlw	0
 21963  0044C4  0100               	movlb	0	; () banked
 21964  0044C6  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 21965  0044C8  0E00               	movlw	0
 21966  0044CA  0100               	movlb	0	; () banked
 21967  0044CC  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 21968  0044CE                     i2l267:
 21969                           
 21970                           ; BSR set to: 0
 21971                           ;RTC.c: 226: tmp += 31;
 21972  0044CE  0E1F               	movlw	31
 21973  0044D0  0100               	movlb	0	; () banked
 21974  0044D2  0100               	movlb	0	; () banked
 21975  0044D4  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 21976  0044D6  0E00               	movlw	0
 21977  0044D8  0100               	movlb	0	; () banked
 21978  0044DA  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 21979  0044DC  0E00               	movlw	0
 21980  0044DE  0100               	movlb	0	; () banked
 21981  0044E0  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 21982  0044E2  0E00               	movlw	0
 21983  0044E4  0100               	movlb	0	; () banked
 21984  0044E6  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 21985  0044E8                     i2l268:
 21986                           
 21987                           ; BSR set to: 0
 21988                           ;RTC.c: 229: tmp += 30;
 21989  0044E8  0E1E               	movlw	30
 21990  0044EA  0100               	movlb	0	; () banked
 21991  0044EC  0100               	movlb	0	; () banked
 21992  0044EE  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 21993  0044F0  0E00               	movlw	0
 21994  0044F2  0100               	movlb	0	; () banked
 21995  0044F4  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 21996  0044F6  0E00               	movlw	0
 21997  0044F8  0100               	movlb	0	; () banked
 21998  0044FA  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 21999  0044FC  0E00               	movlw	0
 22000  0044FE  0100               	movlb	0	; () banked
 22001  004500  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 22002  004502                     i2l269:
 22003                           
 22004                           ; BSR set to: 0
 22005                           ;RTC.c: 232: tmp += 31;
 22006  004502  0E1F               	movlw	31
 22007  004504  0100               	movlb	0	; () banked
 22008  004506  0100               	movlb	0	; () banked
 22009  004508  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 22010  00450A  0E00               	movlw	0
 22011  00450C  0100               	movlb	0	; () banked
 22012  00450E  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 22013  004510  0E00               	movlw	0
 22014  004512  0100               	movlb	0	; () banked
 22015  004514  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 22016  004516  0E00               	movlw	0
 22017  004518  0100               	movlb	0	; () banked
 22018  00451A  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 22019  00451C                     i2l270:
 22020                           
 22021                           ; BSR set to: 0
 22022                           ;RTC.c: 235: tmp += 28;
 22023  00451C  0E1C               	movlw	28
 22024  00451E  0100               	movlb	0	; () banked
 22025  004520  0100               	movlb	0	; () banked
 22026  004522  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 22027  004524  0E00               	movlw	0
 22028  004526  0100               	movlb	0	; () banked
 22029  004528  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 22030  00452A  0E00               	movlw	0
 22031  00452C  0100               	movlb	0	; () banked
 22032  00452E  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 22033  004530  0E00               	movlw	0
 22034  004532  0100               	movlb	0	; () banked
 22035  004534  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 22036                           
 22037                           ;RTC.c: 237: if ((year % 4) == 0)
 22038  004536  0100               	movlb	0	; () banked
 22039  004538  0100               	movlb	0	; () banked
 22040  00453A  517E               	movf	dayOfWeek@year& (0+255),w,b
 22041  00453C  0B03               	andlw	3
 22042  00453E  A4D8               	btfss	status,2,c
 22043  004540  D00D               	goto	i2l272
 22044                           
 22045                           ; BSR set to: 0
 22046                           ;RTC.c: 238: {
 22047                           ;RTC.c: 239: tmp++;
 22048  004542  0E01               	movlw	1
 22049  004544  0100               	movlb	0	; () banked
 22050  004546  0100               	movlb	0	; () banked
 22051  004548  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 22052  00454A  0E00               	movlw	0
 22053  00454C  0100               	movlb	0	; () banked
 22054  00454E  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 22055  004550  0E00               	movlw	0
 22056  004552  0100               	movlb	0	; () banked
 22057  004554  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 22058  004556  0E00               	movlw	0
 22059  004558  0100               	movlb	0	; () banked
 22060  00455A  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 22061  00455C                     i2l272:
 22062                           
 22063                           ; BSR set to: 0
 22064                           ;RTC.c: 243: tmp += 31;
 22065  00455C  0E1F               	movlw	31
 22066  00455E  0100               	movlb	0	; () banked
 22067  004560  0100               	movlb	0	; () banked
 22068  004562  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 22069  004564  0E00               	movlw	0
 22070  004566  0100               	movlb	0	; () banked
 22071  004568  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 22072  00456A  0E00               	movlw	0
 22073  00456C  0100               	movlb	0	; () banked
 22074  00456E  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 22075  004570  0E00               	movlw	0
 22076  004572  0100               	movlb	0	; () banked
 22077  004574  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 22078  004576  D027               	goto	i2l7331
 22079  004578                     i2l7329:
 22080                           
 22081                           ; BSR set to: 0
 22082  004578  0100               	movlb	0	; () banked
 22083  00457A  0100               	movlb	0	; () banked
 22084  00457C  517F               	movf	dayOfWeek@month& (0+255),w,b
 22085                           
 22086                           ; Switch size 1, requested type "space"
 22087                           ; Number of cases is 12, Range of values is 1 to 12
 22088                           ; switch strategies available:
 22089                           ; Name         Instructions Cycles
 22090                           ; simple_byte           37    19 (average)
 22091                           ;	Chosen strategy is simple_byte
 22092  00457E  0A01               	xorlw	1	; case 1
 22093  004580  B4D8               	btfsc	status,2,c
 22094  004582  D021               	goto	i2l7331
 22095  004584  0A03               	xorlw	3	; case 2
 22096  004586  B4D8               	btfsc	status,2,c
 22097  004588  D7E9               	goto	i2l272
 22098  00458A  0A01               	xorlw	1	; case 3
 22099  00458C  B4D8               	btfsc	status,2,c
 22100  00458E  D7C6               	goto	i2l270
 22101  004590  0A07               	xorlw	7	; case 4
 22102  004592  B4D8               	btfsc	status,2,c
 22103  004594  D7B6               	goto	i2l269
 22104  004596  0A01               	xorlw	1	; case 5
 22105  004598  B4D8               	btfsc	status,2,c
 22106  00459A  D7A6               	goto	i2l268
 22107  00459C  0A03               	xorlw	3	; case 6
 22108  00459E  B4D8               	btfsc	status,2,c
 22109  0045A0  D796               	goto	i2l267
 22110  0045A2  0A01               	xorlw	1	; case 7
 22111  0045A4  B4D8               	btfsc	status,2,c
 22112  0045A6  D786               	goto	i2l266
 22113  0045A8  0A0F               	xorlw	15	; case 8
 22114  0045AA  B4D8               	btfsc	status,2,c
 22115  0045AC  D776               	goto	i2l265
 22116  0045AE  0A01               	xorlw	1	; case 9
 22117  0045B0  B4D8               	btfsc	status,2,c
 22118  0045B2  D766               	goto	i2l264
 22119  0045B4  0A03               	xorlw	3	; case 10
 22120  0045B6  B4D8               	btfsc	status,2,c
 22121  0045B8  D756               	goto	i2l263
 22122  0045BA  0A01               	xorlw	1	; case 11
 22123  0045BC  B4D8               	btfsc	status,2,c
 22124  0045BE  D746               	goto	i2l262
 22125  0045C0  0A07               	xorlw	7	; case 12
 22126  0045C2  B4D8               	btfsc	status,2,c
 22127  0045C4  D736               	goto	i2l7323
 22128  0045C6                     i2l7331:
 22129                           
 22130                           ; BSR set to: 0
 22131                           ;RTC.c: 251: tmp += day;
 22132  0045C6  0100               	movlb	0	; () banked
 22133  0045C8  0100               	movlb	0	; () banked
 22134  0045CA  5180               	movf	dayOfWeek@day& (0+255),w,b
 22135  0045CC  0100               	movlb	0	; () banked
 22136  0045CE  0100               	movlb	0	; () banked
 22137  0045D0  2789               	addwf	dayOfWeek@tmp& (0+255),f,b
 22138  0045D2  0E00               	movlw	0
 22139  0045D4  0100               	movlb	0	; () banked
 22140  0045D6  238A               	addwfc	(dayOfWeek@tmp+1)& (0+255),f,b
 22141  0045D8  0100               	movlb	0	; () banked
 22142  0045DA  238B               	addwfc	(dayOfWeek@tmp+2)& (0+255),f,b
 22143  0045DC  0100               	movlb	0	; () banked
 22144  0045DE  238C               	addwfc	(dayOfWeek@tmp+3)& (0+255),f,b
 22145                           
 22146                           ;RTC.c: 252: tmp--;
 22147  0045E0  0100               	movlb	0	; () banked
 22148  0045E2  0100               	movlb	0	; () banked
 22149  0045E4  0789               	decf	dayOfWeek@tmp& (0+255),f,b
 22150  0045E6  0E00               	movlw	0
 22151  0045E8  0100               	movlb	0	; () banked
 22152  0045EA  5B8A               	subwfb	(dayOfWeek@tmp+1)& (0+255),f,b
 22153  0045EC  0100               	movlb	0	; () banked
 22154  0045EE  5B8B               	subwfb	(dayOfWeek@tmp+2)& (0+255),f,b
 22155  0045F0  0100               	movlb	0	; () banked
 22156  0045F2  5B8C               	subwfb	(dayOfWeek@tmp+3)& (0+255),f,b
 22157                           
 22158                           ; BSR set to: 0
 22159                           ;RTC.c: 255: return (uint8_t) ((tmp + 6) % 7);
 22160  0045F4  0E06               	movlw	6
 22161  0045F6  0100               	movlb	0	; () banked
 22162  0045F8  0100               	movlb	0	; () banked
 22163  0045FA  2589               	addwf	dayOfWeek@tmp& (0+255),w,b
 22164  0045FC  0100               	movlb	0	; () banked
 22165  0045FE  0100               	movlb	0	; () banked
 22166  004600  6F73               	movwf	?___llmod& (0+255),b
 22167  004602  0E00               	movlw	0
 22168  004604  0100               	movlb	0	; () banked
 22169  004606  0100               	movlb	0	; () banked
 22170  004608  218A               	addwfc	(dayOfWeek@tmp+1)& (0+255),w,b
 22171  00460A  0100               	movlb	0	; () banked
 22172  00460C  6F74               	movwf	(?___llmod+1)& (0+255),b
 22173  00460E  0E00               	movlw	0
 22174  004610  0100               	movlb	0	; () banked
 22175  004612  0100               	movlb	0	; () banked
 22176  004614  218B               	addwfc	(dayOfWeek@tmp+2)& (0+255),w,b
 22177  004616  0100               	movlb	0	; () banked
 22178  004618  6F75               	movwf	(?___llmod+2)& (0+255),b
 22179  00461A  0E00               	movlw	0
 22180  00461C  0100               	movlb	0	; () banked
 22181  00461E  0100               	movlb	0	; () banked
 22182  004620  218C               	addwfc	(dayOfWeek@tmp+3)& (0+255),w,b
 22183  004622  0100               	movlb	0	; () banked
 22184  004624  6F76               	movwf	(?___llmod+3)& (0+255),b
 22185  004626  0E07               	movlw	7
 22186  004628  0100               	movlb	0	; () banked
 22187  00462A  0100               	movlb	0	; () banked
 22188  00462C  6F77               	movwf	(?___llmod+4)& (0+255),b
 22189  00462E  0E00               	movlw	0
 22190  004630  0100               	movlb	0	; () banked
 22191  004632  6F78               	movwf	(?___llmod+5)& (0+255),b
 22192  004634  0E00               	movlw	0
 22193  004636  0100               	movlb	0	; () banked
 22194  004638  6F79               	movwf	(?___llmod+6)& (0+255),b
 22195  00463A  0E00               	movlw	0
 22196  00463C  0100               	movlb	0	; () banked
 22197  00463E  6F7A               	movwf	(?___llmod+7)& (0+255),b
 22198  004640  EC98  F02F         	call	___llmod	;wreg free
 22199  004644  0100               	movlb	0	; () banked
 22200  004646  0100               	movlb	0	; () banked
 22201  004648  5173               	movf	?___llmod& (0+255),w,b
 22202                           
 22203                           ; BSR set to: 0
 22204                           
 22205                           ; BSR set to: 0
 22206  00464A  0012               	return	
 22207  00464C                     __end_of_dayOfWeek:
 22208                           	opt stack 0
 22209                           tosu	equ	0xFFF
 22210                           tosh	equ	0xFFE
 22211                           tosl	equ	0xFFD
 22212                           pclatu	equ	0xFFB
 22213                           pclath	equ	0xFFA
 22214                           tblptru	equ	0xFF8
 22215                           tblptrh	equ	0xFF7
 22216                           tblptrl	equ	0xFF6
 22217                           tablat	equ	0xFF5
 22218                           prodh	equ	0xFF4
 22219                           prodl	equ	0xFF3
 22220                           intcon	equ	0xFF2
 22221                           intcon2	equ	0xFF1
 22222                           indf0	equ	0xFEF
 22223                           postinc0	equ	0xFEE
 22224                           fsr0h	equ	0xFEA
 22225                           fsr0l	equ	0xFE9
 22226                           wreg	equ	0xFE8
 22227                           postinc1	equ	0xFE6
 22228                           postdec1	equ	0xFE5
 22229                           fsr1h	equ	0xFE2
 22230                           fsr1l	equ	0xFE1
 22231                           bsr	equ	0xFE0
 22232                           indf2	equ	0xFDF
 22233                           postinc2	equ	0xFDE
 22234                           postdec2	equ	0xFDD
 22235                           plusw2	equ	0xFDB
 22236                           fsr2h	equ	0xFDA
 22237                           fsr2l	equ	0xFD9
 22238                           status	equ	0xFD8
 22239                           
 22240 ;; *************** function _daysOfMonth *****************
 22241 ;; Defined at:
 22242 ;;		line 109 in file "RTC.c"
 22243 ;; Parameters:    Size  Location     Type
 22244 ;;  month           1    7[BANK0 ] unsigned char 
 22245 ;;  year            2    8[BANK0 ] unsigned int 
 22246 ;; Auto vars:     Size  Location     Type
 22247 ;;		None
 22248 ;; Return value:  Size  Location     Type
 22249 ;;                  1    wreg      unsigned char 
 22250 ;; Registers used:
 22251 ;;		wreg, status,2, status,0, cstack
 22252 ;; Tracked objects:
 22253 ;;		On entry : 0/0
 22254 ;;		On exit  : 0/0
 22255 ;;		Unchanged: 0/0
 22256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22257 ;;      Params:         0       3       0       0       0       0       0       0       0
 22258 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22259 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22260 ;;      Totals:         0       5       0       0       0       0       0       0       0
 22261 ;;Total ram usage:        5 bytes
 22262 ;; Hardware stack levels used:    1
 22263 ;; Hardware stack levels required when called:    1
 22264 ;; This function calls:
 22265 ;;		___lwmod
 22266 ;; This function is called by:
 22267 ;;		_tick
 22268 ;; This function uses a non-reentrant model
 22269 ;;
 22270                           
 22271                           	psect	text66
 22272  006006                     __ptext66:
 22273                           	opt stack 0
 22274  006006                     _daysOfMonth:
 22275                           	opt stack 17
 22276                           
 22277                           ;RTC.c: 110: switch (month)
 22278                           
 22279                           ; BSR set to: 0
 22280                           ;incstack = 0
 22281                           ;incstack = 0
 22282  006006  D041               	goto	i2l7285
 22283  006008                     i2l7261:
 22284                           
 22285                           ;RTC.c: 113: case 3:
 22286                           ;RTC.c: 114: case 5:
 22287                           ;RTC.c: 115: case 7:
 22288                           ;RTC.c: 116: case 8:
 22289                           ;RTC.c: 117: case 10:
 22290                           ;RTC.c: 118: case 12:
 22291                           ;RTC.c: 119: return 31;
 22292  006008  0E1F               	movlw	31
 22293  00600A  D067               	goto	i2l221
 22294  00600C                     i2l7265:
 22295                           
 22296                           ;RTC.c: 122: case 6:
 22297                           ;RTC.c: 123: case 9:
 22298                           ;RTC.c: 124: case 11:
 22299                           ;RTC.c: 125: return 30;
 22300  00600C  0E1E               	movlw	30
 22301  00600E  D065               	goto	i2l221
 22302  006010                     i2l7269:
 22303                           
 22304                           ;RTC.c: 128: if ((((year)%4 == 0) && (((year)%100 != 0) || ((year)%400 == 0))))
 22305  006010  0E03               	movlw	3
 22306  006012  0100               	movlb	0	; () banked
 22307  006014  0100               	movlb	0	; () banked
 22308  006016  1568               	andwf	daysOfMonth@year& (0+255),w,b
 22309  006018  0100               	movlb	0	; () banked
 22310  00601A  6F6A               	movwf	??_daysOfMonth& (0+255),b
 22311  00601C  0E00               	movlw	0
 22312  00601E  0100               	movlb	0	; () banked
 22313  006020  0100               	movlb	0	; () banked
 22314  006022  1569               	andwf	(daysOfMonth@year+1)& (0+255),w,b
 22315  006024  0100               	movlb	0	; () banked
 22316  006026  6F6B               	movwf	(??_daysOfMonth+1)& (0+255),b
 22317  006028  0100               	movlb	0	; () banked
 22318  00602A  516B               	movf	(??_daysOfMonth+1)& (0+255),w,b
 22319  00602C  116A               	iorwf	??_daysOfMonth& (0+255),w,b
 22320  00602E  A4D8               	btfss	status,2,c
 22321  006030  D02A               	goto	i2l7281
 22322                           
 22323                           ; BSR set to: 0
 22324  006032  C068  F060         	movff	daysOfMonth@year,?___lwmod
 22325  006036  C069  F061         	movff	daysOfMonth@year+1,?___lwmod+1
 22326  00603A  0E00               	movlw	0
 22327  00603C  0100               	movlb	0	; () banked
 22328  00603E  0100               	movlb	0	; () banked
 22329  006040  6F63               	movwf	(?___lwmod+3)& (0+255),b
 22330  006042  0E64               	movlw	100
 22331  006044  0100               	movlb	0	; () banked
 22332  006046  6F62               	movwf	(?___lwmod+2)& (0+255),b
 22333  006048  ECDC  F032         	call	___lwmod	;wreg free
 22334  00604C  0100               	movlb	0	; () banked
 22335  00604E  0100               	movlb	0	; () banked
 22336  006050  5161               	movf	(?___lwmod+1)& (0+255),w,b
 22337  006052  0100               	movlb	0	; () banked
 22338  006054  1160               	iorwf	?___lwmod& (0+255),w,b
 22339  006056  A4D8               	btfss	status,2,c
 22340  006058  D014               	goto	i2l7275
 22341                           
 22342                           ; BSR set to: 0
 22343  00605A  C068  F060         	movff	daysOfMonth@year,?___lwmod
 22344  00605E  C069  F061         	movff	daysOfMonth@year+1,?___lwmod+1
 22345  006062  0E01               	movlw	1
 22346  006064  0100               	movlb	0	; () banked
 22347  006066  0100               	movlb	0	; () banked
 22348  006068  6F63               	movwf	(?___lwmod+3)& (0+255),b
 22349  00606A  0E90               	movlw	144
 22350  00606C  0100               	movlb	0	; () banked
 22351  00606E  6F62               	movwf	(?___lwmod+2)& (0+255),b
 22352  006070  ECDC  F032         	call	___lwmod	;wreg free
 22353  006074  0100               	movlb	0	; () banked
 22354  006076  0100               	movlb	0	; () banked
 22355  006078  5161               	movf	(?___lwmod+1)& (0+255),w,b
 22356  00607A  0100               	movlb	0	; () banked
 22357  00607C  1160               	iorwf	?___lwmod& (0+255),w,b
 22358  00607E  A4D8               	btfss	status,2,c
 22359  006080  D002               	goto	i2l7281
 22360  006082                     i2l7275:
 22361                           
 22362                           ; BSR set to: 0
 22363                           ;RTC.c: 129: return 29;
 22364  006082  0E1D               	movlw	29
 22365  006084  D02A               	goto	i2l221
 22366  006086                     i2l7281:
 22367                           
 22368                           ; BSR set to: 0
 22369                           ;RTC.c: 130: else
 22370                           ;RTC.c: 131: return 28;
 22371  006086  0E1C               	movlw	28
 22372  006088  D028               	goto	i2l221
 22373  00608A                     i2l7285:
 22374  00608A  0100               	movlb	0	; () banked
 22375  00608C  0100               	movlb	0	; () banked
 22376  00608E  5167               	movf	daysOfMonth@month& (0+255),w,b
 22377                           
 22378                           ; Switch size 1, requested type "space"
 22379                           ; Number of cases is 12, Range of values is 1 to 12
 22380                           ; switch strategies available:
 22381                           ; Name         Instructions Cycles
 22382                           ; simple_byte           37    19 (average)
 22383                           ;	Chosen strategy is simple_byte
 22384  006090  0A01               	xorlw	1	; case 1
 22385  006092  B4D8               	btfsc	status,2,c
 22386  006094  D7B9               	goto	i2l7261
 22387  006096  0A03               	xorlw	3	; case 2
 22388  006098  B4D8               	btfsc	status,2,c
 22389  00609A  D7BA               	goto	i2l7269
 22390  00609C  0A01               	xorlw	1	; case 3
 22391  00609E  B4D8               	btfsc	status,2,c
 22392  0060A0  D7B3               	goto	i2l7261
 22393  0060A2  0A07               	xorlw	7	; case 4
 22394  0060A4  B4D8               	btfsc	status,2,c
 22395  0060A6  D7B2               	goto	i2l7265
 22396  0060A8  0A01               	xorlw	1	; case 5
 22397  0060AA  B4D8               	btfsc	status,2,c
 22398  0060AC  D7AD               	goto	i2l7261
 22399  0060AE  0A03               	xorlw	3	; case 6
 22400  0060B0  B4D8               	btfsc	status,2,c
 22401  0060B2  D7AC               	goto	i2l7265
 22402  0060B4  0A01               	xorlw	1	; case 7
 22403  0060B6  B4D8               	btfsc	status,2,c
 22404  0060B8  D7A7               	goto	i2l7261
 22405  0060BA  0A0F               	xorlw	15	; case 8
 22406  0060BC  B4D8               	btfsc	status,2,c
 22407  0060BE  D7A4               	goto	i2l7261
 22408  0060C0  0A01               	xorlw	1	; case 9
 22409  0060C2  B4D8               	btfsc	status,2,c
 22410  0060C4  D7A3               	goto	i2l7265
 22411  0060C6  0A03               	xorlw	3	; case 10
 22412  0060C8  B4D8               	btfsc	status,2,c
 22413  0060CA  D79E               	goto	i2l7261
 22414  0060CC  0A01               	xorlw	1	; case 11
 22415  0060CE  B4D8               	btfsc	status,2,c
 22416  0060D0  D79D               	goto	i2l7265
 22417  0060D2  0A07               	xorlw	7	; case 12
 22418  0060D4  B4D8               	btfsc	status,2,c
 22419  0060D6  D798               	goto	i2l7261
 22420                           
 22421                           ; BSR set to: 0
 22422                           ;RTC.c: 134: return 0;
 22423                           
 22424                           ; BSR set to: 0
 22425  0060D8  0E00               	movlw	0
 22426  0060DA                     i2l221:
 22427  0060DA  0012               	return	
 22428  0060DC                     __end_of_daysOfMonth:
 22429                           	opt stack 0
 22430                           tosu	equ	0xFFF
 22431                           tosh	equ	0xFFE
 22432                           tosl	equ	0xFFD
 22433                           pclatu	equ	0xFFB
 22434                           pclath	equ	0xFFA
 22435                           tblptru	equ	0xFF8
 22436                           tblptrh	equ	0xFF7
 22437                           tblptrl	equ	0xFF6
 22438                           tablat	equ	0xFF5
 22439                           prodh	equ	0xFF4
 22440                           prodl	equ	0xFF3
 22441                           intcon	equ	0xFF2
 22442                           intcon2	equ	0xFF1
 22443                           indf0	equ	0xFEF
 22444                           postinc0	equ	0xFEE
 22445                           fsr0h	equ	0xFEA
 22446                           fsr0l	equ	0xFE9
 22447                           wreg	equ	0xFE8
 22448                           postinc1	equ	0xFE6
 22449                           postdec1	equ	0xFE5
 22450                           fsr1h	equ	0xFE2
 22451                           fsr1l	equ	0xFE1
 22452                           bsr	equ	0xFE0
 22453                           indf2	equ	0xFDF
 22454                           postinc2	equ	0xFDE
 22455                           postdec2	equ	0xFDD
 22456                           plusw2	equ	0xFDB
 22457                           fsr2h	equ	0xFDA
 22458                           fsr2l	equ	0xFD9
 22459                           status	equ	0xFD8
 22460                           
 22461 ;; *************** function _saveTime *****************
 22462 ;; Defined at:
 22463 ;;		line 69 in file "RTC.c"
 22464 ;; Parameters:    Size  Location     Type
 22465 ;;  date            9    0[BANK0 ] struct sDate
 22466 ;; Auto vars:     Size  Location     Type
 22467 ;;  cnt             1   11[BANK0 ] unsigned char 
 22468 ;; Return value:  Size  Location     Type
 22469 ;;		None               void
 22470 ;; Registers used:
 22471 ;;		wreg, status,2, status,0
 22472 ;; Tracked objects:
 22473 ;;		On entry : 0/0
 22474 ;;		On exit  : 0/0
 22475 ;;		Unchanged: 0/0
 22476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22477 ;;      Params:         0       9       0       0       0       0       0       0       0
 22478 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22479 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22480 ;;      Totals:         0      12       0       0       0       0       0       0       0
 22481 ;;Total ram usage:       12 bytes
 22482 ;; Hardware stack levels used:    1
 22483 ;; This function calls:
 22484 ;;		Nothing
 22485 ;; This function is called by:
 22486 ;;		_tick
 22487 ;; This function uses a non-reentrant model
 22488 ;;
 22489                           
 22490                           	psect	text67
 22491  006642                     __ptext67:
 22492                           	opt stack 0
 22493  006642                     _saveTime:
 22494                           	opt stack 18
 22495                           
 22496                           ;RTC.c: 70: WREN = 1;
 22497                           
 22498                           ;incstack = 0
 22499                           ;incstack = 0
 22500  006642  84A6               	bsf	4006,2,c	;volatile
 22501                           
 22502                           ;RTC.c: 71: uint8_t cnt;
 22503                           ;RTC.c: 73: for (cnt = 1; cnt < 7; cnt++)
 22504  006644  0100               	movlb	0	; () banked
 22505  006646  6F69               	movwf	??_saveTime& (0+255),b
 22506  006648  0E01               	movlw	1
 22507  00664A  0100               	movlb	0	; () banked
 22508  00664C  0100               	movlb	0	; () banked
 22509  00664E  6F6B               	movwf	saveTime@cnt& (0+255),b
 22510  006650  0100               	movlb	0	; () banked
 22511  006652  5169               	movf	??_saveTime& (0+255),w,b
 22512  006654  D034               	goto	L30
 22513  006656                     i2l197:
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;RTC.c: 74: {
 22517                           ;RTC.c: 75: EEADR = 0 + cnt;
 22518  006656  C06B  FFA9         	movff	saveTime@cnt,4009	;volatile
 22519                           
 22520                           ;RTC.c: 76: switch (cnt)
 22521  00665A  D00F               	goto	i2l7249
 22522  00665C                     i2l200:
 22523                           
 22524                           ; BSR set to: 0
 22525                           ;RTC.c: 79: EEDATA = date.minute;
 22526  00665C  C061  FFA8         	movff	saveTime@date+1,4008	;volatile
 22527                           
 22528                           ;RTC.c: 80: break;
 22529  006660  D021               	goto	i2l7251
 22530  006662                     i2l202:
 22531                           
 22532                           ; BSR set to: 0
 22533                           ;RTC.c: 82: EEDATA = date.hour;
 22534  006662  C062  FFA8         	movff	saveTime@date+2,4008	;volatile
 22535                           
 22536                           ;RTC.c: 83: break;
 22537  006666  D01E               	goto	i2l7251
 22538  006668                     i2l203:
 22539                           
 22540                           ; BSR set to: 0
 22541                           ;RTC.c: 85: EEDATA = date.day;
 22542  006668  C063  FFA8         	movff	saveTime@date+3,4008	;volatile
 22543                           
 22544                           ;RTC.c: 86: break;
 22545  00666C  D01B               	goto	i2l7251
 22546  00666E                     i2l204:
 22547                           
 22548                           ; BSR set to: 0
 22549                           ;RTC.c: 88: EEDATA = date.month;
 22550  00666E  C065  FFA8         	movff	saveTime@date+5,4008	;volatile
 22551                           
 22552                           ;RTC.c: 89: break;
 22553  006672  D018               	goto	i2l7251
 22554  006674                     i2l206:
 22555                           
 22556                           ; BSR set to: 0
 22557                           ;RTC.c: 94: EEDATA = date.year;
 22558  006674  C066  FFA8         	movff	saveTime@date+6,4008	;volatile
 22559                           
 22560                           ;RTC.c: 95: break;
 22561  006678  D015               	goto	i2l7251
 22562  00667A                     i2l7249:
 22563                           
 22564                           ; BSR set to: 0
 22565  00667A  0100               	movlb	0	; () banked
 22566  00667C  0100               	movlb	0	; () banked
 22567  00667E  516B               	movf	saveTime@cnt& (0+255),w,b
 22568                           
 22569                           ; Switch size 1, requested type "space"
 22570                           ; Number of cases is 6, Range of values is 1 to 6
 22571                           ; switch strategies available:
 22572                           ; Name         Instructions Cycles
 22573                           ; simple_byte           19    10 (average)
 22574                           ;	Chosen strategy is simple_byte
 22575  006680  0A01               	xorlw	1	; case 1
 22576  006682  B4D8               	btfsc	status,2,c
 22577  006684  D7EB               	goto	i2l200
 22578  006686  0A03               	xorlw	3	; case 2
 22579  006688  B4D8               	btfsc	status,2,c
 22580  00668A  D7EB               	goto	i2l202
 22581  00668C  0A01               	xorlw	1	; case 3
 22582  00668E  B4D8               	btfsc	status,2,c
 22583  006690  D7EB               	goto	i2l203
 22584  006692  0A07               	xorlw	7	; case 4
 22585  006694  B4D8               	btfsc	status,2,c
 22586  006696  D7EB               	goto	i2l204
 22587  006698  0A01               	xorlw	1	; case 5
 22588  00669A  B4D8               	btfsc	status,2,c
 22589  00669C  D7EB               	goto	i2l206
 22590  00669E  0A03               	xorlw	3	; case 6
 22591  0066A0  B4D8               	btfsc	status,2,c
 22592  0066A2  D7E8               	goto	i2l206
 22593  0066A4                     i2l7251:
 22594                           
 22595                           ; BSR set to: 0
 22596                           ;RTC.c: 97: EECON2 = 0x55;
 22597  0066A4  0E55               	movlw	85
 22598  0066A6  6EA7               	movwf	4007,c	;volatile
 22599                           
 22600                           ;RTC.c: 98: EECON2 = 0xAA;
 22601  0066A8  0EAA               	movlw	170
 22602  0066AA  6EA7               	movwf	4007,c	;volatile
 22603                           
 22604                           ; BSR set to: 0
 22605                           ;RTC.c: 99: WR = 1;
 22606  0066AC  82A6               	bsf	4006,1,c	;volatile
 22607                           
 22608                           ;RTC.c: 100: while (WR)
 22609  0066AE  D001               	goto	i2l207
 22610  0066B0                     i2l208:
 22611                           
 22612                           ;RTC.c: 101: {
 22613                           ;RTC.c: 102: LATC2 = 1;
 22614  0066B0  848B               	bsf	3979,2,c	;volatile
 22615  0066B2                     i2l207:
 22616  0066B2  B2A6               	btfsc	4006,1,c	;volatile
 22617  0066B4  D7FD               	goto	i2l208
 22618                           
 22619                           ;RTC.c: 103: }
 22620                           ;RTC.c: 104: LATC2 = 0;
 22621  0066B6  948B               	bcf	3979,2,c	;volatile
 22622  0066B8  0100               	movlb	0	; () banked
 22623  0066BA  0100               	movlb	0	; () banked
 22624  0066BC  2B6B               	incf	saveTime@cnt& (0+255),f,b
 22625  0066BE                     L30:
 22626                           
 22627                           ; BSR set to: 0
 22628  0066BE  0E06               	movlw	6
 22629  0066C0  0100               	movlb	0	; () banked
 22630  0066C2  0100               	movlb	0	; () banked
 22631  0066C4  656B               	cpfsgt	saveTime@cnt& (0+255),b
 22632  0066C6  D7C7               	goto	i2l197
 22633                           
 22634                           ; BSR set to: 0
 22635                           
 22636                           ; BSR set to: 0
 22637  0066C8  0012               	return	
 22638  0066CA                     __end_of_saveTime:
 22639                           	opt stack 0
 22640                           tosu	equ	0xFFF
 22641                           tosh	equ	0xFFE
 22642                           tosl	equ	0xFFD
 22643                           pclatu	equ	0xFFB
 22644                           pclath	equ	0xFFA
 22645                           tblptru	equ	0xFF8
 22646                           tblptrh	equ	0xFF7
 22647                           tblptrl	equ	0xFF6
 22648                           tablat	equ	0xFF5
 22649                           prodh	equ	0xFF4
 22650                           prodl	equ	0xFF3
 22651                           intcon	equ	0xFF2
 22652                           intcon2	equ	0xFF1
 22653                           indf0	equ	0xFEF
 22654                           postinc0	equ	0xFEE
 22655                           fsr0h	equ	0xFEA
 22656                           fsr0l	equ	0xFE9
 22657                           wreg	equ	0xFE8
 22658                           postinc1	equ	0xFE6
 22659                           postdec1	equ	0xFE5
 22660                           fsr1h	equ	0xFE2
 22661                           fsr1l	equ	0xFE1
 22662                           bsr	equ	0xFE0
 22663                           indf2	equ	0xFDF
 22664                           postinc2	equ	0xFDE
 22665                           postdec2	equ	0xFDD
 22666                           plusw2	equ	0xFDB
 22667                           fsr2h	equ	0xFDA
 22668                           fsr2l	equ	0xFD9
 22669                           status	equ	0xFD8
 22670                           tosu	equ	0xFFF
 22671                           tosh	equ	0xFFE
 22672                           tosl	equ	0xFFD
 22673                           pclatu	equ	0xFFB
 22674                           pclath	equ	0xFFA
 22675                           tblptru	equ	0xFF8
 22676                           tblptrh	equ	0xFF7
 22677                           tblptrl	equ	0xFF6
 22678                           tablat	equ	0xFF5
 22679                           prodh	equ	0xFF4
 22680                           prodl	equ	0xFF3
 22681                           intcon	equ	0xFF2
 22682                           intcon2	equ	0xFF1
 22683                           indf0	equ	0xFEF
 22684                           postinc0	equ	0xFEE
 22685                           fsr0h	equ	0xFEA
 22686                           fsr0l	equ	0xFE9
 22687                           wreg	equ	0xFE8
 22688                           postinc1	equ	0xFE6
 22689                           postdec1	equ	0xFE5
 22690                           fsr1h	equ	0xFE2
 22691                           fsr1l	equ	0xFE1
 22692                           bsr	equ	0xFE0
 22693                           indf2	equ	0xFDF
 22694                           postinc2	equ	0xFDE
 22695                           postdec2	equ	0xFDD
 22696                           plusw2	equ	0xFDB
 22697                           fsr2h	equ	0xFDA
 22698                           fsr2l	equ	0xFD9
 22699                           status	equ	0xFD8
 22700                           
 22701                           	psect	text68
 22702  000000                     __ptext68:
 22703                           	opt stack 0
 22704                           tosu	equ	0xFFF
 22705                           tosh	equ	0xFFE
 22706                           tosl	equ	0xFFD
 22707                           pclatu	equ	0xFFB
 22708                           pclath	equ	0xFFA
 22709                           tblptru	equ	0xFF8
 22710                           tblptrh	equ	0xFF7
 22711                           tblptrl	equ	0xFF6
 22712                           tablat	equ	0xFF5
 22713                           prodh	equ	0xFF4
 22714                           prodl	equ	0xFF3
 22715                           intcon	equ	0xFF2
 22716                           intcon2	equ	0xFF1
 22717                           indf0	equ	0xFEF
 22718                           postinc0	equ	0xFEE
 22719                           fsr0h	equ	0xFEA
 22720                           fsr0l	equ	0xFE9
 22721                           wreg	equ	0xFE8
 22722                           postinc1	equ	0xFE6
 22723                           postdec1	equ	0xFE5
 22724                           fsr1h	equ	0xFE2
 22725                           fsr1l	equ	0xFE1
 22726                           bsr	equ	0xFE0
 22727                           indf2	equ	0xFDF
 22728                           postinc2	equ	0xFDE
 22729                           postdec2	equ	0xFDD
 22730                           plusw2	equ	0xFDB
 22731                           fsr2h	equ	0xFDA
 22732                           fsr2l	equ	0xFD9
 22733                           status	equ	0xFD8
 22734                           
 22735                           	psect	param0
 22736  0000                     tosu	equ	0xFFF
 22737                           tosh	equ	0xFFE
 22738                           tosl	equ	0xFFD
 22739                           pclatu	equ	0xFFB
 22740                           pclath	equ	0xFFA
 22741                           tblptru	equ	0xFF8
 22742                           tblptrh	equ	0xFF7
 22743                           tblptrl	equ	0xFF6
 22744                           tablat	equ	0xFF5
 22745                           prodh	equ	0xFF4
 22746                           prodl	equ	0xFF3
 22747                           intcon	equ	0xFF2
 22748                           intcon2	equ	0xFF1
 22749                           indf0	equ	0xFEF
 22750                           postinc0	equ	0xFEE
 22751                           fsr0h	equ	0xFEA
 22752                           fsr0l	equ	0xFE9
 22753                           wreg	equ	0xFE8
 22754                           postinc1	equ	0xFE6
 22755                           postdec1	equ	0xFE5
 22756                           fsr1h	equ	0xFE2
 22757                           fsr1l	equ	0xFE1
 22758                           bsr	equ	0xFE0
 22759                           indf2	equ	0xFDF
 22760                           postinc2	equ	0xFDE
 22761                           postdec2	equ	0xFDD
 22762                           plusw2	equ	0xFDB
 22763                           fsr2h	equ	0xFDA
 22764                           fsr2l	equ	0xFD9
 22765                           status	equ	0xFD8


Data Sizes:
    Strings     107
    Constant    229
    Data        9
    BSS         110
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      94
    BANK0           160    153     160
    BANK1           256     65     138
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    NULL.printFn	PTR FTN(unsigned char ,)PTR void  size(2) Largest target is 0

    ?___ftsub	float  size(2) Largest target is 0

    ?___ftpack	float  size(2) Largest target is 28
		 -> ADRES(DATA[2]), dow(CODE[28]), 

    ?___asftsub	float  size(2) Largest target is 28
		 -> dow(CODE[28]), 

    ?__tdiv_to_l_	unsigned long  size(2) Largest target is 0

    ?__div_to_l_	unsigned long  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___lltoft	float  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 28
		 -> dow(CODE[28]), 

    ?___asftdiv	float  size(2) Largest target is 28
		 -> dow(CODE[28]), 

    ?___asftmul	float  size(2) Largest target is 28
		 -> dow(CODE[28]), 

    ?___ftneg	float  size(2) Largest target is 28
		 -> dow(CODE[28]), 

    ?_scale	float  size(2) Largest target is 0

    ?_fround	float  size(2) Largest target is 0

    ?_printTemp	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_lowbit	unsigned long  size(2) Largest target is 4
		 -> lowbit@log2Val(BANK0[4]), 

    ?_getTemp	unsigned long  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___asftadd	float  size(2) Largest target is 28
		 -> dow(CODE[28]), 

    ?___ftadd	float  size(2) Largest target is 28
		 -> ADRES(DATA[2]), dow(CODE[28]), 

    ?___ftmul	float  size(2) Largest target is 0

    ?___lwtoft	float  size(2) Largest target is 0

    ?_printRTC	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?___llmod	unsigned long  size(2) Largest target is 28
		 -> dow(CODE[28]), 

    ?___awdiv	int  size(2) Largest target is 0

    ?___awmod	int  size(2) Largest target is 28
		 -> dow(CODE[28]), 

    ?___lwmod	unsigned int  size(2) Largest target is 28
		 -> dow(CODE[28]), 

    ?_loadTime	struct sDate size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 28
		 -> dow(CODE[28]), 

    ?_hibit	unsigned long  size(2) Largest target is 4
		 -> hibit@log2Val(BANK0[4]), 

    ?_log2	unsigned long  size(2) Largest target is 0

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@temp(BANK0[3]), sprintf@integ(BANK0[3]), sprintf@fval(BANK0[3]), 

    __asftdiv@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), getTemp@total(BANK0[3]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_22(CODE[7]), sprintf@c(BANK0[1]), dow(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_21(CODE[4]), STR_17(CODE[5]), STR_16(CODE[10]), STR_15(CODE[10]), 
		 -> STR_14(CODE[12]), STR_13(CODE[12]), STR_12(CODE[15]), STR_11(CODE[15]), 
		 -> STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[14]), STR_7(CODE[17]), 
		 -> STR_6(CODE[16]), STR_5(CODE[17]), STR_4(CODE[15]), STR_3(CODE[13]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_20(CODE[5]), printRTC@str(BANK1[12]), writeFloat@str(COMRAM[9]), writeLong@str(COMRAM[9]), 

    ?_sprintf	int  size(2) Largest target is 28
		 -> dow(CODE[28]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S725$_cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_22(CODE[7]), sprintf@c(BANK0[1]), dow(CODE[28]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_22(CODE[7]), sprintf@c(BANK0[1]), dow(CODE[28]), 

    sp_S159$3	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menu.printFn	PTR FTN(unsigned char ,)PTR void  size(2) Largest target is 3
		 -> printTemp(), printRTC(), 

    menu	PTR struct sMenu size(2) Largest target is 5
		 -> tempMenu(BANK0[5]), NULL(NULL[0]), rtcMenu(BANK1[5]), 

    sp__printTemp	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printTemp@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_20(CODE[5]), 

    tempMenu.printFn	PTR FTN(unsigned char ,)PTR void  size(2) Largest target is 3
		 -> printTemp(), printRTC(), 

    sp__printRTC	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S159sMenu$printFn	PTR FTN(unsigned char ,)PTR void  size(2) Largest target is 3
		 -> printTemp(), printRTC(), 

    rtcMenu.printFn	PTR FTN(unsigned char ,)PTR void  size(2) Largest target is 3
		 -> printTemp(), printRTC(), 

    writeString@string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_20(CODE[5]), STR_19(CODE[3]), STR_18(CODE[3]), printRTC@str(BANK1[12]), 
		 -> writeFloat@str(COMRAM[9]), writeLong@str(COMRAM[9]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _low_isr->_buttons
    _buttons->i1_update
    i1_update->i1_writeDigit
    i1_writeDigit->i1_spi
    i1_spi->i1_rotate
    _advState->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    _high_isr->_printTemp
    _printTemp->_sprintf
    _getTemp->___asftadd
    ___lwtoft->___ftpack
    _printRTC->_sprintf
    _writeString->_writeChar
    _writeChar->_getFontChar
    i2_log2->_hibit
    _getFontChar->___wmul
    _sprintf->___asftsub
    ___lltoft->___ftge
    ___fttol->___wmul
    ___ftneg->___fttol
    ___ftge->___ftneg
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftadd
    ___asftdiv->_scale
    ___ftdiv->___ftpack
    ___asftadd->___ftadd
    _scale->___ftmul
    _fround->___ftmul
    ___awdiv->i2___awmod
    ___ftmul->___fttol
    ___wmul->___awdiv
    ___llmod->___lldiv
    ___ftadd->___lltoft
    _tick->_checkDST
    _checkDST->_dayOfWeek
    _tick->_checkDST
    _dayOfWeek->___llmod
    _dayOfWeek->___wmul
    ___llmod->___lldiv
    _daysOfMonth->___lwmod
    _dayOfWeek->___llmod
    _dayOfWeek->___wmul
    _checkDST->_dayOfWeek
    _daysOfMonth->___lwmod

Critical Paths under _main in BANK1

    _main->_update
    _setup->_initRTC
    _initRTC->_loadTime
    _startDisp->_setBrightness
    _startDisp->_setTest
    _update->_writeDigit
    _writeDigit->_spi
    _spi->_rotate

Critical Paths under _high_isr in BANK1

    _high_isr->_printRTC

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     4      5    1096
                                             56 BANK1      9     4      5
                             _update
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                4     4      0     284
                                             44 BANK1      4     4      0
                          _startDisp
                            _initRTC
                           _initTemp
                       _setupButtons
 ---------------------------------------------------------------------------------
 (2) _setupButtons                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTemp                                             1     1      0       0
                                             31 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initRTC                                              1     1      0     240
                                             43 BANK1      1     1      0
                           _loadTime
 ---------------------------------------------------------------------------------
 (3) _loadTime                                            12    12      0     240
                                             31 BANK1     12    12      0
 ---------------------------------------------------------------------------------
 (2) _startDisp                                            1     1      0      44
                                             32 BANK1      1     1      0
                      _setBrightness
                            _setTest
 ---------------------------------------------------------------------------------
 (3) _setTest                                              1     0      1      22
                                             31 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (3) _setBrightness                                        1     0      1      22
                                             31 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (1) _update                                               6     6      0     787
                                             50 BANK1      6     6      0
                         _writeDigit
                                _spi
 ---------------------------------------------------------------------------------
 (2) _writeDigit                                           5     3      2     496
                                             45 BANK1      5     3      2
                                _spi
                               _log2
                             _rotate
 ---------------------------------------------------------------------------------
 (3) _rotate                                               6     5      1     136
                                             31 BANK1      6     5      1
 ---------------------------------------------------------------------------------
 (3) _log2                                                 8     4      4      46
                                             31 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _spi                                                  8     6      2     157
                                             37 BANK1      8     6      2
                               _wait
                             _rotate (ARG)
 ---------------------------------------------------------------------------------
 (3) _wait                                                 4     0      4      22
                                             31 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _low_isr                                             17    17      0    2885
                                             33 COMRAM    17    17      0
                            _buttons
 ---------------------------------------------------------------------------------
 (6) _buttons                                              8     8      0    2885
                                             25 COMRAM     8     8      0
                           _advState
                            _advMenu
                           i1_update
 ---------------------------------------------------------------------------------
 (7) i1_update                                             6     6      0    2589
                                             19 COMRAM     6     6      0
                              i1_spi
                       i1_writeDigit
 ---------------------------------------------------------------------------------
 (8) i1_writeDigit                                         5     3      2    1630
                                             14 COMRAM     5     3      2
                              i1_spi
                           i1_rotate
                             i1_log2
 ---------------------------------------------------------------------------------
 (9) i1_log2                                               8     4      4     150
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) i1_rotate                                             6     5      1     446
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (9) i1_spi                                                8     6      2     517
                                              6 COMRAM     8     6      2
                           i1_rotate (ARG)
                             i1_wait
 ---------------------------------------------------------------------------------
 (10) i1_wait                                              4     0      4      73
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _advMenu                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _advState                                             2     2      0     296
                                              7 COMRAM     2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              7     3      4     296
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) _high_isr                                           15    15      0   55713
                                             16 BANK1     15    15      0
                               _tick
                           _printRTC
                            _getTemp
                          _printTemp
 ---------------------------------------------------------------------------------
 (12) _printTemp                                           9     8      1   19327
                                            144 BANK0      9     8      1
                          _countBits
                            _sprintf
                        _writeString
                             _lowbit
 ---------------------------------------------------------------------------------
 (13) _lowbit                                             11     7      4      69
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (12) _getTemp                                            17    17      0    3944
                                             85 BANK0     17    17      0
                          ___asftadd
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (13) ___lwtoft                                            5     2      3     231
                                              8 BANK0      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (12) _printRTC                                           22    21      1   20016
                                            144 BANK0      2     1      1
                                              0 BANK1     16    16      0
                          _countBits
                            _sprintf
                        _writeString
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _writeString                                        10     7      3    1221
                                             36 BANK0     10     7      3
                        _getFontChar
                          _writeChar
                          _countBits
                              _hibit
                             ___wmul
                             i2_log2
 ---------------------------------------------------------------------------------
 (14) _hibit                                              11     7      4      46
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (14) _countBits                                           5     1      4      90
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (14) _writeChar                                           3     1      2     305
                                             33 BANK0      3     1      2
                        _getFontChar
                             ___wmul (ARG)
                             i2_log2
 ---------------------------------------------------------------------------------
 (14) i2_log2                                              8     4      4     150
                                             11 BANK0      8     4      4
                              _hibit (ARG)
 ---------------------------------------------------------------------------------
 (15) _getFontChar                                         3     2      1      66
                                             30 BANK0      3     2      1
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (13) _sprintf                                            57    45     12   17699
                                             91 BANK0     53    41     12
                          _countBits (ARG)
                             _fround
                              _scale
                            _isdigit
                        __tdiv_to_l_
                         __div_to_l_
                          ___asftadd
                            ___ftadd
                          ___asftdiv
                          ___asftmul
                            ___ftmul
                          ___asftsub
                            ___awdiv
                             ___ftge
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                            ___lwmod
                             ___wmul
                          i2___awmod
 ---------------------------------------------------------------------------------
 (14) ___lltoft                                            9     5      4     278
                                             57 BANK0      9     5      4
                           ___ftpack
                             ___ftge (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (14) ___lldiv                                            14     6      8     162
                                              0 BANK0     19    11      8
 ---------------------------------------------------------------------------------
 (14) ___fttol                                            15    11      4     252
                                             30 BANK0     15    11      4
                           ___ftpack (ARG)
                            ___awdiv (ARG)
                             ___wmul (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) ___ftneg                                             3     0      3      45
                                             45 BANK0      3     0      3
                           ___ftpack (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (14) ___ftge                                              9     3      6     136
                                             48 BANK0      9     3      6
                           ___ftpack (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (14) ___asftsub                                           5     0      5    1160
                                             86 BANK0      5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (15) ___ftsub                                             6     0      6    1094
                                             80 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (14) ___asftmul                                           5     0      5     601
                                             80 BANK0      5     0      5
                            ___ftadd (ARG)
                            ___ftmul
                            ___ftneg (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (14) ___asftdiv                                           5     0      5     555
                                             74 BANK0      5     0      5
                              _scale (ARG)
                            ___ftdiv
 ---------------------------------------------------------------------------------
 (15) ___ftdiv                                            17    11      6     489
                                              8 BANK0     17    11      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (14) ___asftadd                                           5     0      5    1115
                                             80 BANK0      5     0      5
                             _fround (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (14) __div_to_l_                                         13     7      6     446
                                              0 BANK0     13     7      6
 ---------------------------------------------------------------------------------
 (14) __tdiv_to_l_                                        17    11      6     303
                                              0 BANK0     17    11      6
 ---------------------------------------------------------------------------------
 (14) _isdigit                                             3     2      1      68
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (14) _scale                                              15    12      3    2166
                                             62 BANK0     12     9      3
                            ___ftmul
                            ___awdiv
                            ___fttol (ARG)
                             ___wmul
                          i2___awmod
 ---------------------------------------------------------------------------------
 (14) _fround                                             18    15      3    1968
                                             62 BANK0     15    12      3
                            ___ftmul
                            ___awdiv
                             ___wmul
                          i2___awmod
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           7     3      4     683
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (14) ___awdiv                                             9     5      4     300
                                              9 BANK0     13     9      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) ___ftmul                                            17    11      6     535
                                             45 BANK0     17    11      6
                           ___ftpack
                            ___awdiv (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4     159
                                             22 BANK0      8     4      4
                            ___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             6     2      4     159
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (14) ___llmod                                            10     2      8     159
                                             19 BANK0     11     3      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) ___ftadd                                            14     8      6    1049
                                             66 BANK0     14     8      6
                           ___ftpack
                            ___ftmul (ARG)
                             ___ftge (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lltoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (15) ___ftpack                                            8     3      5     209
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (12) _tick                                                2     1      1   12426
                                             54 BANK0      2     1      1
                           _saveTime
                        _daysOfMonth
                           _checkDST
 ---------------------------------------------------------------------------------
 (13) _checkDST                                            8     8      0    5568
                                             45 BANK0      9     9      0
                          _dayOfWeek
                               _tick
 ---------------------------------------------------------------------------------
 (12) _tick                                                2     1      1   12426
                                             54 BANK0      2     1      1
                           _saveTime
                        _daysOfMonth
                           _checkDST
 ---------------------------------------------------------------------------------
 (14) _dayOfWeek                                          11     8      3    2750
                                             30 BANK0     15    12      3
                            ___awdiv
                            ___llmod
                             ___wmul
                          i2___awmod
 ---------------------------------------------------------------------------------
 (14) ___llmod                                            10     2      8     159
                                             19 BANK0     11     3      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (13) _daysOfMonth                                         5     2      3     406
                                              7 BANK0      5     2      3
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             6     2      4     159
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (13) _saveTime                                           11     2      9     228
                                              0 BANK0     12     3      9
 ---------------------------------------------------------------------------------
 (14) _dayOfWeek                                          11     8      3    2750
                                             30 BANK0     15    12      3
                            ___awdiv
                            ___llmod
                             ___wmul
                          i2___awmod
 ---------------------------------------------------------------------------------
 (13) _checkDST                                            8     8      0    5568
                                             45 BANK0      9     9      0
                          _dayOfWeek
                               _tick
 ---------------------------------------------------------------------------------
 (13) _daysOfMonth                                         5     2      3     406
                                              7 BANK0      5     2      3
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _saveTime                                           11     2      9     228
                                              0 BANK0     12     3      9
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _update
     _writeDigit
       _spi
         _wait
         _rotate (ARG)
       _log2
       _rotate
     _spi
       _wait
       _rotate (ARG)
   _setup
     _startDisp
       _setBrightness
       _setTest
     _initRTC
       _loadTime
     _initTemp
     _setupButtons

 _low_isr (ROOT)
   _buttons
     _advState
       ___awmod
     _advMenu
     i1_update
       i1_spi
         i1_rotate (ARG)
         i1_wait (ARG)
       i1_writeDigit
         i1_spi
           i1_rotate (ARG)
           i1_wait (ARG)
         i1_rotate
         i1_log2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     41      8A       7       53.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      5E       1       98.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      2A       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     188      20        0.0%
DATA                 0      0     1B2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Tue Dec 17 03:26:57 2013

           ___asftadd@f2 00B2            ___asftadd@f1p 00B0             ___asftdiv@f2 00AC  
                     l82 5E1C                       l58 2FD2                       l88 674E  
                     _GO 007E11                       _RD 007D30                       _WR 007D31  
           ___awdiv@sign 0073                       bsr 000FE0      ___wmul@multiplicand 0078  
           ___asftmul@f2 00B2             ___asftsub@f2 00B8            ___asftdiv@f1p 00AA  
           ___ftadd@exp1 00AF             ___ftadd@exp2 00AE             ___ftadd@sign 00AD  
            __CFG_WDT$ON 000000                      l190 638C                      l191 6392  
                    l192 6398                      l184 6378                      l601 692A  
                    l187 6380                      l508 6962                      l189 6386  
                    _dow 7F77                      _spi 5D52             ___awmod@sign 0007  
                    prod 000FF3                      tosl 000FFD                      wreg 000FE8  
           __CFG_FOSC$HS 000000            ___asftmul@f1p 00B0              _sprintf$741 00D0  
          ___asftsub@f1p 00B6             printTemp@str 00F6             __CFG_LVP$OFF 000000  
           ___ftdiv@cntr 0073             ___ftdiv@sign 0078                     l6421 2B9A  
                   l6413 2AE2                     l6423 2BBE                     l6415 2B2E  
                   l6417 2B52                     l7233 63C4                     l6419 2B76  
                   l6427 2BE8                     l7235 63EE                     l6533 6F38  
                   l6429 2F86                     l7229 63A6                     l6551 6522  
                   l6537 6948                     l7573 682A                     l7565 67EA  
                   l8751 2F4C                     l8753 2F58                     l8755 2F64  
                   l8757 2F70                     l8749 2C46                     ?_spi 0125  
                   l8759 2F7C                     STR_1 7FEF                     STR_2 7FEA  
                   STR_3 7FD1                     STR_4 7FB4                     STR_5 7F93  
                   STR_6 7FA4                     STR_7 7F93                     STR_8 7FC3  
                   STR_9 7FC3                     _GIEH 007F97                     _GIEL 007F96  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   u4024 64F2                     u4025 64EC                     u4034 650A  
                   u4035 6504            __CFG_DEBUG$ON 000000                     _IPEN 007E87  
                   u3904 2FA0                     u3905 2F98                     u3880 2BDA  
                   i1l82 62AE                     i1l58 38FC                     u3954 5DB8  
                   u3874 2AF8                     i2l43 4AE0                     u3955 5DB0  
                   u3875 2AF2                     u3965 5DCA                     u3966 5DD2  
                   u3894 2C02                     u3886 2BDC                     u3895 2BFA  
                   i1l88 6C12                     u3985 6F92                     u3986 6F98  
                   _RCON 000FD0                     _TMR0 000FD6                     _TMR1 000FCE  
                   _WREN 007D32    __end_of_setBrightness 6F82                     _date 0159  
                   _log2 692C                     _main 67CC             ___ftpack@arg 0060  
                   _menu 005A             ___ftpack@exp 0063                     _tick 5B62  
                   _temp 0057                     _wait 6F38                     fsr0h 000FEA  
                   fsr1h 000FE2                     indf0 000FEF                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 0118             _sprintf$1435 00CD  
          __CFG_MCLRE$ON 000000             ___ftmul@cntr 009C           writeString@cnt 008C  
           ___ftmul@sign 009D     __end_ofi1_writeDigit 6C14             ___fttol@exp1 008C  
           ___fttol@lval 0088                    ??_spi 0127            __CFG_PLLDIV$4 000000  
        i1writeDigit@dig 0012          i1writeDigit@cnt 0013                    ?_log2 011F  
                  ?_main 0138          __end_of___awdiv 594A                    _ADRES 000FC3  
                  _EEADR 000FA9          __end_of___ftadd 4344                    STR_10 7F95  
                  STR_11 7FA5                    STR_20 7FE5                    STR_12 7F95  
                  STR_13 7FC5                    STR_21 7FF4                    STR_14 7FC5  
                  STR_22 7FDE                    STR_15 7FC7                    STR_16 7FC7  
                  ?_tick 0096                    STR_17 7FE5                    STR_18 7FF8  
                  STR_19 7FFB          __end_of___awmod 67CC                    ?_wait 011F  
        __end_of___ftdiv 527C          __end_of___ftneg 6F38          __end_of___lldiv 5B62  
        __end_of___ftmul 4EE0                    _T0CON 000FD5          ___awdiv@divisor 006B  
                  _T1CON 000FCD          __end_of___llmod 6006          __end_of___ftsub 6DBE  
        __end_of___fttol 558A                    _LATA1 007C49                    _LATA3 007C4B  
                  _LATC0 007C58                    _LATA4 007C4C                    _LATC1 007C59  
                  _LATA5 007C4D                    _LATC2 007C5A                    i2l200 665C  
        __end_of___lwmod 6642                    i2l113 3C88                    i2l202 6662  
                  i2l203 6668                    i2l204 666E                    i1l508 6C82  
                  i1l444 3474                    i1l612 00D0                    i2l221 60DA  
                  i1l613 00CE                    i2l206 6674                    i1l614 00D2  
                  i2l207 66B2                    i2l208 66B0                    i2l241 5408  
                  i2l315 247A                    i2l270 451C                    i2l262 444C  
                  i2l263 4466                    i2l272 455C                    i2l264 4480  
                  i2l265 449A                    i2l257 5C5C                    i2l266 44B4  
                  i2l282 1E68                    i2l267 44CE                    i2l268 44E8  
                  i2l508 69CC                    i2l356 46D6                    i2l197 6656  
                  i2l269 4502                    i2l711 08E0                    i2l607 5A1C  
                  i2l608 5A18                    i2l641 2ABA                    i2l705 0856  
                  i2l609 5A1E                    i2l730 0DA8                    i2l706 085A  
                  i2l707 1068                    i2l492 6436                    i2l486 6D22  
                  i2l743 117A                    i2l681 03F6                    i2l781 1762  
                  i2l697 196E          ___awdiv@counter 0072          __end_of_advMenu 68BE  
                  _PORTB 000F81            __CFG_USBDIV$2 000000                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94            __CFG_PWRT$OFF 000000  
            _writeString 38FE                    i1_spi 622C             ___lltoft@exp 00A1  
        __end_of_getTemp 48BE                    _nRBPU 007F8F          __end_of_initRTC 65B8  
                  _hibit 6400          __end_of_dpowers 7F01                    _pow10 7F01  
                  _scale 24A8          __end_of_isdigit 6EC2          __end_of_buttons 3476  
          ___ftpack@sign 0064                    _setup 68BE          __end_of_setTest 6FA0  
        __end_of_low_isr 0118                    pclath 000FFA                    tablat 000FF5  
                  plusw2 000FDB                    status 000FD8          __end_of_sprintf 1E40  
     __size_ofi2___awmod 00EE         __end_ofi1_update 38FE         __end_ofi1_rotate 6B20  
        __initialization 6B78          writeString@bits 008B             __end_of_log2 6996  
           __end_of_main 6846             __end_of_tick 5C5E             __end_of_wait 6F62  
   __size_of_daysOfMonth 00D6           printTemp@units 00F8                   ??_log2 0123  
                 ??_main 013D            ___fttol@sign1 0087                   ??_tick 0097  
                 ??_wait 0123            __activetblptr 000002     __size_of_getFontChar 0224  
   __size_of__tdiv_to_l_ 0210                   ?i1_spi 0007         i1writeDigit@segs 0010  
                 ?_hibit 0060                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0         ___llmod@dividend 0073                   ?_scale 009E  
                 _EEDATA 000FA8                   _EECON1 000FA6                   _EECON2 000FA7  
            loadTime@cnt 0121         ___awdiv@dividend 0069                   ?_setup 0001  
       __end_of___ftpack 56E4         __end_of___lltoft 6366                   i2l1200 527A  
                 i2l1202 51DC                   i2l1131 56E2                   i2l1211 4C4C  
                 i2l1203 523E                   i2l1232 4EDE                   i2l1208 4CF0  
                 i2l1217 4CE0                   i2l1306 5FF4                   i2l1090 50B2  
                 i2l1226 5D50                   i2l1242 6F2A                   i2l1172 40E6  
                 i2l1092 4F8C                   i2l1252 5588                   i2l1174 4120  
                 i2l1183 4232                   i2l1192 426A                   i2l1168 40A4  
                 i2l1169 4342                   i2l1099 50A2                   i2l1375 6638  
                 i2l1296 5B50                   i1l8071 676C                   i1l8081 6792  
                 i1l8083 6796                   i1l8091 67B4                   i1l8075 6778  
                 i1l8253 6B1C                   i1l8501 00A4                   i1l8095 67C2  
                 i1l8087 67AA                   i1l8079 678A                   i1l8263 6C72  
                 i1l8503 00C6                   i1l7553 688A                   i1l8505 00C8  
                 i2l7011 17BA                   i2l7003 1766                   i1l8259 6FA0  
                 i1l8371 3490                   i1l8507 00D0                   i1l7549 6868  
                 i1l8381 3526                   i1l8373 34C6                   i1l8453 321A  
                 i1l8445 317E                   i1l8437 3108                   i1l8429 306C  
                 i2l7015 180C                   i1l8375 34DE                   i1l8463 3290  
                 i2l8001 4E92                   i2l7121 1CC2                   i2l7105 1C2A  
                 i2l7113 1C72                   i2l7033 1960                   i2l7025 1916  
                 i2l6401 490A                   i1l8377 34F6                   i1l8385 3544  
                 i1l8481 33E6                   i2l7115 1C7E                   i2l7027 1926  
                 i1l8379 350E                   i1l8387 38C8                   i1l8475 3374  
                 i1l8491 005C                   i2l7133 1DDC                   i1l8469 3302  
                 i1l8493 0064                   i2l7311 53E0                   i2l7303 538C  
                 i2l8103 5CA8                   i2l7127 1D0E                   i2l7055 1A22  
                 i2l7039 199A                   i2l7135 1DF2                   i1l8495 006C  
                 i2l8201 5FD8                   i2l8041 58C6                   i2l8033 5888  
                 i2l8113 5D4E                   i2l7073 1AAE                   i2l7049 19FE  
                 i2l7137 1E16                   i2l7401 21A2                   i1l8761 3594  
                 i1l8497 0070                   i2l7251 66A4                   i2l7331 45C6  
                 i2l7323 4432                   i2l7315 53F2                   i2l8051 5914  
                 i2l8043 58CE                   i2l8027 586A                   i2l8107 5CF2  
                 i2l7091 1B7E                   i2l7083 1B26                   i2l6611 02A0  
                 i2l6603 0260                   i2l6371 48F2                   i2l6363 48C4  
                 i2l7171 3C74                   i2l7403 2230                   i1l8771 38C0  
                 i1l8763 3898                   i1l8499 0078                   i2l7261 6008  
                 i2l8221 65E8                   i2l8301 5F26                   i2l7077 1AEE  
                 i2l7069 1A80                   i2l7165 3AF6                   i2l7173 3C7A  
                 i2l7149 3984                   i2l7421 23CE                   i2l7413 2324  
                 i1l8765 38A2                   i2l7343 5B82                   i2l8223 65F0  
                 i2l8039 58B4                   i2l8055 5928                   i2l8127 544E  
                 i2l8207 62DC                   i2l7095 1BC2                   i2l6623 0306  
                 i2l6631 038C                   i2l6383 48FE                   i2l6375 48F6  
                 i2l6367 48EE                   i2l6359 48C0                   i2l7175 3C80  
                 i2l7503 57AA                   i2l7423 23E2                   i2l7415 234A  
                 i2l7407 22A0                   i2l7431 2460                   i1l8767 38AC  
                 i2l7249 667A                   i2l7281 6086                   i2l7265 600C  
                 i2l7329 4578                   i2l7361 5C0A                   i2l8145 54E8  
                 i2l8209 62F6                   i2l7097 1BD0                   i2l7089 1B70  
                 i2l6641 03BA                   i2l6625 0316                   i2l7169 3BDC  
                 i2l7505 57C0                   i2l7417 238C                   i2l7409 22E2  
                 i2l7601 5994                   i1l8769 38B6                   i2l7275 6082  
                 i2l7339 5B64                   i2l8227 6624                   i2l8219 65D6  
                 i2l8059 5940                   i2l8163 5578                   i2l8155 552C  
                 i2l6731 07FC                   i2l6723 0784                   i2l6707 06AC  
                 i2l6651 040E                   i2l6635 03A2                   i2l6395 4906  
                 i2l6387 4902                   i2l6379 48FA                   i2l7187 641C  
                 i2l7523 6116                   i2l7427 2408                   i2l7611 59E0  
                 i2l7603 59B0                   i2l7269 6010                   i2l7285 608A  
                 i2l7365 5C28                   i2l7357 5BDC                   i2l7349 5BB6  
                 i2l7701 4B6A                   i2l8157 5546                   i2l8149 5506  
                 i2l8173 5A94                   i2l6805 0C54                   i2l6653 0454  
                 i2l6637 03AA                   i2l6629 036E                   i2l7429 245A  
                 i2l7605 59C6                   i2l7613 5A1C                   i2l7367 5C32  
                 i2l8159 554E                   i2l8175 5AAE                   i2l6911 1340  
                 i2l6903 12E4                   i2l6831 0EC2                   i2l6743 089E  
                 i2l6735 0830                   i2l6671 0510                   i2l6663 04B8  
                 i2l6639 03B2                   i2l6583 016E                   i2l7391 209C  
                 i2l7383 1F4E                   i2l7607 59C8                   i2l8193 5F52  
                 i2l8281 5E8E                   i2l7633 3F9C                   i2l7625 3E6E  
                 i2l8185 5B34                   i2l8177 5AB6                   i2l6833 0ED2  
                 i2l6825 0DE6                   i2l6841 0F18                   i2l6761 09DC  
                 i2l6753 08E4                   i2l6665 04C8                   i2l6649 0406  
                 i2l6585 018C                   i2l6577 0132                   i2l6569 6D02  
                 i2l7393 20DE                   i2l7385 1F9E                   i2l7377 1E82  
                 i2l7609 59DC                   i2l7811 55D6                   i2l8195 5F6C  
                 i2l7731 4C7A                   i2l7715 4BE6                   i2l6915 1372  
                 i2l6683 05A8                   i2l6659 0484                   i2l6691 061E  
                 i2l6595 01DA                   i2l8267 69B2                   i2l7467 4740  
                 i2l7459 465E                   i2l7387 202C                   i2l7379 1EDE  
                 i2l7821 567E                   i2l7813 5608                   i2l7805 55A6  
                 i2l8197 5F74                   i2l8293 5EFA                   i2l8285 5EAC  
                 i2l8277 5E78                   i2l7741 4CBE                   i2l6933 144E  
                 i2l6853 0F88                   i2l6773 0B02                   i2l6749 08BC  
                 i2l6677 0570                   i2l6669 04F8                   i2l6589 019A  
                 i2l7477 47C6                   i2l7397 2120                   i2l7831 56D6  
                 i2l8287 5EBE                   i2l7655 2790                   i2l7743 4CD8  
                 i2l7735 4C98                   i2l7751 4EF6                   i2l6951 150C  
                 i2l6927 13EA                   i2l6839 0F0C                   i2l6791 0BB4  
                 i2l6783 0B64                   i2l6767 0A80                   i2l6679 058A  
                 i2l7399 2152                   i2l7825 5694                   i2l7817 5636  
                 i2l7809 55C0                   i2l7905 431E                   i2l8289 5EC6  
                 i2l8297 5F0E                   i2l7673 2A88                   i2l7649 2682  
                 i2l6697 0642                   i2l6689 05CA                   i2l7593 5978  
                 i2l7819 5668                   i2l7667 296E                   i2l7659 27A2  
                 i2l6955 1538                   i2l6947 14AC                   i2l6891 1212  
                 i2l6779 0B5A                   i2l7595 5980                   i2l7853 40F4  
                 i2l7685 6EB8                   i2l7757 4F0C                   i2l7925 5154  
                 i2l6981 162C                   i2l6965 157C                   i2l6973 15CC  
                 i2l6885 1122                   i2l6869 10A4                   i2l6789 0B9E  
                 i2l6797 0BEE                   i2l7597 5988                   i2l7847 40B2  
                 i2l7695 4B26                   i2l7791 505A                   i2l7919 50F8  
                 i2l6991 16EE                   i2l6967 1592                   i2l6959 1542  
                 i2l6895 125A                   i2l7599 598C                   i2l7881 41D6  
                 i2l7777 500A                   i2l7875 41A2                   i2l7859 4112  
                 i2l7787 503C                   i2l6899 12A6                   i2l7877 41B8  
                 i2l7869 416A                   i2l7973 4D92                   i2l7797 5080  
                 i2l6997 1728                   i2l6989 16DE                   i2l7895 42A2  
                 i2l7887 420E                   i2l7879 41C8                   i2l7991 4E2E  
                 i2l7967 4D36                   i2l7799 509A                   i2l7889 4224  
                 i2l7987 4E02                   i2l7997 4E66         __end_of___lwtoft 6CF2  
       daysOfMonth@month 0067                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _TMR1IE 007CE8                   _TMR1IF 007CF0                   _TMR1IP 007CF8  
                 _TMR0ON 007EAF                   _TMR1ON 007E68         __end_of_checkDST 540A  
                 _TRISA1 007C91                   _TRISA2 007C92                   _TRISA3 007C93  
                 _TRISA4 007C94         __end_of_advState 6A62                   i1_log2 6C60  
                 i2_log2 6996                   i1_wait 6FA0             _checkDST$308 0095  
          dayOfWeek@year 007E         __end_of__powers_ 7F77         __end_of_lcd_font 7ED9  
       __end_of_high_isr 5A58                   ___ftge 5C5E                   ___wmul 6A62  
              ??___awdiv 006D                ??___ftadd 00A8                ??___awmod 0005  
              ??___ftdiv 006E                ??___ftneg 0090                ??___lldiv 0068  
              ??___ftmul 0093                ??___llmod 007B                ??___ftsub 00B6  
              ??___fttol 0082                ??___lwmod 0064         __end_of_loadTime 6400  
              ??_advMenu 0001         __end_of_initTemp 6C60                   _fround 3C8A  
                 clear_0 6B7E                   clear_1 6B8A                   clear_2 6B96  
       ___awdiv@quotient 0074          ___awmod@divisor 0003                   _screen 016F  
                 _lowbit 60DC          ___awmod@counter 0006                   hibit@x 0060  
              ??_getTemp 00B5                   _update 2ABC                   _rotate 6498  
       __end_of_saveTime 66CA    ___ftmul@f3_as_product 0099                ??_initRTC 012B  
              ??_isdigit 0061                ??_buttons 001A        __end_ofi2___awmod 5F30  
           countBits@ret 0064             countBits@num 0060         __end_of_printRTC 24A8  
                 spi@cnt 012C             __mediumconst 7EAE                ??_setTest 0120  
              ??_low_isr 0022                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8              i1wait@count 0001           i2___awmod@sign 0068  
              ??_sprintf 00C7       __size_of___asftadd 0042       __size_of___asftdiv 0042  
     __size_of___asftmul 0042       __size_of___asftsub 0042               __accesstop 0060  
__end_of__initialization 6BBC          __CFG_PBADEN$OFF 000000               ___ftadd@f1 00A2  
             ___ftadd@f2 00A5               ___ftge@ff1 0090               ___ftge@ff2 0093  
             ___ftdiv@f1 0068               ___ftdiv@f2 006B               ___ftdiv@f3 0074  
  __size_ofi1_writeDigit 004E               ___ftneg@f1 008D               ___ftmul@f1 008D  
             ___ftmul@f2 0090            __end_ofi1_spi 62CA               ___ftsub@f1 00B0  
             ___ftsub@f2 00B3               ___fttol@f1 007E           __pcstackCOMRAM 0001  
           __pidataBANK1 6FBE              i1update@cnt 0019       __size_of_dayOfWeek 0308  
             ___lltoft@c 0099            __end_of_hibit 6498            __end_of_pow10 7F29  
          __end_of_scale 2ABC              i1rotate@cnt 0006              i1rotate@seg 0001  
            i1rotate@ret 0005            __end_of_setup 692C               ___lwtoft@c 0068  
        printTemp@digits 00F0               __div_to_l_ 4EE0                  ??i1_spi 0009  
              ?i1_update 0001                ?i1_rotate 0001                  ??_hibit 0064  
        __div_to_l_@exp1 006C          __div_to_l_@cntr 006B             sprintf@integ 00DB  
                ??_scale 00A1          __div_to_l_@quot 0067             sprintf@width 00E0  
                ??_setup 012C             i1_writeDigit 6BC6               __pbssBANK0 00F9  
             __pbssBANK1 0141       __size_of_countBits 0048                  ?i1_log2 0001  
                ?i2_log2 006B                  ?i1_wait 0001            __div_to_l_@f1 0060  
          __div_to_l_@f2 0063        i1writeDigit@digit 000F                  ?___ftge 0090  
                ?___wmul 0076        __end_of___asftadd 6E84        __end_of___asftdiv 6E42  
                ?_fround 009E        __end_of___asftmul 6E00        __end_of___asftsub 6D7C  
              ?___ftpack 0060                  ?_lowbit 0060                ?___lltoft 0099  
                ?_update 0001                  ?_rotate 011F                ?___lwtoft 0068  
            saveTime@cnt 006B                ?_checkDST 0001                ?_advState 0001  
           ?_writeString 0084       __size_of_printTemp 0150               ??i1_update 0014  
             ??i1_rotate 0002       __size_of_startDisp 00A2        __end_of_dayOfWeek 464C  
              ?_high_isr 0001                ?_loadTime 0001                ?_initTemp 0001  
     __size_of_writeChar 0058          __size_ofi1_log2 004A          __size_ofi2_log2 006A  
        __size_ofi1_wait 001E                ?_saveTime 0060        __end_of__npowers_ 7F50  
                __Hparam 0000           dayOfWeek@month 007F               _scale$1434 00A7  
                __Lparam 0000                ?_printRTC 00F0          __size_of___ftge 00F4  
                ___awdiv 5834                  ___ftadd 3FF8                  ___awmod 6750  
                ___ftdiv 50B4                  ___ftneg 6EFE                  ___lldiv 5A58  
        __size_of___wmul 0062                  ___ftmul 4CF2                  ___llmod 5F30  
                ___ftsub 6D7C                  ___fttol 540A                  ___lwmod 65B8  
                _advMenu 6846        __end_of_countBits 6D3A                  __pcinit 6B78  
             ??___ftpack 0065          __size_of_fround 036E                  __ramtop 0800  
             ??___lltoft 009D          __size_of_lowbit 00AE                  _getTemp 464C  
                __ptext0 67CC                  __ptext1 68BE                  __ptext2 6EC2  
                __ptext3 6C14                  __ptext4 652A                  __ptext5 6366  
                __ptext6 618A                  __ptext7 6F82                  __ptext8 6F62  
                __ptext9 2ABC          __size_of_update 0518          __size_of_rotate 0092  
             ??___lwtoft 006B                  _oldLATB 005E   __size_of_setBrightness 0020  
            ?__div_to_l_ 0060                  _initRTC 652A                  _dpowers 7ED9  
             ??_checkDST 008D               ??_advState 0008                  _isdigit 6E84  
                _buttons 2FD4             __size_of_spi 00F0         ___awmod@dividend 0001  
                _setTest 6F82                  _low_isr 0018                  _waitCnt 0033  
                _rtcMenu 0185                  _waitcnt 0053                  log2@num 011F  
                main@cnt 013D                  _sprintf 011C               ??_high_isr 0110  
         __pintcode_body 594A     end_of_initialization 6BBC               ??_loadTime 011F  
          _tmr0BigCounts 016B               ??_initTemp 011F            __Lmediumconst 7EAE  
                int_func 594A             writeChar@dig 0083                  tick@val 0096  
                spi@addr 0125                  spi@data 0126          ___lldiv@divisor 0064  
             ??_saveTime 0069                  lowbit@x 0060                  spi@send 012A  
        ___lldiv@counter 0072        __end_of_printTemp 5834            ??_daysOfMonth 006A  
             ??_printRTC 00F1                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
          ?_setupButtons 0001        __end_of_startDisp 622C           __tdiv_to_l_@f1 0060  
         __tdiv_to_l_@f2 0063            ??_getFontChar 007F            ??__tdiv_to_l_ 0066  
             getTemp@cnt 00C5        __end_of_writeChar 6B78              printRTC@cnt 010F  
            printRTC@str 0101                i2___awmod 5E42            i1log2@log2Val 0005  
           writeString@i 008D              ___ftdiv@exp 0077            _setBrightness 6F62  
    __size_of__div_to_l_ 01D4           __end_ofi1_log2 6CAA           __end_ofi2_log2 6A00  
         __end_ofi1_wait 6FBE                i1log2@num 0001              ___ftmul@exp 0098  
         ??_setupButtons 011F                i2log2@num 006B        writeString@digits 0084  
             _writeDigit 66CA           __end_of___ftge 5D52           __end_of___wmul 6AC4  
      writeString@string 0085           __end_of_fround 3FF8      __end_of_daysOfMonth 60DC  
         __end_of_lowbit 618A                i1spi@addr 0007                i1spi@data 0008  
         __end_of_update 2FD4           __end_of_rotate 652A                i1spi@send 000C  
    start_initialization 6B78            lowbit@log2Val 0067      __end_of_getFontChar 4AE2  
    __end_of__tdiv_to_l_ 4CF2              __end_of_dow 7F93              __end_of_spi 5E42  
   __size_of_writeString 038C               ?i2___awmod 0060        __size_ofi1_update 0488  
      __size_ofi1_rotate 005C            i2log2@log2Val 006F           ?_setBrightness 011F  
        ___llmod@divisor 0077                 ??i1_log2 0005                 ??i2_log2 006F  
        ___llmod@counter 007D                 ??i1_wait 0005          daysOfMonth@year 0068  
           dayOfWeek@day 0080             dayOfWeek@tmp 0089                 ??___ftge 0096  
               ??___wmul 007A            sprintf@vd_743 00D6              __pdataBANK1 017C  
               ??_fround 00A1                 ??_lowbit 0064                 ??_update 0132  
               ??_rotate 0120               fround@prec 009E        __size_of___ftpack 015A  
              ___asftadd 6E42                ___asftdiv 6E00                ___asftmul 6DBE  
              ___asftsub 6D3A        __size_of___lltoft 009C              __pbssCOMRAM 0033  
      __size_of___lwtoft 0048            __pcstackBANK0 0060            __pcstackBANK1 0100  
      __size_of_checkDST 018E      __end_of__stringdata 7FFE        __size_of_advState 0062  
           _isdigit$1016 0062        __size_of_high_isr 5A50              sprintf@_val 00EB  
            sprintf@flag 00E2              sprintf@fval 00E6              sprintf@prec 00E9  
            sprintf@temp 00D8                _dayOfWeek 4344                __pnvBANK1 0185  
      __size_of_loadTime 009A        __size_of_initTemp 004C                __pintcode 0008  
          __pmediumconst 7EAE        __size_of_saveTime 0088              _daysOfMonth 6006  
               ?___awdiv 0069                 ?___ftadd 00A2                 ?___awmod 0001  
               ?___ftdiv 0068                 ?___ftneg 008D              ?_writeDigit 012D  
               ?___lldiv 0060                 ?___ftmul 008D                 ?___llmod 0073  
               ?___ftsub 00B0                __npowers_ 7F29                 ?___fttol 007E  
               ?___lwmod 0060                 ?_advMenu 0001      getTemp@oldTempsTemp 00B6  
      __size_of_printRTC 0668              __pintcodelo 0018              _getFontChar 48BE  
            __tdiv_to_l_ 4AE2                 ?_getTemp 0001             ??__div_to_l_ 0066  
               ?_initRTC 0001               ?___asftadd 00B0               ?___asftdiv 00AA  
              _countBits 6CF2                 ?_isdigit 0060                 ?_buttons 0001  
             ?___asftmul 00B0               ?___asftsub 00B6          _rtc_small_ticks 005C  
         __size_ofi1_spi 009E                 ?_setTest 011F                 ?_low_isr 0001  
   __end_of_setupButtons 6EFE           __size_of_hibit 0098              ??i2___awmod 0064  
               ?_sprintf 00BB           __size_of_scale 0614          ??_setBrightness 0120  
         __size_of_setup 006E             saveTime@date 0060           ___wmul@product 007C  
             ?_dayOfWeek 007E            getFontChar@ch 007E              writeChar@ch 0082  
               i1u710_25 6276                 i1u710_26 627C                 i1u722_25 303C  
               i1u731_25 3272                 i1u723_25 3066                 i1u723_26 306C  
               i1u740_20 0064                 i1u740_21 0062                 i2u500_40 17B2  
               i1u716_24 34A0                 i1u716_25 349C                 i1u717_20 353A  
               i1u741_20 006C                 i1u741_21 006A                 i2u500_47 17A6  
               i2u501_40 18B6                 i2u421_40 04F0                 i1u709_24 626A  
               i1u709_25 6264                 i1u733_25 32E6                 i1u725_25 30C2  
               i1u717_26 353C                 i1u590_20 68BA                 i1u742_20 00A4  
               i1u742_21 00A2                 i2u501_47 18AA                 i2u421_47 04E4  
               i2u430_40 0700                 i1u718_24 3558                 i1u590_25 68B2  
               i1u718_25 3552                 i2u430_45 06F4                 i2u503_40 194E  
               i2u423_40 0534                 i1u719_24 38DC                 i1u591_25 68BC  
               i1u719_25 38D6                 i1u735_25 3358                 i1u727_25 315E  
               i2u503_47 1942                 i2u423_47 052E                 i2u424_40 0560  
               i2u416_40 044E                 i2u408_40 016A                 i2u424_47 0554  
               i2u416_47 0448                 i2u408_47 015C                 i2u521_40 1C22  
               i1u737_25 33CA                 i1u729_25 31D4       __end_of__div_to_l_ 50B4  
               i2u521_47 1C16                 i2u530_40 1DD4                 i2u530_47 1DC6  
               i2u523_40 1C5E                 i2u523_47 1C52                 i2u620_40 5064  
               i2u460_40 0EFA                 i2u452_40 0C4C                 i1u588_25 6858  
               i2u540_44 3AD0                 i2u428_45 0684                 i2u540_45 3AC8  
               i2u460_47 0EEE                 i2u452_47 0C40                 i2u613_40 4CA2  
               i2u533_40 1E3E                 i2u453_40 0CF0                 i2u541_40 3B5E  
               i1u589_25 687A                 i2u533_47 1E32                 i2u453_47 0CE4  
               i2u541_47 3B58                 i2u630_40 4060                 i2u606_40 4B0E  
               i2u526_40 1CA6                 i2u462_40 0F40                 i2u534_44 3998  
               i2u630_45 4056                 i2u606_45 4B04                 i2u534_45 3992  
               i2u526_47 1C9A                 i2u462_47 0F34                 i2u455_40 0D84  
               i2u447_40 0B8C                 i2u543_40 3BD6                 i2u455_47 0D78  
               i2u447_47 0B80                 i2u543_47 3BD0                 i2u608_40 4B52  
               i2u464_40 0F86                 i2u536_40 3A0C                 i1u696_24 6B00  
               i1u696_25 6AFC                 i2u608_45 4B48                 i2u464_47 0F7A  
               i2u536_47 3A06                 i2u529_40 1D0C                 i2u465_40 0FB0  
               i2u449_40 0BDC                 i1u697_24 6B10                 i1u697_25 6B0C  
               i2u545_44 3BF2                 i2u545_45 3BEC                 i2u529_47 1D00  
               i2u465_47 0FA4                 i2u449_47 0BD0                 i2u650_40 50E0  
               i2u490_40 15BA                 i2u466_40 1006                 i2u458_40 0E62  
               i2u546_40 3C6A                 i2u538_40 3A7A                 i2u650_45 50D6  
               i2u490_47 15AE                 i2u466_47 0FFA                 i2u458_47 0E56  
               i2u546_47 3C64                 i2u538_47 3A74                 i2u467_40 105C  
               i2u467_47 1050                 i2u564_40 53B8                 i2u652_40 5124  
               i2u652_45 511A                 i2u564_46 53BA                 i2u629_40 4024  
               i2u653_40 513A                 i2u493_40 162A                 i2u549_44 6472  
               i2u629_45 401A                 i2u549_45 646A                 i2u493_47 161E  
               i2u494_40 16D6                 i2u574_41 1E4A                 i2u494_47 16CA  
               i2u655_40 4D1E                 i2u655_45 4D14                 i2u496_40 1716  
               i2u488_40 156A                 i2u496_47 170A                 i2u488_47 155E  
               i2u657_40 4D62                 i2u593_40 5980                 i2u569_41 5B8C  
               i2u593_41 597E                 i2u657_45 4D58                 i2u658_40 4D78  
               i2u682_40 5510                 i2u594_40 5988                 i2u594_41 5986  
               i2u595_40 59B0                 i2u595_41 59AE                 i2u587_44 6164  
               i2u587_45 615C                 i2u677_40 5436                 i2u596_48 5A04  
               i2u596_49 5A18                 i2u677_45 542C                 i2u679_40 547A  
               i2u679_45 5470          writeDigit@digit 012D                _printTemp 56E4  
              _startDisp 618A              __stringdata 7F93        ___wmul@multiplier 0076  
             ?_countBits 0060                 i1_update 3476                 i1_rotate 6AC4  
           setTest@state 011F                _writeChar 6B20                copy_data0 6BB0  
     i2___awmod@dividend 0060                 i1spi@cnt 000E      __size_of_writeDigit 0086  
         _printTemp$1431 00F2                 __Hparam0 0000          writeFloat@F5025 0162  
               __Lparam0 0000          loadTime@newDate 0122               ?_printTemp 00F0  
       __size_of___awdiv 0116         __size_of___ftadd 034C         __size_of___awmod 007C  
       __size_of___ftdiv 01C8         __size_of___ftneg 003A         __size_of___lldiv 010A  
       __size_of___ftmul 01EE         __size_of___llmod 00D6         __size_of___ftsub 0042  
       __size_of___fttol 0180         __size_of___lwmod 008A                 ___ftpack 558A  
       __size_of_advMenu 0078              _fround$1432 00AA              _fround$1433 00A7  
               ___lltoft 62CA               ?_startDisp 0001                 ___lwtoft 6CAA  
       __size_of_getTemp 0272              ??___asftadd 00B5                 _checkDST 527C  
            ??___asftdiv 00AF                 _advState 6A00               sprintf@exp 00E4  
            ??___asftmul 00B5              ??___asftsub 00BB            _printRTC$1430 010D  
       __size_of_initRTC 008E         __size_of_isdigit 003E         __size_of_buttons 04A2  
         writeChar@digit 0081         __size_of_setTest 001E               ?_writeChar 0081  
       __size_of_low_isr 0100                 __ptext10 66CA                 __ptext11 6498  
               __ptext20 6AC4                 __ptext12 692C                 __ptext21 622C  
               __ptext13 5D52                 __ptext30 464C                 __ptext22 6FA0  
               __ptext14 6F38                 __ptext31 6CAA                 __ptext23 6846  
               __ptext40 5A58                 __ptext32 38FE                 __ptext24 6A00  
               __ptext16 2FD4                 __ptext41 540A                 __ptext33 6400  
               __ptext25 6750                 __ptext17 3476                 __ptext50 4EE0  
               __ptext42 6EFE                 __ptext34 6CF2                 __ptext18 6BC6  
               __ptext51 4AE2                 __ptext43 5C5E                 __ptext35 6B20  
               __ptext27 1E40                 __ptext19 6C60                 __ptext60 5F30  
               __ptext52 6E84                 __ptext44 6D3A                 __ptext36 6996  
               __ptext28 56E4                 __ptext61 3FF8                 __ptext53 24A8  
               __ptext45 6D7C                 __ptext37 48BE                 __ptext29 60DC  
               __ptext62 558A                 __ptext54 3C8A                 __ptext46 6DBE  
               __ptext38 011C                 __ptext63 5B62                 __ptext55 5E42  
               __ptext47 6E00                 __ptext39 62CA                 __ptext64 527C  
               __ptext56 5834                 __ptext48 50B4                 __ptext65 4344  
               __ptext57 4CF2                 __ptext49 6E42                 __ptext66 6006  
               __ptext58 6A62                 __ptext67 6642                 __ptext59 65B8  
               __ptext68 0000                 __powers_ 7F50                 _lcd_font 7EAE  
          ?i1_writeDigit 000F                 _high_isr 0008         __size_of_sprintf 1D24  
          _rtc_big_ticks 00F9                 _loadTime 6366                 _initTemp 6C14  
              wait@count 011F            __size_of_log2 006A            __size_of_main 007A  
            ??_dayOfWeek 0081                 _oldTemps 0141            __size_of_tick 00FC  
          __size_of_wait 002A                 _saveTime 6642                 _tempMenu 00FB  
               _printRTC 1E40           writeDigit@segs 012E                 main@argc 0138  
               main@argv 013A    __CFG_CPUDIV$OSC3_PLL4 000000                update@cnt 0137  
      i2___awmod@divisor 0062    __size_of_setupButtons 003C              ??_countBits 0064  
      i2___awmod@counter 0067                rotate@cnt 0124            ??_writeString 0087  
              rotate@seg 011F                rotate@ret 0123                 isdigit@c 0060  
         ??i1_writeDigit 0011                 scale@scl 009E                 intlevel1 0000  
               intlevel2 0000                sprintf@ap 00DE         __tdiv_to_l_@exp1 0070  
              sprintf@vd 00D4                sprintf@sp 00BB         __tdiv_to_l_@cntr 006F  
       __tdiv_to_l_@quot 006B         ___lwmod@dividend 0060         ___lldiv@dividend 0060  
          writeDigit@dig 0130            writeDigit@cnt 0131           writeLong@F5021 017C  
         printRTC@digits 00F0             getTemp@total 00C2             ?_daysOfMonth 0067  
           ??_writeDigit 012F             _setupButtons 6EC2              ??_printTemp 00F1  
          printRTC@F5073 014D             ?_getFontChar 007E      setBrightness@bright 011F  
           ?__tdiv_to_l_ 0060              ??_startDisp 0120                 sprintf@c 00EF  
               sprintf@f 00BD         ___lldiv@quotient 006E          ___lwmod@divisor 0062  
        ___lwmod@counter 0066              getTemp@temp 00BF              ??_writeChar 0083  
          printRTC@first 0100              log2@log2Val 0123      __end_of_writeString 3C8A  
     __end_of_writeDigit 6750             hibit@log2Val 0067  
