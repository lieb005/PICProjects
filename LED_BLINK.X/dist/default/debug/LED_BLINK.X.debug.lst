

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Mar 28 02:27:34 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	maintext,global,class=CODE,split=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x5E,2
    12  0000                     	;# 
    13  0001                     	;# 
    14  0002                     	;# 
    15  0003                     	;# 
    16  0004                     	;# 
    17  0005                     	;# 
    18  000A                     	;# 
    19  000B                     	;# 
    20  000C                     	;# 
    21  000E                     	;# 
    22  000E                     	;# 
    23  000F                     	;# 
    24  0010                     	;# 
    25  0019                     	;# 
    26  001E                     	;# 
    27  001F                     	;# 
    28  0081                     	;# 
    29  0085                     	;# 
    30  008C                     	;# 
    31  008E                     	;# 
    32  0090                     	;# 
    33  0095                     	;# 
    34  0096                     	;# 
    35  0096                     	;# 
    36  0099                     	;# 
    37  009A                     	;# 
    38  009A                     	;# 
    39  009B                     	;# 
    40  009C                     	;# 
    41  009D                     	;# 
    42  009E                     	;# 
    43  009F                     	;# 
    44  005F                     _GIE	set	95
    45  0028                     _GP0	set	40
    46  002C                     _GP4	set	44
    47  002D                     _GP5	set	45
    48  005D                     _T0IE	set	93
    49  005A                     _T0IF	set	90
    50  0085                     _TRISIO	set	133
    51  0408                     _PS0	set	1032
    52  0409                     _PS1	set	1033
    53  040A                     _PS2	set	1034
    54  040B                     _PSA	set	1035
    55  040D                     _T0CS	set	1037
    56  040C                     _T0SE	set	1036
    57                           
    58                           	psect	maintext
    59  0046                     __pmaintext:	
    60                           
    61                           ;psect for function _timeroverflow
    62                           ; #config settings
    63  0000                     
    64 ;;
    65 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    66 ;;
    67 ;; *************** function _main *****************
    68 ;; Defined at:
    69 ;;		line 154 in file "blink_main.c"
    70 ;; Parameters:    Size  Location     Type
    71 ;;		None
    72 ;; Auto vars:     Size  Location     Type
    73 ;;		None
    74 ;; Return value:  Size  Location     Type
    75 ;;		None               void
    76 ;; Registers used:
    77 ;;		wreg
    78 ;; Tracked objects:
    79 ;;		On entry : 17F/0
    80 ;;		On exit  : 0/0
    81 ;;		Unchanged: 0/0
    82 ;; Data sizes:     COMMON   BANK0
    83 ;;      Params:         0       0
    84 ;;      Locals:         0       0
    85 ;;      Temps:          0       0
    86 ;;      Totals:         0       0
    87 ;;Total ram usage:        0 bytes
    88 ;; Hardware stack levels required when called:    1
    89 ;; This function calls:
    90 ;;		Nothing
    91 ;; This function is called by:
    92 ;;		Startup code after reset
    93 ;; This function uses a non-reentrant model
    94 ;;
    95  0046                     _main:	
    96                           
    97                           ;blink_main.c: 155: PSA = 0;
    98                           
    99                           ;incstack = 0
   100                           ; Regs used in _main: [wreg]
   101  0046  1683               	bsf	3,5	;RP0=1, select bank1
   102  0047  1181               	bcf	1,3	;volatile
   103                           
   104                           ;blink_main.c: 156: PS2 = 1;
   105  0048  1501               	bsf	1,2	;volatile
   106                           
   107                           ;blink_main.c: 157: PS1 = 1;
   108  0049  1481               	bsf	1,1	;volatile
   109                           
   110                           ;blink_main.c: 158: PS0 = 1;
   111  004A  1401               	bsf	1,0	;volatile
   112                           
   113                           ;blink_main.c: 159: T0CS = 0;
   114  004B  1281               	bcf	1,5	;volatile
   115                           
   116                           ;blink_main.c: 160: T0SE = 0;
   117  004C  1201               	bcf	1,4	;volatile
   118                           
   119                           ;blink_main.c: 162: T0IE = 1;
   120  004D  168B               	bsf	11,5	;volatile
   121                           
   122                           ;blink_main.c: 163: T0IF = 0;
   123  004E  110B               	bcf	11,2	;volatile
   124                           
   125                           ;blink_main.c: 164: GIE = 1;
   126  004F  178B               	bsf	11,7	;volatile
   127                           
   128                           ;blink_main.c: 166: TRISIO = 0b11001010;
   129  0050  30CA               	movlw	202
   130  0051  0085               	movwf	5	;volatile
   131                           
   132                           ;blink_main.c: 168: GP4 = 1;
   133  0052  1283               	bcf	3,5	;RP0=0, select bank0
   134  0053  1605               	bsf	5,4	;volatile
   135                           
   136                           ;blink_main.c: 169: GP5 = 1;
   137  0054  1685               	bsf	5,5	;volatile
   138  0055                     L1:	
   139                           
   140                           ;blink_main.c: 170: GP0 = 1;
   141  0055  1405               	bsf	5,0	;volatile
   142  0056                     l35:	
   143                           ;blink_main.c: 172: while (1)
   144                           
   145                           
   146                           ;blink_main.c: 173: {
   147                           ;blink_main.c: 174: if (counter1 == 1)
   148  0056  0825               	movf	_counter1,w	;volatile
   149  0057  3A01               	xorlw	1
   150  0058  1903               	btfsc	3,2
   151                           
   152                           ;blink_main.c: 175: {
   153                           ;blink_main.c: 176: GP4 = 0;
   154  0059  1205               	bcf	5,4	;volatile
   155                           
   156                           ;blink_main.c: 177: }
   157                           ;blink_main.c: 178: if (counter1 == 2)
   158  005A  0825               	movf	_counter1,w	;volatile
   159  005B  3A02               	xorlw	2
   160  005C  1903               	btfsc	3,2
   161                           
   162                           ;blink_main.c: 179: {
   163                           ;blink_main.c: 180: GP4 = 1;
   164  005D  1605               	bsf	5,4	;volatile
   165                           
   166                           ;blink_main.c: 181: }
   167                           ;blink_main.c: 182: if (counter2 == 1)
   168  005E  0826               	movf	_counter2,w	;volatile
   169  005F  3A01               	xorlw	1
   170  0060  1903               	btfsc	3,2
   171                           
   172                           ;blink_main.c: 183: {
   173                           ;blink_main.c: 184: GP5 = 0;
   174  0061  1285               	bcf	5,5	;volatile
   175                           
   176                           ;blink_main.c: 185: }
   177                           ;blink_main.c: 186: if (counter2 == 2)
   178  0062  0826               	movf	_counter2,w	;volatile
   179  0063  3A02               	xorlw	2
   180  0064  1903               	btfsc	3,2
   181                           
   182                           ;blink_main.c: 187: {
   183                           ;blink_main.c: 188: GP5 = 1;
   184  0065  1685               	bsf	5,5	;volatile
   185                           
   186                           ;blink_main.c: 189: }
   187                           ;blink_main.c: 190: if (counter3 == 1)
   188  0066  0827               	movf	_counter3,w	;volatile
   189  0067  3A01               	xorlw	1
   190  0068  1903               	btfsc	3,2
   191                           
   192                           ;blink_main.c: 191: {
   193                           ;blink_main.c: 192: GP0 = 0;
   194  0069  1005               	bcf	5,0	;volatile
   195                           
   196                           ;blink_main.c: 193: }
   197                           ;blink_main.c: 194: if (counter3 == 2)
   198  006A  0827               	movf	_counter3,w	;volatile
   199  006B  3A02               	xorlw	2
   200  006C  1D03               	skipz
   201  006D  2856               	goto	l35
   202  006E  2855               	goto	L1
   203  006F                     __end_of_main:	
   204                           ;blink_main.c: 195: {
   205                           ;blink_main.c: 196: GP0 = 1;
   206                           
   207                           
   208                           	psect	cinit
   209  006F                     start_initialization:	
   210  006F                     __initialization:	
   211                           
   212                           ; Clear objects allocated to BANK0
   213  006F  01A5               	clrf	__pbssBANK0& (0+127)
   214  0070  01A6               	clrf	(__pbssBANK0+1)& (0+127)
   215  0071  01A7               	clrf	(__pbssBANK0+2)& (0+127)
   216  0072                     end_of_initialization:	
   217                           ;End of C runtime variable initialization code
   218                           
   219  0072                     __end_of__initialization:	
   220  0072  0183               	clrf	3
   221  0073  2846               	ljmp	_main	;jump to C main() function
   222                           
   223                           	psect	bssBANK0
   224  0025                     __pbssBANK0:	
   225  0025                     _counter1:	
   226  0025                     	ds	1
   227  0026                     _counter2:	
   228  0026                     	ds	1
   229  0027                     _counter3:	
   230  0027                     	ds	1
   231                           
   232                           	psect	cstackCOMMON
   233  0000                     __pcstackCOMMON:	
   234  0000                     ??_main:	
   235                           
   236                           	psect	cstackBANK0
   237  0020                     __pcstackBANK0:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0020                     ?_main:	
   241  0020                     ?_timeroverflow:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0020                     ??_timeroverflow:	
   245                           ; 0 bytes @ 0x0
   246                           
   247                           
   248                           ; 0 bytes @ 0x0
   249  0020                     	ds	5
   250                           
   251                           	psect	text1
   252  0014                     __ptext1:	
   253 ;; *************** function _timeroverflow *****************
   254 ;; Defined at:
   255 ;;		line 202 in file "blink_main.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;		None               void
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMMON   BANK0
   269 ;;      Params:         0       0
   270 ;;      Locals:         0       0
   271 ;;      Temps:          0       5
   272 ;;      Totals:         0       5
   273 ;;Total ram usage:        5 bytes
   274 ;; Hardware stack levels used:    1
   275 ;; This function calls:
   276 ;;		Nothing
   277 ;; This function is called by:
   278 ;;		Interrupt level 1
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           
   283                           ;psect for function _timeroverflow
   284  0014                     _timeroverflow:	
   285                           
   286                           ;blink_main.c: 203: if (T0IF == 1)
   287  0014  1D0B               	btfss	11,2	;volatile
   288  0015  283B               	goto	i1l51
   289                           
   290                           ;blink_main.c: 204: {
   291                           ;blink_main.c: 206: T0IF = 0;
   292  0016  110B               	bcf	11,2	;volatile
   293                           
   294                           ;blink_main.c: 207: counter1++;
   295  0017  3001               	movlw	1
   296  0018  00A0               	movwf	??_timeroverflow
   297  0019  0820               	movf	??_timeroverflow,w
   298  001A  07A5               	addwf	_counter1,f	;volatile
   299                           
   300                           ;blink_main.c: 208: counter2++;
   301  001B  3001               	movlw	1
   302  001C  00A0               	movwf	??_timeroverflow
   303  001D  0820               	movf	??_timeroverflow,w
   304  001E  07A6               	addwf	_counter2,f	;volatile
   305                           
   306                           ;blink_main.c: 209: counter3++;
   307  001F  3001               	movlw	1
   308  0020  00A0               	movwf	??_timeroverflow
   309  0021  0820               	movf	??_timeroverflow,w
   310  0022  07A7               	addwf	_counter3,f	;volatile
   311                           
   312                           ;blink_main.c: 210: if (counter1 == 3)
   313  0023  0825               	movf	_counter1,w	;volatile
   314  0024  3A03               	xorlw	3
   315  0025  1D03               	skipz
   316  0026  282B               	goto	i1l48
   317                           
   318                           ;blink_main.c: 211: {
   319                           ;blink_main.c: 212: counter1 = 1;
   320  0027  3001               	movlw	1
   321  0028  00A0               	movwf	??_timeroverflow
   322  0029  0820               	movf	??_timeroverflow,w
   323  002A  00A5               	movwf	_counter1	;volatile
   324  002B                     i1l48:	
   325                           
   326                           ;blink_main.c: 213: }
   327                           ;blink_main.c: 214: if (counter2 == 6)
   328  002B  0826               	movf	_counter2,w	;volatile
   329  002C  3A06               	xorlw	6
   330  002D  1D03               	skipz
   331  002E  2833               	goto	i1l49
   332                           
   333                           ;blink_main.c: 215: {
   334                           ;blink_main.c: 216: counter2 = 1;
   335  002F  3001               	movlw	1
   336  0030  00A0               	movwf	??_timeroverflow
   337  0031  0820               	movf	??_timeroverflow,w
   338  0032  00A6               	movwf	_counter2	;volatile
   339  0033                     i1l49:	
   340                           
   341                           ;blink_main.c: 217: }
   342                           ;blink_main.c: 218: if (counter3 == 5)
   343  0033  0827               	movf	_counter3,w	;volatile
   344  0034  3A05               	xorlw	5
   345  0035  1D03               	skipz
   346  0036  283B               	goto	i1l51
   347                           
   348                           ;blink_main.c: 219: {
   349                           ;blink_main.c: 220: counter3 = 1;
   350  0037  3001               	movlw	1
   351  0038  00A0               	movwf	??_timeroverflow
   352  0039  0820               	movf	??_timeroverflow,w
   353  003A  00A7               	movwf	_counter3	;volatile
   354  003B                     i1l51:	
   355  003B  0824               	movf	??_timeroverflow+4,w
   356  003C  00DF               	movwf	95
   357  003D  0823               	movf	??_timeroverflow+3,w
   358  003E  008A               	movwf	10
   359  003F  0822               	movf	??_timeroverflow+2,w
   360  0040  0084               	movwf	4
   361  0041  0E21               	swapf	(??_timeroverflow+1)^0,w
   362  0042  0083               	movwf	3
   363  0043  0EDE               	swapf	94,f
   364  0044  0E5E               	swapf	94,w
   365  0045  0009               	retfie
   366  0046                     __end_of_timeroverflow:	
   367  005E                     btemp	set	94	;btemp
   368  005E                     wtemp0	set	94
   369                           
   370                           	psect	intentry
   371  0004                     __pintentry:	
   372                           ;incstack = 0
   373                           ; Regs used in _timeroverflow: [wreg+status,2+status,0]
   374                           
   375  0004                     interrupt_function:	
   376  005E                     saved_w	set	btemp
   377  0004  00DE               	movwf	btemp
   378  0005  0E03               	swapf	3,w
   379  0006  1283               	bcf	3,5	;RP0=0, select bank0
   380  0007  00A1               	movwf	??_timeroverflow+1
   381  0008  0804               	movf	4,w
   382  0009  00A2               	movwf	??_timeroverflow+2
   383  000A  080A               	movf	10,w
   384  000B  00A3               	movwf	??_timeroverflow+3
   385  000C  085F               	movf	btemp+1,w
   386  000D  00A4               	movwf	??_timeroverflow+4
   387  000E  2814               	ljmp	_timeroverflow


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      5       8

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timeroverflow in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timeroverflow in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _timeroverflow                                        5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _timeroverflow (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      5       8       4       12.9%
ABS                  0      0       8       5        0.0%
DATA                 0      0       8       6        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Mar 28 02:27:34 2014

            __CFG_CP$OFF 0000                       l35 0056                      _GP0 0028  
                    _GP4 002C                      _GP5 002D                      _GIE 005F  
                    _PS0 0408                      _PS1 0409                      _PS2 040A  
           __CFG_CPD$OFF 0000                      _PSA 040B                      fsr0 0004  
                   _T0IE 005D                     _T0IF 005A                     _T0CS 040D  
                   _T0SE 040C                     i1l51 003B                     i1l48 002B  
                   i1l49 0033                     _main 0046                     btemp 005E  
                   start 000F                    ?_main 0020            __CFG_WDTE$OFF 0000  
         __CFG_BOREN$OFF 0000                    pclath 000A          ??_timeroverflow 0020  
                  status 0003                    wtemp0 005E           __CFG_MCLRE$OFF 0000  
        __initialization 006F             __end_of_main 006F                   ??_main 0000  
                 _TRISIO 0085           __CFG_PWRTE$OFF 0000                   saved_w 005E  
__end_of__initialization 0072           __pcstackCOMMON 0000               __pbssBANK0 0025  
             __pmaintext 0046               __pintentry 0004                  __ptext1 0014  
   end_of_initialization 0072    __end_of_timeroverflow 0046      start_initialization 006F  
          __pcstackBANK0 0020        interrupt_function 0004   __size_of_timeroverflow 0032  
               _counter1 0025                 _counter2 0026                 _counter3 0027  
          __size_of_main 0029                 intlevel1 0000            _timeroverflow 0014  
      __CFG_FOSC$INTRCIO 0000           ?_timeroverflow 0020  
